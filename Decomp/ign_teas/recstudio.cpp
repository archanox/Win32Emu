// Generated by Rec Studio 4 - build Sep 23 2015

L00401000(
    _unknown_ __eax,                       // r0
    intOrPtr* _a4,                         // _cfa_4
    signed int _a8                         // _cfa_8
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ _t14;                        // _t14
    _unknown_ _t15;                        // _t15
    intOrPtr* _t16;                        // _t16
    short _t19;                            // _t19
    _unknown_ _t21;                        // _t21
    intOrPtr* _t22;                        // _t22
    _unknown_ _t23;                        // _t23
    short* _t24;                           // _t24

    _push(_t14);
    _t19 = 0;
    _push(_t23);
    _t15 = 4532768;
    _t16 = _a4;
    _push(_t21);
    _t22 = _t16;
    _t24 = 4533808;
    do {
        _t15 = _t15 + 4;
         *_t24 =  *_t22;
        _t22 = _t22 + 2;
        _t24 = _t24 + 2;
        _t19 = _t19 + 1;
         *(_t15 - 4) =  *(_t16 + _t19 + 511) << 4;
    } while(_t24 < 4534320);
     *4533792 = 128;
     *4534324 = _t16 + 768;
     *4534320 = 0;
    _pop(__edi);
    _pop(__esi);
     *4534328 = _a8 * 2 - 1536;
    _pop(__ebx);
     *4534332 = 0;
    return 1;
}

signed int L00401080(
    short* _a4,                            // _cfa_4
    signed int _a8                         // _cfa_8
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __ecx;                       // r2
    _unknown_ __edx;                       // r3
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t22;                       // _t22
    signed int _t30;                       // _t30
    signed int _t33;                       // _t33
    _unknown_ _t37;                        // _t37
    signed int _t38;                       // _t38
    signed int _t40;                       // _t40
    short _t41;                            // _t41
    _unknown_ _t42;                        // _t42
    signed int _t43;                       // _t43
    _unknown_ _t45;                        // _t45
    intOrPtr _t46;                         // _t46
    signed int _t47;                       // _t47
    signed int _t49;                       // _t49
    signed int _t50;                       // _t50
    signed int _t51;                       // _t51
    _unknown_ _t52;                        // _t52
    short* _t53;                           // _t53
    _unknown_ _t54;                        // _t54
    signed int* _t56;                      // _t56

    _t22 =  *4534328;
    _push(_t37);
    _push(_t54);
    _push(_t52);
    if( *4534332 != _t22) {
        _push(_t22);
        _push(_t37);
        _push(_t42);
        _push(_t45);
        _push(_t54);
        _push(_t52);
        _t43 = _a8;
        __eflags = _t43 -  *4534328;
        if(_t43 >  *4534328) {
            _t43 =  *4534328;
        }
        _t53 = _a4;
        _t46 =  *4533792;
        _t38 =  *4534332;
        _t56 =  *4534324 + (_t38 >> 1);
        _t40 =  *4534320;
        __eflags = _t38 & 1;
        if((_t38 & 1) == 0) {
L6:
            _t47 = _t46 + ( *_t56 & 15);
            _t41 = _t40 +  *((intOrPtr*)(4533808 + _t47 * 2));
             *_t53 = _t41;
            _t49 =  *((intOrPtr*)(4532768 + _t47 * 4)) + ( *_t56 >> 4);
            _t40 = _t41 +  *((intOrPtr*)(4533808 + _t49 * 2));
            _t46 =  *((intOrPtr*)(4532768 + _t49 * 4));
            _t53[1] = _t40;
            _t53 = _t53 + 4;
            _t56 =  &(_t56[0]);
            _t43 = _t43 - 2;
            __eflags = _t43 - 1;
        } else {
            _t51 = _t46 + ( *_t56 >> 4);
            _t40 = _t40 +  *((intOrPtr*)(4533808 + _t51 * 2));
            _t46 =  *((intOrPtr*)(4532768 + _t51 * 4));
             *_t53 = _t40;
            _t53 = _t53 + 2;
            _t56 =  &(_t56[0]);
            _t43 = _t43 - 1;
            __eflags = _t43;
            if(_t43 != 0) {
                do {
                    goto L6;
                } while(__eflags > 0);
                if(__eflags >= 0) {
                    _t50 = _t46 + ( *_t56 & 15);
                    _t40 = _t40 +  *((intOrPtr*)(4533808 + _t50 * 2));
                    __eflags = _t40;
                    _t46 =  *((intOrPtr*)(4532768 + _t50 * 4));
                     *_t53 = _t40;
                }
            }
        }
         *4533792 = _t46;
         *4534320 = _t40;
        _pop(__edi);
        _pop(__esi);
        _pop(__edx);
        _pop(__ecx);
        _pop(__ebx);
        _pop(__eax);
        _t30 =  *4534332 + _a8;
        __eflags =  *4534328 - _t30;
        if( *4534328 >= _t30) {
            _pop(__edi);
             *4534332 = _t30;
            _pop(__esi);
            _pop(__ebx);
            return _a8;
        } else {
            _t33 =  *4534328 -  *4534332;
            __eflags = _t33;
            _pop(__edi);
            _pop(__esi);
             *4534332 =  *4534328;
            _pop(__ebx);
            return _t33;
        }
    } else {
        _pop(__edi);
        _pop(__esi);
        _pop(__ebx);
        return 0;
    }
}

L004011A0()
{
    _unknown_ __edi;                       // r4
    char* __esi;                           // r5
    intOrPtr _t7;                          // _t7
    intOrPtr _t9;                          // _t9
    signed int _t19;                       // _t19
    intOrPtr _t21;                         // _t21
    _unknown_ _t28;                        // _t28
    _unknown_ _t29;                        // _t29

    _push(_t28);
    _t29 = 0;
    __esi = "data\\IGN1.DPS";
    while(1) {
        _t7 = L004044D0(__esi);
         *((intOrPtr*)(_t29 + 4440992)) = _t7;
        if(_t7 < 768) {
            break;
        }
        _t9 = L004043A0(__esi);
         *((intOrPtr*)(_t29 + 4441048)) = _t9;
        if(_t9 == 0) {
            _pop(__edi);
            return 0;
        } else {
            _t29 = _t29 + 4;
            __esi = __esi + 50;
            if(__esi < 4309498) {
                continue;
            } else {
                _t13 =  *(4309504 +  *4310304 * 4) << 2;
                __edx =  *((intOrPtr*)(( *(4309504 +  *4310304 * 4) << 2) + 4441048));
                L00401000( *(4309504 +  *4310304 * 4) << 2,  *((intOrPtr*)(( *(4309504 +  *4310304 * 4) << 2) + 4441048)),  *((intOrPtr*)(_t13 + 4440992)));
                 *4534424 = 20;
                if(L00403D20(__edx) == 1) {
                     *4441032 =  *4534408;
                     *4441088 =  *4534404;
                     *4441040 =  *4534416;
                    _t19 =  *4534412;
                     *4441084 = _t19;
                    if( *4534400 >= 44000) {
                        asm("cdq");
                        _t19 = _t19 - __edx >> 1;
                    }
                     *4441084 = _t19;
                     *4441028 =  *4534400;
                    _push(_t19 + _t19);
                    _push(0);
                    _t21 = L00403630();
                    __esp = __esp + 8;
                     *4441036 = _t21;
                    if(_t21 != 0) {
                        _pop(__edi);
                         *4309040 = 1;
                        return 1;
                    } else {
                        _pop(__edi);
                        return 0;
                    }
                } else {
                    _pop(__edi);
                    return 0;
                }
            }
        }
L13:
    }
    _pop(__edi);
    return 0;
    goto L13;
}

L004012A0()
{
    intOrPtr* __ebx;                       // r1

    _push(__ebx);
    _push(-1);
    _push(9);
    _push(__ebp);
    if( *4309040 != 1) {
L11:
        _pop(__ebp);
        _pop(9);
        _pop(-1);
        _pop(__ebx);
        return 1;
    }
    __ebx = L00403910();
    if(__ebx == 0) {
        goto L11;
    }
    do {
        __ebp = L00401080( *4441036,  *4441084);
        if( *4441084 > __ebp) {
             *4310304 =  *4310304 + 1;
            if( *(4309504 +  *4310304 * 4) == -1) {
                 *4310304 = 9;
            }
            L00401000( *(4309504 +  *4310304 * 4) << 2,  *((intOrPtr*)(( *(4309504 +  *4310304 * 4) << 2) + 4441048)),  *((intOrPtr*)(( *(4309504 +  *4310304 * 4) << 2) + 4440992)));
            L00401080(__ebp * 2 +  *4441036,  *4441084 - __ebp);
        }
        L004013C0( *__ebx,  *__ebx,  *4441036, __ebx[2], 0);
        _t38 = __ebx[1];
        if(__ebx[1] != 0) {
            _t34 = __ebx[3];
            if(__ebx[3] != 0) {
                L004013C0(_t38, _t38,  *4441036, _t34, __ebx[2]);
            }
        }
        L00403BF0();
        __ebx = L00403910();
    } while(__ebx != 0);
    goto L11;
}

L004013A0()
{
     *4309040 = 1;
    L00403CB0();
     *4309040 = 0;
    return 1;
}

L004013C0(
    signed int __edx,                      // r3
    char* _a4,                             // _cfa_4
    signed int _a8,                        // _cfa_8
    signed int _a12,                       // _cfa_c
    signed int _a16                        // _cfa_10
)
{
    char* _v4;                             // _cfa_fffffffc
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t70;                       // _t70
    signed int* _t71;                      // _t71
    _unknown_ _t87;                        // _t87
    char* _t88;                            // _t88
    _unknown_ _t89;                        // _t89
    _unknown_ _t91;                        // _t91
    _unknown_ _t92;                        // _t92
    _unknown_ _t93;                        // _t93
    _unknown_ _t94;                        // _t94
    _unknown_ _t96;                        // _t96
    _unknown_ _t97;                        // _t97
    signed int _t99;                       // _t99
    char* _t100;                           // _t100
    char* _t112;                           // _t112
    signed char _t119;                     // _t119
    signed char _t121;                     // _t121
    signed char _t124;                     // _t124
    signed char _t129;                     // _t129
    char _t131;                            // _t131
    signed char _t132;                     // _t132
    signed char _t136;                     // _t136
    signed char _t139;                     // _t139
    signed short _t144;                    // _t144
    signed short _t151;                    // _t151
    signed short _t152;                    // _t152
    signed short _t153;                    // _t153
    signed short _t155;                    // _t155
    signed short _t157;                    // _t157
    _unknown_ _t158;                       // _t158
    char* _t159;                           // _t159
    _unknown_ _t160;                       // _t160
    signed int _t161;                      // _t161

    _push(_t87);
    _push(_t160);
    _t161 = _a12;
    _push(_t158);
    if( *4441028 < 44000) {
        _t70 = _a16;
        _t159 = _v4;
    } else {
        asm("cdq");
        _t159 = ((_t161 ^ __edx) - __edx & 1 ^ __edx) - __edx;
        asm("cdq");
        _t161 = _t161 - __edx >> 1;
        asm("cdq");
        _t70 = _a16 - __edx >> 1;
    }
    _t99 = _a8;
    _t71 = _t99 + _t70 * 2;
    if( *4441088 != 16) {
L17:
        if( *4441088 != 16) {
L31:
            if( *4441088 != 16) {
L45:
                if( *4441088 != 16) {
L59:
                    if( *4441088 != 8) {
L73:
                        if( *4441088 != 8) {
L87:
                            if( *4441088 != 8) {
L99:
                                if( *4441088 != 8) {
L111:
                                    _t100 = _a4;
L112:
                                    _t88 = _v4;
L113:
                                    if( *4441028 >= 44000 && _t159 == 1) {
                                        if( *4441088 == 16) {
                                            _t100 = _t88;
                                        }
                                        if( *4441088 != 8) {
                                            if( *4441088 != 16 ||  *4441032 != 0) {
                                                 *_t100 =  *(_t100 - 4);
                                            } else {
                                                 *_t100 =  *(_t100 - 2);
                                            }
                                        } else {
                                             *_t100 =  *(_t100 - 1);
                                        }
                                    }
                                    _pop(__edi);
                                    _pop(__esi);
                                    _pop(__ebx);
                                    return 1;
                                }
                                if( *4441032 != 0) {
L105:
                                    if( *4441088 != 8 ||  *4441032 != 0) {
                                        goto L111;
                                    } else {
                                        asm("sbb ecx, ecx");
                                        if( ~( *4441040 - 1) < 44000) {
                                            goto L111;
                                        }
                                        _t100 = _a4;
                                        if(_t161 <= 0) {
                                            goto L112;
                                        } else {
                                            goto L109;
                                        }
                                        do {
L109:
                                            _t119 =  *_t71;
                                            _t100 = _t100 + 2;
                                            _t71 =  &(_t71[0]);
                                            _t161 = _t161 - 1;
                                             *(_t100 - 2) = _t119;
                                             *(_t100 - 1) =  *(_t71 - 2);
                                        } while(_t161 != 0);
                                        goto L112;
                                    }
                                }
                                asm("sbb ecx, ecx");
                                if( ~( *4441040 - 1) >= 44000) {
                                    goto L105;
                                }
                                _t100 = _a4;
                                if(_t161 <= 0) {
                                    goto L112;
                                } else {
                                    goto L103;
                                }
                                do {
L103:
                                    _t121 =  *_t71;
                                    _t100 = _t100 + 1;
                                    _t71 =  &(_t71[0]);
                                    _t161 = _t161 - 1;
                                     *(_t100 - 1) = _t121;
                                } while(_t161 != 0);
                                goto L112;
                            }
                            if( *4441032 != 0) {
L93:
                                if( *4441088 != 8) {
                                    goto L105;
                                }
                                if( *4441032 != 0) {
                                    goto L99;
                                }
                                asm("sbb ecx, ecx");
                                if( ~_t99 < 44000) {
                                    goto L99;
                                }
                                _t100 = _a4;
                                if(_t161 <= 0) {
                                    goto L112;
                                } else {
                                    goto L97;
                                }
                                do {
L97:
                                    _t100 = _t100 + 2;
                                    _t124 =  *_t71 >> 8 ^ 128;
                                    _t71 =  &(_t71[0]);
                                     *(_t100 - 2) = _t124;
                                    _t161 = _t161 - 1;
                                     *(_t100 - 1) =  *(_t71 - 2) >> 8 ^ 128;
                                } while(_t161 != 0);
                                goto L112;
                            }
                            asm("sbb ecx, ecx");
                            _t99 =  ~_t99;
                            if(_t99 >= 44000) {
                                goto L93;
                            }
                            _t100 = _a4;
                            if(_t161 <= 0) {
                                goto L112;
                            } else {
                                goto L91;
                            }
                            do {
L91:
                                _t100 = _t100 + 1;
                                _t129 =  *_t71 >> 8;
                                _t71 =  &(_t71[0]);
                                _t161 = _t161 - 1;
                                 *(_t100 - 1) = _t129 ^ 128;
                            } while(_t161 != 0);
                            goto L112;
                        }
                        if( *4441032 != 1 ||  *4441040 != 1 ||  *4441028 >= 44000) {
L80:
                            if( *4441088 != 8) {
                                goto L93;
                            }
                            if( *4441032 != 1 ||  *4441040 != 1 ||  *4441028 < 44000) {
                                goto L87;
                            } else {
                                _t100 = _a4;
                                if(_t161 <= 0) {
                                    goto L112;
                                } else {
                                    goto L85;
                                }
                                do {
L85:
                                    _t131 = _t71[0];
                                    _t71 =  &(_t71[0]);
                                    _t112 = _t100 + 3;
                                     *((char*)(_t112 - 3)) = _t131;
                                     *((char*)(_t112 - 2)) = _t131;
                                     *((char*)(_t112 - 1)) = _t131;
                                     *_t112 = _t131;
                                    _t100 = _t112 + 1;
                                    _t161 = _t161 - 1;
                                } while(_t161 != 0);
                                goto L112;
                            }
                        } else {
                            _t100 = _a4;
                            if(_t161 <= 0) {
                                goto L112;
                            } else {
                                goto L78;
                            }
                            do {
L78:
                                _t132 =  *_t71;
                                _t100 = _t100 + 2;
                                _t71 =  &(_t71[0]);
                                _t161 = _t161 - 1;
                                 *(_t100 - 2) = _t132;
                                 *(_t100 - 1) =  *(_t71 - 2);
                            } while(_t161 != 0);
                            goto L112;
                        }
                    }
                    if( *4441032 != 1 ||  *4441040 != 0 ||  *4441028 >= 44000) {
                        if( *4441088 != 8) {
                            goto L80;
                        }
                        if( *4441032 != 1 ||  *4441040 != 0 ||  *4441028 < 44000) {
                            goto L73;
                        } else {
                            _t100 = _a4;
                            if(_t161 <= 0) {
                                goto L112;
                            } else {
                                goto L71;
                            }
                            do {
L71:
                                _t136 =  *_t71 >> 8 ^ 128;
                                _t100 = _t100 + 4;
                                _t71 =  &(_t71[0]);
                                _t161 = _t161 - 1;
                                 *(_t100 - 4) = _t136;
                                 *(_t100 - 3) = _t136;
                                 *(_t100 - 2) = _t136;
                                 *(_t100 - 1) = _t136;
                            } while(_t161 != 0);
                            goto L112;
                        }
                    } else {
                        _t100 = _a4;
                        if(_t161 <= 0) {
                            goto L112;
                        } else {
                            goto L64;
                        }
                        do {
L64:
                            _t100 = _t100 + 2;
                            _t139 =  *_t71 >> 8 ^ 128;
                            _t71 =  &(_t71[0]);
                             *(_t100 - 2) = _t139;
                            _t161 = _t161 - 1;
                             *(_t100 - 1) =  *(_t71 - 2) >> 8 ^ 128;
                        } while(_t161 != 0);
                        goto L112;
                    }
                }
                if( *4441032 != 0 ||  *4441040 != 1 ||  *4441028 >= 44000) {
L52:
                    if( *4441088 != 16 ||  *4441032 != 0 ||  *4441040 != 1 ||  *4441028 < 44000) {
                        goto L59;
                    } else {
                        _t100 = _a4;
                        _t88 = _t100;
                        if(_t161 <= 0) {
                            goto L113;
                        } else {
                            goto L57;
                        }
                        do {
L57:
                            _t89 = _t88 + 2;
                             *((short*)(_t89 - 2)) =  *_t71;
                            _t88 = _t89 + 2;
                            _t144 =  *_t71;
                            _t71 =  &(_t71[0]);
                             *(_t88 - 2) = _t144;
                            _t161 = _t161 - 1;
                        } while(_t161 != 0);
                        goto L113;
                    }
                } else {
                    _t100 = _a4;
                    _t88 = _t100;
                    if(_t161 <= 0) {
                        goto L113;
                    } else {
                        goto L50;
                    }
                    do {
L50:
                        _t88 = _t88 + 2;
                         *(_t88 - 2) =  *_t71;
                        _t71 =  &(_t71[0]);
                        _t161 = _t161 - 1;
                    } while(_t161 != 0);
                    goto L113;
                }
            }
            if( *4441032 != 0 ||  *4441040 != 0 ||  *4441028 >= 44000) {
L38:
                if( *4441088 != 16) {
                    goto L52;
                }
                if( *4441032 != 0 ||  *4441040 != 0 ||  *4441028 < 44000) {
                    goto L45;
                } else {
                    _t100 = _a4;
                    _t88 = _t100;
                    if(_t161 <= 0) {
                        goto L113;
                    } else {
                        goto L43;
                    }
                    do {
L43:
                        _t88 = _t88 + 4;
                         *(_t88 - 4) =  *_t71 ^ 32768;
                        _t71 =  &(_t71[0]);
                        _t161 = _t161 - 1;
                         *(_t88 - 2) =  *(_t71 - 2) ^ 32768;
                    } while(_t161 != 0);
                    goto L113;
                }
            } else {
                _t100 = _a4;
                _t88 = _t100;
                if(_t161 <= 0) {
                    goto L113;
                } else {
                    goto L36;
                }
                do {
L36:
                    _t88 = _t88 + 2;
                    _t151 =  *_t71 ^ 32768;
                    _t71 =  &(_t71[0]);
                     *(_t88 - 2) = _t151;
                    _t161 = _t161 - 1;
                } while(_t161 != 0);
                goto L113;
            }
        }
        if( *4441032 != 1 ||  *4441040 != 1 ||  *4441028 >= 44000) {
L24:
            if( *4441088 != 16) {
                goto L38;
            }
            if( *4441032 != 1 ||  *4441040 != 1 ||  *4441028 < 44000) {
                goto L31;
            } else {
                _t100 = _a4;
                _t88 = _t100;
                if(_t161 <= 0) {
                    goto L113;
                } else {
                    goto L29;
                }
                do {
L29:
                    _t152 =  *_t71;
                    _t91 = _t88 + 2;
                     *(_t91 - 2) = _t152;
                    _t92 = _t91 + 2;
                     *(_t92 - 2) = _t152;
                    _t93 = _t92 + 2;
                     *(_t93 - 2) = _t152;
                    _t88 = _t93 + 2;
                     *(_t88 - 2) = _t152;
                    _t71 =  &(_t71[0]);
                    _t161 = _t161 - 1;
                } while(_t161 != 0);
                goto L113;
            }
        } else {
            _t100 = _a4;
            _t88 = _t100;
            if(_t161 <= 0) {
                goto L113;
            } else {
                goto L22;
            }
            do {
L22:
                _t153 =  *_t71;
                _t94 = _t88 + 2;
                 *(_t94 - 2) = _t153;
                _t88 = _t94 + 2;
                 *(_t88 - 2) = _t153;
                _t71 =  &(_t71[0]);
                _t161 = _t161 - 1;
            } while(_t161 != 0);
            goto L113;
        }
    }
    if( *4441032 != 1 ||  *4441040 != 0 ||  *4441028 >= 44000) {
        if( *4441088 != 16) {
            goto L24;
        }
        if( *4441032 != 1 ||  *4441040 != 0 ||  *4441028 < 44000) {
            goto L17;
        } else {
            _t100 = _a4;
            _t88 = _t100;
            if(_t161 <= 0) {
                goto L113;
            } else {
                goto L15;
            }
            do {
L15:
                _t155 =  *_t71 ^ 32768;
                _t96 = _t88 + 4;
                 *(_t96 - 4) = _t155;
                _t97 = _t96 + 2;
                 *(_t97 - 4) = _t155;
                _t88 = _t97 + 2;
                 *(_t88 - 4) = _t155;
                _t71 =  &(_t71[0]);
                 *(_t88 - 2) = _t155;
                _t161 = _t161 - 1;
            } while(_t161 != 0);
            goto L113;
        }
    } else {
        _t100 = _a4;
        _t88 = _t100;
        if(_t161 <= 0) {
            goto L113;
        } else {
            goto L8;
        }
        do {
L8:
            _t157 =  *_t71 ^ 32768;
            _t88 = _t88 + 4;
             *(_t88 - 4) = _t157;
            _t71 =  &(_t71[0]);
             *(_t88 - 2) = _t157;
            _t161 = _t161 - 1;
        } while(_t161 != 0);
        goto L113;
    }
}

signed int L004019D0(
    signed int __edx,                      // r3
    intOrPtr* _a4,                         // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    signed int* _a12                       // _cfa_c
)
{
    intOrPtr __ebx;                        // r1
    intOrPtr* __edi;                       // r4
    signed int __esi;                      // r5
    intOrPtr* __ebp;                       // r6
    intOrPtr _t7;                          // _t7
    signed int _t12;                       // _t12
    signed int _t14;                       // _t14
    signed int _t16;                       // _t16
    signed int _t19;                       // _t19
    intOrPtr _t26;                         // _t26
    signed int* _t35;                      // _t35
    signed int* _t37;                      // _t37
    signed int _t41;                       // _t41

    _t41 = __edx;
    __esi = 0;
    _t7 = L004035A0(__edx, "Script Player");
     *4532752 = _t7;
    __eflags = _t7 - -1;
    if(_t7 != -1) {
        _t37 = _a12;
        __eflags =  *_t37;
        if( *_t37 != 0) {
            _t35 = 4441120;
            while(1) {
                __eflags = _t35 - 4441184;
                if(_t35 >= 4441184) {
                    goto L6;
                }
                _t41 =  *_t37;
                _t37 =  &(_t37[1]);
                 *_t35 = _t41;
                _t35 =  &(_t35[1]);
                __eflags =  *_t37;
                if( *_t37 != 0) {
                    continue;
                }
                goto L6;
            }
        }
L6:
        __edi = _a4;
        __ebp = __edi;
        __eflags =  *__edi - 2021157228;
        if( *__edi == 2021157228) {
L20:
            asm("cdq");
            _push( *4441184 + (_t41 & 3) >> 2);
            _push( *4532752);
            _t12 = L00403630();
            __esp = __esp + 8;
             *4441108 = _t12;
            __eflags = _t12;
            if(_t12 != 0) {
                _push( *4441184);
                _push( *4532752);
                _t14 = L00403630();
                __esp = __esp + 8;
                 *4441188 = _t14;
                __eflags = _t14;
                if(_t14 != 0) {
                    _push( *4441100);
                    _push( *4532752);
                    _t16 = L00403630();
                    __esp = __esp + 8;
                     *4441112 = _t16;
                    __eflags = _t16;
                    if(_t16 != 0) {
                        _push(__esi + __esi * 2 << 2);
                        _push( *4532752);
                        _t19 = L00403630();
                        __esp = __esp + 8;
                         *4441096 = _t19;
                        __eflags = _t19;
                        if(_t19 != 0) {
                            L00401B60(__edi);
                            return __esi;
                        } else {
                            return -1;
                        }
                    } else {
                        return -1;
                    }
                } else {
                    return -1;
                }
            } else {
                return -1;
            }
        } else {
            __ebx = _a8;
            do {
                _t26 =  *__ebp;
                __eflags = _t26 - 825256300;
                if(__eflags > 0) {
                    __eflags = _t26 - 842033516;
                    if(_t26 == 842033516) {
                        L00401C20(_t41, __ebp, __ebx);
                        goto L19;
                    } else {
                        __eflags = _t26 - 858810732;
                        if(_t26 == 858810732) {
                            L00401D20(_t41, __ebp, __ebx, 4441120);
                            goto L19;
                        } else {
                            return -1;
                        }
                    }
                } else {
                    if(__eflags == 0) {
                        L00401C00(__ebp);
                        goto L19;
                    } else {
                        __eflags = _t26 - 808479084;
                        if(_t26 == 808479084) {
                            __esi = __esi + 1;
                            L00401BE0(__ebp);
                            goto L19;
                        } else {
                            return -1;
                        }
                    }
                }
                goto L29;
L19:
                __ebp = __ebp + _a4 + 8;
                __eflags =  *__ebp - 2021157228;
            } while( *__ebp != 2021157228);
            goto L20;
        }
    } else {
        return -1;
    }
L29:
}

signed int L00401B60(
    intOrPtr* _a4                          // _cfa_4
)
{
    signed int _v4;                        // _cfa_fffffffc
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    intOrPtr* __esi;                       // r5
    signed int _t13;                       // _t13
    signed int _t15;                       // _t15
    intOrPtr _t19;                         // _t19
    signed int _t23;                       // _t23

    __esi = _a4;
    if( *__esi == 2021157228) {
L8:
        return _t13;
    }
    __edi = 0;
    _t23 = _v4;
    _t13 = _v4;
    do {
        _t19 =  *__esi;
        if(_t19 == 808479084) {
             *((intOrPtr*)( *4441096 + __edi)) = __esi + 8;
            __edi = __edi + 12;
             *( *4441096 + __edi - 8) = _t23;
             *( *4441096 + __edi - 4) = _t13;
        } else {
            if(_t19 == 825256300) {
                asm("cdq");
                _t15 = __esi[1] + (_t23 & 3);
                _t23 = __esi + 8;
                _t13 = _t15 >> 2;
            }
        }
        __esi = __esi + __esi[1] + 8;
    } while( *__esi != 2021157228);
    goto L8;
}

L00401BE0(
    intOrPtr _a4                           // _cfa_4
)
{
    intOrPtr _t7;                          // _t7

    _t7 =  *(_a4 + 4) +  *(_a4 + 4) * 2 +  *(_a4 + 4) +  *(_a4 + 4) * 2;
    if(_t7 >  *4441184) {
         *4441184 = _t7;
        return _t7;
    }
    return _t7;
}

L00401C00(
    intOrPtr _a4                           // _cfa_4
)
{
    intOrPtr _t5;                          // _t5

    _t5 =  *((intOrPtr*)(_a4 + 4)) +  *((intOrPtr*)(_a4 + 4));
    if( *4441100 < _t5) {
         *4441100 = _t5;
        return _t5;
    }
    return _t5;
}

L00401C20(
    signed int __edx,                      // r3
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8                           // _cfa_8
)
{
    _unknown_ __ebx;                       // r1
    signed int __edi;                      // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t27;                         // _t27
    signed int _t30;                       // _t30
    intOrPtr _t34;                         // _t34
    signed int _t48;                       // _t48
    signed int _t59;                       // _t59
    intOrPtr _t62;                         // _t62
    _unknown_ _t63;                        // _t63

    _t27 = _a4;
    _t63 = _t27 + 8;
    asm("cdq");
    _t30 =  *((intOrPtr*)(_t27 + 4)) + (__edx & 15) >> 4;
    __edi = _t30;
    _push(_t30 * 8 - __edi << 2);
    _push( *4532752);
    _t34 = L00403630();
    __esp = __esp + 8;
     *4441116 = _t34;
    if(_t34 != 0) {
        if(__edi > 0) {
            _t59 = 0;
            _t62 = _a8;
            do {
                 *((intOrPtr*)( *4441116 + _t59)) = 0;
                 *((intOrPtr*)( *4441116 + _t59 + 4)) = 0;
                 *((intOrPtr*)( *4441116 + _t59 + 8)) = 0;
                _t63 = _t63 + 0x10;
                 *((intOrPtr*)( *4441116 + _t59 + 12)) = 0;
                 *((intOrPtr*)( *4441116 + _t59 + 16)) = 0;
                 *((intOrPtr*)( *4441116 + _t59 + 20)) = 0;
                _t48 =  *(_t63 - 4);
                if(_t48 > 30 || _t48 < 0) {
                    _t48 = 0;
                }
                 *((intOrPtr*)( *4441116 + _t59 + 24)) =  *((intOrPtr*)(_t62 + _t48 * 4));
                _t59 = _t59 + 28;
                __edi = __edi - 1;
            } while(__edi != 0);
        }
        return 0;
    } else {
        return -1;
    }
}

L00401D20(
    signed int __edx,                      // r3
    intOrPtr _a4,                          // _cfa_4
    intOrPtr* _a8,                         // _cfa_8
    intOrPtr* _a12                         // _cfa_c
)
{
    _unknown_ __ebx;                       // r1
    signed int __edi;                      // r4
    _unknown_ __esi;                       // r5
    _unknown_ __ebp;                       // r6
    intOrPtr _t34;                         // _t34
    signed int _t37;                       // _t37
    intOrPtr _t39;                         // _t39
    intOrPtr* _t65;                        // _t65
    intOrPtr* _t68;                        // _t68
    _unknown_ _t69;                        // _t69
    _unknown_ _t71;                        // _t71
    _unknown_ _t74;                        // _t74

    _t34 = _a4;
    _t69 = _t34 + 8;
    asm("cdq");
    _t37 =  *((intOrPtr*)(_t34 + 4)) + (__edx & 15) >> 4;
    __edi = _t37;
    _push(_t37 << 5);
    _push( *4532752);
    _t39 = L00403630();
    __esp = __esp + 8;
     *4441104 = _t39;
    if(_t39 != 0) {
        if(__edi > 0) {
            __ebx = 0;
            _t65 = _a8;
            _t68 = _a12;
            do {
                _t71 = _t69 + 4;
                __ebx = __ebx + 32;
                 *( *4441104 + __ebx - 32) =  *(_t71 - 4) << 8;
                _t74 = _t71 + 6;
                 *( *4441104 + __ebx - 28) =  *(_t74 - 8) << 8;
                _t69 = _t74 + 6;
                 *( *4441104 + __ebx - 24) = 0 << 8;
                 *( *4441104 + __ebx - 20) = 0 << 8;
                 *( *4441104 + __ebx - 16) = 0 << 8;
                 *( *4441104 + __ebx - 12) = 0 << 8;
                 *((intOrPtr*)( *4441104 + __ebx - 8)) =  *_t65;
                __edi = __edi - 1;
                 *((intOrPtr*)( *4441104 + __ebx - 4)) =  *_t68;
            } while(__edi != 0);
        }
        return 0;
    } else {
        return -1;
    }
}

signed int* L00401E30()
{
    signed int __ebx;                      // r1
    intOrPtr* __edi;                       // r4
    intOrPtr* __esi;                       // r5
    signed int _t212;                      // _t212
    char* _t213;                           // _t213
    _unknown_ _t219;                       // _t219
    _unknown_ _t222;                       // _t222
    signed int* _t228;                     // _t228
    signed int _t230;                      // _t230
    signed int* _t235;                     // _t235
    signed int _t239;                      // _t239
    intOrPtr* _t243;                       // _t243
    intOrPtr _t245;                        // _t245
    signed int _t248;                      // _t248
    signed int _t251;                      // _t251
    intOrPtr _t252;                        // _t252
    intOrPtr _t254;                        // _t254
    short* _t255;                          // _t255
    signed int _t256;                      // _t256
    signed int _t257;                      // _t257
    signed int _t260;                      // _t260
    signed int* _t261;                     // _t261
    _unknown_ _t262;                       // _t262

    _t212 =  *(__esp + 4);
    _push(_t263);
    _t260 =  *4441112;
    _t243 = (_t212 + _t212 * 2 << 2) +  *4441096;
    _t213 =  *_t243;
    _t252 = _t243[1];
    _t256 =  *(_t243 + 8);
    if( *((intOrPtr*)(__esp + 24)) != 0) {
        if( *((intOrPtr*)(__esp + 24)) == 1 && _t256 > 0) {
            do {
                _t255 = _t252 + 2;
                _t262 = _t260 + 4;
                 *(_t262 - 4) =  *(_t255 - 2) << 5;
                _t248 =  *_t255;
                _t252 = _t255 + 2;
                _t260 = _t262 + 4;
                _t263 = _t248 + _t248 * 8;
                _t256 = _t256 - 1;
                 *(_t260 - 4) = _t248 + (_t248 + _t248 * 8) * 2 + _t248 + (_t248 + _t248 * 8) * 2;
            } while(_t256 != 0);
        }
    } else {
        _t251 = _t256 * 2;
        if(_t251 > 0) {
            do {
                _t252 = _t252 + 2;
                _t260 = _t260 + 4;
                _t251 = _t251 - 1;
                 *(_t260 - 4) =  *(_t252 - 2) << 4;
            } while(_t251 != 0);
        }
    }
    _t261 =  *4441108;
    _t257 =  *4441188;
    if( *_t213 == 255) {
L35:
        _pop(__ebp);
         *_t261 = 0;
        return  *4441108;
    } else {
        while(1) {
L8:
            _t213 = _t213 + 2;
            _t245 =  *((intOrPtr*)(_t213 - 2));
            _t254 =  *((intOrPtr*)(_t213 - 1));
            _t263 = 0xfffffffffffffff9;
            if(0xfffffffffffffff9 > 12) {
                break;
            }
            switch( *((intOrPtr*)(0 +  &M004023B4))) {
                case 0:
                    if( *((intOrPtr*)(__esp + 24)) != 0) {
                        if( *((intOrPtr*)(__esp + 24)) == 1 && 0 > 0) {
                            do {
                                 *_t261 = _t257;
                                _t261 =  &(_t261[1]);
                                 *_t257 = _t245;
                                _t219 = _t213 + 6;
                                _t257 = _t257 + 36;
                                _t213 = _t219 + 2;
                                 *(_t257 - 32) = ( *(_t219 - 6) << 5) +  *4441104;
                                _t228 = _t257 - 16;
                                 *(_t257 - 28) = _t228;
                                 *_t228 = 0 << 9;
                                 *(_t257 - 12) = 0;
                                 *(_t257 - 8) = 0;
                                _t254 = _t254 - 1;
                                 *(_t257 - 4) = 0;
                                _t230 =  *((short*)(_t213 - 2));
                                 *(_t257 - 24) =  *((intOrPtr*)( *4441112 + _t230 * 8));
                                _t263 =  *4441112;
                                 *(_t257 - 20) =  *((intOrPtr*)( *4441112 + 4 + _t230 * 8));
                            } while(_t254 != 0);
                        }
                    } else {
                        if(0 > 0) {
                            do {
                                 *_t261 = _t257;
                                _t261 =  &(_t261[1]);
                                 *_t257 = _t245;
                                _t222 = _t213 + 6;
                                _t257 = _t257 + 36;
                                _t213 = _t222 + 2;
                                 *(_t257 - 32) = ( *(_t222 - 6) << 5) +  *4441104;
                                _t235 = _t257 - 16;
                                 *(_t257 - 28) = _t235;
                                 *_t235 = 0 << 8;
                                 *((signed int*)(_t257 - 12)) = 0;
                                 *((signed int*)(_t257 - 8)) = 0;
                                _t254 = _t254 - 1;
                                 *(_t257 - 4) = 0 << 8;
                                _t239 =  *((short*)(_t213 - 2));
                                 *(_t257 - 24) =  *((intOrPtr*)( *4441112 + _t239 * 8));
                                _t263 =  *4441112;
                                 *(_t257 - 20) =  *((intOrPtr*)( *4441112 + 4 + _t239 * 8));
                            } while(_t254 != 0);
                        }
                    }
                    goto L34;
                case 1:
                    if(0 > 0) {
                        do {
                             *__esi = __edi;
                            __esi = __esi + 4;
                             *__edi = __ecx;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __ebp =  *4441112;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __edi = __edi + 8;
                            __eax = __eax + 1;
                            __ebx =  *((short*)(__eax - 5));
                            __edi = __edi + 4;
                            __ebp =  *( *4441112 + __ebx * 8);
                            __edi = __edi + 8;
                            __edi = __edi + 4;
                             *(__edi - 28) =  *( *4441112 + __ebx * 8);
                            __edi = __edi + 4;
                            __ebp =  *4441112;
                             *(__edi - 28) = __ebx;
                            __ebp =  *4441112;
                            __ebx =  *((short*)(__eax - 3));
                            __ebp =  *( *4441112 + __ebx * 8);
                             *(__edi - 20) =  *( *4441112 + __ebx * 8);
                            __ebp =  *4441112;
                             *(__edi - 16) = __ebx;
                            __ebx = 0;
                            __edx = __edx - 1;
                             *(__edi - 8) = 0;
                             *(__edi - 4) = 0;
                        } while(__edx != 0);
                    }
                    goto L34;
                case 2:
                    if(0 > 0) {
                        __eax = __eax;
                        __eax = __eax;
                    }
                    goto L34;
                case 3:
                    if(0 > 0) {
                        do {
                             *__esi = __edi;
                            __esi = __esi + 4;
                             *__edi = __ecx;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __ebp =  *4441112;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __edi = __edi + 8;
                            __eax = __eax + 2;
                            __edi = __edi + 4;
                            __eax = __eax + 1;
                            __ebx =  *((short*)(__eax - 7));
                            __edi = __edi + 8;
                            __ebp =  *( *4441112 + __ebx * 8);
                            __edi = __edi + 4;
                            __edi = __edi + 8;
                            __edi = __edi + 4;
                             *(__edi - 40) =  *( *4441112 + __ebx * 8);
                            __edi = __edi + 4;
                            __ebp =  *4441112;
                             *(__edi - 40) = __ebx;
                            __ebp =  *4441112;
                            __ebx =  *((short*)(__eax - 5));
                            __ebp =  *( *4441112 + __ebx * 8);
                             *(__edi - 32) =  *( *4441112 + __ebx * 8);
                            __ebp =  *4441112;
                             *(__edi - 28) = __ebx;
                            __ebp =  *4441112;
                            __ebx =  *((short*)(__eax - 3));
                            __ebp =  *( *4441112 + __ebx * 8);
                             *(__edi - 20) =  *( *4441112 + __ebx * 8);
                            __ebp =  *4441112;
                             *(__edi - 16) = __ebx;
                            __ebx = 0;
                            __edx = __edx - 1;
                             *(__edi - 8) = 0;
                             *(__edi - 4) = 0;
                        } while(__edx != 0);
                    }
                    goto L34;
                case 4:
                    if(0 > 0) {
                        do {
                             *__esi = __edi;
                            __esi = __esi + 4;
                             *__edi = __ecx;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __ebp =  *4441112;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __ebx =  *((short*)(__eax - 8));
                            __edi = __edi + 4;
                            __ebp =  *( *4441112 + __ebx * 8);
                            __edi = __edi + 4;
                            __edi = __edi + 4;
                            __edi = __edi + 4;
                             *(__edi - 28) =  *( *4441112 + __ebx * 8);
                            __edi = __edi + 4;
                            __ebp =  *4441112;
                             *(__edi - 28) = __ebx;
                            __ebp =  *4441112;
                            __ebx =  *((short*)(__eax - 6));
                            __ebp =  *( *4441112 + __ebx * 8);
                             *(__edi - 24) =  *( *4441112 + __ebx * 8);
                            __ebp =  *4441112;
                             *(__edi - 20) = __ebx;
                            __ebp =  *4441112;
                            __ebx =  *((short*)(__eax - 4));
                            __ebp =  *( *4441112 + __ebx * 8);
                             *(__edi - 16) =  *( *4441112 + __ebx * 8);
                            __ebp =  *4441112;
                             *(__edi - 12) = __ebx;
                            __ebx =  *((short*)(__eax - 2));
                            __ebx * 8 = __ebx * 8 - __ebx;
                            __ebx = (__ebx * 8 - __ebx) * 4;
                             *4441116 =  *4441116 + __ebx;
                            __edx = __edx - 1;
                             *(__edi - 8) =  *4441116 + __ebx;
                            __ebp =  *4441116;
                             *(__edi - 4) = __ebx;
                        } while(__edx != 0);
                    }
                    goto L34;
                case 5:
                    if(0 > 0) {
                        do {
                             *__esi = __edi;
                            __esi = __esi + 4;
                             *__edi = __ecx;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __ebp =  *4441112;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __edi = __edi + 4;
                            __eax = __eax + 1;
                            __ebx =  *((short*)(__eax - 9));
                            __edi = __edi + 4;
                            __ebp =  *( *4441112 + __ebx * 8);
                            __edi = __edi + 4;
                            __edi = __edi + 4;
                            __edi = __edi + 4;
                             *(__edi - 32) =  *( *4441112 + __ebx * 8);
                            __edi = __edi + 4;
                            __ebp =  *4441112;
                             *(__edi - 32) = __ebx;
                            __ebp =  *4441112;
                            __ebx =  *((short*)(__eax - 7));
                            __ebp =  *( *4441112 + __ebx * 8);
                             *(__edi - 28) =  *( *4441112 + __ebx * 8);
                            __ebp =  *4441112;
                             *(__edi - 24) = __ebx;
                            __ebp =  *4441112;
                            __ebx =  *((short*)(__eax - 5));
                            __ebp =  *( *4441112 + __ebx * 8);
                             *(__edi - 20) =  *( *4441112 + __ebx * 8);
                            __ebp =  *4441112;
                             *(__edi - 16) = __ebx;
                            __ebx =  *((short*)(__eax - 3));
                            __ebx * 8 = __ebx * 8 - __ebx;
                            __ebx = (__ebx * 8 - __ebx) * 4;
                             *4441116 =  *4441116 + __ebx;
                             *(__edi - 12) =  *4441116 + __ebx;
                            __ebp =  *4441116;
                             *(__edi - 8) = __ebx;
                            __ebx = 0;
                            __edx = __edx - 1;
                            __ebp =  *0x0043C420;
                             *(__edi - 4) =  *0x0043C420;
                        } while(__edx != 0);
                    }
                    goto L34;
                case 6:
                    if(0 > 0) {
                        do {
                             *__esi = __edi;
                            __esi = __esi + 4;
                             *__edi = __ecx;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __ebp =  *4441112;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __edi = __edi + 4;
                            __eax = __eax + 2;
                            __edi = __edi + 4;
                            __eax = __eax + 1;
                            __edi = __edi + 4;
                            __eax = __eax + 1;
                            __ebx =  *((short*)(__eax - 8));
                            __edi = __edi + 4;
                            __ebp =  *( *4441112 + __ebx * 8);
                            __edi = __edi + 4;
                            __edi = __edi + 4;
                             *(__edi - 28) =  *( *4441112 + __ebx * 8);
                            __edi = __edi + 4;
                            __ebp =  *4441112;
                             *(__edi - 28) = __ebx;
                            __ebp =  *4441112;
                            __ebx =  *((short*)(__eax - 6));
                            __ebp =  *( *4441112 + __ebx * 8);
                             *(__edi - 24) =  *( *4441112 + __ebx * 8);
                            __ebp =  *4441112;
                             *(__edi - 20) = __ebx;
                            __ebp =  *4441112;
                            __ebx =  *((short*)(__eax - 4));
                            __ebp =  *( *4441112 + __ebx * 8);
                             *(__edi - 16) =  *( *4441112 + __ebx * 8);
                            __ebp =  *4441112;
                             *(__edi - 12) = __ebx;
                            __ebx = 0;
                             *(__edi - 8) = 0;
                            __ebx = 0;
                            __edx = __edx - 1;
                            __ebp =  *0x0043C420;
                             *(__edi - 4) =  *0x0043C420;
                        } while(__edx != 0);
                    }
L34:
                    if( *_t213 != 255) {
                        goto L8;
                    } else {
                        goto L35;
                    }
                    goto L37;
                case 7:
                    goto L36;
            }
        }
L36:
        _pop(__ebp);
        return 0;
    }
L37:
}

L004023F0(
    _unknown_ __ecx,                       // r2
    _unknown_ __fp0                        // r28
)
{
    __fp0 = __fp0;
    __ecx = __ecx;
    L00402540(__edx);
    L004025D0(__ecx, __edx);
    L004027D0(__edx, __fp0);
    L004011A0();
    return 1;
}

L00402410(
    signed long long __fp0                 // r28
)
{
    intOrPtr _t7;                          // _t7
    _unknown_ _t12;                        // _t12
    signed int _t13;                       // _t13
    _unknown_ _t17;                        // _t17
    signed long long _t30;                 // _t30

    _t30 = __fp0;
    L00402E30(__fp0);
    L004012A0();
    __ecx =  *4310344;
    if(__ecx != 0) {
L5:
        _t7 =  *4310960;
        goto L6;
    } else {
        _push(0);
         *4532412 =  *((intOrPtr*)(4532688 +  *4310340 * 4));
        _t17 = L00402840(__ecx, __fp0, 1072693248);
        __esp = __esp + 8;
        __ecx =  *4310344;
        if(_t17 == 1) {
             *4310340 =  *4310340 + 1;
        }
        if( *4310340 != 3) {
            goto L5;
        }
        asm("fild dword [0x41c7b0]");
        __ecx = __ecx + 1;
        _t7 =  *4310960;
        _t30 = _t30 *  *4304904;
         *4532560 = _t30;
L6:
         *4310344 = __ecx;
        if(__ecx == 1 || __ecx == 2) {
             *__esp = _t7;
            asm("fild dword [esp]");
            _t30 = _t30 *  *4304904 -  *4532560;
            asm("fst qword [0x452a08]");
            L00402AA0(L00410DF8(_t7), _t8);
            __ecx =  *4310344;
        }
         *4310344 = __ecx;
        if(__ecx == 3 || __ecx == 4) {
            _push(0);
             *4532412 =  *((intOrPtr*)(4532688 +  *4310340 * 4));
            _t12 = L00402840(__ecx, _t30, 1075052544);
            __esp = __esp + 8;
            _t13 =  *4310340;
            if(_t12 == 1) {
                _t13 = _t13 + 1;
            }
             *4310340 = _t13;
            if(_t13 == 4) {
                 *4310952 = 2;
            }
        }
        return 0;
    }
}

L00402520()
{
    L004013A0();
    L00403820( *4532576);
    return 0;
}

L00402540(
    _unknown_ __edx                        // r3
)
{
    intOrPtr _t4;                          // _t4
    intOrPtr _t6;                          // _t6
    intOrPtr _t8;                          // _t8
    intOrPtr _t10;                         // _t10

    __edx = __edx;
     *4532576 = L004035A0(__edx, 0);
     *4532400 = L004037D0(_t1, 307200);
    _push(1966079);
    _push( *4532576);
    _t4 = L00403630();
    __esp = __esp + 8;
     *4532728 = _t4;
    _push(196607);
    _push( *4532576);
    _t6 = L00403630();
    __esp = __esp + 8;
     *4532572 = _t6;
    _push(131072);
    _push( *4532576);
    _t8 = L00403630();
    __esp = __esp + 8;
     *4532736 = _t8;
    _push(131072);
    _push( *4532576);
    _t10 = L00403630();
    __esp = __esp + 8;
     *4532416 = _t10;
    return _t10;
}

L004025D0(
    _unknown_ __ecx,                       // r2
    _unknown_ __edx                        // r3
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t18;                       // _t18
    _unknown_ _t23;                        // _t23
    _unknown_ _t30;                        // _t30
    signed int* _t31;                      // _t31
    signed int _t35;                       // _t35
    char _t36;                             // _t36
    char _t37;                             // _t37
    _unknown_ _t44;                        // _t44
    _unknown_ _t46;                        // _t46
    char* _t48;                            // _t48
    signed int _t51;                       // _t51
    signed int _t54;                       // _t54
    char* _t55;                            // _t55
    intOrPtr _t56;                         // _t56
    _unknown_ _t57;                        // _t57
    unsigned int _t59;                     // _t59

    _t51 = 0;
     *4532408 = L004043A0("data\\ign.pfm");
     *4532424 = L004043A0("data\\ign.psq");
     *4532404 = L004043A0("data\\ign.col");
     *4532552 = L004043A0("data\\ign0.pic");
     *4532688 = L004043A0("data\\ign1.pic");
     *4532692 = L004043A0("data\\ign2.pic");
     *4532696 = L004043A0("data\\ign4.pic");
     *4532700 = L004043A0("data\\ign3.pic");
    _push(0);
    _push(65536);
    _t18 =  *4532736 + 65535 & -65536;
    _push(_t18);
     *4532736 = _t18;
    _push("data\\ign.pan");
    _t48 = "data\\IGN1.TEX";
    L00404320(__edx);
    __esp = __esp + 16;
    _t35 =  *4532728 + 65535 & -65536;
    do {
        _t57 = L004044D0(_t48);
        if(_t57 <= 0) {
            L00410EC0(0);
        }
        if(_t57 > 1048576) {
            _t57 = 1048576;
        }
        L00404320(__edx, _t48, _t35, _t57, 0);
        if(_t57 > 0) {
            _t31 = 4532432 + _t51 * 4;
            _t59 = _t57 + 65535 >> 16;
            _t51 = _t51 + _t59;
            do {
                 *_t31 = _t35;
                _t31 =  &(_t31[1]);
                _t35 = _t35 + 65536;
                _t59 = _t59 - 1;
            } while(_t59 != 0);
        }
        _t48 = _t48 + 50;
    } while(_t48 < "data\\ign.shd");
    _t36 = 0;
    _push(0);
     *(4532432 + _t51 * 4) = 0;
    _push(65536);
    _t54 =  *4532572 + 65535 & -65536;
    _push(_t54);
     *4532592 = _t54;
    _push("data\\ign.shd");
    _t55 = _t54 + 65536;
    L00404320(__edx);
    __esp = __esp + 16;
     *4532596 = _t55;
    do {
         *_t55 = _t36;
        _t55 = _t55 + 1;
        _t36 = _t36 + 1;
    } while(_t36 < 256);
    _t46 = 1;
    do {
        _t23 = _t46;
        _t46 = _t46 + 1;
        _push(64 << 2);
        _push(_t23);
        _push(_t55);
        memset();
        __esp = __esp + 12;
        _t55 = _t55 + 256;
    } while(_t46 < 256);
    _t56 = 0;
    _t37 = 0;
     *4532600 = 0;
     *4532416 =  *4532416 + 65535 & -65536;
    do {
        _t30 = 0;
        do {
            _t44 = _t56 + _t30;
            _t30 = _t30 + 1;
             *((char*)(_t44 +  *4532416)) = _t37;
        } while(_t30 < 256);
        _t56 = _t56 + 256;
        _t37 = _t37 + 1;
    } while(_t56 < 65536);
    return _t30;
}

L004027D0(
    signed int __edx,                      // r3
    _unknown_ __fp0                        // r28
)
{
    intOrPtr _t9;                          // _t9

    __fp0 = __fp0;
    L004019D0(__edx,  *4532408, 4532432, 4532592);
    L00402F70(__fp0, 1);
    _push( *4310356);
    L004030C0(__fp0,  *4532404 + 8,  *4310352);
    __esp = __esp + 4;
    L00402A80( *4310360,  *4310364, 0);
    _t9 = L004044D0("data\\ign.psq");
     *4532568 = _t9;
    return _t9;
}

L00402840(
    _unknown_ __ecx,                       // r2
    _unknown_ __fp0,                       // r28
    _unknown_ _a4                          // _cfa_4
)
{
    intOrPtr __esi;                        // r5
    signed char _t22;                      // _t22
    intOrPtr _t48;                         // _t48

    _t22 =  *4532412;
    if( *4532420 == _t22) {
        if( *4310344 > 2) {
L16:
            if( *4310344 == 3) {
                asm("fld1");
                asm("fcomp qword [0x41c550]");
                asm("fnstsw ax");
                if((_t22 & 65) == 0) {
                     *4310352 =  *4310352 +  *4304928;
                    _push( *4310356);
                    _t22 = L004030C0( *4310352 +  *4304928,  *4532412 + 72,  *4310352);
                    __esp = __esp + 4;
                }
            }
            if( *4310344 != 4) {
L24:
                _push(0);
                _push(0);
                _t48 =  *4310360;
                _push(4442104);
                _push( *4310364);
                _push(_t48);
                _push(0);
                _push(0);
                _push(_t48);
                _push( *4532400);
                L00404600();
                __esp = __esp + 36;
                L004046A0(4442104);
                 *4532732 =  *4532732 + 1;
                return 0;
            } else {
                asm("fldz");
                asm("fcomp qword [0x41c550]");
                asm("fnstsw ax");
                if((_t22 & 1) != 0) {
                     *4310352 =  *4310352 -  *4304928;
                    _push( *4310356);
                    _t22 = L004030C0( *4310352 -  *4304928,  *4532412 + 72,  *4310352);
                    __esp = __esp + 4;
                }
                asm("fldz");
                asm("fcomp qword [0x41c550]");
                asm("fnstsw ax");
                if((_t22 & 1) != 0) {
                    goto L24;
                } else {
                    return 1;
                }
            }
        } else {
            if( *4532732 >= 10 &&  *4532732 < 40) {
                asm("fld1");
                asm("fcomp qword [0x41c550]");
                asm("fnstsw ax");
                if((_t22 & 65) == 0) {
                     *4310352 =  *4310352 +  *4304928;
                    _push( *4310356);
                    _t22 = L004030C0( *4310352 +  *4304928,  *4532412 + 72,  *4310352);
                    __esp = __esp + 4;
                }
            }
            asm("fild dword [0x4529fc]");
            asm("fcompp");
            asm("fnstsw ax");
            if((_t22 & 65) == 0) {
                asm("fldz");
                asm("fcomp qword [0x41c550]");
                asm("fnstsw ax");
                if((_t22 & 1) != 0) {
                    _t68 =  *4310352 -  *4304928;
                    asm("fcom qword [0x41b018]");
                     *4310352 =  *4310352 -  *4304928;
                    asm("fnstsw ax");
                    if((_t22 & 1) != 0) {
                         *4310352 = 0;
                         *4310356 = 0;
                    }
                    _push( *4310356);
                    _t22 = L004030C0(_t68,  *4532412 + 72,  *4310352);
                    __esp = __esp + 4;
                }
            }
            asm("fild dword [0x4529fc]");
            asm("fcompp");
            asm("fnstsw ax");
            if((_t22 & 65) != 0) {
                goto L16;
            } else {
                return 1;
            }
        }
    } else {
        __esi = 0;
         *4532420 = _t22;
        _push(0);
        _push(0);
         *4532732 = 0;
        _push(_t22 + 72);
         *4310352 = 0;
         *4310356 = 0;
        L004030C0(__fp0);
        __esp = __esp + 12;
        goto L2;
        do {
        } while();
        goto L25;
L2:
        __esi = __esi + 1;
         *((char*)( *4532400 + __esi - 1)) =  *((intOrPtr*)( *4532412 + __esi + 845));
        if(__esi < 307200) {
            goto L2;
        } else {
            return 0;
        }
    }
L25:
}

L00402A80(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    _unknown_ _a12                         // _cfa_c
)
{
    intOrPtr __ebx;                        // r1

    __ebx = _a8;
    L0040A4A0(_a4, _a8, __ecx);
    return 1;
}

L00402AA0(
    signed int __eax,                      // r0
    intOrPtr _a4                           // _cfa_4
)
{
    _unknown_ __esi;                       // r5
    intOrPtr* _t26;                        // _t26
    intOrPtr _t27;                         // _t27
    intOrPtr _t29;                         // _t29
    intOrPtr _t30;                         // _t30
    intOrPtr _t36;                         // _t36
    signed int _t57;                       // _t57
    signed char _t88;                      // _t88
    intOrPtr _t95;                         // _t95
    intOrPtr _t98;                         // _t98
    intOrPtr _t100;                        // _t100
    intOrPtr _t101;                        // _t101
    intOrPtr _t105;                        // _t105
    intOrPtr _t107;                        // _t107
    _unknown_ _t114;                       // _t114

    if( *4310344 == 1) {
        asm("fld1");
        asm("fcomp qword [0x41c550]");
        asm("fnstsw ax");
        if((__eax & 65) == 0 &&  *4310332 > 4) {
             *4310352 =  *4310352 +  *4304928;
            _push( *4310356);
            L004030C0( *4310352 +  *4304928,  *4532404 + 8,  *4310352);
            __esp = __esp + 4;
        }
    }
    if( *4310344 == 2) {
        _t129 =  *4310352 -  *4304928;
         *4310352 =  *4310352 -  *4304928;
        _push( *4310356);
        _push( *4310352);
        _push( *4532404 + 8);
        _t88 = L004030C0( *4310352 -  *4304928);
        asm("fldz");
        asm("fcomp qword [0x41c550]");
        __esp = __esp + 12;
        asm("fnstsw ax");
        if((_t88 & 65) == 0) {
             *4310344 =  *4310344 + 1;
             *4310368 = 1;
            L00402F70(_t129, 1);
            __esp = __esp + 4;
        }
    }
    _t95 = _a4 -  *4310336;
    _t26 = ( *4310328 +  *4310328 * 2 << 2) +  *4532424;
    _t114 =  *_t26 +  *4310332;
     *4310332 = _t95;
    _t27 = _t26[1];
    if(_t95 >= _t27) {
         *4310336 =  *4310336 + _t27;
         *4310332 = 0;
         *4310328 =  *4310328 + 1;
        asm("cdq");
        if( *4532568 / 12 ==  *4310328) {
             *4310328 = 0;
        }
    }
    _push( *4310368);
    _push(_t114);
    _t29 = L00401E30();
    __esp = __esp + 8;
     *4532608 = _t29;
    _t30 =  *4532400;
     *4532620 =  *4532416;
     *4532612 = _t30;
     *4532616 = _t30;
     *4532624 = 0;
    _push(4532608);
     *4532628 = 0;
     *4532632 =  *4310360 - 1;
     *4532636 =  *4310364 - 1;
    L00402E10();
    __esp = __esp + 4;
    _t36 =  *4532552;
    if( *4310368 != 0) {
        _push(_t36 + 846);
        _push( *4310360);
        _push(320);
        _push(0);
        _push(0);
        _push(40);
        _push(40);
        _push(57);
        _push(0);
        L00402F00();
        __esp = __esp + 36;
        _t98 =  *4310360;
        _push( *4532552 + 846);
        _push(_t98);
        _push(320);
        _push(0);
        _push(_t98 - 40);
        _push(40);
        _push(40);
        _push(57);
        _push(40);
        L00402F00();
        __esp = __esp + 36;
        _push( *4532552 + 846);
        _push( *4310360);
        _push(320);
        _push( *4310364 - 40);
        _push(0);
        _push(40);
        _push(40);
        _push(97);
        _push(0);
        L00402F00();
        __esp = __esp + 36;
        _t100 =  *4310360;
        _push( *4532552 + 846);
        _push(_t100);
        _push(320);
        _push( *4310364 - 40);
        _push(_t100 - 40);
        _push(40);
        _push(40);
        _push(97);
        _push(40);
    } else {
        _push(_t36 + 846);
        _push( *4310360);
        _push(320);
        _push(0);
        _push(0);
        _push(20);
        _push(20);
        _push(0);
        _push(0);
        L00402F00();
        __esp = __esp + 36;
        _t105 =  *4310360;
        _push( *4532552 + 846);
        _push(_t105);
        _push(320);
        _push(0);
        _push(_t105 - 20);
        _push(20);
        _push(20);
        _push(0);
        _push(20);
        L00402F00();
        __esp = __esp + 36;
        _push( *4532552 + 846);
        _push( *4310360);
        _push(320);
        _push( *4310364 - 20);
        _push(0);
        _push(20);
        _push(20);
        _push(20);
        _push(0);
        L00402F00();
        __esp = __esp + 36;
        _t107 =  *4310360;
        _push( *4532552 + 846);
        _push(_t107);
        _push(320);
        _push( *4310364 - 20);
        _push(_t107 - 20);
        _push(20);
        _push(20);
        _push(20);
        _push(20);
    }
    L00402F00();
    __esp = __esp + 36;
    _t101 =  *4310360;
    _push( *4532552 + 846);
    _push(_t101);
    _push(320);
    _t57 =  *4310364 +  *4310364;
    asm("cdq");
    _push(_t57 / 200);
    asm("cdq");
    _push(_t101 - 173 - _t57 % 200 >> 1);
    _push(57);
    _push(173);
    _push(0);
    _push(40);
    L00402F00();
    __esp = __esp + 36;
    L00404600( *4532400,  *4310360, 0, 0,  *4310360,  *4310364, 4442104, 0, 0);
    L004046A0(4442104);
    return 0;
}

L00402E10(
    intOrPtr _a4                           // _cfa_4
)
{
    intOrPtr _v8;                          // _cfa_fffffff8
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ _t6;                         // _t6

    _push(_t6);
    _push(__edi);
    _v8 = L0040A519(_a4, __fp0);
    _pop(__edi);
    _pop(__esi);
    return _v8;
}

L00402E30(
    _unknown_ __fp0                        // r28
)
{
    intOrPtr _t3;                          // _t3
    _unknown_ _t5;                         // _t5
    _unknown_ _t9;                         // _t9

    __fp0 = __fp0;
    L00404910();
    if(L00404A90(28) == 1 || L00404A90(57) == 1 || L00404A90(1) == 1) {
        _t3 =  *4310344;
        if(_t3 == 1) {
            _t3 = _t3 + 1;
        }
         *4310344 = _t3;
        if(_t3 == 3) {
             *4310344 = _t3 + 1;
        }
    }
    if(L00404A90(74) == 1 &&  *4310368 != 0) {
        L00402F70(__fp0, 0);
        _push(1072693248);
        L004030C0(__fp0,  *4532404 + 8, 0);
        __esp = __esp + 4;
    }
    _t5 = L00404A90(78);
    if(_t5 == 1 &&  *4310368 != 1) {
        L00402F70(__fp0, 1);
        _push(1072693248);
        _t9 = L004030C0(__fp0,  *4532404 + 8, 0);
        __esp = __esp + 4;
        return _t9;
    }
    return _t5;
}

signed int L00402F00()
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ _t21;                        // _t21
    _unknown_ _t33;                        // _t33

    _t21 =  *(__esp + 40) +  *(__esp + 28) *  *(__esp + 20) +  *((intOrPtr*)(__esp + 16));
    _t33 =  *(__esp + 40) *  *(__esp + 36) +  *(__esp + 36) +  *4532400;
    __ebp =  *((intOrPtr*)(__esp + 32));
    if(__ebp > 0) {
        __eax =  *(__esp + 28);
        do {
            __edi = 0;
            if(__eax > 0) {
                do {
                    __edi = __edi + 1;
                     *((char*)(_t33 + __edi - 1)) =  *((intOrPtr*)((0 << 8) +  *4532736));
                } while(__edi < __eax);
            }
            _t21 = _t21 +  *((intOrPtr*)(__esp + 44));
            _t33 = _t33 +  *((intOrPtr*)(__esp + 48));
            __ebp = __ebp - 1;
        } while(__ebp != 0);
    }
    return __eax;
}

L00402F70(
    _unknown_ __fp0,                       // r28
    intOrPtr _a4                           // _cfa_4
)
{
    intOrPtr _t4;                          // _t4
    _unknown_ _t8;                         // _t8
    _unknown_ _t20;                        // _t20
    intOrPtr _t22;                         // _t22
    intOrPtr _t29;                         // _t29

    __fp0 = __fp0;
    _t4 = _a4;
     *4310368 = _t4;
    if(_t4 == 0) {
         *4310360 = 320;
         *4310364 = 200;
    }
    if(_t4 == 1) {
         *4310360 = 640;
         *4310364 = 480;
    }
    _push(0);
    L004030C0(__fp0,  *4532404 + 8, 0);
    __esp = __esp + 4;
    _t8 = 0;
    do {
        _t8 = _t8 + 1;
         *((char*)( *4532400 + _t8 - 1)) = 0;
    } while(_t8 < 307200);
    _push(0);
    _push(0);
    _t22 =  *4310360;
    _push(4442104);
    _push( *4310364);
    _push(_t22);
    _push(0);
    _push(0);
    _push(_t22);
    _push( *4532400);
    L00404600();
    __esp = __esp + 36;
    L004046A0(4442104);
    L00404600( *4532400,  *4310360, 0, 0,  *4310360,  *4310364, 4442104, 0, 0);
     *4311152 =  *4310360;
     *4311160 = 8;
     *4311164 = 1;
     *4311156 =  *4310364;
    L00404660();
    _push(8);
    _push( *4310364);
    _t29 =  *4310360;
    _push(_t29);
    _push(_t29);
    _push( *4532400);
    L004046B0();
    __esp = __esp + 20;
    L00402A80( *4310360,  *4310364, 0);
    _push(0);
    _t20 = L004030C0(__fp0,  *4532404 + 8, 0);
    __esp = __esp + 4;
    return _t20;
}

L004030C0(
    signed long long __fp0,                // r28
    intOrPtr _a4,                          // _cfa_4
    signed long long _a8                   // _cfa_8
)
{
    signed long long _v4;                  // _cfa_fffffffc
    signed long long _v8;                  // _cfa_fffffff8
    signed long long __edi;                // r4
    intOrPtr __esi;                        // r5
    signed char _t17;                      // _t17
    signed long long _t24;                 // _t24

    _t24 = __fp0;
    __esi = _a4;
    __edi = 0;
    do {
        _t17 =  *((intOrPtr*)(__edi + __esi));
        _v8 = 0;
        asm("fild dword [esp+0x10]");
        asm("fcom qword [0x41b038]");
        _v8 = _t24 * _a8;
        asm("fnstsw ax");
        if(0 == 0) {
            _v8 = 0;
            _v4 = 1081073664;
        }
        asm("fldz");
        asm("fcomp qword [esp+0x10]");
        asm("fnstsw ax");
        if((_t17 & 65) == 0) {
            _v8 = 0;
            _v4 = 0;
        }
        _t24 = _v8;
        __edi = __edi + 1;
         *((char*)(__edi + 4441191)) = L00410DF8(_t17);
    } while(__edi < 768);
    return L00404690(4441192);
}

L00403140(
    signed short _a4                       // _cfa_4
)
{
    char* _v24;                            // _cfa_ffffffe8
    signed short _v28;                     // _cfa_ffffffe4
    signed short _v32;                     // _cfa_ffffffe0
    signed short _v36;                     // _cfa_ffffffdc
    signed short _v40;                     // _cfa_ffffffd8
    intOrPtr _v44;                         // _cfa_ffffffd4
    intOrPtr _v48;                         // _cfa_ffffffd0
    char _v60;                             // _cfa_ffffffc4
    char _v96;                             // _cfa_ffffffa0
    intOrPtr _v104;                        // _cfa_ffffff98
    char _v112;                            // _cfa_ffffff90
    char _v116;                            // _cfa_ffffff8c
    intOrPtr _v124;                        // _cfa_ffffff84
    char _v132;                            // _cfa_ffffff7c
    char _v136;                            // _cfa_ffffff78
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ __ebp;                       // r6
    signed short _t22;                     // _t22
    signed short _t23;                     // _t23
    _unknown_ _t35;                        // _t35
    intOrPtr* _t36;                        // _t36
    _unknown_ _t40;                        // _t40
    intOrPtr* _t41;                        // _t41
    _unknown_ _t42;                        // _t42
    intOrPtr* _t44;                        // _t44
    _unknown_ _t45;                        // _t45
    intOrPtr* _t47;                        // _t47

    _t22 = _a4;
    __esp = __esp - 68;
     *4442048 = 4305344;
    _push(_t35);
     *4442040 = _t22;
    _push(_t42);
    _push(_t40);
    _push(_t45);
    _push(32512);
    _push(0);
    __imp__LoadCursorA();
     *4442000 = _t22;
    _v40 = 0;
    _t23 =  *4442040;
    _push(32512);
    _v36 = 0;
    _push(0);
    _v32 = _t23;
    _v48 = 8;
    _v44 = 4207424;
     *__imp__LoadIconA();
    _push(4);
    _v36 = _t23;
    _v32 =  *4442000;
    __imp__GetStockObject();
    _v32 = _t23;
    _v28 = 0;
    _push( &_v60);
    _v24 = "Ignition";
    __imp__RegisterClassA();
    if((_t23 & 65535) != 0) {
        _push(1);
        __imp__timeBeginPeriod();
        L00404B00(__fp0);
        L00403510();
        if(_t23 != 0) {
            _t44 = __imp__PeekMessageA;
            _t41 = __imp__GetMessageA;
            _t36 = __imp__TranslateMessage;
            _t47 = __imp__DispatchMessageA;
            while(1) {
L5:
                _push(0);
                _push(0);
                _push(0);
                if( *4442020 == 0) {
                    break;
                }
                _push(0);
                _push( &_v96);
                 *_t44();
                if( &_v96 == 0) {
                    L004032A0(__fp0);
                    if( &_v96 == 0) {
                        L00403540();
                    }
                    continue;
                } else {
                    _push(0);
                    _push(0);
                    _push(0);
                    _push( &_v116);
                     *_t41();
                    if( &_v116 == 0) {
                        _pop(__ebp);
                        _pop(__edi);
                        _pop(__esi);
                        _pop(__ebx);
                        __esp = __esp + 68;
                        return _v124;
                    } else {
                        _push( &_v132);
                         *_t36();
                        _push( &_v136);
                         *_t47();
                        continue;
                    }
                }
                goto L15;
            }
            _push( &_v96);
             *_t41();
            if( &_v96 == 0) {
                _pop(__ebp);
                _pop(__edi);
                _pop(__esi);
                _pop(__ebx);
                __esp = __esp + 68;
                return _v104;
            } else {
                _push( &_v112);
                 *_t36();
                _push( &_v116);
                 *_t47();
                goto L5;
            }
        } else {
            _pop(__ebp);
            _pop(__edi);
            _pop(__esi);
            _pop(__ebx);
            __esp = __esp + 68;
            return 0;
        }
    } else {
        _pop(__ebp);
        _pop(__edi);
        _pop(__esi);
        _pop(__ebx);
        __esp = __esp + 68;
        return 0;
    }
L15:
}

L004032A0(
    signed long long __fp0                 // r28
)
{
    _unknown_ _t1;                         // _t1
    intOrPtr _t2;                          // _t2

    __fp0 = __fp0;
    __ecx =  *4310952;
    if(__ecx != 0) {
L4:
        _t2 =  *4311084;
        if(__ecx != 1 || _t2 != 0) {
            if(__ecx != 2 || _t2 != 0) {
                goto L3;
            } else {
                 *4310960 = L004034D0(_t2);
                L00402520();
                L00404B30();
                _push(1);
                __imp__timeEndPeriod();
                 *4311084 = 1;
                return 0;
            }
        } else {
             *4310960 = L004034D0(_t2);
            L00402410(__fp0);
            return 1;
        }
    } else {
        if( *4311080 != 0) {
            goto L4;
        } else {
             *4311080 = 1;
             *4310960 = L004034D0(_t1);
            L004023F0(__ecx, __fp0);
             *4310952 = 1;
L3:
            return 1;
        }
    }
}

L004034D0(
    intOrPtr __eax                         // r0
)
{
    __imp__timeGetTime();
    __edx =  *4311088;
    if(__edx == 0) {
        __edx = __eax;
    }
     *4311088 = __edx;
    if( *4442020 != 0) {
         *4311076 =  *4311076 + __eax - __edx;
    }
     *4311088 = __eax;
    return  *4311076;
}

L00403510()
{
    _unknown_ _t1;                         // _t1

    _t1 = L004045E0(0);
    L00404640(_t1);
    if(_t1 == 0 || L004046F0() == 0) {
        return 0;
    } else {
         *4442032 = 1;
        return 1;
    }
}

L00403540()
{
    _push(0);
    __eax =  *4442044;
    _push(0);
    _push(16);
    _push(__eax);
    __imp__PostMessageA();
    return __eax;
}

L00403570()
{
    _unknown_ __edi;                       // r4

    _push(256 << 2);
    _push(0);
    _push(4534480);
    memset();
    __esp = __esp + 12;
    L004035A0(__edx, "DEFAULT");
    return 1;
}

signed int L004035A0(
    _unknown_ __edx,                       // r3
    char* _a4                              // _cfa_4
)
{
    _unknown_ __edi;                       // r4
    signed int __esi;                      // r5
    intOrPtr* _t10;                        // _t10
    char* _t11;                            // _t11
    char* _t16;                            // _t16
    _unknown_ _t23;                        // _t23

    _t10 = 4534480;
    __esi = 0;
    while( *_t10 != 0) {
        _t10 = _t10 + 4;
        __esi = __esi + 1;
        if(_t10 < 4535504) {
            continue;
        }
        break;
    }
    if(__esi != 256) {
        _t11 = L004111A0(320);
        if(_t11 != 0) {
            _t16 = _a4;
             *((intOrPtr*)(4534480 + __esi * 4)) = _t11;
            if(_t16 == 0) {
                 *_t11 = 0;
            } else {
                _t23 = 0;
                if( *_t16 != 0) {
                    while(_t23 < 63) {
                         *((char*)(_t11 + _t23)) =  *((intOrPtr*)(_t16 + _t23));
                        _t23 = _t23 + 1;
                        if( *((char*)(_t16 + _t23)) != 0) {
                            continue;
                        }
                        goto L11;
                    }
                }
L11:
                 *((char*)(_t11 + _t23)) = 0;
            }
            _push(64 << 2);
            _push(0);
            _push(_t11 + 64);
            memset();
            __esp = __esp + 12;
            return __esi;
        } else {
            return -1;
        }
    } else {
        return -1;
    }
}

L00403630()
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t24;                       // _t24
    intOrPtr* _t28;                        // _t28
    _unknown_ _t29;                        // _t29
    intOrPtr _t30;                         // _t30
    intOrPtr* _t35;                        // _t35
    _unknown_ _t38;                        // _t38
    intOrPtr _t39;                         // _t39
    intOrPtr* _t42;                        // _t42
    intOrPtr _t43;                         // _t43
    signed int _t45;                       // _t45
    intOrPtr* _t46;                        // _t46
    intOrPtr _t47;                         // _t47
    intOrPtr* _t48;                        // _t48
    intOrPtr* _t51;                        // _t51
    intOrPtr* _t52;                        // _t52
    intOrPtr* _t53;                        // _t53
    _unknown_ _t54;                        // _t54
    signed int _t55;                       // _t55
    intOrPtr _t58;                         // _t58
    intOrPtr _t59;                         // _t59
    intOrPtr _t60;                         // _t60
    intOrPtr _t61;                         // _t61
    intOrPtr* _t62;                        // _t62
    intOrPtr* _t63;                        // _t63
    intOrPtr* _t64;                        // _t64
    _unknown_ _t72;                        // _t72
    _unknown_ _t74;                        // _t74
    _unknown_ _t76;                        // _t76

    _t24 =  *(__esp + 4);
    __esp = __esp - 8;
    _push(_t45);
    _t47 =  *((intOrPtr*)(4534480 + _t24 * 4));
     *((intOrPtr*)(__esp + 8)) = _t47;
    _push(_t61);
    _push(_t54);
    _t48 = _t47 + 64;
    _push(__ebp);
    _t55 = 0;
    if( *_t48 == 0) {
L14:
        _t76 = _t55 - 64;
        goto L15;
    } else {
        while(_t55 < 64) {
            _t35 =  *_t48;
            _t45 = 0;
             *((intOrPtr*)(__esp + 16)) = _t35;
            if( *_t35 == 0) {
L11:
                _t74 = _t45 - 64;
                goto L12;
            } else {
                __edx = _t35;
                while(_t45 < 64) {
                    _t61 =  *__edx;
                    __ebp = 0;
                    _t42 = _t61 + 4;
                    if( *_t42 == 0) {
L8:
                        _t72 = __ebp - 16;
                    } else {
                        while(__ebp < 16) {
                            _t42 = _t42 + 8;
                            __ebp = __ebp + 1;
                            if( *_t42 != 0) {
                                continue;
                            } else {
                                goto L8;
                            }
                            goto L9;
                        }
                    }
L9:
                    if(_t72 != 0) {
                        _t60 =  *((intOrPtr*)(__esp + 32));
                        _t43 = L004111A0(_t60);
                        if(_t43 != 0) {
                            _t53 = _t61 + __ebp * 8;
                            _pop(__ebp);
                             *_t53 = _t43;
                            _t53[1] = _t60;
                            _pop(__edi);
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 8;
                            return _t43;
                        } else {
                            _pop(__ebp);
                            _pop(__edi);
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 8;
                            return 0;
                        }
                    } else {
                        __edx = __edx + 4;
                        _t45 = _t45 + 1;
                        if( *__edx != 0) {
                            continue;
                        } else {
                            goto L11;
                        }
                    }
                    goto L36;
                }
L12:
                if(_t74 != 0) {
                    _t64 = L004111A0(128);
                    if(_t64 != 0) {
                        _t52 = _t64 + 12;
                         *((intOrPtr*)( *((intOrPtr*)(__esp + 16)) + _t45 * 4)) = _t64;
                        _t38 = 15;
                        do {
                             *_t52 = 0;
                            _t52 = _t52 + 8;
                            _t38 = _t38 - 1;
                        } while(_t38 != 0);
                        _t59 =  *((intOrPtr*)(__esp + 32));
                        _t39 = L004111A0(_t59);
                        if(_t39 != 0) {
                            _pop(__ebp);
                             *_t64 = _t39;
                            _t64[1] = _t59;
                            _pop(__edi);
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 8;
                            return _t39;
                        } else {
                            _pop(__ebp);
                            _pop(__edi);
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 8;
                            return 0;
                        }
                    } else {
                        _pop(__ebp);
                        _pop(__edi);
                        _pop(__esi);
                        _pop(__ebx);
                        __esp = __esp + 8;
                        return 0;
                    }
                } else {
                    _t48 = _t48 + 4;
                    _t55 = _t55 + 1;
                    if( *_t48 != 0) {
                        continue;
                    } else {
                        goto L14;
                    }
                }
            }
            goto L36;
        }
L15:
        if(_t76 != 0) {
            _t62 = L004111A0(256);
            if(_t62 != 0) {
                 *((intOrPtr*)( *((intOrPtr*)(__esp + 20)) + 64 + _t55 * 4)) = _t62;
                _push(64 << 2);
                _push(0);
                _push(_t62);
                memset();
                __esp = __esp + 12;
                _t28 = L004111A0(128);
                __esp = __esp + 4;
                _t46 = _t28;
                if(_t46 != 0) {
                    _t29 = 16;
                     *_t62 = _t46;
                    _t63 = _t46 + 4;
                    _t51 = _t63;
                    do {
                         *_t51 = 0;
                        _t51 = _t51 + 8;
                        _t29 = _t29 - 1;
                    } while(_t29 != 0);
                    _t58 =  *((intOrPtr*)(__esp + 32));
                    _t30 = L004111A0(_t58);
                    if(_t30 != 0) {
                        _pop(__ebp);
                         *_t46 = _t30;
                         *_t63 = _t58;
                        _pop(__edi);
                        _pop(__esi);
                        _pop(__ebx);
                        __esp = __esp + 8;
                        return _t30;
                    } else {
                        _pop(__ebp);
                        _pop(__edi);
                        _pop(__esi);
                        _pop(__ebx);
                        __esp = __esp + 8;
                        return 0;
                    }
                } else {
                    _pop(__ebp);
                    _pop(__edi);
                    _pop(__esi);
                    _pop(__ebx);
                    __esp = __esp + 8;
                    return 0;
                }
            } else {
                _pop(__ebp);
                _pop(__edi);
                _pop(__esi);
                _pop(__ebx);
                __esp = __esp + 8;
                return 0;
            }
        } else {
            _pop(__ebp);
            _pop(__edi);
            _pop(__esi);
            _pop(__ebx);
            __esp = __esp + 8;
            return 0;
        }
    }
L36:
}

L004037D0(
    intOrPtr _a4,                          // _cfa_4
    unsigned int _a8                       // _cfa_8
)
{
    intOrPtr _v8;                          // _cfa_fffffff8
    _unknown_ __edi;                       // r4
    intOrPtr _t11;                         // _t11
    signed int _t16;                       // _t16
    _unknown_ _t21;                        // _t21
    intOrPtr _t22;                         // _t22

    _push(_a8);
    _push(_a4);
    _t11 = L00403630();
    __esp = __esp + 8;
    _v8 = _t11;
    if(_t11 != 0) {
        asm("pushfw");
        _push(_t21);
        asm("cld");
        _t22 = _v8;
        _t16 = _a8 >> 2;
        _push(_t16 << 2);
        _push(0);
        _push(_t22);
        memset();
        __esp = __esp + 12;
        _push((_a8 & 3) << 0);
        _push(0);
        _push(_t22 + _t16);
        memset();
        __esp = __esp + 12;
        _pop(__edi);
        asm("popfw");
    }
    return _v8;
}

L00403820(
    signed int _a4                         // _cfa_4
)
{
    intOrPtr _v4;                          // _cfa_fffffffc
    intOrPtr _v8;                          // _cfa_fffffff8
    intOrPtr _v12;                         // _cfa_fffffff4
    char** _v16;                           // _cfa_fffffff0
    char* _v20;                            // _cfa_ffffffec
    char __ebx;                            // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ __ebp;                       // r6
    char* _t27;                            // _t27
    _unknown_ _t37;                        // _t37
    intOrPtr* _t38;                        // _t38
    _unknown_ _t39;                        // _t39
    _unknown_ _t40;                        // _t40
    _unknown_ _t41;                        // _t41
    char* _t42;                            // _t42

    __esp = __esp - 20;
    _push(__ebx);
    __ecx =  *((intOrPtr*)(4534480 + _a4 * 4));
    _v12 = __ecx;
    _push(_t39);
    _push(_t37);
    _v16 = __ecx + 64;
    _push(_t41);
    _v4 = 64;
    do {
        _t27 =  *_v16;
        if(_t27 != 0) {
            _t42 = _t27;
            _v20 = _t27;
            _v8 = 64;
            do {
                __ebx =  *_t42;
                if(__ebx != 0) {
                    _t38 = __ebx + 4;
                    _t40 = 16;
                    do {
                        if( *_t38 != 0) {
                            L00411250( *((intOrPtr*)(_t38 - 4)));
                        }
                        _t38 = _t38 + 8;
                        _t40 = _t40 - 1;
                    } while(_t40 != 0);
                    L00411250(__ebx);
                }
                _t42 =  &_a4;
                _v8 = _v8 - 1;
            } while(_v8 != 0);
            L00411250(_v20);
        }
        _v16 =  &(_v16[1]);
        _v4 = _v4 - 1;
    } while(_v4 != 0);
    L00411250(_v12);
     *((intOrPtr*)(4534480 + _a4 * 4)) = 0;
    _pop(__ebp);
    _pop(__edi);
    _pop(__esi);
    _pop(__ebx);
    __esp = __esp + 20;
    return 1;
}

L004038E0()
{
    signed int __esi;                      // r5

    __esi = 0;
    do {
        if( *((intOrPtr*)(4534480 + __esi * 4)) != 0) {
            L00403820(__esi);
        }
        __esi = __esi + 1;
    } while(__esi < 256);
    return 1;
}

L00403910()
{
    intOrPtr* _t25;                        // _t25
    intOrPtr _t28;                         // _t28
    intOrPtr _t30;                         // _t30
    intOrPtr _t33;                         // _t33
    intOrPtr* _t41;                        // _t41
    intOrPtr* _t50;                        // _t50
    intOrPtr* _t52;                        // _t52
    intOrPtr _t55;                         // _t55
    intOrPtr _t57;                         // _t57
    intOrPtr _t60;                         // _t60
    intOrPtr* _t68;                        // _t68
    intOrPtr* _t77;                        // _t77
    intOrPtr _t80;                         // _t80
    signed int _t82;                       // _t82
    intOrPtr* _t83;                        // _t83
    signed int _t85;                       // _t85
    intOrPtr* _t86;                        // _t86
    intOrPtr _t87;                         // _t87
    signed int _t89;                       // _t89
    intOrPtr* _t90;                        // _t90
    signed int _t92;                       // _t92
    intOrPtr* _t93;                        // _t93

    if( *4311112 == 1) {
        if( *4442072 != 1) {
            if( *4311108 == 0) {
                _push(1);
                _t50 =  *4534432;
                _push(0);
                _push(0);
                _push(_t50);
                 *((intOrPtr*)( *_t50 + 48))();
                 *4311108 = 1;
            }
            _push(4442060);
            _t25 =  *4534432;
            _push(4442084);
            _push(_t25);
             *((intOrPtr*)( *_t25 + 16))();
            _t80 =  *4442100;
            _t28 =  *4442084 +  *4442052;
             *4442060 = _t28;
            if(_t28 >= _t80) {
                 *4442060 =  *4442060 - _t80;
            }
            _t82 =  *4534412 *  *4442096;
            _t30 =  *4442060 + _t82;
             *4442056 = _t30;
            if( *4442100 > _t30) {
                if( *4442080 >=  *4442056 ||  *4442060 >  *4442080) {
                    goto L30;
                } else {
                    return 0;
                }
            } else {
                 *4442056 =  *4442056 -  *4442100;
                if( *4442080 <  *4442056 ||  *4442060 <=  *4442080) {
                    return 0;
                } else {
L30:
                    _push(0);
                    _push(4442092);
                    _push(4442068);
                    _push(4442088);
                    _push(4442064);
                    _push(_t82);
                    _push( *4442080);
                    _t83 =  *4534432;
                    _push(_t83);
                    _t33 =  *_t83;
                     *((intOrPtr*)(_t33 + 44))();
                     *4442076 = _t33;
                    if(_t33 != -2005401450) {
                        if( *4442076 == 0) {
                             *4534448 =  *4442064;
                             *4534452 =  *4442068;
                            _t85 =  *4442096;
                             *4534456 =  *4442088 / _t85;
                             *4534460 =  *4442092 / _t85;
                            return 4534448;
                        } else {
                            return 0;
                        }
                    } else {
                        _t41 =  *4534432;
                        _push(_t41);
                         *((intOrPtr*)( *_t41 + 80))();
                        _push(1);
                        _t86 =  *4534432;
                        _push(0);
                        _push(0);
                        _push(_t86);
                         *((intOrPtr*)( *_t86 + 48))();
                        return 0;
                    }
                }
            }
        } else {
            if( *4311108 == 0) {
                _push(1);
                _t77 =  *4534464;
                _push(0);
                _push(0);
                _push(_t77);
                 *((intOrPtr*)( *_t77 + 48))();
                 *4311108 = 1;
            }
            _push(4442060);
            _t52 =  *4534464;
            _push(4442084);
            _push(_t52);
             *((intOrPtr*)( *_t52 + 16))();
            _t87 =  *4442100;
            _t55 =  *4442084 +  *4442052;
             *4442060 = _t55;
            if(_t55 >= _t87) {
                 *4442060 =  *4442060 - _t87;
            }
            _t89 =  *4534412 *  *4442096;
            _t57 =  *4442060 + _t89;
             *4442056 = _t57;
            if( *4442100 > _t57) {
                if( *4442080 >=  *4442056 ||  *4442060 >  *4442080) {
                    goto L14;
                } else {
                    return 0;
                }
            } else {
                 *4442056 =  *4442056 -  *4442100;
                if( *4442080 <  *4442056 ||  *4442060 <=  *4442080) {
                    return 0;
                } else {
L14:
                    _push(0);
                    _push(4442092);
                    _push(4442068);
                    _push(4442088);
                    _push(4442064);
                    _push(_t89);
                    _push( *4442080);
                    _t90 =  *4534464;
                    _push(_t90);
                    _t60 =  *_t90;
                     *((intOrPtr*)(_t60 + 44))();
                     *4442076 = _t60;
                    if(_t60 != -2005401450) {
                        if( *4442076 == 0) {
                             *4534448 =  *4442064;
                             *4534452 =  *4442068;
                            _t92 =  *4442096;
                             *4534456 =  *4442088 / _t92;
                             *4534460 =  *4442092 / _t92;
                            return 4534448;
                        } else {
                            return 0;
                        }
                    } else {
                        _t68 =  *4534464;
                        _push(_t68);
                         *((intOrPtr*)( *_t68 + 80))();
                        _push(1);
                        _t93 =  *4534464;
                        _push(0);
                        _push(0);
                        _push(_t93);
                         *((intOrPtr*)( *_t93 + 48))();
                        return 0;
                    }
                }
            }
        }
    } else {
        return 0;
    }
}

L00403BF0()
{
    intOrPtr _t9;                          // _t9
    intOrPtr _t14;                         // _t14
    intOrPtr* _t17;                        // _t17
    intOrPtr* _t19;                        // _t19

    if( *4311112 == 1) {
        _push( *4442092);
        _push( *4442068);
        _push( *4442088);
        _push( *4442064);
        if( *4442072 != 1) {
            _t17 =  *4534432;
            _push(_t17);
             *((intOrPtr*)( *_t17 + 76))();
             *4442080 =  *4442080 +  *4534412 *  *4442096;
            if( *4442100 <=  *4442080) {
                do {
                    _t9 =  *4442100;
                     *4442080 =  *4442080 - _t9;
                } while(_t9 <=  *4442080);
            }
            return;
        } else {
            _t19 =  *4534464;
            _push(_t19);
             *((intOrPtr*)( *_t19 + 76))();
             *4442080 =  *4442080 +  *4534412 *  *4442096;
            if( *4442100 <=  *4442080) {
                do {
                    _t14 =  *4442100;
                     *4442080 =  *4442080 - _t14;
                } while(_t14 <=  *4442080);
            }
            return;
        }
    } else {
        return;
    }
}

L00403CB0()
{
    _unknown_ __esi;                       // r5
    intOrPtr* _t5;                         // _t5
    intOrPtr* _t6;                         // _t6
    intOrPtr* _t7;                         // _t7

    if( *4311112 == 1) {
         *4311112 = 0;
        if( *4534384 != 0) {
            if( *4534432 != 0) {
                _t7 =  *4534432;
                _push(_t7);
                 *((intOrPtr*)( *_t7 + 8))();
                 *4534432 = 0;
            }
            if( *4534464 != 0) {
                _t6 =  *4534464;
                _push(_t6);
                 *((intOrPtr*)( *_t6 + 8))();
                 *4534464 = 0;
            }
            _t5 =  *4534384;
            _push(_t5);
             *((intOrPtr*)( *_t5 + 8))();
             *4534384 = 0;
        }
        return;
    } else {
        return;
    }
}

L00403D20(
    signed int __edx                       // r3
)
{
    intOrPtr _v120;                        // _cfa_ffffff88
    intOrPtr _v124;                        // _cfa_ffffff84
    intOrPtr _v128;                        // _cfa_ffffff80
    intOrPtr _v132;                        // _cfa_ffffff7c
    intOrPtr _v136;                        // _cfa_ffffff78
    intOrPtr _v140;                        // _cfa_ffffff74
    intOrPtr _v144;                        // _cfa_ffffff70
    signed int _v148;                      // _cfa_ffffff6c
    signed int _v152;                      // _cfa_ffffff68
    intOrPtr _v156;                        // _cfa_ffffff64
    signed int _v160;                      // _cfa_ffffff60
    char _v164;                            // _cfa_ffffff5c
    signed char _v168;                     // _cfa_ffffff58
    signed char _v172;                     // _cfa_ffffff54
    signed int _v176;                      // _cfa_ffffff50
    signed int _v180;                      // _cfa_ffffff4c
    signed char _v184;                     // _cfa_ffffff48
    signed int _v188;                      // _cfa_ffffff44
    signed int _v216;                      // _cfa_ffffff28
    signed int _v224;                      // _cfa_ffffff20
    signed int _v228;                      // _cfa_ffffff1c
    char _v232;                            // _cfa_ffffff18
    signed int _v236;                      // _cfa_ffffff14
    signed int _v240;                      // _cfa_ffffff10
    char _v244;                            // _cfa_ffffff0c
    char* _v252;                           // _cfa_ffffff04
    short _v258;                           // _cfa_fffffefe
    signed int _v260;                      // _cfa_fffffefc
    signed int _v264;                      // _cfa_fffffef8
    signed int _v268;                      // _cfa_fffffef4
    short _v270;                           // _cfa_fffffef2
    signed int _v272;                      // _cfa_fffffef0
    signed int _v276;                      // _cfa_fffffeec
    short _v278;                           // _cfa_fffffeea
    signed int _v280;                      // _cfa_fffffee8
    short _v282;                           // _cfa_fffffee6
    signed int _v284;                      // _cfa_fffffee4
    signed int _v288;                      // _cfa_fffffee0
    short _v290;                           // _cfa_fffffede
    signed int _v292;                      // _cfa_fffffedc
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int __ebp;                      // r6
    _unknown_ _t163;                       // _t163
    signed int _t166;                      // _t166
    signed int _t176;                      // _t176
    signed int _t182;                      // _t182
    signed int _t188;                      // _t188
    signed int _t189;                      // _t189
    _unknown_ _t192;                       // _t192
    _unknown_ _t195;                       // _t195
    signed int _t200;                      // _t200
    signed int _t201;                      // _t201
    _unknown_ _t204;                       // _t204
    _unknown_ _t212;                       // _t212
    _unknown_ _t219;                       // _t219
    signed int _t221;                      // _t221
    signed int _t222;                      // _t222
    _unknown_ _t232;                       // _t232
    signed int _t233;                      // _t233
    signed int _t234;                      // _t234
    signed int _t237;                      // _t237
    signed int _t240;                      // _t240
    signed int _t241;                      // _t241
    signed int _t244;                      // _t244
    signed int _t246;                      // _t246
    signed int _t247;                      // _t247
    signed int _t248;                      // _t248
    signed int _t249;                      // _t249
    signed int _t252;                      // _t252
    _unknown_ _t253;                       // _t253
    signed int _t260;                      // _t260
    short _t261;                           // _t261
    signed int _t263;                      // _t263
    signed int _t267;                      // _t267
    signed int _t268;                      // _t268
    signed int _t272;                      // _t272
    signed int _t273;                      // _t273
    signed int _t276;                      // _t276
    signed int _t279;                      // _t279

    _t263 = __edx;
    _v184 = 2;
    _push(_t233);
    _v172 = 2;
    _push(_t279);
    _v168 = 2;
    _push(_t275);
    _push(__ebp);
    _v164 = 22050;
    _v160 = 22050;
    _v152 = 22050;
    _v156 = 44100;
    _v148 = 22050;
    _v144 = 44100;
    _v140 = 16;
    _v136 = 16;
    _v188 = 1;
    _v180 = 1;
    _v176 = 1;
    _v132 = 16;
    _v128 = 8;
    _v124 = 8;
    _v120 = 8;
    if( *4311112 == 1) {
L28:
        __eflags = 0;
        _pop(__ebp);
        _pop(__edi);
        _pop(__esi);
        _pop(__ebx);
        return;
    } else {
         *4534420 = 4;
         *4534464 = 0;
         *4534432 = 0;
         *4442072 = 0;
         *4311112 = 0;
        _push(0);
        _push(4534384);
        _push(0);
        DirectSoundCreate();
        if(8 != 0) {
            goto L28;
        } else {
            _push(4);
            _push( *4310956);
            _t240 =  *4534384;
            _push(_t240);
            _t163 =  *_t240;
             *((intOrPtr*)(_t163 + 24))();
            if(_t163 == 0) {
                 *4442072 = 1;
                _v232 = 0;
                ((char*)( &_v232))[1] = 0;
                ((char*)( &_v232))[2] = 0;
                ((char*)( &_v232))[3] = 0;
                ((char*)( &_v232))[4] = 0;
                _v232 = 20;
                _push(0);
                _push(4534464);
                _t241 =  *4534384;
                _v228 = 1;
                _v224 = 0;
                _v216 = 0;
                _push( &_v232);
                _push(_t241);
                _t166 =  *_t241;
                 *((intOrPtr*)(_t166 + 12))();
                __eflags = _t166;
                if(_t166 != 0) {
                    goto L28;
                } else {
                    _t234 = 0;
                    __eflags = 0;
                    do {
                        _t276 =  *(__esp + 60 + _t234 * 4);
                        __ebp =  *(__esp + 108 + _t234 * 4);
                        _v272 = 0;
                        ((char*)( &_v272))[1] = 0;
                        ((char*)( &_v272))[2] = 0;
                        ((char*)( &_v272))[3] = 0;
                        _v270 = _t276;
                        _v258 = __bp;
                        _v268 =  *(__esp + 84 + _t234 * 4);
                        _v272 = 1;
                        asm("cdq");
                        _t275 = _t276 - 1;
                        _v260 = __ebp * _t276 + (_t263 & 7) >> 3;
                        _t279 = _v268 / 100;
                        _t244 = _v260 & 65535;
                        _t267 =  *4534464;
                         *4442096 = _t244;
                        _v264 = _v268 * _t244;
                        _push( &_v272);
                        _t176 =  *_t267;
                        _push(_t267);
                         *((intOrPtr*)(_t176 + 56))();
                        _t246 = _t176;
                        _t268 =  *(__esp + 84 + _t234 * 4);
                         *4534400 = _t268;
                         *4534408 = _t276 - 1;
                         *4534404 = __ebp;
                        asm("cdq");
                        _t263 = _t268 & 7;
                        __eflags = _t246;
                         *4534416 = (__ebp + _t263 >> 3) - 1;
                        if(_t246 == 0) {
                            _t234 = 6;
                        }
                        _t234 = _t234 + 1;
                        __eflags = _t234 - 6;
                    } while(_t234 < 6);
                    __eflags = _t246;
                    if(_t246 != 0) {
                        goto L28;
                    } else {
                        _t247 =  *4534464;
                        _v164 = 20;
                        _push( &_v164);
                        _push(_t247);
                        _t182 =  *_t247;
                         *((intOrPtr*)(_t182 + 12))();
                        __eflags = _t182;
                        if(_t182 != 0) {
                            goto L28;
                        } else {
                             *4534412 = _t279;
                             *4442100 = _v164;
                             *4442052 =  *4534424 * _t279 *  *4442096;
                            _t188 =  *4442100 - _t279 *  *4442096;
                            __eflags = _t188 -  *4442052;
                            if(__eflags < 0) {
                                 *4442052 = _t188;
                            }
                            _t189 =  *4534464;
                             *4442080 = 0;
                            _push(1);
                            _push(0);
                            _push(0);
                            _push(_t189);
                             *((intOrPtr*)( *_t189 + 48))();
                            _pop(__ebp);
                            _pop(__edi);
                             *4311108 = 1;
                             *4311112 = 1;
                            _pop(__esi);
                            _pop(__ebx);
                            return;
                        }
                    }
                }
            } else {
                _push(3);
                _push( *4310956);
                _t248 =  *4534384;
                _push(_t248);
                _t192 =  *_t248;
                 *((intOrPtr*)(_t192 + 24))();
                if(_t192 != 0) {
                    goto L28;
                } else {
                    _v244 = 0;
                    ((char*)( &_v244))[1] = 0;
                    ((char*)( &_v244))[2] = 0;
                    ((char*)( &_v244))[3] = 0;
                    ((char*)( &_v244))[4] = 0;
                    _v244 = 20;
                    _push(0);
                    _push(4534464);
                    _t249 =  *4534384;
                    _v240 = 1;
                    _v236 = 0;
                    _v228 = 0;
                    _push( &_v244);
                    _push(_t249);
                    _t195 =  *_t249;
                     *((intOrPtr*)(_t195 + 12))();
                    if(_t195 != 0) {
                        goto L28;
                    } else {
                        _t275 = 0;
                        do {
                            _t279 =  *(__esp + 108 + _t275 * 4);
                            __ebp =  *(__esp + 84 + _t275 * 4);
                            _v284 = 0;
                            ((char*)( &_v284))[1] = 0;
                            ((char*)( &_v284))[2] = 0;
                            ((char*)( &_v284))[3] = 0;
                            _v282 =  *(__esp + 60 + _t275 * 4);
                            _v270 = _t279;
                            _v284 = 1;
                            asm("cdq");
                            _v280 = __ebp;
                            _t200 = _t279 *  *(__esp + 60 + _t275 * 4) + (_t263 & 7) >> 3;
                            _v264 = _t200;
                            _v272 = _t200;
                            _t237 = _v264 & 65535;
                            _t201 = __ebp;
                            _t252 =  *4534464;
                             *4442096 = _t237;
                            _t233 = _t237 * __ebp;
                            _v268 = _t201 / 100;
                            _v276 = _t233;
                            _push( &_v284);
                            _push(_t252);
                            _t204 =  *_t252;
                             *((intOrPtr*)(_t204 + 56))();
                            _t253 = _t204;
                             *4534400 = __ebp;
                             *4534404 = _t279;
                             *4534408 =  *(__esp + 60 + _t275 * 4) - 1;
                            asm("cdq");
                            _t263 = _t201 % 100 & 7;
                             *4534416 = (_t279 + _t263 >> 3) - 1;
                            if(_t253 != 0) {
                                goto L9;
                            } else {
                                _t261 =  *(__esp + 60 + _t275 * 4);
                                _push(0);
                                _push(4534432);
                                _v292 = 0;
                                ((char*)( &_v292))[1] = 0;
                                ((char*)( &_v292))[2] = 0;
                                ((char*)( &_v292))[3] = 0;
                                _v290 = _t261;
                                _v280 = _v272;
                                _v278 = _t279;
                                _t263 =  *4534384;
                                _v288 = __ebp;
                                _v284 = _t233;
                                _v268 = 0;
                                 *4442100 = _t233;
                                ((char*)( &_v268))[1] = 0;
                                ((char*)( &_v268))[2] = 0;
                                ((char*)( &_v268))[3] = 0;
                                ((char*)( &_v268))[4] = 0;
                                _v260 = _t233;
                                _v252 =  &_v292;
                                _push( &_v268);
                                _v268 = 20;
                                _v264 = 232;
                                _v292 = 1;
                                _push(_t263);
                                _t232 =  *_t263;
                                 *((intOrPtr*)(_t232 + 12))();
                                _t253 = _t232;
                                if(_t253 != 0) {
                                    goto L28;
                                } else {
                                    _t275 = 6;
                                    goto L9;
                                }
                            }
                            goto L29;
L9:
                            _t275 = _t275 + 1;
                        } while(_t275 < 6);
                        if(_t253 != 0) {
                            goto L28;
                        } else {
                            _push( &_v176);
                            _t272 =  *4534432;
                            _push(_t272);
                             *4534412 = _v276;
                            _v176 = 20;
                            _t212 =  *_t272;
                             *((intOrPtr*)(_t212 + 12))();
                            if(_t212 != 0) {
                                goto L28;
                            } else {
                                 *4442100 = _v176;
                                 *4442052 = ( *4534424 + 27) * _v284 *  *4442096;
                                _push(24 << 2);
                                _push(0);
                                _push( &_v164);
                                memset();
                                __esp = __esp + 12;
                                _t273 =  *4534384;
                                _v164 = 96;
                                _push( &_v164);
                                _t219 =  *_t273;
                                _push(_t273);
                                 *((intOrPtr*)(_t219 + 16))();
                                if(_t219 == 0 && (_v168 & 32) == 0) {
                                     *4442052 = ( *4534424 + 2) * _v292 *  *4442096;
                                }
                                _t221 =  *4442100 - _v292 *  *4442096;
                                if(_t221 <  *4442052) {
                                     *4442052 = _t221;
                                }
                                _t222 =  *4534464;
                                 *4442080 = 0;
                                _push(1);
                                _push(0);
                                _push(0);
                                _push(_t222);
                                 *((intOrPtr*)( *_t222 + 48))();
                                _push(1);
                                _t260 =  *4534432;
                                _push(0);
                                _push(0);
                                _push(_t260);
                                 *((intOrPtr*)( *_t260 + 48))();
                                _pop(__ebp);
                                _pop(__edi);
                                 *4311108 = 1;
                                 *4311112 = 1;
                                _pop(__esi);
                                _pop(__ebx);
                                return;
                            }
                        }
                    }
                }
            }
        }
    }
L29:
}

L00404320(
    intOrPtr __edx,                        // r3
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    char _a16                              // _cfa_10
)
{
    intOrPtr _v4;                          // _cfa_fffffffc
    char _v8;                              // _cfa_fffffff8
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ _t14;                        // _t14
    _unknown_ _t19;                        // _t19
    _unknown_ _t20;                        // _t20
    _unknown_ _t21;                        // _t21
    intOrPtr _t22;                         // _t22

    __edx = __edx;
    __esp = __esp - 8;
    _push(_t21);
    _push(_t19);
    _t20 = L004114B0(_a4, "rb");
    if(_t20 != 0) {
        asm("cdq");
        _v8 = _a16;
        _v4 = __edx;
        L00411460(_t20,  &_v8);
        _t22 = _a12;
        _push(_t20);
        _push(_t22);
        _push(1);
        _push(_a8);
        _t14 = L00411310();
        __esp = __esp + 16;
        if(_t22 == _t14) {
            L004112A0(_t20);
            _pop(__edi);
            _pop(__esi);
            __esp = __esp + 8;
            return 1;
        } else {
            _pop(__edi);
            _pop(__esi);
            __esp = __esp + 8;
            return 2010;
        }
    } else {
        _pop(__edi);
        _pop(__esi);
        __esp = __esp + 8;
        return 2000;
    }
}

L004043A0(
    intOrPtr _a4                           // _cfa_4
)
{
    char _v4;                              // _cfa_fffffffc
    char _v8;                              // _cfa_fffffff8
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ _t7;                         // _t7
    _unknown_ _t11;                        // _t11
    _unknown_ _t19;                        // _t19
    _unknown_ _t20;                        // _t20
    _unknown_ _t22;                        // _t22

    _t21 = _a4;
    _push(_t19);
    if(L00404500(_a4) == 1) {
        _t20 = L004044D0(_t21);
        if(_t20 != 0) {
            _push(_t20);
            _push(0);
            _t7 = L00403630();
            __esp = __esp + 8;
            __ebx = _t7;
            if(__ebx != 0) {
                _t22 = L004114B0(_t21, "rb");
                if(_t22 != 0) {
                    _v8 = 0;
                    _push( &_v8);
                    _v4 = 0;
                    _push(_t22);
                    L00411460();
                    __esp = __esp + 8;
                    _push(_t22);
                    _push(_t20);
                    _push(1);
                    _push(__ebx);
                    _t11 = L00411310();
                    __esp = __esp + 16;
                    if(_t20 == _t11) {
                        L004112A0(_t22);
                        _pop(__edi);
                        return __ebx;
                    } else {
                        _pop(__edi);
                         *4311308 = 2010;
                        return 0;
                    }
                } else {
                    _pop(__edi);
                     *4311308 = 2000;
                    return 0;
                }
            } else {
                _pop(__edi);
                 *4311308 = 2050;
                return 0;
            }
        } else {
            _pop(__edi);
             *4311308 = 2040;
            return 0;
        }
    } else {
        _pop(__edi);
         *4311308 = 2030;
        return 0;
    }
}

L00404490(
    intOrPtr _a4                           // _cfa_4
)
{
    intOrPtr __esi;                        // r5
    _unknown_ _t2;                         // _t2
    _unknown_ _t4;                         // _t4

    __esi = _a4;
    _push(__esi);
    _t2 = L00411570();
    __esp = __esp + 4;
    L004114D0(__esi, 0, 2);
    _push(__esi);
    _t4 = L00411570();
    __esp = __esp + 4;
    L004114D0(__esi, _t2, 0);
    return _t4;
}

L004044D0(
    intOrPtr _a4                           // _cfa_4
)
{
    _unknown_ __esi;                       // r5
    _unknown_ _t4;                         // _t4

    __esi = L004114B0(_a4, "r");
    _t4 = L00404490(_t3);
    L004112A0(__esi);
    return _t4;
}

L00404500(
    intOrPtr _a4                           // _cfa_4
)
{
    if(L004114B0(_a4, "r") != 0) {
        L004112A0(_t3);
        return 1;
    } else {
        return 2031;
    }
}

L004045E0(
    intOrPtr _a4                           // _cfa_4
)
{
    if(_a4 != 0) {
        return 2;
    } else {
        L00405220();
        L00404C60();
        return 1;
    }
}

L00404600(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    intOrPtr _a16,                         // _cfa_10
    intOrPtr _a20,                         // _cfa_14
    intOrPtr _a24,                         // _cfa_18
    intOrPtr _a28,                         // _cfa_1c
    intOrPtr _a32,                         // _cfa_20
    intOrPtr _a36                          // _cfa_24
)
{
    _push(_a36);
    _push(_a32);
    _push(_a28);
    _push(_a24);
    _push(_a20);
    _push(_a16);
    _push(_a12);
    _push(_a8);
    _push(_a4);
     *4443376();
    __esp = __esp + 36;
}

L00404640(
    _unknown_ __eax                        // r0
)
{
     *4443356();
    if(__eax != 0) {
        goto ( *4443408);
    }
}

L00404660()
{
    goto ( *4443360);
}

L00404690(
    intOrPtr _a4                           // _cfa_4
)
{
    _push(_a4);
     *4443400();
    __esp = __esp + 4;
}

L004046A0(
    intOrPtr _a4                           // _cfa_4
)
{
    _push(_a4);
     *4443384();
    __esp = __esp + 4;
}

L004046B0(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    intOrPtr _a16,                         // _cfa_10
    intOrPtr _a20                          // _cfa_14
)
{
    _push(_a20);
    _push(_a16);
    _push(_a12);
    _push(_a8);
    _push(_a4);
     *4443424();
    __esp = __esp + 20;
}

L004046E0()
{
     *4443492 = 0;
     *4445640 = 0;
    return 0;
}

L004046F0()
{
    char _v16;                             // _cfa_fffffff0
    intOrPtr _v20;                         // _cfa_ffffffec
    char _v24;                             // _cfa_ffffffe8
    char _v28;                             // _cfa_ffffffe4
    char _v32;                             // _cfa_ffffffe0
    intOrPtr _v36;                         // _cfa_ffffffdc
    intOrPtr _v60;                         // _cfa_ffffffc4
    intOrPtr _v64;                         // _cfa_ffffffc0
    char _v88;                             // _cfa_ffffffa8
    _unknown_ __edi;                       // r4
    intOrPtr _t34;                         // _t34
    intOrPtr* _t35;                        // _t35
    intOrPtr _t36;                         // _t36
    intOrPtr _t38;                         // _t38
    intOrPtr _t40;                         // _t40
    intOrPtr* _t41;                        // _t41
    intOrPtr _t42;                         // _t42
    intOrPtr* _t55;                        // _t55
    intOrPtr* _t56;                        // _t56
    intOrPtr* _t57;                        // _t57
    signed int _t67;                       // _t67
    _unknown_ _t69;                        // _t69

    __esp = __esp - 36;
    _push(_t69);
    _v16 =  *4305328;
    _v36 = 20;
    _v32 = 16;
     *((intOrPtr*)( &_v16 + 4)) =  *((intOrPtr*)(0x41b1b4));
     *((intOrPtr*)( &_v16 + 8)) =  *((intOrPtr*)(0x41b1b8));
     *((intOrPtr*)( &_v16 + 12)) =  *((intOrPtr*)(0x41b1bc));
    _push(0);
    _v28 = 0;
    _push(4443824);
    _v24 = 0;
    _push(768);
    _v20 = 32;
    _push( *4442040);
    DirectInputCreateA();
    if(0 == 0) {
        _push(0);
        _push(4444604);
        _t55 =  *4443824;
        _push( &_v32);
        _push(_t55);
        _t34 =  *_t55;
         *((intOrPtr*)(_t34 + 12))();
        if(_t34 == 0) {
            _push(4236416);
            _t35 =  *4444604;
            _push(_t35);
            _t36 =  *_t35;
             *((intOrPtr*)(_t36 + 44))();
            if(_t36 == 0) {
                _push(6);
                _push( *4442044);
                _t56 =  *4444604;
                _push(_t56);
                _t38 =  *_t56;
                 *((intOrPtr*)(_t38 + 52))();
                if(_t38 == 0) {
                    _t57 =  *4444604;
                    _push( &_v88);
                    _push(1);
                    _push(_t57);
                    _t40 =  *_t57;
                     *((intOrPtr*)(_t40 + 24))();
                    if(_t40 == 0) {
                        _t41 =  *4444604;
                        _push(_t41);
                        _t42 =  *_t41;
                         *((intOrPtr*)(_t42 + 28))();
                         *4444608 = 1;
                        if(_t42 < 0) {
                             *4444608 = 0;
                        }
                        _t67 = 0;
                         *4443488 = 4443496;
                        _push(16 << 2);
                        _push(-1);
                        _push(4443496);
                        memset();
                        __esp = __esp + 12;
                         *4443560 = 0;
                        _push(64 << 2);
                        _push(0);
                        _push(4443832);
                        memset();
                        __esp = __esp + 12;
                        _push(64 << 2);
                        _push(0);
                        _push(4443568);
                        memset();
                        __esp = __esp + 12;
                        do {
                             *((char*)(_t67 + 4444088)) = 0;
                             *((intOrPtr*)(4444616 + _t67 * 4)) = 0;
                             *((char*)(_t67 + 4444344)) = 0;
                            _t67 = _t67 + 1;
                        } while(_t67 < 256);
                         *4443828 = _v64;
                        _pop(__edi);
                        __esp = __esp + 36;
                         *4444612 = _v60;
                         *4444600 =  *4310960;
                         *4311188 = 0;
                         *4311184 = 0;
                        return 1;
                    } else {
                        _pop(__edi);
                        __esp = __esp + 36;
                        return 0;
                    }
                } else {
                    _pop(__edi);
                    __esp = __esp + 36;
                    return 0;
                }
            } else {
                _pop(__edi);
                __esp = __esp + 36;
                return 0;
            }
        } else {
            _pop(__edi);
            __esp = __esp + 36;
            return 0;
        }
    } else {
        _pop(__edi);
        __esp = __esp + 36;
        return 0;
    }
}

L00404910()
{
    char _v512;                            // _cfa_fffffe00
    char _v516;                            // _cfa_fffffdfc
    char _v532;                            // _cfa_fffffdec
    intOrPtr _v536;                        // _cfa_fffffde8
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    char _t27;                             // _t27
    intOrPtr _t29;                         // _t29
    signed int _t32;                       // _t32
    _unknown_ _t35;                        // _t35
    intOrPtr _t39;                         // _t39
    intOrPtr* _t42;                        // _t42
    intOrPtr* _t43;                        // _t43
    _unknown_ _t44;                        // _t44
    signed int* _t45;                      // _t45

    _t27 = 0;
    _t42 = 4444616;
    _push(_t35);
    _push(_t46);
    _t36 = 1;
    _v516 = 32;
    _push(_t44);
    _push(128);
    do {
        if( *((intOrPtr*)(_t27 + 4443568)) == _t36) {
            _t46 =  *4443828 +  *4444612;
            _t39 =  *_t42 -  *4444600 +  *4310960;
             *_t42 = _t39;
            if( *4443828 +  *4444612 <= _t39) {
                 *((char*)(_t27 + 4443832)) = _t36;
                 *_t42 = _t39 -  *4444612;
            }
        }
        _t42 = _t42 + 4;
        _t27 = _t27 + 1;
    } while(_t42 < 4445640);
    _push(0);
    _push( &_v516);
    _push( &_v512);
    _t43 =  *4444604;
    _t29 =  *_t43;
    _push(16);
    _push(_t43);
     *((intOrPtr*)(_t29 + 40))();
    if(_t29 != -2147024866) {
        if(_t29 == 0 || _t29 == 1) {
            _t36 = 0;
            _t46 = 0;
            if(_v536 > 0) {
                _t45 =  &_v532;
                do {
                    _t32 =  *_t45 & 255;
                    if((_t45[1] & 128) == 0) {
                        _push(_t32);
                         *((char*)(_t32 + 4443568)) = _t36;
                        _push(_t36);
                         *((char*)(_t32 + 4444088)) = _t36;
                         *((char*)(_t32 + 4444344)) = _t36;
                         *((char*)(_t32 + 4443832)) = _t36;
                         *((intOrPtr*)(4444616 + _t32 * 4)) = _t36;
                        L00404AA0();
                    } else {
                         *((char*)(_t32 + 4443568)) = 1;
                        if( *((intOrPtr*)(_t32 + 4444344)) == _t36) {
                             *((char*)(_t32 + 4444088)) = 1;
                             *((char*)(_t32 + 4444344)) = 1;
                        }
                        if( *((intOrPtr*)(4444616 + _t32 * 4)) == _t36) {
                             *((char*)(_t32 + 4443832)) = 1;
                        }
                        L00404AA0(1, _t32);
                        _push( *_t45 & 255);
                        _push(1);
                        L00404AC0( &_v512);
                    }
                    __esp = __esp + 8;
                    _t45 =  &(_t45[4]);
                    _t46 = _t46 + 1;
                } while(_t46 < _v536);
            }
        }
        _t30 =  *4310960;
         *4444600 =  *4310960;
        goto L21;
    } else {
         *4444608 = 0;
        _t30 =  *4444604;
        _push(_t30);
        _t36 =  *_t30;
         *((intOrPtr*)( *_t30 + 28))();
        if(_t30 < 0) {
L21:
            _pop(128);
            _pop(__edi);
            _pop(__esi);
            _pop(__ebx);
            return;
        } else {
             *4444608 = 1;
            _pop(128);
            _pop(__edi);
            _pop(__esi);
            _pop(__ebx);
            return;
        }
    }
}

L00404A90(
    _unknown_ _a4                          // _cfa_4
)
{
    return 0;
}

L00404AA0(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8                           // _cfa_8
)
{
    _unknown_ _t3;                         // _t3

    __ecx =  *4443492;
    if(__ecx != 0) {
        _push(_a8);
        _push(_a4);
         *__ecx();
        __esp = __esp + 8;
        return;
    }
}

L00404AC0(
    _unknown_ __ecx,                       // r2
    intOrPtr _a8                           // _cfa_8
)
{
    intOrPtr _t4;                          // _t4
    char _t7;                              // _t7

    _t4 = _a8;
    if(_t4 <= 83) {
        _t7 =  *((intOrPtr*)(_t4 + 4311192));
         *((char*)( *4443488)) = _t7;
        _t4 =  *4443488;
         *((char*)(_t4 + 32)) = _t7;
         *4443488 =  *4443488 + 1;
        if( *4443488 == 4443528) {
             *4443488 = 4443496;
            return _t4;
        }
    }
    return _t4;
}

L00404B00(
    _unknown_ __fp0                        // r28
)
{
    __fp0 = __fp0;
    L00404C30();
    L00403570();
    L00404B40();
    L004046E0();
    L00406310(__fp0);
    L004045E0(0);
    return 1;
}

L00404B30()
{
    L00404B90();
    L004038E0();
    return 1;
}

L00404B40()
{
    _unknown_ __edi;                       // r4
    signed int _t5;                        // _t5
    short _t10;                            // _t10
    _unknown_ _t11;                        // _t11

    _push(_t11);
    if( *4311312 != 1) {
        _t5 = 0;
         *4311312 = 1;
        _push(200 << 2);
        _push(0);
        _push(4448448);
        memset();
        __esp = __esp + 12;
        do {
            _t10 = _t5 + 1;
            _t5 = _t5 + 1;
             *((short*)(4447246 + _t5 * 2)) = _t10;
        } while(_t5 < 200);
        _pop(__edi);
         *4450848 = 0;
        return 1;
    } else {
        _pop(__edi);
        return 1;
    }
}

L00404B90()
{
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ _t15;                        // _t15
    _unknown_ _t18;                        // _t18
    intOrPtr _t19;                         // _t19
    _unknown_ _t20;                        // _t20

    _push(_t18);
    _push(_t15);
    if( *4311312 != 0) {
        _t19 = 0;
         *4311312 = 0;
        do {
            if( *((intOrPtr*)(_t19 + 4448448)) == 1 &&  *((intOrPtr*)(_t19 + 4450048)) == 65536) {
                 *((intOrPtr*)(_t19 + 4448448)) = 0;
                _push( *((intOrPtr*)(_t19 + 4446448)));
                 *((intOrPtr*)(_t19 + 4449248))();
                __esp = __esp + 4;
            }
            _t19 = _t19 + 4;
        } while(_t19 < 800);
        _t20 = 0;
        do {
            if( *((intOrPtr*)(_t20 + 4448448)) == 1 &&  *((intOrPtr*)(_t20 + 4450048)) == 131072) {
                 *((intOrPtr*)(_t20 + 4448448)) = 0;
                _push( *((intOrPtr*)(_t20 + 4446448)));
                 *((intOrPtr*)(_t20 + 4449248))();
                __esp = __esp + 4;
            }
            _t20 = _t20 + 4;
        } while(_t20 < 800);
        _pop(__edi);
        _pop(__esi);
        return 1;
    } else {
        _pop(__edi);
        _pop(__esi);
        return 1;
    }
}

L00404C30()
{
    L004117A0("\nLisa 2 Development System, %s\n", "Compilation 0.91.0");
    _push("Copyright (c) UDS, 1995-1996\n\n");
    L004117A0();
    __esp = __esp + 4;
    return 0;
}

L00404C60()
{
     *4443408 = 4214048;
     *4443412 = 4214064;
     *4443416 = 4214080;
     *4443420 = 4214096;
     *4443424 = 4214112;
     *4443428 = 4214304;
     *4443432 = 4214864;
     *4443436 = 4214704;
     *4443440 = 4222976;
     *4443464 = 4221024;
     *4443460 = 4223184;
     *4443468 = 4223216;
     *4443472 = 4223248;
     *4443476 = 4222816;
     *4443484 = 4214544;
     *4443480 = 4214640;
    L00407FE0();
    L00407190();
    L00406FC0();
    return 1;
}

L00405220()
{
     *4443352 = 4215488;
     *4443356 = 4215504;
     *4443360 = 4217088;
     *4443364 = 4217840;
     *4443368 = 4218080;
     *4443372 = 4218096;
     *4443376 = 4218208;
     *4443380 = 4218608;
     *4443384 = 4218832;
     *4443388 = 4218944;
     *4443392 = 4218960;
     *4443396 = 4219296;
     *4443400 = 4219376;
     *4443404 = 4219472;
    return 1;
}

L00406310(
    _unknown_ __fp0                        // r28
)
{
    _unknown_ __ebx;                       // r1
    intOrPtr* _t74;                        // _t74
    _unknown_ _t75;                        // _t75

    __fp0 = __fp0;
     *4475368 = 0;
     *4475372 = 0;
     *4475376 = 0;
     *4475380 = 0;
     *4475776 =  *4475368;
     *((intOrPtr*)(0x444b84)) =  *((intOrPtr*)(0x4449ec));
     *((intOrPtr*)(0x444b88)) =  *((intOrPtr*)(0x4449f0));
     *((intOrPtr*)(0x444b8c)) =  *((intOrPtr*)(0x4449f4));
     *4477088 =  *4475368;
     *((intOrPtr*)(0x4450a4)) =  *((intOrPtr*)(0x4449ec));
     *((intOrPtr*)(0x4450a8)) =  *((intOrPtr*)(0x4449f0));
     *((intOrPtr*)(0x4450ac)) =  *((intOrPtr*)(0x4449f4));
     *4477000 =  *4475368;
     *((intOrPtr*)(0x44504c)) =  *((intOrPtr*)(0x4449ec));
     *((intOrPtr*)(0x445050)) =  *((intOrPtr*)(0x4449f0));
     *((intOrPtr*)(0x445054)) =  *((intOrPtr*)(0x4449f4));
     *4475672 =  *4475368;
     *((intOrPtr*)(0x444b1c)) =  *((intOrPtr*)(0x4449ec));
     *((intOrPtr*)(0x444b20)) =  *((intOrPtr*)(0x4449f0));
     *((intOrPtr*)(0x444b24)) =  *((intOrPtr*)(0x4449f4));
     *4475248 =  *4475368;
     *((intOrPtr*)(0x444974)) =  *((intOrPtr*)(0x4449ec));
     *((intOrPtr*)(0x444978)) =  *((intOrPtr*)(0x4449f0));
     *((intOrPtr*)(0x44497c)) =  *((intOrPtr*)(0x4449f4));
     *4477064 =  *4475368;
     *((intOrPtr*)(0x44508c)) =  *((intOrPtr*)(0x4449ec));
     *((intOrPtr*)(0x445090)) =  *((intOrPtr*)(0x4449f0));
     *((intOrPtr*)(0x445094)) =  *((intOrPtr*)(0x4449f4));
     *4477032 =  *4475368;
     *4477036 =  *4475372;
     *((intOrPtr*)(0x445070)) =  *((intOrPtr*)(0x4449f0));
     *((intOrPtr*)(0x445074)) =  *((intOrPtr*)(0x4449f4));
    L00406460();
    L004065F0(__fp0);
    L004066D0();
    L00406630(L004069D0());
    L00406590(L00406520());
    _push(_t75);
    L00406F70(4477016);
     *4454344 = "default";
     *4454356 = 1065353216;
     *4454372 = 0;
     *4454348 = 0;
    _push(16);
     *4454376 = 0;
     *4454368 = 1053609165;
     *4454364 = 1056964608;
     *4454360 = 1036831949;
    _t74 = L00406470();
    __esp = __esp + 4;
     *4454377 = _t74;
     *_t74 = 12;
    _t74[1] = 0;
    _t74[2] = 4095;
    _t74[3] = 0;
    _pop(__ebx);
     *4477088 = 1;
    return _t74;
}

L00406460()
{
    return L00406F70(4475144);
}

L00406470(
    intOrPtr _a4                           // _cfa_4
)
{
    _t2 = _a4;
    if(_a4 != 0) {
        return L004111A0(_t2);
    } else {
        return 0;
    }
}

L00406520()
{
     *4475056 = 0;
     *4475064 = 0;
     *4475060 = 0;
     *4475068 = 0;
     *4475072 = 0;
     *4475080 = 0;
     *4475076 = 0;
     *4475084 = 0;
     *4475088 = 0;
     *4475092 = 0;
     *4477000 = 1;
     *4475096 = 0;
    return 0;
}

L00406590(
    _unknown_ __eax                        // r0
)
{
    __eax = __eax;
     *4475672 = 8;
    return __eax;
}

L004065F0(
    signed long long __fp0                 // r28
)
{
    signed int _v4;                        // _cfa_fffffffc
    signed int __esi;                      // r5
    signed long long _t6;                  // _t6

    _t6 = __fp0;
    __esi = 0;
    do {
        _v4 = __esi;
        __esi = __esi + 1;
        asm("fild dword [esp+0x4]");
        asm("fsin");
        _t6 = _t6 *  *4305456 *  *4305464 *  *4305472;
        __eax = L00410DF8(__eax);
         *((intOrPtr*)(4458564 + __esi * 4)) = __eax;
    } while(__esi < 4096);
    return __eax;
}

L00406630(
    _unknown_ __eax                        // r0
)
{
    __eax = __eax;
     *4475776 = 1;
    return __eax;
}

L004066D0()
{
     *4474992 = "default";
     *4474996 = 0;
     *4475000 = 0;
     *4475004 = 0;
     *4475008 = 0;
     *4475012 = 0;
     *4475016 = 0;
     *4477032 = 1;
    return 0;
}

signed int L004067E0(
    intOrPtr _a4,                          // _cfa_4
    signed int _a8                         // _cfa_8
)
{
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t14;                       // _t14
    _unknown_ _t25;                        // _t25
    _unknown_ _t38;                        // _t38
    signed int _t40;                       // _t40

    _t14 = _a8;
    _push(_t38);
    _push(_t25);
    __eflags = _t14;
    if(__eflags != 0) {
        if(__eflags < 0) {
L7:
            _push(16 << 2);
            _push(4474992);
            _push(_a4);
            memcpy();
            __esp = __esp + 12;
            _pop(__edi);
            _pop(__esi);
            return _t14;
        } else {
            __eflags = _t14 -  *4477040;
            if(_t14 >=  *4477040) {
                goto L7;
            } else {
                _t40 =  *( *4477044 + _t14 * 4);
                __eflags = _t40;
                if(_t40 != 0) {
                    __edx = _a4;
                    _push(16 << 2);
                    _push(_t40);
                    _push(__edx);
                    memcpy();
                    __esp = __esp + 12;
                    __eflags = 0;
                    _pop(__edi);
                    _pop(__esi);
                     *((intOrPtr*)(__edx + 24)) = 0;
                     *((intOrPtr*)(__edx + 28)) = 0;
                    return 0;
                } else {
                    _push(16 << 2);
                    _push(4474992);
                    _push(_a4);
                    memcpy();
                    __esp = __esp + 12;
                    _pop(__edi);
                    _pop(__esi);
                    return _t14;
                }
            }
        }
    } else {
        _push(16 << 2);
        _push(4474992);
        _push(_a4);
        memcpy();
        __esp = __esp + 12;
        _pop(__edi);
        _pop(__esi);
        return _t14;
    }
}

L004069D0()
{
    _unknown_ __edi;                       // r4
    _unknown_ _t4;                         // _t4

    _push(_t4);
     *4475128 = 0;
     *4475132 = 0;
     *4475124 = 0;
     *4475112 = 0;
     *4475116 = 0;
     *4475120 = 0;
    _push(257 << 2);
    _push(0);
    _push(4475968);
    memset();
    __esp = __esp + 12;
    _pop(__edi);
     *4475688 = 0;
    return 0;
}

L00406F70(
    intOrPtr* _a4                          // _cfa_4
)
{
    intOrPtr* __esi;                       // r5
    intOrPtr _t11;                         // _t11
    intOrPtr _t13;                         // _t13

    __esi = _a4;
    _t11 = L00406470(128);
    __esp = __esp + 4;
    __ecx = 0;
    __esi[3] = _t11;
    do {
        __ecx = __ecx + 8;
         *((intOrPtr*)(__esi[3] + __ecx - 8)) = 0;
        _t13 = __esi[3];
         *((intOrPtr*)(_t13 + __ecx - 4)) = 0;
    } while(__ecx < 128);
    __esi[2] = 15;
    __esi[1] = 0;
     *__esi = 16;
    return _t13;
}

L00406FC0()
{
    intOrPtr* _t1;                         // _t1

    __ecx = 4485176;
    _t1 = 4477112;
     *4509176 = 4485112;
    do {
         *_t1 = __ecx;
        _t1 = _t1 + 4;
         *__ecx = 0;
        __ecx = __ecx + 12;
    } while(_t1 < 4485112);
    L004067E0(4485112, 0);
    return 1;
}

L00407190()
{
    _unknown_ _t1;                         // _t1
    intOrPtr _t4;                          // _t4

     *4509228 = 0;
    if( *4311636 == 0) {
         *4509240 = L004111A0(8408);
         *4509244 = L004111A0(8408);
        _t4 = L004111A0(8408);
         *4509248 = _t4;
         *4311636 = 1;
        return _t4;
    }
    return _t1;
}

L00407FE0()
{
    _unknown_ _t1;                         // _t1
    intOrPtr _t4;                          // _t4

     *4509360 = 0;
    if( *4311640 == 0) {
         *4509372 = L004111A0(8408);
         *4509376 = L004111A0(8408);
        _t4 = L004111A0(8408);
         *4509380 = _t4;
         *4311640 = 1;
        return _t4;
    }
    return _t1;
}

DirectSoundCreate()
{// addr = 0x00409476
    goto __imp__DirectSoundCreate;
}

DirectInputCreateA()
{// addr = 0x0040A498
    goto __imp__DirectInputCreateA;
}

L0040A4A0(
    intOrPtr __eax,                        // r0
    intOrPtr __ebx,                        // r1
    _unknown_ __ecx                        // r2
)
{
    _unknown_ __esi;                       // r5
    signed int _t7;                        // _t7
    signed int _t10;                       // _t10
    intOrPtr _t11;                         // _t11
    _unknown_ _t13;                        // _t13
    signed int* _t16;                      // _t16
    intOrPtr* _t17;                        // _t17
    intOrPtr* _t18;                        // _t18

    asm("pushad");
    if(__eax > 1400 || __ebx > 600) {
        asm("popad");
        return -1;
    } else {
         *4312560 = __eax;
         *4312564 = __ebx;
        asm("pushad");
        _t16 = 4314972;
        _t10 = 1;
        do {
            _t7 = 65536 / _t10 - 1;
             *_t16 = _t7;
            _t16 =  &(_t16[1]);
            _t10 = _t10 + 1;
        } while(_t10 != 15003);
        asm("popad");
        _t17 = 4375068;
        while( *_t17 != 0) {
            _push(_t7);
            _push(_t10);
            _push(__esi);
            _push(_t17);
             *_t17();
            _pop(__edi);
            _pop(__esi);
            _pop(__ebx);
            _pop(__eax);
            _t17 = _t17 + 4;
        }
        _t18 = 4312568;
        _t11 = 0;
        _t13 = 600;
        do {
             *_t18 = _t11;
            _t18 = _t18 + 4;
            _t11 = _t11 + _t7;
            _t13 = _t13 - 1;
        } while(_t13 != 0);
        asm("popad");
        return 0;
    }
}

signed int L0040A519(
    signed int*** __esi,                   // r5
    intOrPtr __fp0                         // r28
)
{
    signed int _t594;                      // _t594
    signed int _t595;                      // _t595
    signed int _t596;                      // _t596
    signed int _t597;                      // _t597
    signed int _t598;                      // _t598
    signed int _t603;                      // _t603
    signed int _t604;                      // _t604
    signed int _t605;                      // _t605
    signed int _t606;                      // _t606
    signed int _t607;                      // _t607
    signed int** _t609;                    // _t609
    signed int* _t612;                     // _t612

    __fp0 = __fp0;
    asm("pushad");
     *4312472 = __esi;
    _t609 =  *__esi;
     *4312476 = _t609;
     *4312484 = __esi[1];
     *4312492 = __esi[3];
    _t594 = __esi[4];
    _t603 = __esi[5];
     *4312496 = _t594;
     *4312500 = _t603;
     *4312512 = _t594;
    _t595 = _t594 << 8;
     *4312516 = _t603;
    _t604 = _t603 << 8;
     *4312528 = _t595;
     *4312532 = _t604;
     *4312544 = _t595;
     *4312548 = _t604;
    _t596 = __esi[6];
    _t605 = __esi[7];
     *4312504 = _t596;
     *4312508 = _t605;
    _t597 = _t596 + 1;
    _t606 = _t605 + 1;
     *4312520 = _t597;
    _t598 = _t597 << 8;
     *4312524 = _t606;
     *4312552 = _t598;
    _t607 = _t606 << 8;
     *4312536 = _t598 - 1;
     *4312556 = _t607;
     *4312540 = _t607 - 1;
    while(1) {
L1:
        _t612 =  *_t609;
         *4312480 = _t612;
        if(_t612 == 0) {
            asm("popad");
            return 0;
        }
        switch( *((intOrPtr*)( *_t612 * 4 +  &M0042C1C4))) {
            case 0:
                 *4312508 =  *4312508 -  *4312500;
                __eax =  *4312508 -  *4312500 + 1;
                 *4417664 =  *4312508 -  *4312500 + 1;
                 *4312504 =  *4312504 -  *4312496;
                __eax =  *4312504 -  *4312496 + 1;
                 *4312560 =  *4312560 - __eax;
                 *4417668 =  *4312560 - __eax;
                __ebx = __eax;
                 *4417656 = __eax;
                __ebx = __ebx & 15;
                 *4417660 = __ebx;
                 *4312500 =  *4312500 *  *4312560;
                __eax =  *4312500 *  *4312560 +  *4312496;
                __eax =  *4312484 +  *4312500 *  *4312560 +  *4312496;
                 *(__esi + 8) =  *(__esi + 8) >> 8;
                __ecx =  *4312492 + ( *(__esi + 8) >> 8);
                __bl =  *__ecx;
                __ebx = __ebx << 16;
                __bl =  *__ecx;
                do {
                    __edx =  *4417656;
                    do {
                         *__eax = __ebx;
                         *(__eax + 4) = __ebx;
                         *(__eax + 8) = __ebx;
                         *(__eax + 12) = __ebx;
                        __eax = __eax + 16;
                        __edx = __edx - 1;
                    } while(__edx != 0);
                    if( *4417660 != 0) {
                        __edx =  *4417660;
                        do {
                             *__eax = __bl;
                            __eax = __eax + 1;
                            __edx = __edx - 1;
                        } while(__edx != 0);
                    }
                    __eax = __eax +  *4417668;
                    __esi = __esi +  *4417668;
                    __esi = __esi +  *4417668;
                     *4417664 =  *4417664 - 1;
                } while( *4417664 != 0);
                goto L1;
            case 1:
                __eax =  *(__esi + 4);
                __ebx =  *(__esi + 8);
                if(__eax >=  *4312528 && __eax <=  *4312536 && __ebx >=  *4312532 && __ebx <=  *4312540) {
                    __ebx = __ebx >> 8;
                    __eax = __eax >> 8;
                    __eax = __eax + __ebx;
                    __eax =  *4312484 + __eax;
                    0 =  *((intOrPtr*)(__esi + 21));
                    __ebx = 0 +  *4312492;
                    __bl =  *__ebx;
                     *__eax =  *__ebx;
                }
                goto L1;
            case 2:
                __eax =  *(__esi + 4);
                __ebx =  *(__esi + 8);
                if(__eax >=  *4312528 && __eax <=  *4312536 && __ebx >=  *4312532 && __ebx <=  *4312540) {
                    __ebx = __ebx >> 8;
                    __eax = __eax >> 8;
                    __eax = __eax + __ebx;
                    __eax =  *4312484 + __eax;
                     *(__esi + 16) =  *__eax;
                    __bl =  *( *(__esi + 16));
                     *__eax =  *( *(__esi + 16));
                }
                goto L1;
            case 3:
                asm("popad");
                __eax = -1;
                return -1;
                goto L340;
            case 4:
                __eax = L00410A20(__esi);
                goto L1;
            case 5:
                0 =  *((intOrPtr*)(__esi + 33));
                0 +  *4312492 =  *(0 +  *4312492);
                 *4391344 =  *(0 +  *4312492);
                __eax =  *(__esi + 4);
                __ebx =  *(__esi + 8);
                __eax =  *(__esi + 4) >> 8;
                __ebx =  *(__esi + 8) >> 8;
                __ecx =  *(__esi + 16);
                __edx =  *(__esi + 20);
                __ecx =  *(__esi + 16) >> 8;
                __edx =  *(__esi + 20) >> 8;
                if(__eax > __ecx) {
                    asm("xchg ecx, eax");
                    asm("xchg edx, ebx");
                }
                if(__eax <  *4312496) {
                    if(__ecx >=  *4312496) {
                         *4391324 = __eax;
                         *4391328 = __ebx;
                         *4391332 = __ecx;
                         *4391336 = __edx;
                         *4391332 =  *4391332 -  *4312496;
                        __edx =  *4391332 -  *4312496 + 1;
                         *4391332 =  *4391332 -  *4391324;
                        __ebx =  *4391332 -  *4391324 + 1;
                        0 = 0 / __ebx;
                        __edx = 0 % __ebx;
                        __eax = 0 / __ebx >> 1;
                         *4391340 = 0 / __ebx >> 1;
                        __eax =  *4391336;
                        __eax =  *4391336 -  *4391328;
                        __ebx = __eax;
                        __eax = __eax + __eax;
                        __edx = __eax *  *4391340 >> 32;
                        __eax = __eax *  *4391340;
                         *4391328 =  *4391328 + __ebx;
                        __eax =  *4312496;
                         *4391324 =  *4312496;
                        __eax =  *4391324;
                        __ebx =  *4391328;
                        __ecx =  *4391332;
                        __edx =  *4391336;
                        goto L192;
                    }
                } else {
L192:
                    if(__ecx >  *4312504) {
                        if(__eax <=  *4312504) {
                             *4391324 = __eax;
                             *4391328 = __ebx;
                             *4391332 = __ecx;
                             *4391336 = __edx;
                             *4312504 =  *4312504 -  *4391324;
                            __edx =  *4312504 -  *4391324 + 1;
                             *4391332 =  *4391332 -  *4391324;
                            __ebx =  *4391332 -  *4391324 + 1;
                            0 = 0 / __ebx;
                            __edx = 0 % __ebx;
                            __eax = 0 / __ebx >> 1;
                             *4391340 = 0 / __ebx >> 1;
                             *4391336 =  *4391336 -  *4391328;
                            __eax =  *4391336 -  *4391328 +  *4391336 -  *4391328;
                            __edx = __eax *  *4391340 >> 32;
                            __eax = __eax *  *4391340;
                             *4391336 = __edx;
                            __eax =  *4312504;
                             *4391332 =  *4312504;
                            __eax =  *4391324;
                            __ebx =  *4391328;
                            __ecx =  *4391332;
                            __edx =  *4391336;
                            goto L193;
                        }
                    } else {
L193:
                        if(__ebx > __edx) {
                            if(__ebx >  *4312508) {
                                if(__edx <=  *4312508) {
                                     *4391324 = __eax;
                                     *4391328 = __ebx;
                                     *4391332 = __ecx;
                                     *4391336 = __edx;
                                     *4312508 =  *4312508 -  *4391336;
                                    __edx =  *4312508 -  *4391336 + 1;
                                     *4391328 =  *4391328 -  *4391336;
                                    __ebx =  *4391328 -  *4391336 + 1;
                                    0 = 0 / __ebx;
                                    __edx = 0 % __ebx;
                                    __eax = 0 / __ebx >> 1;
                                     *4391340 = 0 / __ebx >> 1;
                                     *4391332 =  *4391332 -  *4391324;
                                    __eax =  *4391332 -  *4391324 +  *4391332 -  *4391324;
                                    __edx = __eax *  *4391340 >> 32;
                                    __eax = __eax *  *4391340;
                                    __edx =  ~__edx;
                                     *4391324 = __edx;
                                    __eax =  *4312508;
                                     *4391328 =  *4312508;
                                    __eax =  *4391324;
                                    __ebx =  *4391328;
                                    __ecx =  *4391332;
                                    __edx =  *4391336;
                                    goto L198;
                                }
                            } else {
L198:
                                if(__edx >=  *4312500) {
                                    goto L199;
                                }
                                if(__ebx >=  *4312500) {
                                     *4391324 = __eax;
                                     *4391328 = __ebx;
                                     *4391332 = __ecx;
                                     *4391336 = __edx;
                                     *4391328 =  *4391328 -  *4312500;
                                    __edx =  *4391328 -  *4312500 + 1;
                                     *4391328 =  *4391328 -  *4391336;
                                    __ebx =  *4391328 -  *4391336 + 1;
                                    0 = 0 / __ebx;
                                    __edx = 0 % __ebx;
                                    __eax = 0 / __ebx >> 1;
                                     *4391340 = 0 / __ebx >> 1;
                                     *4391332 =  *4391332 -  *4391324;
                                    __eax =  *4391332 -  *4391324 +  *4391332 -  *4391324;
                                    __edx = __eax *  *4391340 >> 32;
                                    __eax = __eax *  *4391340;
                                     *4391332 = __edx;
                                    __eax =  *4312500;
                                     *4391336 =  *4312500;
                                    __eax =  *4391324;
                                    __ebx =  *4391328;
                                    __ecx =  *4391332;
                                    __edx =  *4391336;
                                    goto L199;
                                }
                            }
                        } else {
                            if(__edx >  *4312508) {
                                if(__ebx <=  *4312508) {
                                     *4391324 = __eax;
                                     *4391328 = __ebx;
                                     *4391332 = __ecx;
                                     *4391336 = __edx;
                                     *4312508 =  *4312508 -  *4391328;
                                    __edx =  *4312508 -  *4391328 + 1;
                                     *4391336 =  *4391336 -  *4391328;
                                    __ebx =  *4391336 -  *4391328 + 1;
                                    0 = 0 / __ebx;
                                    __edx = 0 % __ebx;
                                    __eax = 0 / __ebx >> 1;
                                     *4391340 = 0 / __ebx >> 1;
                                     *4391332 =  *4391332 -  *4391324;
                                    __eax =  *4391332 -  *4391324 +  *4391332 -  *4391324;
                                    __edx = __eax *  *4391340 >> 32;
                                    __eax = __eax *  *4391340;
                                     *4391332 = __edx;
                                    __eax =  *4312508;
                                     *4391336 =  *4312508;
                                    __eax =  *4391324;
                                    __ebx =  *4391328;
                                    __ecx =  *4391332;
                                    __edx =  *4391336;
                                    goto L195;
                                }
                            } else {
L195:
                                if(__ebx >=  *4312500) {
L199:
                                     *((intOrPtr*)(4312568 + __ebx * 4)) =  *((intOrPtr*)(4312568 + __ebx * 4)) + __eax;
                                    __esi =  *4312484 +  *((intOrPtr*)(4312568 + __ebx * 4)) + __eax;
                                    __ecx = __ecx - __eax;
                                    __edx = __edx - __ebx;
                                    __ecx = __ecx + 1;
                                    if(__edx < 0) {
                                        __edx =  ~__edx;
                                        __edx = __edx + 1;
                                        if(__ecx > __edx) {
                                            __eax = __ecx;
                                             *4407436 = __dx;
                                            __bx = __dx;
                                            __edx = 0;
                                            _t274 = __eax % __bx;
                                            __eax = __eax / __bx;
                                            __edx = _t274;
                                             *4407438 = __ax;
                                            __ax = 0;
                                            _t278 = __eax % __bx;
                                            __eax = __eax / __bx;
                                            __edx = _t278;
                                             *4407434 = 0;
                                            __bx =  *4407438;
                                            __ecx = 32767;
                                            goto ( *((intOrPtr*)(__ebx * 4 +  &M00432A8E)));
                                        }
                                        __eax = __edx;
                                        __edx = 0;
                                        _t264 = __eax % __cx;
                                        __eax = __eax / __cx;
                                        __edx = _t264;
                                         *4407438 = __ax;
                                         *4407436 = __cx;
                                        __ax = 0;
                                        _t268 = __eax % __cx;
                                        __eax = __eax / __cx;
                                        __edx = _t268;
                                         *4407434 = 0;
                                        __bx =  *4407438;
                                        __ecx = 32767;
                                        goto ( *((intOrPtr*)(__ebx * 4 +  &M0043211A)));
                                    }
                                    __edx = __edx + 1;
                                    if(__ecx > __edx) {
                                        __eax = __ecx;
                                         *4407436 = __dx;
                                        __bx = __dx;
                                        __edx = 0;
                                        _t254 = __eax % __bx;
                                        __eax = __eax / __bx;
                                        __edx = _t254;
                                         *4407438 = __ax;
                                        __ax = 0;
                                        _t258 = __eax % __bx;
                                        __eax = __eax / __bx;
                                        __edx = _t258;
                                         *4407434 = 0;
                                        __bx =  *4407438;
                                        __ecx = 32767;
                                        goto ( *((intOrPtr*)(__ebx * 4 +  &M00430B26)));
                                    }
                                    __eax = __edx;
                                    __edx = 0;
                                    _t244 = __eax % __cx;
                                    __eax = __eax / __cx;
                                    __edx = _t244;
                                     *4407438 = __ax;
                                    __ax = 0;
                                    _t248 = __eax % __cx;
                                    __eax = __eax / __cx;
                                    __edx = _t248;
                                     *4407436 = __cx;
                                     *4407434 = 0;
                                    __bx =  *4407438;
                                    __ecx = 32767;
                                    goto ( *((intOrPtr*)(__ebx * 4 +  &M004301B2)));
                                }
                                if(__edx >=  *4312500) {
                                     *4391324 = __eax;
                                     *4391328 = __ebx;
                                     *4391332 = __ecx;
                                     *4391336 = __edx;
                                     *4391336 =  *4391336 -  *4312500;
                                    __edx =  *4391336 -  *4312500 + 1;
                                     *4391336 =  *4391336 -  *4391328;
                                    __ebx =  *4391336 -  *4391328 + 1;
                                    0 = 0 / __ebx;
                                    __edx = 0 % __ebx;
                                    __eax = 0 / __ebx >> 1;
                                     *4391340 = 0 / __ebx >> 1;
                                     *4391332 =  *4391332 -  *4391324;
                                    __eax =  *4391332 -  *4391324 +  *4391332 -  *4391324;
                                    __edx = __eax *  *4391340 >> 32;
                                    __eax = __eax *  *4391340;
                                    __edx =  ~__edx;
                                     *4391324 = __edx;
                                    __eax =  *4312500;
                                     *4391328 =  *4312500;
                                    __eax =  *4391324;
                                    __ebx =  *4391328;
                                    __ecx =  *4391332;
                                    __edx =  *4391336;
                                    goto L199;
                                }
                            }
                        }
                    }
                }
                goto L1;
            case 6:
                __eax =  *(__esi + 4);
                __ecx =  *(__esi + 16);
                __eax =  *(__esi + 4) >> 8;
                __ecx =  *(__esi + 16) >> 8;
                __ebx =  *(__esi + 32);
                __edx =  *(__esi + 36);
                if(__eax > __ecx) {
                    asm("xchg edx, ebx");
                }
                 *4417752 = __edx;
                 *4433852 = __ebx;
                 *4417748 = __ebx;
                __ebx =  *(__esi + 8);
                __edx =  *(__esi + 20);
                __ebx =  *(__esi + 8) >> 8;
                __edx =  *(__esi + 20) >> 8;
                if(__eax > __ecx) {
                    asm("xchg ecx, eax");
                    asm("xchg edx, ebx");
                }
                if(__eax <  *4312496) {
                    if(__ecx >=  *4312496) {
                         *4417728 = __eax;
                         *4417732 = __ebx;
                         *4417736 = __ecx;
                         *4417740 = __edx;
                         *4417736 =  *4417736 -  *4312496;
                        __edx =  *4417736 -  *4312496 + 1;
                         *4417736 =  *4417736 -  *4417728;
                        __ebx =  *4417736 -  *4417728 + 1;
                        0 = 0 / __ebx;
                        __edx = 0 % __ebx;
                        __eax = 0 / __ebx >> 1;
                         *4417744 = 0 / __ebx >> 1;
                        __eax =  *4417740;
                        __eax =  *4417740 -  *4417732;
                        __ebx = __eax;
                        __eax = __eax + __eax;
                        __edx = __eax *  *4417744 >> 32;
                        __eax = __eax *  *4417744;
                         *4417732 =  *4417732 + __ebx;
                        __eax =  *4312496;
                         *4417728 =  *4312496;
                         *4433852 =  *4433852 +  *4417752;
                        __eax =  *4417752;
                        __eax =  *4417752 << 1;
                        __edx = __eax *  *4417744 >> 32;
                        __eax = __eax *  *4417744;
                         *4417752 = __edx;
                        __ebx =  *4433852 +  *4417752 - __edx;
                         *4433852 =  *4433852 +  *4417752 - __edx;
                        __eax =  *4417728;
                        __ebx =  *4417732;
                        __ecx =  *4417736;
                        __edx =  *4417740;
                        goto L314;
                    }
                } else {
L314:
                    if(__ecx >  *4312504) {
                        if(__eax <=  *4312504) {
                             *4417728 = __eax;
                             *4417732 = __ebx;
                             *4417736 = __ecx;
                             *4417740 = __edx;
                             *4312504 =  *4312504 -  *4417728;
                            __edx =  *4312504 -  *4417728 + 1;
                             *4417736 =  *4417736 -  *4417728;
                            __ebx =  *4417736 -  *4417728 + 1;
                            0 = 0 / __ebx;
                            __edx = 0 % __ebx;
                            __eax = 0 / __ebx >> 1;
                             *4417744 = 0 / __ebx >> 1;
                             *4417740 =  *4417740 -  *4417732;
                            __eax =  *4417740 -  *4417732 +  *4417740 -  *4417732;
                            __edx = __eax *  *4417744 >> 32;
                            __eax = __eax *  *4417744;
                             *4417740 = __edx;
                            __eax =  *4312504;
                             *4417736 =  *4312504;
                            __eax =  *4417752;
                            __eax =  *4417752 << 1;
                            __edx = __eax *  *4417744 >> 32;
                            __eax = __eax *  *4417744;
                             *4417752 = __edx;
                            __eax =  *4417728;
                            __ebx =  *4417732;
                            __ecx =  *4417736;
                            __edx =  *4417740;
                            goto L315;
                        }
                    } else {
L315:
                        if(__ebx > __edx) {
                            if(__ebx >  *4312508) {
                                if(__edx <=  *4312508) {
                                     *4417728 = __eax;
                                     *4417732 = __ebx;
                                     *4417736 = __ecx;
                                     *4417740 = __edx;
                                     *4312508 =  *4312508 -  *4417740;
                                    __edx =  *4312508 -  *4417740 + 1;
                                     *4417732 =  *4417732 -  *4417740;
                                    __ebx =  *4417732 -  *4417740 + 1;
                                    0 = 0 / __ebx;
                                    __edx = 0 % __ebx;
                                    __eax = 0 / __ebx >> 1;
                                     *4417744 = 0 / __ebx >> 1;
                                     *4417736 =  *4417736 -  *4417728;
                                    __eax =  *4417736 -  *4417728 +  *4417736 -  *4417728;
                                    __edx = __eax *  *4417744 >> 32;
                                    __eax = __eax *  *4417744;
                                    __edx =  ~__edx;
                                     *4417728 = __edx;
                                    __eax =  *4312508;
                                     *4417732 =  *4312508;
                                     *4433852 =  *4433852 +  *4417752;
                                    __eax =  *4417752;
                                    __eax =  *4417752 << 1;
                                    __edx = __eax *  *4417744 >> 32;
                                    __eax = __eax *  *4417744;
                                     *4417752 = __edx;
                                    __ebx =  *4433852 +  *4417752 - __edx;
                                     *4433852 =  *4433852 +  *4417752 - __edx;
                                    __eax =  *4417728;
                                    __ebx =  *4417732;
                                    __ecx =  *4417736;
                                    __edx =  *4417740;
                                    goto L320;
                                }
                            } else {
L320:
                                if(__edx >=  *4312500) {
                                    goto L321;
                                }
                                if(__ebx >=  *4312500) {
                                     *4417728 = __eax;
                                     *4417732 = __ebx;
                                     *4417736 = __ecx;
                                     *4417740 = __edx;
                                     *4417732 =  *4417732 -  *4312500;
                                    __edx =  *4417732 -  *4312500 + 1;
                                     *4417732 =  *4417732 -  *4417740;
                                    __ebx =  *4417732 -  *4417740 + 1;
                                    0 = 0 / __ebx;
                                    __edx = 0 % __ebx;
                                    __eax = 0 / __ebx >> 1;
                                     *4417744 = 0 / __ebx >> 1;
                                     *4417736 =  *4417736 -  *4417728;
                                    __eax =  *4417736 -  *4417728 +  *4417736 -  *4417728;
                                    __edx = __eax *  *4417744 >> 32;
                                    __eax = __eax *  *4417744;
                                     *4417736 = __edx;
                                    __eax =  *4312500;
                                     *4417740 =  *4312500;
                                    __eax =  *4417752;
                                    __eax =  *4417752 << 1;
                                    __edx = __eax *  *4417744 >> 32;
                                    __eax = __eax *  *4417744;
                                     *4417752 = __edx;
                                    __eax =  *4417728;
                                    __ebx =  *4417732;
                                    __ecx =  *4417736;
                                    __edx =  *4417740;
                                    goto L321;
                                }
                            }
                        } else {
                            if(__edx >  *4312508) {
                                if(__ebx <=  *4312508) {
                                     *4417728 = __eax;
                                     *4417732 = __ebx;
                                     *4417736 = __ecx;
                                     *4417740 = __edx;
                                     *4312508 =  *4312508 -  *4417732;
                                    __edx =  *4312508 -  *4417732 + 1;
                                     *4417740 =  *4417740 -  *4417732;
                                    __ebx =  *4417740 -  *4417732 + 1;
                                    0 = 0 / __ebx;
                                    __edx = 0 % __ebx;
                                    __eax = 0 / __ebx >> 1;
                                     *4417744 = 0 / __ebx >> 1;
                                     *4417736 =  *4417736 -  *4417728;
                                    __eax =  *4417736 -  *4417728 +  *4417736 -  *4417728;
                                    __edx = __eax *  *4417744 >> 32;
                                    __eax = __eax *  *4417744;
                                     *4417736 = __edx;
                                    __eax =  *4312508;
                                     *4417740 =  *4312508;
                                    __eax =  *4417752;
                                    __eax =  *4417752 << 1;
                                    __edx = __eax *  *4417744 >> 32;
                                    __eax = __eax *  *4417744;
                                     *4417752 = __edx;
                                    __eax =  *4417728;
                                    __ebx =  *4417732;
                                    __ecx =  *4417736;
                                    __edx =  *4417740;
                                    goto L317;
                                }
                            } else {
L317:
                                if(__ebx >=  *4312500) {
L321:
                                     *((intOrPtr*)(4312568 + __ebx * 4)) =  *((intOrPtr*)(4312568 + __ebx * 4)) + __eax;
                                    __esi =  *4312484 +  *((intOrPtr*)(4312568 + __ebx * 4)) + __eax;
                                    __ecx = __ecx - __eax;
                                    __edx = __edx - __ebx;
                                    __ecx = __ecx + 1;
                                    if(__edx < 0) {
                                        __edx =  ~__edx;
                                        __edx = __edx + 1;
                                        if(__ecx > __edx) {
                                             *4433846 = __dx;
                                            __ebx = __edx;
                                            __eax =  *4417752;
                                            asm("cdq");
                                            _t510 = __eax % __ecx;
                                            __eax = __eax / __ecx;
                                            __edx = _t510;
                                             *4433850 = __ax;
                                            __eax = __ecx;
                                            __edx = 0;
                                            _t514 = __eax % __bx;
                                            __eax = __eax / __bx;
                                            __edx = _t514;
                                             *4433848 = __ax;
                                            __ax = 0;
                                            _t518 = __eax % __bx;
                                            __eax = __eax / __bx;
                                            __edx = _t518;
                                             *4433844 = 0;
                                            __bx =  *4433848;
                                            __ecx = 32767;
                                            __edx =  *4417748;
                                            goto ( *((intOrPtr*)(__ebx * 4 +  &M004391B8)));
                                        }
                                        __eax =  *4417752;
                                        __ebx = __edx;
                                        asm("cdq");
                                        _t496 = __eax % __ebx;
                                        __eax = __eax / __ebx;
                                        __edx = _t496;
                                         *4433850 = __ax;
                                        __eax = __ebx;
                                        __edx = 0;
                                        _t500 = __eax % __cx;
                                        __eax = __eax / __cx;
                                        __edx = _t500;
                                         *4433848 = __ax;
                                         *4433846 = __cx;
                                        __ax = 0;
                                        _t504 = __eax % __cx;
                                        __eax = __eax / __cx;
                                        __edx = _t504;
                                         *4433844 = 0;
                                        __bx =  *4433848;
                                        __ecx = 32767;
                                        __edx =  *4417748;
                                        goto ( *((intOrPtr*)(__ebx * 4 +  &M00438844)));
                                    }
                                    __edx = __edx + 1;
                                    if(__ecx > __edx) {
                                         *4433846 = __dx;
                                        __bx = __dx;
                                        __eax =  *4417752;
                                        asm("cdq");
                                        _t482 = __eax % __ecx;
                                        __eax = __eax / __ecx;
                                        __edx = _t482;
                                         *4433850 = __ax;
                                        __eax = __ecx;
                                        __edx = 0;
                                        _t486 = __eax % __bx;
                                        __eax = __eax / __bx;
                                        __edx = _t486;
                                         *4433848 = __ax;
                                        __ax = 0;
                                        _t490 = __eax % __bx;
                                        __eax = __eax / __bx;
                                        __edx = _t490;
                                         *4433844 = 0;
                                        __bx =  *4433848;
                                        __ecx = 32767;
                                        __edx =  *4417748;
                                        goto ( *((intOrPtr*)(__ebx * 4 +  &M00437250)));
                                    }
                                    __eax =  *4417752;
                                    __ebx = __edx;
                                    asm("cdq");
                                    _t468 = __eax % __ebx;
                                    __eax = __eax / __ebx;
                                    __edx = _t468;
                                     *4433850 = __ax;
                                    __eax = __ebx;
                                    __edx = 0;
                                    _t472 = __eax % __cx;
                                    __eax = __eax / __cx;
                                    __edx = _t472;
                                     *4433848 = __ax;
                                    __ax = 0;
                                    _t476 = __eax % __cx;
                                    __eax = __eax / __cx;
                                    __edx = _t476;
                                     *4433846 = __cx;
                                     *4433844 = 0;
                                    __bx =  *4433848;
                                    __ecx = 32767;
                                    __edx =  *4417748;
                                    goto ( *((intOrPtr*)(__ebx * 4 +  &M004368DC)));
                                }
                                if(__edx >=  *4312500) {
                                     *4417728 = __eax;
                                     *4417732 = __ebx;
                                     *4417736 = __ecx;
                                     *4417740 = __edx;
                                     *4417740 =  *4417740 -  *4312500;
                                    __edx =  *4417740 -  *4312500 + 1;
                                     *4417740 =  *4417740 -  *4417732;
                                    __ebx =  *4417740 -  *4417732 + 1;
                                    0 = 0 / __ebx;
                                    __edx = 0 % __ebx;
                                    __eax = 0 / __ebx >> 1;
                                     *4417744 = 0 / __ebx >> 1;
                                     *4417736 =  *4417736 -  *4417728;
                                    __eax =  *4417736 -  *4417728 +  *4417736 -  *4417728;
                                    __edx = __eax *  *4417744 >> 32;
                                    __eax = __eax *  *4417744;
                                    __edx =  ~__edx;
                                     *4417728 = __edx;
                                    __eax =  *4312500;
                                     *4417732 =  *4312500;
                                     *4433852 =  *4433852 +  *4417752;
                                    __eax =  *4417752;
                                    __eax =  *4417752 << 1;
                                    __edx = __eax *  *4417744 >> 32;
                                    __eax = __eax *  *4417744;
                                     *4417752 = __edx;
                                    __ebx =  *4433852 +  *4417752 - __edx;
                                     *4433852 =  *4433852 +  *4417752 - __edx;
                                    __eax =  *4417728;
                                    __ebx =  *4417732;
                                    __ecx =  *4417736;
                                    __edx =  *4417740;
                                    goto L321;
                                }
                            }
                        }
                    }
                }
                goto L1;
            case 7:
                __eax =  *(__esi + 4);
                __ecx =  *(__esi + 16);
                __eax =  *(__esi + 4) >> 8;
                __ecx =  *(__esi + 16) >> 8;
                __ebx =  *(__esi + 32);
                __edx =  *(__esi + 36);
                if(__eax > __ecx) {
                    asm("xchg edx, ebx");
                }
                 *4375128 = __edx;
                 *4391228 = __ebx;
                __ebx =  *(__esi + 28);
                 *4375124 =  *(__esi + 28);
                __ebx =  *(__esi + 8);
                __edx =  *(__esi + 20);
                __ebx =  *(__esi + 8) >> 8;
                __edx =  *(__esi + 20) >> 8;
                if(__eax > __ecx) {
                    asm("xchg ecx, eax");
                    asm("xchg edx, ebx");
                }
                if(__eax <  *4312496) {
                    if(__ecx >=  *4312496) {
                         *4375104 = __eax;
                         *4375108 = __ebx;
                         *4375112 = __ecx;
                         *4375116 = __edx;
                         *4375112 =  *4375112 -  *4312496;
                        __edx =  *4375112 -  *4312496 + 1;
                         *4375112 =  *4375112 -  *4375104;
                        __ebx =  *4375112 -  *4375104 + 1;
                        0 = 0 / __ebx;
                        __edx = 0 % __ebx;
                        __eax = 0 / __ebx >> 1;
                         *4375120 = 0 / __ebx >> 1;
                        __eax =  *4375116;
                        __eax =  *4375116 -  *4375108;
                        __ebx = __eax;
                        __eax = __eax + __eax;
                        __edx = __eax *  *4375120 >> 32;
                        __eax = __eax *  *4375120;
                         *4375108 =  *4375108 + __ebx;
                        __eax =  *4312496;
                         *4375104 =  *4312496;
                         *4391228 =  *4391228 +  *4375128;
                        __eax =  *4375128;
                        __eax =  *4375128 << 1;
                        __edx = __eax *  *4375120 >> 32;
                        __eax = __eax *  *4375120;
                         *4375128 = __edx;
                        __ebx =  *4391228 +  *4375128 - __edx;
                         *4391228 =  *4391228 +  *4375128 - __edx;
                        __eax =  *4375104;
                        __ebx =  *4375108;
                        __ecx =  *4375112;
                        __edx =  *4375116;
                        goto L16;
                    }
                } else {
L16:
                    if(__ecx >  *4312504) {
                        if(__eax <=  *4312504) {
                             *4375104 = __eax;
                             *4375108 = __ebx;
                             *4375112 = __ecx;
                             *4375116 = __edx;
                             *4312504 =  *4312504 -  *4375104;
                            __edx =  *4312504 -  *4375104 + 1;
                             *4375112 =  *4375112 -  *4375104;
                            __ebx =  *4375112 -  *4375104 + 1;
                            0 = 0 / __ebx;
                            __edx = 0 % __ebx;
                            __eax = 0 / __ebx >> 1;
                             *4375120 = 0 / __ebx >> 1;
                             *4375116 =  *4375116 -  *4375108;
                            __eax =  *4375116 -  *4375108 +  *4375116 -  *4375108;
                            __edx = __eax *  *4375120 >> 32;
                            __eax = __eax *  *4375120;
                             *4375116 = __edx;
                            __eax =  *4312504;
                             *4375112 =  *4312504;
                            __eax =  *4375128;
                            __eax =  *4375128 << 1;
                            __edx = __eax *  *4375120 >> 32;
                            __eax = __eax *  *4375120;
                             *4375128 = __edx;
                            __eax =  *4375104;
                            __ebx =  *4375108;
                            __ecx =  *4375112;
                            __edx =  *4375116;
                            goto L17;
                        }
                    } else {
L17:
                        if(__ebx > __edx) {
                            if(__ebx >  *4312508) {
                                if(__edx <=  *4312508) {
                                     *4375104 = __eax;
                                     *4375108 = __ebx;
                                     *4375112 = __ecx;
                                     *4375116 = __edx;
                                     *4312508 =  *4312508 -  *4375116;
                                    __edx =  *4312508 -  *4375116 + 1;
                                     *4375108 =  *4375108 -  *4375116;
                                    __ebx =  *4375108 -  *4375116 + 1;
                                    0 = 0 / __ebx;
                                    __edx = 0 % __ebx;
                                    __eax = 0 / __ebx >> 1;
                                     *4375120 = 0 / __ebx >> 1;
                                     *4375112 =  *4375112 -  *4375104;
                                    __eax =  *4375112 -  *4375104 +  *4375112 -  *4375104;
                                    __edx = __eax *  *4375120 >> 32;
                                    __eax = __eax *  *4375120;
                                    __edx =  ~__edx;
                                     *4375104 = __edx;
                                    __eax =  *4312508;
                                     *4375108 =  *4312508;
                                     *4391228 =  *4391228 +  *4375128;
                                    __eax =  *4375128;
                                    __eax =  *4375128 << 1;
                                    __edx = __eax *  *4375120 >> 32;
                                    __eax = __eax *  *4375120;
                                     *4375128 = __edx;
                                    __ebx =  *4391228 +  *4375128 - __edx;
                                     *4391228 =  *4391228 +  *4375128 - __edx;
                                    __eax =  *4375104;
                                    __ebx =  *4375108;
                                    __ecx =  *4375112;
                                    __edx =  *4375116;
                                    goto L22;
                                }
                            } else {
L22:
                                if(__edx >=  *4312500) {
                                    goto L23;
                                }
                                if(__ebx >=  *4312500) {
                                     *4375104 = __eax;
                                     *4375108 = __ebx;
                                     *4375112 = __ecx;
                                     *4375116 = __edx;
                                     *4375108 =  *4375108 -  *4312500;
                                    __edx =  *4375108 -  *4312500 + 1;
                                     *4375108 =  *4375108 -  *4375116;
                                    __ebx =  *4375108 -  *4375116 + 1;
                                    0 = 0 / __ebx;
                                    __edx = 0 % __ebx;
                                    __eax = 0 / __ebx >> 1;
                                     *4375120 = 0 / __ebx >> 1;
                                     *4375112 =  *4375112 -  *4375104;
                                    __eax =  *4375112 -  *4375104 +  *4375112 -  *4375104;
                                    __edx = __eax *  *4375120 >> 32;
                                    __eax = __eax *  *4375120;
                                     *4375112 = __edx;
                                    __eax =  *4312500;
                                     *4375116 =  *4312500;
                                    __eax =  *4375128;
                                    __eax =  *4375128 << 1;
                                    __edx = __eax *  *4375120 >> 32;
                                    __eax = __eax *  *4375120;
                                     *4375128 = __edx;
                                    __eax =  *4375104;
                                    __ebx =  *4375108;
                                    __ecx =  *4375112;
                                    __edx =  *4375116;
                                    goto L23;
                                }
                            }
                        } else {
                            if(__edx >  *4312508) {
                                if(__ebx <=  *4312508) {
                                     *4375104 = __eax;
                                     *4375108 = __ebx;
                                     *4375112 = __ecx;
                                     *4375116 = __edx;
                                     *4312508 =  *4312508 -  *4375108;
                                    __edx =  *4312508 -  *4375108 + 1;
                                     *4375116 =  *4375116 -  *4375108;
                                    __ebx =  *4375116 -  *4375108 + 1;
                                    0 = 0 / __ebx;
                                    __edx = 0 % __ebx;
                                    __eax = 0 / __ebx >> 1;
                                     *4375120 = 0 / __ebx >> 1;
                                     *4375112 =  *4375112 -  *4375104;
                                    __eax =  *4375112 -  *4375104 +  *4375112 -  *4375104;
                                    __edx = __eax *  *4375120 >> 32;
                                    __eax = __eax *  *4375120;
                                     *4375112 = __edx;
                                    __eax =  *4312508;
                                     *4375116 =  *4312508;
                                    __eax =  *4375128;
                                    __eax =  *4375128 << 1;
                                    __edx = __eax *  *4375120 >> 32;
                                    __eax = __eax *  *4375120;
                                     *4375128 = __edx;
                                    __eax =  *4375104;
                                    __ebx =  *4375108;
                                    __ecx =  *4375112;
                                    __edx =  *4375116;
                                    goto L19;
                                }
                            } else {
L19:
                                if(__ebx >=  *4312500) {
L23:
                                     *((intOrPtr*)(4312568 + __ebx * 4)) =  *((intOrPtr*)(4312568 + __ebx * 4)) + __eax;
                                    __esi =  *4312484 +  *((intOrPtr*)(4312568 + __ebx * 4)) + __eax;
                                    __ecx = __ecx - __eax;
                                    __edx = __edx - __ebx;
                                    __ecx = __ecx + 1;
                                    if(__edx >= 0) {
                                        __edx = __edx + 1;
                                        if(__ecx <= __edx) {
                                            __eax =  *4375128;
                                            __ebx = __edx;
                                            asm("cdq");
                                            _t19 = __eax % __ebx;
                                            __eax = __eax / __ebx;
                                            __edx = _t19;
                                             *4391226 = __ax;
                                            __eax = __ebx;
                                            __edx = 0;
                                            _t23 = __eax % __cx;
                                            __eax = __eax / __cx;
                                            __edx = _t23;
                                             *4391224 = __ax;
                                            __ax = 0;
                                            _t27 = __eax % __cx;
                                            __eax = __eax / __cx;
                                            __edx = _t27;
                                             *4391222 = __cx;
                                             *4391220 = 0;
                                            __bx =  *4391224;
                                            __ecx = 32767;
                                            __edx =  *4375124;
                                            goto ( *((intOrPtr*)(__ebx * 4 +  &M0042C25C)));
                                        }
                                         *4391222 = __dx;
                                        __bx = __dx;
                                        __eax =  *4375128;
                                        asm("cdq");
                                        _t33 = __eax % __ecx;
                                        __eax = __eax / __ecx;
                                        __edx = _t33;
                                         *4391226 = __ax;
                                        __eax = __ecx;
                                        __edx = 0;
                                        _t37 = __eax % __bx;
                                        __eax = __eax / __bx;
                                        __edx = _t37;
                                         *4391224 = __ax;
                                        __ax = 0;
                                        _t41 = __eax % __bx;
                                        __eax = __eax / __bx;
                                        __edx = _t41;
                                         *4391220 = 0;
                                        __bx =  *4391224;
                                        __ecx = 32767;
                                        __edx =  *4375124;
                                        goto ( *((intOrPtr*)(__ebx * 4 +  &M0042CBD0)));
                                    }
                                    __edx =  ~__edx;
                                    __edx = __edx + 1;
                                    if(__ecx <= __edx) {
                                        __eax =  *4375128;
                                        __ebx = __edx;
                                        asm("cdq");
                                        _t47 = __eax % __ebx;
                                        __eax = __eax / __ebx;
                                        __edx = _t47;
                                         *4391226 = __ax;
                                        __eax = __ebx;
                                        __edx = 0;
                                        _t51 = __eax % __cx;
                                        __eax = __eax / __cx;
                                        __edx = _t51;
                                         *4391224 = __ax;
                                         *4391222 = __cx;
                                        __ax = 0;
                                        _t55 = __eax % __cx;
                                        __eax = __eax / __cx;
                                        __edx = _t55;
                                         *4391220 = 0;
                                        __bx =  *4391224;
                                        __ecx = 32767;
                                        __edx =  *4375124;
                                        goto ( *((intOrPtr*)(__ebx * 4 +  &M0042E1C4)));
                                    }
                                     *4391222 = __dx;
                                    __ebx = __edx;
                                    __eax =  *4375128;
                                    asm("cdq");
                                    _t61 = __eax % __ecx;
                                    __eax = __eax / __ecx;
                                    __edx = _t61;
                                     *4391226 = __ax;
                                    __eax = __ecx;
                                    __edx = 0;
                                    _t65 = __eax % __bx;
                                    __eax = __eax / __bx;
                                    __edx = _t65;
                                     *4391224 = __ax;
                                    __ax = 0;
                                    _t69 = __eax % __bx;
                                    __eax = __eax / __bx;
                                    __edx = _t69;
                                     *4391220 = 0;
                                    __bx =  *4391224;
                                    __ecx = 32767;
                                    __edx =  *4375124;
                                    goto ( *((intOrPtr*)(__ebx * 4 +  &M0042EB38)));
                                }
                                if(__edx >=  *4312500) {
                                     *4375104 = __eax;
                                     *4375108 = __ebx;
                                     *4375112 = __ecx;
                                     *4375116 = __edx;
                                     *4375116 =  *4375116 -  *4312500;
                                    __edx =  *4375116 -  *4312500 + 1;
                                     *4375116 =  *4375116 -  *4375108;
                                    __ebx =  *4375116 -  *4375108 + 1;
                                    0 = 0 / __ebx;
                                    __edx = 0 % __ebx;
                                    __eax = 0 / __ebx >> 1;
                                     *4375120 = 0 / __ebx >> 1;
                                     *4375112 =  *4375112 -  *4375104;
                                    __eax =  *4375112 -  *4375104 +  *4375112 -  *4375104;
                                    __edx = __eax *  *4375120 >> 32;
                                    __eax = __eax *  *4375120;
                                    __edx =  ~__edx;
                                     *4375104 = __edx;
                                    __eax =  *4312500;
                                     *4375108 =  *4312500;
                                     *4391228 =  *4391228 +  *4375128;
                                    __eax =  *4375128;
                                    __eax =  *4375128 << 1;
                                    __edx = __eax *  *4375120 >> 32;
                                    __eax = __eax *  *4375120;
                                     *4375128 = __edx;
                                    __ebx =  *4391228 +  *4375128 - __edx;
                                     *4391228 =  *4391228 +  *4375128 - __edx;
                                    __eax =  *4375104;
                                    __ebx =  *4375108;
                                    __ecx =  *4375112;
                                    __edx =  *4375116;
                                    goto L23;
                                }
                            }
                        }
                    }
                }
                goto L1;
            case 8:
                __ecx = __esi + 16;
                __ebx = __esi + 4;
                __eax =  *(__ecx + 4);
                __edx = __esi + 28;
                if(__eax <  *(__ebx + 4)) {
                    __eax =  *(__edx + 4);
                    asm("xchg ecx, ebx");
                    if(__eax <=  *(__ecx + 4)) {
                        asm("xchg edx, ecx");
                        if(__eax <=  *(__ebx + 4)) {
                            asm("xchg ecx, ebx");
                        }
                    }
                } else {
                    if(__eax >=  *(__edx + 4)) {
                        __eax =  *(__ebx + 4);
                        asm("xchg edx, ecx");
                        if( *(__ebx + 4) >=  *(__ecx + 4)) {
                            asm("xchg ecx, ebx");
                        }
                    }
                }
                _push(__edi);
                __edi = 4391232;
                 *0x00000000 =  *0x00000000 >> 8;
                 *4391232 =  *0x00000000 >> 8;
                 *0x00000004 =  *0x00000004 >> 8;
                 *0x00430144 =  *0x00000004 >> 8;
                __ebx = 4391232;
                 *__ecx =  *__ecx >> 8;
                 *0x00430148 =  *__ecx >> 8;
                 *(__ecx + 4) =  *(__ecx + 4) >> 8;
                 *0x0043014C =  *(__ecx + 4) >> 8;
                __ecx = 0x430148;
                 *__edx =  *__edx >> 8;
                 *0x00430150 =  *__edx >> 8;
                 *(__edx + 4) =  *(__edx + 4) >> 8;
                 *0x00430154 =  *(__edx + 4) >> 8;
                __edx = 0x430150;
                __eax =  *(__edx + 4);
                __eax =  *(__edx + 4) -  *0x00430144;
                if(__eax > 15000) {
L187:
                    _pop(__edi);
                } else {
                    __eax =  *4391232;
                    if(__eax < -32000) {
                         *4391232 = -32000;
                    } else {
                        if(__eax > 32000) {
                             *4391232 = 32000;
                        }
                    }
                    __eax =  *__ecx;
                    if(__eax < -32000) {
                         *__ecx = -32000;
                    } else {
                        if(__eax > 32000) {
                             *__ecx = 32000;
                        }
                    }
                    __eax =  *__edx;
                    if(__eax < -32000) {
                         *__edx = -32000;
                    } else {
                        if(__eax > 32000) {
                             *__edx = 32000;
                        }
                    }
                    __eax =  *(__ebx + 4);
                    if(__eax ==  *(__edx + 4)) {
                        __eax =  *__ebx;
                        if( *__ebx >  *__ecx) {
                            asm("xchg ecx, ebx");
                        }
                        __eax =  *__edx;
                        if(__eax <=  *__ecx) {
                            if(__eax <=  *__ebx) {
                                asm("xchg edx, ebx");
                            }
                            __eax =  *__ecx;
                        }
                         *4391316 = __eax;
                        __eax =  *__ebx;
                         *4391310 =  *__ebx;
                        __eax =  *(__ebx + 4);
                         *4391288 = __eax;
                         *4391304 = 0;
                        goto L165;
                    } else {
                        if(__eax ==  *(__ecx + 4)) {
                            __eax =  *__ebx;
                            if( *__ebx >  *__ecx) {
                                asm("xchg ecx, ebx");
                            }
                            __eax =  *(__ebx + 4);
                             *4391288 =  *(__ebx + 4);
                            __edi =  *(__edx + 4);
                            __edi =  *(__edx + 4) -  *(__ebx + 4);
                             *4391304 = __edi;
                            __eax =  *__ebx;
                             *4391310 =  *__ebx;
                            __eax =  *__ecx;
                             *4391316 = __eax;
                            __eax = __eax -  *__edx;
                            __eax =  ~__eax;
                            __edi = __edi +  *4391320;
                            if(__eax <= 0) {
                                __eax = __eax - 1;
                                 *4391314 = 65535;
                                __eax = __eax *  *(__edi * 4);
                            } else {
                                __eax = __eax + 1;
                                 *4391314 = 0;
                                __eax = __eax *  *(__edi * 4);
                                 *4391314 =  *4391314 + __eax;
                            }
                             *4391296 = __eax;
                            __eax =  *__edx;
                            __eax =  *__edx -  *__ebx;
                            if(__eax >= 0) {
                                __eax = __eax + 1;
                                 *4391308 = 0;
                                __eax = __eax *  *(__edi * 4);
                            } else {
                                __eax = __eax - 1;
                                 *4391308 = 65535;
                                __eax = __eax *  *(__edi * 4);
                                 *4391308 =  *4391308 + __eax;
                            }
                             *4391292 = __eax;
                            goto L165;
                        } else {
                            __eax =  *(__ecx + 4);
                            if( *(__ecx + 4) ==  *(__edx + 4)) {
                                __eax =  *__ecx;
                                if( *__ecx >  *__edx) {
                                    asm("xchg edx, ecx");
                                }
                                __eax =  *(__ebx + 4);
                                 *4391288 =  *(__ebx + 4);
                                __edi =  *(__edx + 4);
                                __edi =  *(__edx + 4) -  *(__ebx + 4);
                                 *4391304 = __edi;
                                __eax =  *__ebx;
                                 *4391310 = __eax;
                                 *4391316 = __eax;
                                __eax = __eax -  *__edx;
                                __eax =  ~__eax;
                                __edi = __edi +  *4391320;
                                if(__eax <= 0) {
                                    __eax = __eax - 1;
                                     *4391314 = 65535;
                                    __eax = __eax *  *(__edi * 4);
                                } else {
                                    __eax = __eax + 1;
                                     *4391314 = 0;
                                    __eax = __eax *  *(__edi * 4);
                                     *4391314 =  *4391314 + __eax;
                                }
                                 *4391296 = __eax;
                                __eax =  *__ecx;
                                __eax =  *__ecx -  *__ebx;
                                if(__eax >= 0) {
                                    __eax = __eax + 1;
                                     *4391308 = 0;
                                    __eax = __eax *  *(__edi * 4);
                                } else {
                                    __eax = __eax - 1;
                                     *4391308 = 65535;
                                    __eax = __eax *  *(__edi * 4);
                                     *4391308 =  *4391308 + __eax;
                                }
                                 *4391292 = __eax;
L165:
                                 *4391312 = 0;
                                 *4391318 = 0;
                                __ebx =  *4391296;
                                __ecx =  *4391292;
                                __edi =  *4391288;
                                if(__edi <  *4312500) {
                                    __edi = __edi -  *4312500;
                                    __edi =  ~__edi;
                                     *4391304 =  *4391304 - __edi;
                                    if( *4391304 < 0) {
                                        goto L187;
                                    } else {
                                        __ebx = 0 * __edi;
                                         *4391314 =  *4391314 + 0 * __edi;
                                        __eax = __ecx;
                                        __eax = __ecx * __edi;
                                         *4391308 =  *4391308 + __eax;
                                        __edi =  *4312500;
                                         *4391288 = __edi;
                                        goto L166;
                                    }
                                } else {
L166:
                                    __edi = __edi +  *4391304;
                                    if(__edi >  *4312508) {
                                         *4391304 =  *4391304 - __edi;
                                        if( *4391304 < 0) {
                                            goto L187;
                                        } else {
                                            goto L167;
                                        }
                                    } else {
L167:
                                         *4391288 =  *(4312568 +  *4391288 * 4);
                                        __edi =  *4312484 +  *(4312568 +  *4391288 * 4);
                                        0 =  *((intOrPtr*)(__esi + 45));
                                        0 +  *4312492 =  *(0 +  *4312492);
                                        __al = __dl;
                                        asm("bswap eax");
                                        __al = __dl;
                                        do {
                                            __esi =  *4391310;
                                            __edx =  *4391316;
                                            if(__si <  *4312496) {
                                                if(__dx >=  *4312496) {
                                                    __esi =  *4312496;
                                                    if(__dx <=  *4312504) {
                                                        goto L170;
                                                    } else {
                                                        goto L181;
                                                    }
                                                }
                                            } else {
                                                if(__dx >  *4312504) {
L181:
                                                    if(__si <=  *4312504) {
                                                        __edx =  *4312504;
                                                        goto L170;
                                                    }
                                                } else {
L170:
                                                    __edx = __edx - __esi;
                                                    __esi = __esi + __edi;
                                                    if(__dx >= 0) {
                                                        __edx = __edx - 3;
                                                        while(__edx >= 0) {
                                                             *(__esi + __edx) = __eax;
                                                            __edx = __edx - 4;
                                                        }
                                                        if(__edx >= -2) {
                                                             *__esi = __ax;
                                                        }
                                                        if(__edx > -4) {
                                                             *((char*)(__esi + __edx + 3)) = __al;
                                                        }
                                                    }
                                                }
                                            }
                                             *4391314 =  *4391314 + __ebx;
                                             *4391308 =  *4391308 + __ecx;
                                            __edi = __edi +  *4312560;
                                             *4391304 =  *4391304 - 1;
                                        } while( *4391304 >= 0);
                                        _pop(__edi);
                                    }
                                }
                            } else {
                                __eax =  *(__ebx + 4);
                                 *4391288 =  *(__ebx + 4);
                                __eax =  *(__ecx + 4);
                                 *4391256 =  *(__ecx + 4);
                                 *(__ecx + 4) =  *(__ecx + 4) -  *0x00000004;
                                 *4391304 =  *(__ecx + 4) -  *0x00000004;
                                 *(__edx + 4) =  *(__edx + 4) -  *(__ecx + 4);
                                 *4391260 =  *(__edx + 4) -  *(__ecx + 4);
                                __eax =  *__ebx;
                                 *4391310 = __eax;
                                 *4391316 = __eax;
                                 *(__edx + 4) =  *(__edx + 4) -  *0x00000004;
                                __edi =  *(__edx + 4) -  *0x00000004 +  *4391320;
                                 *__edx =  *__edx -  *0x00000000;
                                ( *__edx -  *0x00000000) *  *(__edi * 4) = ( *__edx -  *0x00000000) *  *(__edi * 4) *  *4391304;
                                ( *__edx -  *0x00000000) *  *(__edi * 4) *  *4391304 + 32768 = ( *__edx -  *0x00000000) *  *(__edi * 4) *  *4391304 + 32768 >> 16;
                                __eax = (( *__edx -  *0x00000000) *  *(__edi * 4) *  *4391304 + 32768 >> 16) +  *__ebx;
                                if(__eax >=  *__ecx) {
                                     *4391280 = __eax;
                                    __eax =  *__edx;
                                    __eax =  *__edx -  *__ebx;
                                    if(__eax >= 0) {
                                        __eax = __eax + 1;
                                         *4391314 = 0;
                                        __eax = __eax *  *(__edi * 4);
                                         *4391278 = 0;
                                         *4391314 =  *4391314 + __eax;
                                         *4391278 =  *4391278 + __eax;
                                    } else {
                                        __eax = __eax - 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4391314 = 65535;
                                         *4391278 = 65535;
                                    }
                                     *4391296 = __eax;
                                     *4391268 = __eax;
                                    __edi =  *4391304;
                                    __edi =  *4391304 +  *4391320;
                                    __eax =  *__ecx;
                                    __eax =  *__ecx -  *__ebx;
                                    if(__eax <= 0) {
                                        __eax = __eax - 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4391308 = 65535;
                                         *4391308 =  *4391308 + __eax;
                                    } else {
                                        __eax = __eax + 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4391308 = 0;
                                    }
                                     *4391292 = __eax;
                                    __eax =  *__ecx;
                                     *4391274 =  *__ecx;
                                    __edi =  *4391260;
                                    __edi =  *4391260 +  *4391320;
                                    __eax =  *__edx;
                                    __eax =  *__edx -  *__ecx;
                                    if(__eax >= 0) {
                                        __eax = __eax + 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4391272 = 0;
                                    } else {
                                        __eax = __eax - 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4391272 = 65535;
                                         *4391272 =  *4391272 + __eax;
                                    }
                                     *4391264 = __eax;
                                } else {
                                     *4391274 = __eax;
                                    __eax =  *__edx;
                                    __eax =  *__edx -  *__ebx;
                                    if(__eax <= 0) {
                                         *4391308 = 65535;
                                        __eax = __eax - 1;
                                         *4391272 = 65535;
                                        __eax = __eax *  *(__edi * 4);
                                         *4391308 =  *4391308 + __eax;
                                         *4391272 =  *4391272 + __eax;
                                    } else {
                                        __eax = __eax + 1;
                                         *4391308 = 0;
                                        __eax = __eax *  *(__edi * 4);
                                         *4391272 = 0;
                                    }
                                     *4391292 = __eax;
                                     *4391264 = __eax;
                                    __edi =  *4391304;
                                    __edi =  *4391304 +  *4391320;
                                    __eax =  *__ecx;
                                    __eax =  *__ecx -  *__ebx;
                                    if(__eax >= 0) {
                                        __eax = __eax + 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4391314 = 0;
                                         *4391314 =  *4391314 + __eax;
                                    } else {
                                        __eax = __eax - 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4391314 = 65535;
                                    }
                                     *4391296 = __eax;
                                    __eax =  *__ecx;
                                     *4391280 =  *__ecx;
                                    __edi =  *4391260;
                                    __edi =  *4391260 +  *4391320;
                                    __eax =  *__edx;
                                    __eax =  *__edx -  *__ecx;
                                    if(__eax <= 0) {
                                        __eax = __eax - 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4391278 = 65535;
                                    } else {
                                        __eax = __eax + 1;
                                         *4391278 = 0;
                                        __eax = __eax *  *(__edi * 4);
                                         *4391278 =  *4391278 + __eax;
                                    }
                                     *4391268 = __eax;
                                }
                                0 =  *((intOrPtr*)(__esi + 45));
                                0 +  *4312492 =  *(0 +  *4312492);
                                __al = __dl;
                                asm("bswap eax");
                                __al = __dl;
                                 *4391284 = __eax;
                                 *4391312 = 0;
                                 *4391318 = 0;
                                __ebx =  *4391296;
                                __ecx =  *4391292;
                                __edi =  *4391288;
                                if(__edi <  *4312500) {
                                    __edi = __edi -  *4312500;
                                    __edi =  ~__edi;
                                     *4391304 =  *4391304 - __edi;
                                    if( *4391304 >= 0) {
                                        __ebx = 0 * __edi;
                                         *4391314 =  *4391314 + 0 * __edi;
                                        __eax = __ecx;
                                        __eax = __ecx * __edi;
                                         *4391308 =  *4391308 + __eax;
                                        __edi =  *4312500;
                                         *4391288 = __edi;
                                        goto L98;
                                    }
                                } else {
L98:
                                    __edi = __edi +  *4391304;
                                    if(__edi >  *4312508) {
                                         *4391304 =  *4391304 - __edi;
                                        if( *4391304 >= 0) {
                                            goto L99;
                                        }
                                    } else {
L99:
                                         *4391288 =  *(4312568 +  *4391288 * 4);
                                        __edi =  *4312484 +  *(4312568 +  *4391288 * 4);
                                        __eax =  *4391284;
                                        do {
                                            __esi =  *4391310;
                                            __edx =  *4391316;
                                            if(__si <  *4312496) {
                                                if(__dx <  *4312496) {
                                                    goto L109;
                                                } else {
                                                    __esi =  *4312496;
                                                    if(__dx <=  *4312504) {
                                                        goto L102;
                                                    } else {
                                                        goto L126;
                                                    }
                                                }
                                                goto L123;
                                            } else {
                                                if(__dx >  *4312504) {
L126:
                                                    if(__si >  *4312504) {
                                                        goto L109;
                                                    } else {
                                                        __edx =  *4312504;
                                                        goto L102;
                                                    }
L123:
                                                    _pop(__edi);
                                                    goto L1;
                                                } else {
L102:
                                                    __edx = __edx - __esi;
                                                    __esi = __esi + __edi;
                                                    if(__dx >= 0) {
                                                        __edx = __edx - 3;
                                                        while(__edx >= 0) {
                                                             *(__esi + __edx) = __eax;
                                                            __edx = __edx - 4;
                                                        }
                                                        if(__edx >= -2) {
                                                             *__esi = __ax;
                                                        }
                                                        if(__edx > -4) {
                                                             *((char*)(__esi + __edx + 3)) = __al;
                                                        }
                                                    }
                                                }
                                            }
L109:
                                             *4391314 =  *4391314 + __ebx;
                                             *4391308 =  *4391308 + __ecx;
                                            __edi = __edi +  *4312560;
                                             *4391304 =  *4391304 - 1;
                                        } while( *4391304 >= 0);
                                    }
                                }
                                 *4391260 =  *4391260 - 1;
                                 *4391256 =  *4391256 + 1;
                                 *4391276 = 0;
                                 *4391282 = 0;
                                __ebx =  *4391268;
                                __ecx =  *4391264;
                                __edi =  *4391256;
                                if(__edi <  *4312500) {
                                    __edi = __edi -  *4312500;
                                    __edi =  ~__edi;
                                     *4391260 =  *4391260 - __edi;
                                    if( *4391260 >= 0) {
                                        __ebx = 0 * __edi;
                                         *4391278 =  *4391278 + 0 * __edi;
                                        __eax = __ecx;
                                        __eax = __ecx * __edi;
                                         *4391272 =  *4391272 + __eax;
                                        __edi =  *4312500;
                                         *4391256 = __edi;
                                        goto L111;
                                    }
                                } else {
L111:
                                    __edi = __edi +  *4391260;
                                    if(__edi >  *4312508) {
                                         *4391260 =  *4391260 - __edi;
                                        if( *4391260 >= 0) {
                                            goto L112;
                                        }
                                    } else {
L112:
                                         *4391256 =  *(4312568 +  *4391256 * 4);
                                        __edi =  *4312484 +  *(4312568 +  *4391256 * 4);
                                        __eax =  *4391284;
                                        do {
                                             *4391278 =  *4391278 + __ebx;
                                             *4391272 =  *4391272 + __ecx;
                                            __esi =  *4391274;
                                            __edx =  *4391280;
                                            if(__si <  *4312496) {
                                                if(__dx >=  *4312496) {
                                                    __esi =  *4312496;
                                                    if(__dx <=  *4312504) {
                                                        goto L115;
                                                    } else {
                                                        goto L134;
                                                    }
                                                }
                                            } else {
                                                if(__dx >  *4312504) {
L134:
                                                    if(__si <=  *4312504) {
                                                        __edx =  *4312504;
                                                        goto L115;
                                                    }
                                                } else {
L115:
                                                    __edx = __edx - __esi;
                                                    __esi = __esi + __edi;
                                                    if(__dx >= 0) {
                                                        __edx = __edx - 3;
                                                        while(__edx >= 0) {
                                                             *(__esi + __edx) = __eax;
                                                            __edx = __edx - 4;
                                                        }
                                                        if(__edx >= -2) {
                                                             *__esi = __ax;
                                                        }
                                                        if(__edx > -4) {
                                                             *((char*)(__esi + __edx + 3)) = __al;
                                                        }
                                                    }
                                                }
                                            }
                                            __edi = __edi +  *4312560;
                                             *4391260 =  *4391260 - 1;
                                        } while( *4391260 >= 0);
                                    }
                                }
                                goto L123;
                            }
                        }
                    }
                }
                goto L1;
            case 9:
                __ebx = 4407448;
                __esi = __esi + 4;
                __ecx = 3;
                do {
                    __eax =  *__esi;
                    __eax =  *__esi >> 8;
                    if(__eax < -16000) {
                        __eax = -16000;
                    }
                    if(__eax > 16000) {
                        __eax = 16000;
                    }
                     *__ebx = __eax;
                    __eax =  *(__esi + 4);
                    __eax =  *(__esi + 4) >> 8;
                    if(__eax < -16000) {
                        __eax = -16000;
                    }
                    if(__eax > 16000) {
                        __eax = 16000;
                    }
                     *(__ebx + 4) = __eax;
                    __eax =  *(__esi + 8);
                     *(__ebx + 8) =  *(__esi + 8);
                    __eax =  *(__esi + 12);
                     *(__ebx + 12) =  *(__esi + 12);
                    __esi = __esi + 16;
                    __ebx = __ebx + 16;
                    __ecx = __ecx - 1;
                } while(__ecx != 0);
                __eax =  *__esi;
                 *__ebx =  *__esi;
                __esi = 4407444;
                __ecx = 0x4340a8;
                __ebx = 0x434098;
                __eax =  *(__ecx + 4);
                __edx = 0x4340b8;
                if(__eax <  *(__ebx + 4)) {
                    __eax =  *(__edx + 4);
                    asm("xchg ecx, ebx");
                    if(__eax <=  *(__ecx + 4)) {
                        asm("xchg edx, ecx");
                        if(__eax <=  *(__ebx + 4)) {
                            asm("xchg ecx, ebx");
                        }
                    }
                } else {
                    if(__eax >=  *(__edx + 4)) {
                        __eax =  *(__ebx + 4);
                        asm("xchg edx, ecx");
                        if( *(__ebx + 4) >=  *(__ecx + 4)) {
                            asm("xchg ecx, ebx");
                        }
                    }
                }
                __eax =  *(__edx + 4);
                __eax =  *(__edx + 4) -  *(__ebx + 4);
                if(__eax <= 15000) {
                    _push(__edi);
                    __eax =  *(__ebx + 4);
                    if(__eax ==  *(__edx + 4)) {
                        __eax =  *__ebx;
                        if( *__ebx >  *__ecx) {
                            asm("xchg ecx, ebx");
                        }
                        __eax =  *__edx;
                        __edi =  *(__edx + 12);
                        if(__eax <=  *__ecx) {
                            if(__eax <=  *__ebx) {
                                asm("xchg edx, ebx");
                            }
                            __eax =  *__ecx;
                            __edi =  *(__ecx + 12);
                        }
                         *4407592 = __eax;
                        __eax =  *__ebx;
                         *4407586 =  *__ebx;
                        __eax =  *(__ebx + 4);
                         *4407604 =  *(__ebx + 4);
                         *4407580 = 0;
                         *(__ebx + 12) =  *(__ebx + 12) << 8;
                         *4407600 = __edi;
                         *4407596 =  *(__ebx + 12) << 8;
                        __eax = L0040E79B(__esi);
                        _pop(__edi);
                    } else {
                        if(__eax ==  *(__ecx + 4)) {
                            __eax =  *__ebx;
                            if( *__ebx >  *__ecx) {
                                asm("xchg ecx, ebx");
                            }
                            __eax =  *(__ebx + 4);
                             *4407604 =  *(__ebx + 4);
                            __edi =  *(__edx + 4);
                            __edi =  *(__edx + 4) -  *(__ebx + 4);
                             *4407580 = __edi;
                             *(__ebx + 12) =  *(__ebx + 12) << 8;
                             *4407596 =  *(__ebx + 12) << 8;
                             *(__ecx + 12) =  *(__ecx + 12) << 8;
                             *4407600 =  *(__ecx + 12) << 8;
                            __eax =  *__ebx;
                             *4407586 =  *__ebx;
                            __eax =  *__ecx;
                             *4407592 = __eax;
                            __eax = __eax -  *__edx;
                            __eax =  ~__eax;
                            __edi = __edi +  *4417208;
                            if(__eax <= 0) {
                                __eax = __eax - 1;
                                 *4407590 = 65535;
                                __eax = __eax *  *(__edi * 4);
                            } else {
                                __eax = __eax + 1;
                                 *4407590 = 0;
                                __eax = __eax *  *(__edi * 4);
                                 *4407590 =  *4407590 + __eax;
                            }
                             *4407564 = __eax;
                            __eax =  *__edx;
                            __eax =  *__edx -  *__ebx;
                            if(__eax >= 0) {
                                __eax = __eax + 1;
                                 *4407584 = 0;
                                __eax = __eax *  *(__edi * 4);
                            } else {
                                __eax = __eax - 1;
                                 *4407584 = 65535;
                                __eax = __eax *  *(__edi * 4);
                                 *4407584 =  *4407584 + __eax;
                            }
                             *4407560 = __eax;
                             *(__edx + 12) =  *(__edx + 12) -  *(__ebx + 12);
                            ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4) = ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4) >> 8;
                             *4407568 = ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4) >> 8;
                             *(__edx + 12) =  *(__edx + 12) -  *(__ecx + 12);
                            ( *(__edx + 12) -  *(__ecx + 12)) *  *(__edi * 4) = ( *(__edx + 12) -  *(__ecx + 12)) *  *(__edi * 4) >> 8;
                             *4407572 = ( *(__edx + 12) -  *(__ecx + 12)) *  *(__edi * 4) >> 8;
                            __eax = L0040E79B(__esi);
                            _pop(__edi);
                        } else {
                            __eax =  *(__ecx + 4);
                            if( *(__ecx + 4) ==  *(__edx + 4)) {
                                __eax =  *__ecx;
                                if( *__ecx >  *__edx) {
                                    asm("xchg edx, ecx");
                                }
                                __eax =  *(__ebx + 12);
                                __eax =  *(__ebx + 12) << 8;
                                 *4407596 = __eax;
                                 *4407600 = __eax;
                                __eax =  *(__ebx + 4);
                                 *4407604 =  *(__ebx + 4);
                                __edi =  *(__edx + 4);
                                __edi =  *(__edx + 4) -  *(__ebx + 4);
                                 *4407580 = __edi;
                                __eax =  *__ebx;
                                 *4407586 = __eax;
                                 *4407592 = __eax;
                                __eax = __eax -  *__edx;
                                __eax =  ~__eax;
                                __edi = __edi +  *4417208;
                                if(__eax <= 0) {
                                    __eax = __eax - 1;
                                     *4407590 = 65535;
                                    __eax = __eax *  *(__edi * 4);
                                } else {
                                    __eax = __eax + 1;
                                     *4407590 = 0;
                                    __eax = __eax *  *(__edi * 4);
                                     *4407590 =  *4407590 + __eax;
                                }
                                 *4407564 = __eax;
                                __eax =  *__ecx;
                                __eax =  *__ecx -  *__ebx;
                                if(__eax >= 0) {
                                    __eax = __eax + 1;
                                     *4407584 = 0;
                                    __eax = __eax *  *(__edi * 4);
                                } else {
                                    __eax = __eax - 1;
                                     *4407584 = 65535;
                                    __eax = __eax *  *(__edi * 4);
                                     *4407584 =  *4407584 + __eax;
                                }
                                 *4407560 = __eax;
                                 *(__ecx + 12) =  *(__ecx + 12) -  *(__ebx + 12);
                                ( *(__ecx + 12) -  *(__ebx + 12)) *  *(__edi * 4) = ( *(__ecx + 12) -  *(__ebx + 12)) *  *(__edi * 4) >> 8;
                                 *4407568 = ( *(__ecx + 12) -  *(__ebx + 12)) *  *(__edi * 4) >> 8;
                                 *(__edx + 12) =  *(__edx + 12) -  *(__ebx + 12);
                                ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4) = ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4) >> 8;
                                 *4407572 = ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4) >> 8;
                                __eax = L0040E79B(__esi);
                                _pop(__edi);
                            } else {
                                __eax =  *(__ebx + 4);
                                 *4407604 =  *(__ebx + 4);
                                __eax =  *(__ecx + 4);
                                 *4407500 =  *(__ecx + 4);
                                 *(__ecx + 4) =  *(__ecx + 4) -  *(__ebx + 4);
                                 *4407580 =  *(__ecx + 4) -  *(__ebx + 4);
                                 *(__edx + 4) =  *(__edx + 4) -  *(__ecx + 4);
                                 *4407504 =  *(__edx + 4) -  *(__ecx + 4);
                                __eax =  *__ebx;
                                 *4407586 = __eax;
                                 *4407592 = __eax;
                                __eax =  *(__ebx + 12);
                                __eax =  *(__ebx + 12) << 8;
                                 *4407596 = __eax;
                                 *4407600 = __eax;
                                 *(__edx + 4) =  *(__edx + 4) -  *(__ebx + 4);
                                __edi =  *(__edx + 4) -  *(__ebx + 4) +  *4417208;
                                 *__edx =  *__edx -  *__ebx;
                                ( *__edx -  *__ebx) *  *(__edi * 4) = ( *__edx -  *__ebx) *  *(__edi * 4) *  *4407580;
                                ( *__edx -  *__ebx) *  *(__edi * 4) *  *4407580 + 32768 = ( *__edx -  *__ebx) *  *(__edi * 4) *  *4407580 + 32768 >> 16;
                                __eax = (( *__edx -  *__ebx) *  *(__edi * 4) *  *4407580 + 32768 >> 16) +  *__ebx;
                                if(__eax >=  *__ecx) {
                                     *4407524 = __eax;
                                     *(__edx + 12) =  *(__edx + 12) -  *(__ebx + 12);
                                    ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4) = ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4) *  *4407580;
                                    __eax = ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4) *  *4407580 >> 8;
                                    _push(__ecx);
                                     *(__ebx + 12) =  *(__ebx + 12) << 8;
                                    __eax = (( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4) *  *4407580 >> 8) + ( *(__ebx + 12) << 8);
                                    _pop(__ecx);
                                     *4407540 = (( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4) *  *4407580 >> 8) + ( *(__ebx + 12) << 8);
                                    __eax =  *__edx;
                                    __eax =  *__edx -  *__ebx;
                                    if(__eax >= 0) {
                                        __eax = __eax + 1;
                                         *4407590 = 0;
                                        __eax = __eax *  *(__edi * 4);
                                         *4407522 = 0;
                                         *4407590 =  *4407590 + __eax;
                                         *4407522 =  *4407522 + __eax;
                                    } else {
                                        __eax = __eax - 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4407590 = 65535;
                                         *4407522 = 65535;
                                    }
                                     *4407564 = __eax;
                                     *4407512 = __eax;
                                     *(__edx + 12) =  *(__edx + 12) -  *(__ebx + 12);
                                    __eax = ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4);
                                    __eax = ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) >> 8;
                                     *4407572 = __eax;
                                     *4407532 = __eax;
                                    __edi =  *4407580;
                                    __edi =  *4407580 +  *4417208;
                                    __eax =  *__ecx;
                                    __eax =  *__ecx -  *__ebx;
                                    if(__eax <= 0) {
                                        __eax = __eax - 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4407584 = 65535;
                                         *4407584 =  *4407584 + __eax;
                                    } else {
                                        __eax = __eax + 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4407584 = 0;
                                    }
                                     *4407560 = __eax;
                                     *(__ecx + 12) =  *(__ecx + 12) -  *(__ebx + 12);
                                    ( *(__ecx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) = ( *(__ecx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) >> 8;
                                     *4407568 = ( *(__ecx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) >> 8;
                                     *(__ecx + 12) =  *(__ecx + 12) << 8;
                                     *4407536 =  *(__ecx + 12) << 8;
                                    __eax =  *__ecx;
                                     *4407518 =  *__ecx;
                                    __edi =  *4407504;
                                    __edi =  *4407504 +  *4417208;
                                    __eax =  *__edx;
                                    __eax =  *__edx -  *__ecx;
                                    if(__eax >= 0) {
                                        __eax = __eax + 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4407516 = 0;
                                    } else {
                                        __eax = __eax - 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4407516 = 65535;
                                         *4407516 =  *4407516 + __eax;
                                    }
                                     *4407508 = __eax;
                                     *(__edx + 12) =  *(__edx + 12) -  *(__ecx + 12);
                                    ( *(__edx + 12) -  *(__ecx + 12)) *  *(__edi * 4 - 4) = ( *(__edx + 12) -  *(__ecx + 12)) *  *(__edi * 4 - 4) >> 8;
                                     *4407528 = ( *(__edx + 12) -  *(__ecx + 12)) *  *(__edi * 4 - 4) >> 8;
                                } else {
                                     *4407518 = __eax;
                                     *(__edx + 12) =  *(__edx + 12) -  *(__ebx + 12);
                                    ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) = ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) *  *4407580;
                                    __eax = ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) *  *4407580 >> 8;
                                    _push(__ecx);
                                     *(__ebx + 12) =  *(__ebx + 12) << 8;
                                    __eax = (( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) *  *4407580 >> 8) + ( *(__ebx + 12) << 8);
                                    _pop(__ecx);
                                     *4407536 = (( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) *  *4407580 >> 8) + ( *(__ebx + 12) << 8);
                                    __eax =  *__edx;
                                    __eax =  *__edx -  *__ebx;
                                    if(__eax <= 0) {
                                        __eax = __eax - 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4407584 = 65535;
                                         *4407516 = 65535;
                                         *4407584 =  *4407584 + __eax;
                                         *4407516 =  *4407516 + __eax;
                                    } else {
                                        __eax = __eax + 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4407584 = 0;
                                         *4407516 = 0;
                                    }
                                     *4407560 = __eax;
                                     *4407508 = __eax;
                                     *(__edx + 12) =  *(__edx + 12) -  *(__ebx + 12);
                                    __eax = ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4);
                                    __eax = ( *(__edx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) >> 8;
                                     *4407568 = __eax;
                                     *4407528 = __eax;
                                    __edi =  *4407580;
                                    __edi =  *4407580 +  *4417208;
                                    __eax =  *__ecx;
                                    __eax =  *__ecx -  *__ebx;
                                    if(__eax >= 0) {
                                        __eax = __eax + 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4407590 = 0;
                                         *4407590 =  *4407590 + __eax;
                                    } else {
                                        __eax = __eax - 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4407590 = 65535;
                                    }
                                     *4407564 = __eax;
                                     *(__ecx + 12) =  *(__ecx + 12) -  *(__ebx + 12);
                                    ( *(__ecx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) = ( *(__ecx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) >> 8;
                                     *4407572 = ( *(__ecx + 12) -  *(__ebx + 12)) *  *(__edi * 4 - 4) >> 8;
                                     *(__ecx + 12) =  *(__ecx + 12) << 8;
                                     *4407540 =  *(__ecx + 12) << 8;
                                    __eax =  *__ecx;
                                     *4407524 =  *__ecx;
                                    __edi =  *4407504;
                                    __edi =  *4407504 +  *4417208;
                                    __eax =  *__edx;
                                    __eax =  *__edx -  *__ecx;
                                    if(__eax <= 0) {
                                        __eax = __eax - 1;
                                        __eax = __eax *  *(__edi * 4);
                                         *4407522 = 65535;
                                    } else {
                                        __eax = __eax + 1;
                                         *4407522 = 0;
                                        __eax = __eax *  *(__edi * 4);
                                         *4407522 =  *4407522 + __eax;
                                    }
                                     *4407512 = __eax;
                                     *(__edx + 12) =  *(__edx + 12) -  *(__ecx + 12);
                                    ( *(__edx + 12) -  *(__ecx + 12)) *  *(__edi * 4 - 4) = ( *(__edx + 12) -  *(__ecx + 12)) *  *(__edi * 4 - 4) >> 8;
                                     *4407532 = ( *(__edx + 12) -  *(__ecx + 12)) *  *(__edi * 4 - 4) >> 8;
                                }
                                _push(__esi);
                                __eax = L0040E79B(__esi);
                                _pop(__esi);
                                __eax =  *4407500;
                                 *4407604 =  *4407500;
                                __eax =  *4407504;
                                 *4407580 =  *4407504;
                                __eax =  *4407518;
                                 *4407586 =  *4407518;
                                __eax =  *4407524;
                                 *4407592 =  *4407524;
                                __eax =  *4407508;
                                 *4407560 =  *4407508;
                                __eax =  *4407512;
                                 *4407564 =  *4407512;
                                __ax =  *4407516;
                                 *4407584 =  *4407516;
                                __ax =  *4407522;
                                 *4407590 = __ax;
                                __eax =  *4407528;
                                 *4407568 =  *4407528;
                                __eax =  *4407532;
                                 *4407572 =  *4407532;
                                __eax =  *4407536;
                                 *4407596 =  *4407536;
                                __eax =  *4407540;
                                 *4407600 =  *4407540;
                                __eax = L0040E79B(__esi);
                                _pop(__edi);
                            }
                        }
                    }
                }
                goto L1;
            case 0xa:
                _push(__edi);
                __eax = __esi;
                _push(__esi);
                __eax = L0040D750();
                _pop(__eax);
                _pop(__edi);
                goto L1;
            case 0xb:
                _push(__edi);
                __eax = __esi;
                _push(__esi);
                __eax = L0040B390();
                _pop(__eax);
                _pop(__edi);
                goto L1;
            case 0xc:
                __eax = L0040F9DC(__esi);
                goto L1;
            case 0xd:
                _push(__edi);
                __eax = __esi;
                _push(__esi);
                __eax = L0040CDE0(__fp0);
                _pop(__eax);
                _pop(__edi);
                goto L1;
            case 0xe:
                _push(__ecx);
                __eax = __eax + 1;
                 *4407426 = __eax + 1;
                __eax =  ~__eax;
                __ecx =  ~__eax + 1;
                 *4407430 =  ~__eax + 1;
                _pop(__ecx);
                return __eax;
                goto L340;
            case 0xf:
                _push(__ecx);
                __eax = __eax + 1;
                 *4433836 = __eax + 1;
                __eax =  ~__eax;
                __ecx =  ~__eax + 1;
                 *4433840 =  ~__eax + 1;
                _pop(__ecx);
                return __eax;
                goto L340;
            case 0x10:
                4314972 = 4314972 >> 2;
                 *4391320 = 4314972 >> 2;
                return __eax;
                goto L340;
            case 0x11:
                4314972 = 4314972 >> 2;
                 *4417208 = 4314972 >> 2;
                return __eax;
                goto L340;
            case 0x12:
                 *4531968 = 0;
                __ecx =  *4407440;
                if( *4407440 == 0) {
                     *4535508 = L004111A0(9608);
                    __eax = L004111A0(3208);
                     *4535504 = __eax;
                     *4407440 = 1;
                    return __eax;
                }
                return __eax;
                goto L340;
            case 0x13:
                 *4532036 = 0;
                __ecx =  *4407440;
                if( *4407440 == 0) {
                     *4535508 = L004111A0(9608);
                    __eax = L004111A0(3208);
                     *4535504 = __eax;
                     *4407440 = 1;
                    return __eax;
                }
                return __eax;
                goto L340;
            case 0x14:
                _push(__ecx);
                __eax = __eax + 1;
                 *4391212 = __eax + 1;
                __eax =  ~__eax;
                __ecx =  ~__eax + 1;
                 *4391216 =  ~__eax + 1;
                _pop(__ecx);
                return __eax;
                goto L340;
            case 0x15:
                asm("fnstcw word [0x4366c8]");
                 *4417224 =  *4417224 & 64767;
                 *4417226 =  *4417224 & 64767;
                asm("fldcw word [0x4366ca]");
                __edi = 4417496;
                __esi = 4417576;
                __ecx = 16;
                __edx = 0;
                do {
                     *4417212 = 15;
                    asm("fild dword [0x4366bc]");
                     *4417212 = __edx;
                    asm("fimul dword [0x4366bc]");
                    asm("fistp dword [esi+ecx*4]");
                    asm("fld1");
                     *4417212 = __ecx;
                    asm("fidiv dword [0x4366bc]");
                     *((intOrPtr*)(__edi + __ecx * 4)) = __fp0;
                    __edx = __edx + 1;
                    __ecx = __ecx - 1;
                } while(__ecx != 0);
                 *4417212 = 0;
                asm("fild dword [0x4366bc]");
                asm("fist dword [edi]");
                asm("fistp dword [esi]");
                 *4417212 = 16;
                asm("fild dword [0x4366bc]");
                 *4417252 = __fp0;
                asm("fldcw word [0x4366c8]");
                return __eax;
                goto L340;
        }
    }
L340:
}

signed int L0040B390(
    intOrPtr _a4                           // _cfa_4
)
{
    signed int _v8;                        // _cfa_fffffff8
    intOrPtr _v12;                         // _cfa_fffffff4
    intOrPtr _v16;                         // _cfa_fffffff0
    signed int* _v20;                      // _cfa_ffffffec
    signed int _v24;                       // _cfa_ffffffe8
    intOrPtr _v28;                         // _cfa_ffffffe4
    signed int* _v32;                      // _cfa_ffffffe0
    signed int _v36;                       // _cfa_ffffffdc
    intOrPtr _v40;                         // _cfa_ffffffd8
    signed int* _v44;                      // _cfa_ffffffd4
    signed int _v48;                       // _cfa_ffffffd0
    intOrPtr _v52;                         // _cfa_ffffffcc
    signed int* _v56;                      // _cfa_ffffffc8
    intOrPtr _v60;                         // _cfa_ffffffc4
    intOrPtr _v64;                         // _cfa_ffffffc0
    signed int* _v68;                      // _cfa_ffffffbc
    signed int _v72;                       // _cfa_ffffffb8
    intOrPtr _v76;                         // _cfa_ffffffb4
    signed int* _v80;                      // _cfa_ffffffb0
    signed int _v84;                       // _cfa_ffffffac
    intOrPtr _v88;                         // _cfa_ffffffa8
    signed int* _v92;                      // _cfa_ffffffa4
    signed int _v96;                       // _cfa_ffffffa0
    intOrPtr _v100;                        // _cfa_ffffff9c
    signed int* _v104;                     // _cfa_ffffff98
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t152;                        // _t152
    intOrPtr _t153;                        // _t153
    intOrPtr _t154;                        // _t154
    signed int _t156;                      // _t156
    signed int _t157;                      // _t157
    intOrPtr _t158;                        // _t158
    signed int _t161;                      // _t161
    intOrPtr _t167;                        // _t167
    intOrPtr _t170;                        // _t170
    intOrPtr _t171;                        // _t171
    intOrPtr _t173;                        // _t173
    signed int _t177;                      // _t177
    signed int* _t180;                     // _t180
    intOrPtr _t185;                        // _t185
    intOrPtr _t186;                        // _t186
    signed int* _t190;                     // _t190
    _unknown_ _t192;                       // _t192
    intOrPtr _t195;                        // _t195
    signed int _t199;                      // _t199
    signed int* _t202;                     // _t202
    intOrPtr _t206;                        // _t206
    signed int* _t212;                     // _t212
    _unknown_ _t214;                       // _t214
    intOrPtr _t220;                        // _t220
    intOrPtr _t223;                        // _t223
    intOrPtr _t224;                        // _t224
    intOrPtr _t225;                        // _t225
    signed int _t229;                      // _t229
    signed int* _t232;                     // _t232
    intOrPtr _t236;                        // _t236
    intOrPtr _t237;                        // _t237
    signed int* _t241;                     // _t241
    _unknown_ _t243;                       // _t243
    intOrPtr _t245;                        // _t245
    signed int _t249;                      // _t249
    signed int* _t252;                     // _t252
    intOrPtr _t255;                        // _t255
    signed int* _t261;                     // _t261
    _unknown_ _t263;                       // _t263
    intOrPtr _t281;                        // _t281
    intOrPtr _t282;                        // _t282
    signed int* _t284;                     // _t284
    intOrPtr _t287;                        // _t287
    intOrPtr _t289;                        // _t289
    intOrPtr _t294;                        // _t294
    intOrPtr _t295;                        // _t295
    signed int* _t297;                     // _t297
    intOrPtr _t300;                        // _t300
    intOrPtr _t302;                        // _t302
    intOrPtr _t303;                        // _t303
    intOrPtr _t307;                        // _t307
    signed int _t309;                      // _t309
    intOrPtr _t310;                        // _t310
    intOrPtr _t312;                        // _t312
    intOrPtr _t314;                        // _t314
    intOrPtr _t315;                        // _t315
    intOrPtr _t317;                        // _t317
    intOrPtr _t320;                        // _t320
    intOrPtr _t321;                        // _t321
    intOrPtr _t324;                        // _t324
    intOrPtr _t326;                        // _t326
    intOrPtr _t327;                        // _t327
    signed int _t328;                      // _t328
    intOrPtr _t329;                        // _t329
    intOrPtr _t331;                        // _t331
    intOrPtr _t333;                        // _t333
    intOrPtr _t334;                        // _t334
    intOrPtr _t336;                        // _t336
    intOrPtr _t338;                        // _t338
    intOrPtr _t339;                        // _t339
    intOrPtr _t341;                        // _t341
    intOrPtr _t343;                        // _t343
    intOrPtr _t344;                        // _t344
    signed int _t345;                      // _t345
    intOrPtr _t346;                        // _t346
    intOrPtr _t350;                        // _t350
    intOrPtr _t352;                        // _t352
    intOrPtr _t363;                        // _t363
    intOrPtr _t364;                        // _t364
    intOrPtr _t365;                        // _t365
    intOrPtr _t366;                        // _t366
    intOrPtr _t367;                        // _t367
    intOrPtr _t368;                        // _t368
    intOrPtr _t369;                        // _t369
    intOrPtr _t372;                        // _t372
    signed int* _t373;                     // _t373
    intOrPtr _t376;                        // _t376
    signed int* _t377;                     // _t377
    intOrPtr _t379;                        // _t379
    signed int _t380;                      // _t380
    intOrPtr _t382;                        // _t382
    intOrPtr _t383;                        // _t383
    intOrPtr _t384;                        // _t384
    intOrPtr _t385;                        // _t385
    intOrPtr _t386;                        // _t386
    intOrPtr _t387;                        // _t387
    intOrPtr _t390;                        // _t390
    signed int* _t391;                     // _t391
    intOrPtr _t394;                        // _t394
    signed int* _t395;                     // _t395
    signed int _t396;                      // _t396
    signed int _t397;                      // _t397
    intOrPtr _t399;                        // _t399
    signed int _t402;                      // _t402
    intOrPtr _t403;                        // _t403
    intOrPtr _t404;                        // _t404
    intOrPtr _t405;                        // _t405
    intOrPtr _t406;                        // _t406
    signed int _t408;                      // _t408
    intOrPtr _t409;                        // _t409
    intOrPtr _t410;                        // _t410
    intOrPtr _t411;                        // _t411
    intOrPtr _t412;                        // _t412
    signed int _t415;                      // _t415
    intOrPtr _t416;                        // _t416
    intOrPtr _t419;                        // _t419
    intOrPtr _t424;                        // _t424
    intOrPtr _t427;                        // _t427
    intOrPtr _t430;                        // _t430
    intOrPtr _t435;                        // _t435

    _t346 = _a4;
    _t303 =  *((intOrPtr*)(_t346 + 4));
    _t152 =  *((intOrPtr*)(_t346 + 12));
    if(_t303 <= _t152) {
         *4531988 = _t152;
        _t153 =  *((intOrPtr*)(_a4 + 4));
    } else {
         *4531988 = _t303;
        _t153 =  *((intOrPtr*)(_t346 + 12));
    }
     *4531980 = _t153;
    _t154 =  *((intOrPtr*)(_a4 + 20));
    if( *4531988 >= _t154) {
        if( *4531980 > _t154) {
             *4531980 = _t154;
        }
    } else {
         *4531988 = _t154;
    }
     *4531984 = 1;
     *4531964 = 3;
     *4531972 = 5;
    if( *((intOrPtr*)(_a4 + 24)) <  *((intOrPtr*)(_a4 + 8))) {
         *4531984 = 5;
         *4531972 = 1;
    }
    _t350 = _a4;
    _t156 =  *4531984;
    _t307 =  *((intOrPtr*)(_t350 + 16));
    if( *((intOrPtr*)(_t350 + 4 + _t156 * 4)) <= _t307) {
        _t157 =  *4531972;
        if( *((intOrPtr*)(_a4 + 4 + _t157 * 4)) < _t307) {
             *4531972 = 3;
             *4531964 = _t157;
        }
    } else {
         *4531984 = 3;
         *4531964 = _t156;
    }
    _t352 = _a4;
    _t415 =  *4531984 << 2;
    _t309 =  *4531972 << 2;
    _t399 =  *((intOrPtr*)(_t352 + _t415 + 4));
    _t158 =  *((intOrPtr*)(_t352 + _t309 + 4));
    if(( *4531980 -  *4312544 |  *4312556 - _t158 |  *4312552 -  *4531988 | _t399 -  *4312548) < 0) {
        _t161 =  *4531988 -  *4312544;
        if(( *4312552 -  *4531980 |  *4312556 - _t399 | _t158 -  *4312548 | _t161) < 0) {
            return _t161;
        } else {
            _t363 = _a4;
            _t402 =  *4531964 << 2;
             *4434196 =  *((intOrPtr*)(_t363 + _t415));
             *4434200 =  *((intOrPtr*)(_t363 + _t415 + 4));
             *4434204 =  *((intOrPtr*)(_t363 + _t402));
             *4434208 =  *((intOrPtr*)(_t363 + _t402 + 4));
             *4434212 =  *((intOrPtr*)(_t363 + _t309));
             *4434216 =  *((intOrPtr*)(_t363 + _t309 + 4));
            _t364 =  *((intOrPtr*)(_t363 + 28));
             *4434220 =  *((intOrPtr*)(_t415 + _t364 - 4));
             *4434224 =  *((intOrPtr*)(_t415 + _t364));
            _t416 =  *((intOrPtr*)(_t402 + _t364 - 4));
             *4434228 = _t416;
             *4434232 =  *((intOrPtr*)(_t402 + _t364));
            _t167 =  *4312484;
            _t281 =  *((intOrPtr*)(_t309 + _t364 - 4));
             *4434236 = _t281;
            _t310 =  *((intOrPtr*)(_t309 + _t364));
             *4434240 = _t310;
             *4531976 = _t167;
            _push(_t402);
            _push(_t416);
            _push(_t167);
            _push(_t281);
            _push(_t310);
            _push(_t364);
            L00456B20();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t365 = _a4;
            _t282 =  *4434272;
             *4434252 =  *((intOrPtr*)(_t365 + 32));
            _t366 =  *4434204;
             *4434192 =  *((intOrPtr*)(_t365 + 36));
             *4531928 =  *4434196;
            _t312 =  *4434200;
            _t170 =  *4434208;
             *4531932 = _t312;
             *4531936 = _t366;
             *4531940 = _t170;
            if(_t282 <= 0) {
                _t367 =  *4434224;
                _t171 =  *4434228;
                 *4531944 =  *4434220;
                _t314 =  *4434232;
                 *4531948 = _t367;
                 *4531952 = _t171;
                 *4531956 = _t314;
                _push(_t402);
                _push(_t416);
                _push(_t171);
                _push(_t282);
                _push(_t314);
                _push(_t367);
                L00456CE0();
                _pop(__edx);
                _pop(__ecx);
                _pop(__ebx);
                _pop(__eax);
                _pop(__esi);
                _pop(__edi);
                _t315 =  *4434200;
                _t368 =  *4434212;
                 *4531928 =  *4434196;
                _t173 =  *4434216;
                 *4531932 = _t315;
                 *4531936 = _t368;
                 *4531940 = _t173;
                _push(_t402);
                _push(4531928);
                _push(_t173);
                _push( *4535508);
                _push(_t315);
                _push(_t368);
                _t284 =  *4535504;
                L00456E00();
                _pop(__edx);
                _pop(__ecx);
                _pop(__ebx);
                _pop(__eax);
                _pop(__esi);
                _pop(__edi);
                _t369 =  *4535508;
                _t317 =  *4531976 +  *( *4535504) *  *4312560;
                 *4531976 = _t317;
                _t177 =  *(_t369 + 4);
                _v8 = _t177;
                _v24 = _t177;
                _v28 = _t369 + 8;
                _t180 =  &(( *4535504)[2]);
                _v32 = _t180;
                _push(_t402);
                _push(4531928);
                _push(_t180);
                _push(_t284);
                _push(_t317);
                _push(_t369);
                _t419 = _v28;
                _t403 =  *4531976;
                L00410CBE(_v32, _v24, _t403, _t419);
                 *4531976 = _t403;
                _pop(__edx);
                _pop(__ecx);
                _pop(__ebx);
                _pop(__eax);
                _pop(__esi);
                _pop(__edi);
                 *4531928 =  *4434204;
                 *4531932 =  *4434208;
                 *4531936 =  *4434212;
                _t372 =  *4434232;
                 *4531940 =  *4434216;
                _t185 =  *4434236;
                 *4531944 =  *4434228;
                _t320 =  *4434240;
                 *4531948 = _t372;
                 *4531952 = _t185;
                 *4531956 = _t320;
                _push(_t403);
                _push(_t419);
                _push(_t185);
                _push(_t284);
                _push(_t320);
                _push(_t372);
                L00456CE0();
                _pop(__edx);
                _pop(__ecx);
                _pop(__ebx);
                _pop(__eax);
                _pop(__esi);
                _pop(__edi);
                _t186 =  *4535508;
                _t373 =  *4535504;
                _t321 =  *((intOrPtr*)(_t186 + 4));
                _v12 = _t321;
                _v16 = _t186 + 8;
                _t190 =  &(( &(_t373[_v8]))[2]);
                _v20 = _t190;
                _push(_t403);
                _push(4531928);
                _push(_t190);
                _push( *4535508);
                _push(_t321);
                _push(_t373);
                _t404 =  *4531976;
                _t192 = L00410CBE(_v20, _v12, _t404, _v16);
                 *4531976 = _t404;
                _pop(__edx);
                _pop(__ecx);
                _pop(__ebx);
                _pop(__eax);
                _pop(__esi);
                _pop(__edi);
                return _t192;
            }
            _push(_t402);
            _push(_t416);
            _push(_t170);
            _push(_t282);
            _push(_t312);
            _push(_t366);
            L00456E00();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
             *4531928 =  *4434196;
             *4531932 =  *4434200;
             *4531936 =  *4434212;
            _t376 =  *4434224;
             *4531940 =  *4434216;
            _t195 =  *4434236;
             *4531944 =  *4434220;
            _t324 =  *4434240;
             *4531948 = _t376;
             *4531952 = _t195;
             *4531956 = _t324;
            _push(_t402);
            _push(4531928);
            _push(_t195);
            _push( *4535504);
            _push(_t324);
            _push(_t376);
            _t287 =  *4535508;
            L00456CE0();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t377 =  *4535504;
            _t326 =  *4531976 +  *( *4535504) *  *4312560;
             *4531976 = _t326;
            _t199 = _t377[1];
            _v8 = _t199;
            _v48 = _t199;
            _v52 =  *4535508 + 8;
            _t202 =  &(_t377[2]);
            _v56 = _t202;
            _push(_t402);
            _push(4531928);
            _push(_t202);
            _push(_t287);
            _push(_t326);
            _push(_t377);
            _t424 = _v52;
            _t405 =  *4531976;
            L00410CBE(_v56, _v48, _t405, _t424);
             *4531976 = _t405;
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t327 =  *4434208;
            _t379 =  *4434212;
             *4531928 =  *4434204;
            _t206 =  *4434216;
             *4531932 = _t327;
             *4531936 = _t379;
             *4531940 = _t206;
            _push(_t405);
            _push(_t424);
            _push(_t206);
            _push(_t287);
            _push(_t327);
            _push(_t379);
            L00456E00();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t380 = _v8;
            _t289 =  *4535508;
            _t328 = ( *4535504)[1];
            _v36 = _t328;
            _v40 = _t289 + (_t380 + _t380 * 2) * 4 + 8;
            _t212 =  &(( *4535504)[2]);
            _v44 = _t212;
            _push(_t405);
            _push(4531928);
            _push(_t212);
            _push(_t289);
            _push(_t328);
            _push(_t380);
            _t406 =  *4531976;
            _t214 = L00410CBE(_v44, _v36, _t406, _v40);
             *4531976 = _t406;
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            return _t214;
        }
    } else {
        _t382 = _a4;
        _t408 =  *4531964 << 2;
         *4434196 =  *((intOrPtr*)(_t382 + _t415));
         *4434200 =  *((intOrPtr*)(_t382 + _t415 + 4));
         *4434204 =  *((intOrPtr*)(_t382 + _t408));
         *4434208 =  *((intOrPtr*)(_t382 + _t408 + 4));
         *4434212 =  *((intOrPtr*)(_t382 + _t309));
         *4434216 =  *((intOrPtr*)(_t382 + _t309 + 4));
        _t383 =  *((intOrPtr*)(_t382 + 28));
         *4434220 =  *((intOrPtr*)(_t415 + _t383 - 4));
         *4434224 =  *((intOrPtr*)(_t415 + _t383));
        _t427 =  *((intOrPtr*)(_t408 + _t383 - 4));
         *4434228 = _t427;
         *4434232 =  *((intOrPtr*)(_t408 + _t383));
        _t220 =  *4312484;
        _t294 =  *((intOrPtr*)(_t309 + _t383 - 4));
         *4434236 = _t294;
        _t329 =  *((intOrPtr*)(_t309 + _t383));
         *4434240 = _t329;
         *4531976 = _t220;
        _push(_t408);
        _push(_t427);
        _push(_t220);
        _push(_t294);
        _push(_t329);
        _push(_t383);
        L00456B20();
        _pop(__edx);
        _pop(__ecx);
        _pop(__ebx);
        _pop(__eax);
        _pop(__esi);
        _pop(__edi);
        _t384 = _a4;
        _t295 =  *4434272;
         *4434252 =  *((intOrPtr*)(_t384 + 32));
        _t385 =  *4434204;
         *4434192 =  *((intOrPtr*)(_t384 + 36));
         *4531928 =  *4434196;
        _t331 =  *4434200;
        _t223 =  *4434208;
         *4531932 = _t331;
         *4531936 = _t385;
         *4531940 = _t223;
        if(_t295 <= 0) {
            _t386 =  *4434224;
            _t224 =  *4434228;
             *4531944 =  *4434220;
            _t333 =  *4434232;
             *4531948 = _t386;
             *4531952 = _t224;
             *4531956 = _t333;
            _push(_t408);
            _push(_t427);
            _push(_t224);
            _push(_t295);
            _push(_t333);
            _push(_t386);
            L00456C70();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t225 =  *4434212;
            _t334 =  *4434216;
             *4531936 = _t225;
             *4531940 = _t334;
            _push(_t408);
            _push(4531928);
            _push(_t225);
            _push( *4535508);
            _push(_t334);
            _push(_t386);
            _t297 =  *4535504;
            L00456CB0();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t387 =  *4535508;
            _t336 =  *4531976 +  *( *4535504) *  *4312560;
             *4531976 = _t336;
            _t229 =  *(_t387 + 4);
            _v8 = _t229;
            _v72 = _t229;
            _v76 = _t387 + 8;
            _t232 =  &(( *4535504)[2]);
            _v80 = _t232;
            _push(_t408);
            _push(4531928);
            _push(_t232);
            _push(_t297);
            _push(_t336);
            _push(_t387);
            _t430 = _v76;
            _t409 =  *4531976;
            L00410CBE(_v80, _v72, _t409, _t430);
             *4531976 = _t409;
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
             *4531928 =  *4434204;
            _t236 =  *4434232;
             *4531932 =  *4434208;
            _t338 =  *4434236;
             *4531944 =  *4434228;
            _t390 =  *4434240;
             *4531948 = _t236;
             *4531952 = _t338;
             *4531956 = _t390;
            _push(_t409);
            _push(_t430);
            _push(_t236);
            _push(_t297);
            _push(_t338);
            _push(_t390);
            L00456C70();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t237 =  *4535508;
            _t391 =  *4535504;
            _t339 =  *((intOrPtr*)(_t237 + 4));
            _v60 = _t339;
            _v64 = _t237 + 8;
            _t241 =  &(( &(_t391[_v8]))[2]);
            _v68 = _t241;
            _push(_t409);
            _push(4531928);
            _push(_t241);
            _push( *4535508);
            _push(_t339);
            _push(_t391);
            _t410 =  *4531976;
            _t243 = L00410CBE(_v68, _v60, _t410, _v64);
             *4531976 = _t410;
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            return _t243;
        } else {
            _push(_t408);
            _push(_t427);
            _push(_t223);
            _push(_t295);
            _push(_t331);
            _push(_t385);
            L00456CB0();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
             *4531936 =  *4434212;
            _t245 =  *4434224;
             *4531940 =  *4434216;
            _t341 =  *4434236;
             *4531944 =  *4434220;
            _t394 =  *4434240;
             *4531948 = _t245;
             *4531952 = _t341;
             *4531956 = _t394;
            _push(_t408);
            _push(4531928);
            _push(_t245);
            _push( *4535504);
            _push(_t341);
            _push(_t394);
            _t300 =  *4535508;
            L00456C70();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t395 =  *4535504;
            _t343 =  *4531976 +  *( *4535504) *  *4312560;
             *4531976 = _t343;
            _t249 = _t395[1];
            _v8 = _t249;
            _v96 = _t249;
            _v100 =  *4535508 + 8;
            _t252 =  &(_t395[2]);
            _v104 = _t252;
            _push(_t408);
            _push(4531928);
            _push(_t252);
            _push(_t300);
            _push(_t343);
            _push(_t395);
            _t435 = _v100;
            _t411 =  *4531976;
            _t396 = _v96;
            L00410CBE(_v104, _t396, _t411, _t435);
             *4531976 = _t411;
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t255 =  *4434204;
            _t344 =  *4434208;
             *4531928 = _t255;
             *4531932 = _t344;
            _push(_t411);
            _push(_t435);
            _push(_t255);
            _push(_t300);
            _push(_t344);
            _push(_t396);
            L00456CB0();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t397 = _v8;
            _t302 =  *4535508;
            _t345 = ( *4535504)[1];
            _v84 = _t345;
            _v88 = _t302 + (_t397 + _t397 * 2) * 4 + 8;
            _t261 =  &(( *4535504)[2]);
            _v92 = _t261;
            _push(_t411);
            _push(4531928);
            _push(_t261);
            _push(_t302);
            _push(_t345);
            _push(_t397);
            _t412 =  *4531976;
            _t263 = L00410CBE(_v92, _v84, _t412, _v88);
             *4531976 = _t412;
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            return _t263;
        }
    }
}

signed char L0040C650(
    signed int __fp0                       // r28
)
{
    signed int _v8;                        // _cfa_fffffff8
    signed int _v12;                       // _cfa_fffffff4
    signed int _v16;                       // _cfa_fffffff0
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ __ebp;                       // r6
    signed int _t43;                       // _t43
    signed int _t45;                       // _t45
    signed int _t47;                       // _t47
    signed char _t59;                      // _t59
    _unknown_ _t71;                        // _t71
    intOrPtr _t72;                         // _t72
    signed int _t77;                       // _t77
    signed int _t86;                       // _t86
    signed int _t90;                       // _t90
    _unknown_ _t93;                        // _t93
    intOrPtr _t94;                         // _t94
    signed int _t96;                       // _t96
    _unknown_ _t98;                        // _t98
    signed int _t100;                      // _t100
    _unknown_ _t101;                       // _t101
    intOrPtr _t102;                        // _t102
    signed int _t104;                      // _t104
    signed long long _t143;                // _t143
    signed long long _t145;                // _t145
    signed long long _t146;                // _t146

     *4417320 = 0;
    _push(_t71);
    _push(_t98);
    _push(_t93);
    _push(_t101);
    _t100 =  *4535596 -  *4535556;
    if(_t100 != 0) {
        _v16 =  *4535592 -  *4535552;
        asm("fild dword [esp+0x10]");
        _v16 = _t100;
        asm("fild dword [esp+0x10]");
        asm("fdivp st1, st0");
         *4417320 = __fp0;
    }
     *4417324 = 0;
    _t86 =  *4535576 -  *4535556;
    if(_t86 != 0) {
        _v16 =  *4535572 -  *4535552;
        asm("fild dword [esp+0x10]");
        _v16 = _t86;
        asm("fild dword [esp+0x10]");
        asm("fdivp st1, st0");
         *4417324 = __fp0;
    }
     *4535636 = 0;
    _t90 =  *4535596 -  *4535576;
    if(_t90 != 0) {
        _v16 =  *4535592 -  *4535572;
        asm("fild dword [esp+0x10]");
        _v16 = _t90;
        asm("fild dword [esp+0x10]");
        asm("fdivp st1, st0");
         *4535636 = __fp0;
    }
    _t72 =  *4535564;
    _t102 =  *4535568;
    _t94 =  *4535560;
     *4417344 =  *4535604 - _t72;
     *4417348 =  *4535608 - _t102;
     *4417360 =  *4535600 - _t94;
     *4417352 =  *4535584 - _t72;
     *4417356 =  *4535588 - _t102;
     *4417364 =  *4535580 - _t94;
     *4535532 =  *4535604 -  *4535584;
     *4535536 =  *4535608 -  *4535588;
     *4535512 =  *4535600 -  *4535580;
    _t96 =  *4535592 -  *4535552;
    if(_t96 < 0) {
        _t96 =  *4535552 -  *4535592;
    }
    _t43 = _t100;
    if(_t100 < 0) {
        _t43 =  *4535556 -  *4535596;
    }
    if(_t96 <= _t43) {
        _t96 = _t43;
    }
    _t77 =  *4535572 -  *4535552;
    if(_t77 < 0) {
        _t77 =  *4535552 -  *4535572;
    }
    _t45 = _t86;
    if(_t86 < 0) {
        _t45 =  *4535556 -  *4535576;
    }
    if(_t77 <= _t45) {
        _t77 = _t45;
    }
    _t47 =  *4535592 -  *4535572;
    if(_t47 < 0) {
        _t47 =  *4535572 -  *4535592;
    }
    _t104 = _t90;
    if(_t90 < 0) {
        _t104 =  *4535576 -  *4535596;
    }
    if(_t47 <= _t104) {
        _t47 = _t104;
    }
    asm("fild dword [0x453508]");
    asm("fild dword [0x453530]");
    _v16 = _t96;
    asm("fild dword [esp+0x10]");
    _v16 = _t77;
    asm("fild dword [esp+0x10]");
    asm("fxch st0, st1");
    _v12 = __fp0;
    asm("fild dword [0x45351c]");
    asm("fxch st0, st1");
    _v8 = __fp0;
    _v16 = _t47;
    asm("fild dword [esp+0x10]");
    _t143 = _v8 / st5 * st3;
    asm("fxch st0, st2");
     *4417328 = _t143;
    asm("fst dword [esp+0x1c]");
    _v16 =  ~( *4417360);
    _t145 = _t143 / st2 * st3;
    asm("fxch st0, st1");
     *4417336 = _t145;
     *4535648 = _t145;
    asm("fild dword [esp+0x10]");
    _v16 =  ~( *4417364);
    _t146 = _t145 / st3;
    asm("fxch st0, st3");
    asm("fidivr dword [esp+0x10]");
    asm("fxch st0, st3");
     *4417332 = _t146;
    asm("fxch st0, st2");
     *4417340 = _t146;
    _v16 =  ~( *4535512);
    st0 = _t146;
    asm("fidivr dword [esp+0x10]");
     *4535644 = _t146;
    if( *4535596 !=  *4535556) {
        _v16 = _t100;
        asm("fild dword [esp+0x10]");
        asm("fdivr dword [esp+0x14]");
         *4417284 = _t146;
    }
    if( *4535576 !=  *4535556) {
        _v16 = _t86;
        asm("fild dword [esp+0x10]");
        asm("fdivr dword [esp+0x18]");
         *4417296 = _t146;
    }
    if( *4535596 !=  *4535576) {
        _v16 = _t90;
        asm("fild dword [esp+0x10]");
        asm("fdivr dword [esp+0x1c]");
         *4535640 = _t146;
    }
     *4535516 = _t86;
     *4535524 =  *4535628 -  *4535624;
    asm("fcomp dword [0x436728]");
     *4535520 = _t90;
     *4417368 = 0;
    _t59 =  *4535632 -  *4535628;
     *4535528 = _t59;
    asm("fnstsw ax");
    if((_t59 & 65) != 0) {
         *4417368 = 1;
    }
    if(_t86 == 0) {
         *4417368 = 0;
        if( *4535572 <  *4535552) {
             *4417368 = 1;
        }
    }
    _pop(__ebp);
    _pop(__edi);
    _pop(__esi);
    _pop(__ebx);
    return _t59;
}

L0040C9E0()
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t58;                         // _t58
    signed int _t63;                       // _t63
    intOrPtr _t85;                         // _t85
    _unknown_ _t86;                        // _t86
    signed int _t87;                       // _t87
    intOrPtr _t88;                         // _t88
    _unknown_ _t89;                        // _t89
    intOrPtr _t93;                         // _t93
    _unknown_ _t94;                        // _t94
    signed int _t98;                       // _t98
    _unknown_ _t101;                       // _t101
    signed int _t102;                      // _t102
    _unknown_ _t103;                       // _t103
    intOrPtr* _t104;                       // _t104
    signed int _t106;                      // _t106
    _unknown_ _t108;                       // _t108
    _unknown_ _t112;                       // _t112

    _t93 =  *((intOrPtr*)(__esp + 4));
    __esp = __esp - 8;
    _t94 = _t93 + 8;
    _t98 = 1;
    _push(_t86);
    _push(_t103);
    _push(_t101);
    _t87 = 2;
    _push(_t108);
    _t102 = 1;
    _t104 = _t94 + 16;
    do {
        _t58 =  *_t104;
        if( *((intOrPtr*)(_t94 + (_t102 + _t102 * 2) * 4 - 8)) > _t58) {
            _t102 = _t87;
        }
        if( *((intOrPtr*)(_t94 + (_t98 + _t98 * 2) * 4 - 8)) < _t58) {
            _t98 = _t87;
        }
        _t104 = _t104 + 12;
        _t87 = _t87 + 1;
    } while(_t87 < 4);
    _t106 = _t102 - _t98;
    if(_t106 < 0) {
        _t106 = _t98 - _t102;
    }
    if(_t102 + _t98 == 3) {
        _t106 = 3;
    }
    _t88 = _t94 + (_t102 + _t102 * 2) * 4;
     *((intOrPtr*)(__esp + 20)) = _t88;
    _t89 = _t94 + (_t106 + _t106 * 2) * 4;
     *4535552 =  *(_t88 - 12);
     *4535572 =  *(_t89 - 12);
    _t63 = _t98 + _t98 * 2;
    _t112 = _t94 + _t63 * 4;
     *4535592 =  *(_t94 + _t63 * 4 - 12);
     *4535556 =  *( *((intOrPtr*)(__esp + 20)) - 8);
     *4535576 =  *(_t89 - 8);
     *4535596 =  *(_t112 - 8);
     *4535560 =  *((intOrPtr*)( *((intOrPtr*)(__esp + 20)) - 4));
     *4535580 =  *((intOrPtr*)(_t89 - 4));
     *4535600 =  *((intOrPtr*)(_t112 - 4));
     *4535564 =  *((intOrPtr*)(_t94 + 28 + _t102 * 8));
     *4535584 =  *((intOrPtr*)(_t94 + 28 + _t106 * 8));
     *4535604 =  *((intOrPtr*)(_t94 + 28 + _t98 * 8));
     *4535568 =  *((intOrPtr*)(_t94 + 32 + _t102 * 8));
     *4535588 =  *((intOrPtr*)(_t94 + 32 + _t106 * 8));
     *4535608 =  *((intOrPtr*)(_t94 + 32 + _t98 * 8));
     *4535612 =  *4535552 >> 8;
     *4535616 =  *4535572 >> 8;
     *4535620 =  *4535592 >> 8;
     *4535624 =  *4535556 >> 8;
     *4535628 =  *4535576 >> 8;
     *4417384 =  *4535552;
     *4535632 =  *4535596 >> 8;
     *4417388 =  *4535556;
    _t85 =  *4535560;
    _pop(__ebp);
    _pop(__edi);
     *4417392 = _t85;
    _pop(__esi);
     *4417396 =  *4535564;
    _pop(__ebx);
     *4417400 =  *4535568;
    __esp = __esp + 8;
    return _t85;
}

L0040CDE0(
    signed long long __fp0,                // r28
    intOrPtr* _a4                          // _cfa_4
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t11;                         // _t11
    intOrPtr _t15;                         // _t15
    intOrPtr _t24;                         // _t24
    intOrPtr* _t35;                        // _t35
    intOrPtr _t37;                         // _t37
    intOrPtr _t38;                         // _t38
    intOrPtr _t39;                         // _t39
    intOrPtr _t40;                         // _t40
    intOrPtr _t45;                         // _t45
    _unknown_ _t49;                        // _t49
    intOrPtr _t51;                         // _t51
    intOrPtr _t52;                         // _t52
    signed long long _t70;                 // _t70
    signed long long _t72;                 // _t72

    _t70 = __fp0;
    _t35 = _a4;
     *4417380 = 0;
    if( *_t35 == 21) {
         *4417380 = 1;
        __eax =  *((intOrPtr*)(__ecx + 68));
         *4417376 =  *((intOrPtr*)(__ecx + 68));
    }
    _push(_t35);
     *4417372 = _t35[1];
    L0040C9E0();
    __esp = __esp + 4;
    L0040C650(_t70);
    __esp = __esp - 4;
    _push(_t33);
    _push(_t49);
    _push(_t45);
    _t51 =  *4312548 -  *4535556;
     *4535540 = _t51;
    if(_t51 < 0) {
        _t51 = 0;
    }
    _t37 =  *4535596 -  *4312556;
     *4535544 = _t37;
    if(_t37 < 0) {
         *4535544 = 0;
    }
    _t40 =  *4535516;
    if(_t40 <= _t51) {
        _t38 =  *4535520;
    } else {
        _t38 =  *4535520;
        if( *4535524 != 0) {
            _t24 =  *4535544;
            if(_t38 < _t24) {
                _t40 = _t40 - _t24 + _t38;
            }
             *4535540 = _t51;
            if(_t51 != 0) {
                 *4535540 = _t51;
                _t52 = _t51 + 256;
            } else {
                _t52 = 256 - ( *4535556 & 255);
            }
             *4417276 = _t52;
             *4417288 = _t52;
            asm("fild dword [0x436708]");
            asm("fild dword [0x436708]");
            asm("fxch st0, st1");
            asm("fxch st0, st1");
            _t70 = _t70 *  *4417296 *  *4417284;
             *4535516 = _t40;
            asm("fxch st0, st1");
             *4417292 = _t70;
             *4417280 = _t70;
             *4417300 =  *4535552;
             *4417304 =  *4535556;
             *4417308 =  *4535560;
             *4417272 = _t40;
             *4417312 =  *4535564;
             *4417316 =  *4535568;
            L0040E9CC( *4535568, _t70);
            _t51 =  *4535540;
            _t40 =  *4535516;
            _t38 =  *4535520;
        }
    }
    _t11 =  *4535544;
     *4535540 = _t51;
    if(_t38 >= _t11) {
        _t11 =  *4535528;
        if(_t11 != 0) {
             *4417296 =  *4535640;
            _t45 = 256 - ( *4535576 & 255);
             *4417288 = 256;
            if(256 == 256) {
                _t45 = 0;
            }
            _t15 = _t40 + _t45;
             *4535540 = _t51;
             *4417288 = _t45;
             *4417276 = _t15;
            if(_t40 < _t51) {
                _t15 = _t51 + 256;
                _t45 = _t51 - _t40 + 256;
            }
             *4417276 = _t15;
             *4417288 = _t45;
            asm("fild dword [0x4366fc]");
            asm("fild dword [0x436708]");
            asm("fxch st0, st1");
            asm("fxch st0, st1");
            _t72 = _t70 *  *4417284 *  *4535640;
            asm("fxch st0, st1");
             *4417280 = _t72;
             *4417292 = _t72;
            _t39 = _t38 -  *4535544;
             *4417300 =  *4535572;
             *4535520 = _t39;
             *4417304 =  *4535576;
             *4417308 =  *4535580;
             *4417312 =  *4535584;
             *4417324 =  *4535636;
             *4417316 =  *4535588;
             *4417352 =  *4535532;
            _t33 =  *4535648;
             *4417356 =  *4535536;
             *4417364 =  *4535512;
             *4417336 =  *4535648;
             *4417340 =  *4535644;
             *4535516 = _t39;
             *4417272 = _t39;
            _t11 = L0040E9CC( *4535644, _t72);
        }
    }
    _pop(__edi);
    _pop(__esi);
    _pop(__ebx);
    __esp = __esp + 4;
    return _t11;
}

signed int L0040D750(
    intOrPtr _a4                           // _cfa_4
)
{
    signed int _v8;                        // _cfa_fffffff8
    intOrPtr _v12;                         // _cfa_fffffff4
    intOrPtr _v16;                         // _cfa_fffffff0
    signed int* _v20;                      // _cfa_ffffffec
    signed int _v24;                       // _cfa_ffffffe8
    intOrPtr _v28;                         // _cfa_ffffffe4
    signed int* _v32;                      // _cfa_ffffffe0
    signed int _v36;                       // _cfa_ffffffdc
    intOrPtr _v40;                         // _cfa_ffffffd8
    signed int* _v44;                      // _cfa_ffffffd4
    signed int _v48;                       // _cfa_ffffffd0
    intOrPtr _v52;                         // _cfa_ffffffcc
    signed int* _v56;                      // _cfa_ffffffc8
    intOrPtr _v60;                         // _cfa_ffffffc4
    intOrPtr _v64;                         // _cfa_ffffffc0
    signed int* _v68;                      // _cfa_ffffffbc
    signed int _v72;                       // _cfa_ffffffb8
    intOrPtr _v76;                         // _cfa_ffffffb4
    signed int* _v80;                      // _cfa_ffffffb0
    signed int _v84;                       // _cfa_ffffffac
    intOrPtr _v88;                         // _cfa_ffffffa8
    signed int* _v92;                      // _cfa_ffffffa4
    signed int _v96;                       // _cfa_ffffffa0
    intOrPtr _v100;                        // _cfa_ffffff9c
    signed int* _v104;                     // _cfa_ffffff98
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr _t150;                        // _t150
    intOrPtr _t151;                        // _t151
    intOrPtr _t152;                        // _t152
    signed int _t154;                      // _t154
    signed int _t155;                      // _t155
    intOrPtr _t156;                        // _t156
    signed int _t159;                      // _t159
    intOrPtr _t165;                        // _t165
    intOrPtr _t168;                        // _t168
    intOrPtr _t169;                        // _t169
    intOrPtr _t171;                        // _t171
    signed int _t175;                      // _t175
    signed int* _t178;                     // _t178
    intOrPtr _t183;                        // _t183
    intOrPtr _t184;                        // _t184
    signed int* _t188;                     // _t188
    _unknown_ _t190;                       // _t190
    intOrPtr _t193;                        // _t193
    signed int _t197;                      // _t197
    signed int* _t200;                     // _t200
    intOrPtr _t204;                        // _t204
    signed int* _t210;                     // _t210
    _unknown_ _t212;                       // _t212
    intOrPtr _t218;                        // _t218
    intOrPtr _t221;                        // _t221
    intOrPtr _t222;                        // _t222
    intOrPtr _t223;                        // _t223
    signed int _t227;                      // _t227
    signed int* _t230;                     // _t230
    intOrPtr _t234;                        // _t234
    intOrPtr _t235;                        // _t235
    signed int* _t239;                     // _t239
    _unknown_ _t241;                       // _t241
    intOrPtr _t243;                        // _t243
    signed int _t247;                      // _t247
    signed int* _t250;                     // _t250
    intOrPtr _t253;                        // _t253
    signed int* _t259;                     // _t259
    _unknown_ _t261;                       // _t261
    intOrPtr _t279;                        // _t279
    signed int* _t281;                     // _t281
    intOrPtr _t284;                        // _t284
    intOrPtr _t286;                        // _t286
    intOrPtr _t291;                        // _t291
    signed int* _t293;                     // _t293
    intOrPtr _t296;                        // _t296
    intOrPtr _t298;                        // _t298
    intOrPtr _t299;                        // _t299
    intOrPtr _t303;                        // _t303
    signed int _t305;                      // _t305
    intOrPtr _t306;                        // _t306
    intOrPtr _t308;                        // _t308
    intOrPtr _t310;                        // _t310
    intOrPtr _t311;                        // _t311
    intOrPtr _t313;                        // _t313
    intOrPtr _t316;                        // _t316
    intOrPtr _t317;                        // _t317
    intOrPtr _t320;                        // _t320
    intOrPtr _t322;                        // _t322
    intOrPtr _t323;                        // _t323
    signed int _t324;                      // _t324
    intOrPtr _t325;                        // _t325
    intOrPtr _t327;                        // _t327
    intOrPtr _t329;                        // _t329
    intOrPtr _t330;                        // _t330
    intOrPtr _t332;                        // _t332
    intOrPtr _t334;                        // _t334
    intOrPtr _t335;                        // _t335
    intOrPtr _t337;                        // _t337
    intOrPtr _t339;                        // _t339
    intOrPtr _t340;                        // _t340
    signed int _t341;                      // _t341
    intOrPtr _t342;                        // _t342
    intOrPtr _t346;                        // _t346
    intOrPtr _t348;                        // _t348
    intOrPtr _t359;                        // _t359
    intOrPtr _t360;                        // _t360
    intOrPtr _t362;                        // _t362
    intOrPtr _t363;                        // _t363
    intOrPtr _t364;                        // _t364
    intOrPtr _t365;                        // _t365
    intOrPtr _t368;                        // _t368
    signed int* _t369;                     // _t369
    intOrPtr _t372;                        // _t372
    signed int* _t373;                     // _t373
    intOrPtr _t375;                        // _t375
    signed int _t376;                      // _t376
    intOrPtr _t378;                        // _t378
    intOrPtr _t379;                        // _t379
    intOrPtr _t381;                        // _t381
    intOrPtr _t382;                        // _t382
    intOrPtr _t383;                        // _t383
    intOrPtr _t386;                        // _t386
    signed int* _t387;                     // _t387
    intOrPtr _t390;                        // _t390
    signed int* _t391;                     // _t391
    signed int _t392;                      // _t392
    signed int _t393;                      // _t393
    intOrPtr _t395;                        // _t395
    signed int _t398;                      // _t398
    intOrPtr _t399;                        // _t399
    intOrPtr _t400;                        // _t400
    intOrPtr _t401;                        // _t401
    intOrPtr _t402;                        // _t402
    signed int _t404;                      // _t404
    intOrPtr _t405;                        // _t405
    intOrPtr _t406;                        // _t406
    intOrPtr _t407;                        // _t407
    intOrPtr _t408;                        // _t408
    signed int _t411;                      // _t411
    intOrPtr _t412;                        // _t412
    intOrPtr _t415;                        // _t415
    intOrPtr _t420;                        // _t420
    intOrPtr _t423;                        // _t423
    intOrPtr _t426;                        // _t426
    intOrPtr _t431;                        // _t431

    _t342 = _a4;
    _t299 =  *((intOrPtr*)(_t342 + 4));
    _t150 =  *((intOrPtr*)(_t342 + 12));
    if(_t299 <= _t150) {
         *4532056 = _t150;
        _t151 =  *((intOrPtr*)(_a4 + 4));
    } else {
         *4532056 = _t299;
        _t151 =  *((intOrPtr*)(_t342 + 12));
    }
     *4532048 = _t151;
    _t152 =  *((intOrPtr*)(_a4 + 20));
    if( *4532056 >= _t152) {
        if( *4532048 > _t152) {
             *4532048 = _t152;
        }
    } else {
         *4532056 = _t152;
    }
     *4532052 = 1;
     *4532032 = 3;
     *4532040 = 5;
    if( *((intOrPtr*)(_a4 + 24)) <  *((intOrPtr*)(_a4 + 8))) {
         *4532052 = 5;
         *4532040 = 1;
    }
    _t346 = _a4;
    _t154 =  *4532052;
    _t303 =  *((intOrPtr*)(_t346 + 16));
    if( *((intOrPtr*)(_t346 + 4 + _t154 * 4)) <= _t303) {
        _t155 =  *4532040;
        if( *((intOrPtr*)(_a4 + 4 + _t155 * 4)) < _t303) {
             *4532040 = 3;
             *4532032 = _t155;
        }
    } else {
         *4532052 = 3;
         *4532032 = _t154;
    }
    _t348 = _a4;
    _t411 =  *4532052 << 2;
    _t305 =  *4532040 << 2;
    _t395 =  *((intOrPtr*)(_t348 + _t411 + 4));
    _t156 =  *((intOrPtr*)(_t348 + _t305 + 4));
    if(( *4532048 -  *4312544 |  *4312556 - _t156 |  *4312552 -  *4532056 | _t395 -  *4312548) < 0) {
        _t159 =  *4532056 -  *4312544;
        if(( *4312552 -  *4532048 |  *4312556 - _t395 | _t156 -  *4312548 | _t159) < 0) {
            return _t159;
        } else {
            _t359 = _a4;
            _t398 =  *4532032 << 2;
             *4434196 =  *((intOrPtr*)(_t359 + _t411));
             *4434200 =  *((intOrPtr*)(_t359 + _t411 + 4));
             *4434204 =  *((intOrPtr*)(_t359 + _t398));
             *4434208 =  *((intOrPtr*)(_t359 + _t398 + 4));
             *4434212 =  *((intOrPtr*)(_t359 + _t305));
             *4434216 =  *((intOrPtr*)(_t359 + _t305 + 4));
            _t360 =  *((intOrPtr*)(_t359 + 28));
             *4434220 =  *((intOrPtr*)(_t411 + _t360 - 4));
             *4434224 =  *((intOrPtr*)(_t411 + _t360));
            _t412 =  *((intOrPtr*)(_t398 + _t360 - 4));
             *4434228 = _t412;
             *4434232 =  *((intOrPtr*)(_t398 + _t360));
            _t165 =  *4312484;
            _t279 =  *((intOrPtr*)(_t305 + _t360 - 4));
             *4434236 = _t279;
            _t306 =  *((intOrPtr*)(_t305 + _t360));
             *4434240 = _t306;
             *4532044 = _t165;
            _push(_t398);
            _push(_t412);
            _push(_t165);
            _push(_t279);
            _push(_t306);
            _push(_t360);
            L00456B20();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t308 =  *4434200;
            _t362 =  *4434204;
             *4434252 =  *((intOrPtr*)(_a4 + 32));
             *4531996 = _t308;
             *4532000 = _t362;
             *4531992 =  *4434196;
            _t168 =  *4434208;
             *4532004 = _t168;
            if( *4434272 <= 0) {
                _t363 =  *4434224;
                _t169 =  *4434228;
                 *4532008 =  *4434220;
                _t310 =  *4434232;
                 *4532012 = _t363;
                 *4532016 = _t169;
                 *4532020 = _t310;
                _push(_t398);
                _push(_t412);
                _push(_t169);
                _push(_t279);
                _push(_t310);
                _push(_t363);
                L00456CE0();
                _pop(__edx);
                _pop(__ecx);
                _pop(__ebx);
                _pop(__eax);
                _pop(__esi);
                _pop(__edi);
                _t311 =  *4434200;
                _t364 =  *4434212;
                 *4531992 =  *4434196;
                _t171 =  *4434216;
                 *4531996 = _t311;
                 *4532000 = _t364;
                 *4532004 = _t171;
                _push(_t398);
                _push(4531992);
                _push(_t171);
                _push( *4535508);
                _push(_t311);
                _push(_t364);
                _t281 =  *4535504;
                L00456E00();
                _pop(__edx);
                _pop(__ecx);
                _pop(__ebx);
                _pop(__eax);
                _pop(__esi);
                _pop(__edi);
                _t365 =  *4535508;
                _t313 =  *4532044 +  *( *4535504) *  *4312560;
                 *4532044 = _t313;
                _t175 =  *(_t365 + 4);
                _v8 = _t175;
                _v24 = _t175;
                _v28 = _t365 + 8;
                _t178 =  &(( *4535504)[2]);
                _v32 = _t178;
                _push(_t398);
                _push(4531992);
                _push(_t178);
                _push(_t281);
                _push(_t313);
                _push(_t365);
                _t415 = _v28;
                _t399 =  *4532044;
                L00410D5C(_v32, _v24, _t399, _t415);
                 *4532044 = _t399;
                _pop(__edx);
                _pop(__ecx);
                _pop(__ebx);
                _pop(__eax);
                _pop(__esi);
                _pop(__edi);
                 *4531992 =  *4434204;
                 *4531996 =  *4434208;
                 *4532000 =  *4434212;
                _t368 =  *4434232;
                 *4532004 =  *4434216;
                _t183 =  *4434236;
                 *4532008 =  *4434228;
                _t316 =  *4434240;
                 *4532012 = _t368;
                 *4532016 = _t183;
                 *4532020 = _t316;
                _push(_t399);
                _push(_t415);
                _push(_t183);
                _push(_t281);
                _push(_t316);
                _push(_t368);
                L00456CE0();
                _pop(__edx);
                _pop(__ecx);
                _pop(__ebx);
                _pop(__eax);
                _pop(__esi);
                _pop(__edi);
                _t184 =  *4535508;
                _t369 =  *4535504;
                _t317 =  *((intOrPtr*)(_t184 + 4));
                _v12 = _t317;
                _v16 = _t184 + 8;
                _t188 =  &(( &(_t369[_v8]))[2]);
                _v20 = _t188;
                _push(_t399);
                _push(4531992);
                _push(_t188);
                _push( *4535508);
                _push(_t317);
                _push(_t369);
                _t400 =  *4532044;
                _t190 = L00410D5C(_v20, _v12, _t400, _v16);
                 *4532044 = _t400;
                _pop(__edx);
                _pop(__ecx);
                _pop(__ebx);
                _pop(__eax);
                _pop(__esi);
                _pop(__edi);
                return _t190;
            }
            _push(_t398);
            _push(_t412);
            _push(_t168);
            _push(_t279);
            _push(_t308);
            _push(_t362);
            L00456E00();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
             *4531992 =  *4434196;
             *4531996 =  *4434200;
             *4532000 =  *4434212;
            _t372 =  *4434224;
             *4532004 =  *4434216;
            _t193 =  *4434236;
             *4532008 =  *4434220;
            _t320 =  *4434240;
             *4532012 = _t372;
             *4532016 = _t193;
             *4532020 = _t320;
            _push(_t398);
            _push(4531992);
            _push(_t193);
            _push( *4535504);
            _push(_t320);
            _push(_t372);
            _t284 =  *4535508;
            L00456CE0();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t373 =  *4535504;
            _t322 =  *4532044 +  *( *4535504) *  *4312560;
             *4532044 = _t322;
            _t197 = _t373[1];
            _v8 = _t197;
            _v48 = _t197;
            _v52 =  *4535508 + 8;
            _t200 =  &(_t373[2]);
            _v56 = _t200;
            _push(_t398);
            _push(4531992);
            _push(_t200);
            _push(_t284);
            _push(_t322);
            _push(_t373);
            _t420 = _v52;
            _t401 =  *4532044;
            L00410D5C(_v56, _v48, _t401, _t420);
             *4532044 = _t401;
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t323 =  *4434208;
            _t375 =  *4434212;
             *4531992 =  *4434204;
            _t204 =  *4434216;
             *4531996 = _t323;
             *4532000 = _t375;
             *4532004 = _t204;
            _push(_t401);
            _push(_t420);
            _push(_t204);
            _push(_t284);
            _push(_t323);
            _push(_t375);
            L00456E00();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t376 = _v8;
            _t286 =  *4535508;
            _t324 = ( *4535504)[1];
            _v36 = _t324;
            _v40 = _t286 + (_t376 + _t376 * 2) * 4 + 8;
            _t210 =  &(( *4535504)[2]);
            _v44 = _t210;
            _push(_t401);
            _push(4531992);
            _push(_t210);
            _push(_t286);
            _push(_t324);
            _push(_t376);
            _t402 =  *4532044;
            _t212 = L00410D5C(_v44, _v36, _t402, _v40);
             *4532044 = _t402;
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            return _t212;
        }
    } else {
        _t378 = _a4;
        _t404 =  *4532032 << 2;
         *4434196 =  *((intOrPtr*)(_t378 + _t411));
         *4434200 =  *((intOrPtr*)(_t378 + _t411 + 4));
         *4434204 =  *((intOrPtr*)(_t378 + _t404));
         *4434208 =  *((intOrPtr*)(_t378 + _t404 + 4));
         *4434212 =  *((intOrPtr*)(_t378 + _t305));
         *4434216 =  *((intOrPtr*)(_t378 + _t305 + 4));
        _t379 =  *((intOrPtr*)(_t378 + 28));
         *4434220 =  *((intOrPtr*)(_t411 + _t379 - 4));
         *4434224 =  *((intOrPtr*)(_t411 + _t379));
        _t423 =  *((intOrPtr*)(_t404 + _t379 - 4));
         *4434228 = _t423;
         *4434232 =  *((intOrPtr*)(_t404 + _t379));
        _t218 =  *4312484;
        _t291 =  *((intOrPtr*)(_t305 + _t379 - 4));
         *4434236 = _t291;
        _t325 =  *((intOrPtr*)(_t305 + _t379));
         *4434240 = _t325;
         *4532044 = _t218;
        _push(_t404);
        _push(_t423);
        _push(_t218);
        _push(_t291);
        _push(_t325);
        _push(_t379);
        L00456B20();
        _pop(__edx);
        _pop(__ecx);
        _pop(__ebx);
        _pop(__eax);
        _pop(__esi);
        _pop(__edi);
        _t327 =  *4434200;
        _t381 =  *4434204;
         *4434252 =  *((intOrPtr*)(_a4 + 32));
         *4531996 = _t327;
         *4532000 = _t381;
         *4531992 =  *4434196;
        _t221 =  *4434208;
         *4532004 = _t221;
        if( *4434272 <= 0) {
            _t382 =  *4434224;
            _t222 =  *4434228;
             *4532008 =  *4434220;
            _t329 =  *4434232;
             *4532012 = _t382;
             *4532016 = _t222;
             *4532020 = _t329;
            _push(_t404);
            _push(_t423);
            _push(_t222);
            _push(_t291);
            _push(_t329);
            _push(_t382);
            L00456C70();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t223 =  *4434212;
            _t330 =  *4434216;
             *4532000 = _t223;
             *4532004 = _t330;
            _push(_t404);
            _push(4531992);
            _push(_t223);
            _push( *4535508);
            _push(_t330);
            _push(_t382);
            _t293 =  *4535504;
            L00456CB0();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t383 =  *4535508;
            _t332 =  *4532044 +  *( *4535504) *  *4312560;
             *4532044 = _t332;
            _t227 =  *(_t383 + 4);
            _v8 = _t227;
            _v72 = _t227;
            _v76 = _t383 + 8;
            _t230 =  &(( *4535504)[2]);
            _v80 = _t230;
            _push(_t404);
            _push(4531992);
            _push(_t230);
            _push(_t293);
            _push(_t332);
            _push(_t383);
            _t426 = _v76;
            _t405 =  *4532044;
            L00410D5C(_v80, _v72, _t405, _t426);
             *4532044 = _t405;
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
             *4531992 =  *4434204;
            _t234 =  *4434232;
             *4531996 =  *4434208;
            _t334 =  *4434236;
             *4532008 =  *4434228;
            _t386 =  *4434240;
             *4532012 = _t234;
             *4532016 = _t334;
             *4532020 = _t386;
            _push(_t405);
            _push(_t426);
            _push(_t234);
            _push(_t293);
            _push(_t334);
            _push(_t386);
            L00456C70();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t235 =  *4535508;
            _t387 =  *4535504;
            _t335 =  *((intOrPtr*)(_t235 + 4));
            _v60 = _t335;
            _v64 = _t235 + 8;
            _t239 =  &(( &(_t387[_v8]))[2]);
            _v68 = _t239;
            _push(_t405);
            _push(4531992);
            _push(_t239);
            _push( *4535508);
            _push(_t335);
            _push(_t387);
            _t406 =  *4532044;
            _t241 = L00410D5C(_v68, _v60, _t406, _v64);
             *4532044 = _t406;
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            return _t241;
        } else {
            _push(_t404);
            _push(_t423);
            _push(_t221);
            _push(_t291);
            _push(_t327);
            _push(_t381);
            L00456CB0();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
             *4532000 =  *4434212;
            _t243 =  *4434224;
             *4532004 =  *4434216;
            _t337 =  *4434236;
             *4532008 =  *4434220;
            _t390 =  *4434240;
             *4532012 = _t243;
             *4532016 = _t337;
             *4532020 = _t390;
            _push(_t404);
            _push(4531992);
            _push(_t243);
            _push( *4535504);
            _push(_t337);
            _push(_t390);
            _t296 =  *4535508;
            L00456C70();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t391 =  *4535504;
            _t339 =  *4532044 +  *( *4535504) *  *4312560;
             *4532044 = _t339;
            _t247 = _t391[1];
            _v8 = _t247;
            _v96 = _t247;
            _v100 =  *4535508 + 8;
            _t250 =  &(_t391[2]);
            _v104 = _t250;
            _push(_t404);
            _push(4531992);
            _push(_t250);
            _push(_t296);
            _push(_t339);
            _push(_t391);
            _t431 = _v100;
            _t407 =  *4532044;
            _t392 = _v96;
            L00410D5C(_v104, _t392, _t407, _t431);
             *4532044 = _t407;
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t253 =  *4434204;
            _t340 =  *4434208;
             *4531992 = _t253;
             *4531996 = _t340;
            _push(_t407);
            _push(_t431);
            _push(_t253);
            _push(_t296);
            _push(_t340);
            _push(_t392);
            L00456CB0();
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            _t393 = _v8;
            _t298 =  *4535508;
            _t341 = ( *4535504)[1];
            _v84 = _t341;
            _v88 = _t298 + (_t393 + _t393 * 2) * 4 + 8;
            _t259 =  &(( *4535504)[2]);
            _v92 = _t259;
            _push(_t407);
            _push(4531992);
            _push(_t259);
            _push(_t298);
            _push(_t341);
            _push(_t393);
            _t408 =  *4532044;
            _t261 = L00410D5C(_v92, _v84, _t408, _v88);
             *4532044 = _t408;
            _pop(__edx);
            _pop(__ecx);
            _pop(__ebx);
            _pop(__eax);
            _pop(__esi);
            _pop(__edi);
            return _t261;
        }
    }
}

signed int L0040E79B(
    _unknown_ __esi                        // r5
)
{
    signed int _t23;                       // _t23
    signed int _t26;                       // _t26
    intOrPtr _t30;                         // _t30
    intOrPtr* _t39;                        // _t39
    signed int _t52;                       // _t52
    intOrPtr _t53;                         // _t53
    intOrPtr* _t55;                        // _t55
    intOrPtr _t56;                         // _t56
    intOrPtr _t57;                         // _t57
    intOrPtr* _t61;                        // _t61
    signed int _t63;                       // _t63
    _unknown_ _t64;                        // _t64
    intOrPtr* _t65;                        // _t65
    intOrPtr _t66;                         // _t66
    signed int _t69;                       // _t69

     *4407588 = 0;
     *4407594 = 0;
    _t63 =  *4407604;
    if(_t63 >=  *4312500) {
L3:
        _t64 = _t63 +  *4407580;
        if(_t64 <=  *4312508) {
L5:
             *4407556 = 0;
             *4407548 = 0;
             *4407552 =  *4407604 *  *4312560;
            _t65 = 4407608;
            do {
                _t26 =  *4407600;
                 *(_t65 + 8) = _t26;
                _t52 =  *4407592 -  *4407586;
                if(_t52 != 0) {
                    asm("cdq");
                    _t26 = ( *4407596 -  *4407600) / _t52;
                     *(_t65 + 12) = _t26;
                }
                _t53 =  *4407586;
                _t56 =  *4407592;
                if(_t53 >=  *4312496) {
L11:
                    if(_t56 <=  *4312504) {
L14:
                        _t65[1] = _t56 - _t53;
                        _t30 = _t53 +  *4407552;
                         *4407556 = _t30;
                         *_t65 = _t30 -  *4407556;
                        _t65 = _t65 + 16;
                         *4407548 =  *4407548 + 1;
                    } else {
                        if(_t53 <=  *4312504) {
                             *(_t65 + 8) =  *(_t65 + 8) + _t26 * (_t56 -  *4312504);
                            _t56 =  *4312504;
                            goto L14;
                        }
                    }
                } else {
                    if(_t56 >=  *4312496) {
                        _t53 =  *4312496;
                        goto L11;
                    }
                }
                 *4407552 =  *4407552 +  *4312560;
                 *4407596 =  *4407596 +  *4407568;
                 *4407600 =  *4407600 +  *4407572;
                 *4407590 =  *4407590 +  *4407564;
                _t23 =  *4407560;
                 *4407584 =  *4407584 + _t23;
                 *4407580 =  *4407580 - 1;
            } while( *4407580 >= 0);
            if( *4407548 != 0) {
                _t61 = 4407608;
                _t66 =  *4312484;
                do {
                    _t66 = _t66 +  *_t61;
                    _t55 = _t61[2];
                    asm("ror ebx, 0x8");
                    asm("ror esi, 0x8");
                    _t57 = _t61[1];
                    _t61 = _t61 + 16;
                    _t39 = _t55;
                    do {
                        asm("adc ebx, esi");
                         *((char*)(_t66 + _t57)) =  *_t39;
                        _t57 = _t57 - 1;
                        _t39 = _t55;
                    } while(_t57 >= 0);
                     *4407548 =  *4407548 - 1;
                } while( *4407548 != 0);
            }
        } else {
             *4407580 =  *4407580 - _t64 -  *4312508;
            if( *4407580 >= 0) {
                goto L5;
            }
        }
    } else {
        _t69 =  ~(_t63 -  *4312500);
         *4407580 =  *4407580 - _t69;
        if( *4407580 >= 0) {
             *4407590 =  *4407590 +  *4407564 * _t69;
             *4407584 =  *4407584 +  *4407560 * _t69;
             *4407596 =  *4407596 +  *4407568 * _t69;
            _t23 =  *4407572 * _t69;
             *4407600 =  *4407600 + _t23;
            _t63 =  *4312500;
             *4407604 = _t63;
            goto L3;
        }
    }
    return _t23;
}

L0040E9CC(
    _unknown_ __eax,                       // r0
    _unknown_ __fp0                        // r28
)
{
    intOrPtr _t130;                        // _t130
    signed int _t135;                      // _t135
    signed int _t147;                      // _t147
    signed int _t148;                      // _t148
    signed int _t149;                      // _t149
    signed int _t152;                      // _t152
    unsigned int _t155;                    // _t155
    unsigned int _t157;                    // _t157
    signed int _t175;                      // _t175
    signed int _t244;                      // _t244
    signed int _t281;                      // _t281
    signed int _t282;                      // _t282
    signed int _t292;                      // _t292
    signed int _t293;                      // _t293
    intOrPtr _t299;                        // _t299
    unsigned int _t301;                    // _t301
    signed int _t303;                      // _t303
    intOrPtr _t308;                        // _t308
    intOrPtr _t315;                        // _t315
    unsigned int _t317;                    // _t317
    unsigned int _t325;                    // _t325
    signed int _t327;                      // _t327
    signed int _t331;                      // _t331
    signed int _t364;                      // _t364
    unsigned int _t366;                    // _t366
    signed int _t375;                      // _t375
    signed int _t376;                      // _t376
    signed int _t380;                      // _t380
    signed int _t382;                      // _t382
    signed int _t383;                      // _t383
    signed int _t384;                      // _t384
    signed int _t386;                      // _t386
    signed int _t445;                      // _t445
    signed int _t446;                      // _t446
    signed int _t448;                      // _t448
    signed int _t450;                      // _t450
    signed int _t451;                      // _t451
    signed int _t452;                      // _t452
    signed int _t454;                      // _t454
    signed int _t455;                      // _t455
    signed int _t489;                      // _t489
    signed int _t490;                      // _t490
    signed int _t496;                      // _t496
    signed int _t499;                      // _t499
    signed int _t525;                      // _t525
    signed int _t526;                      // _t526
    _unknown_ _t537;                       // _t537
    _unknown_ _t541;                       // _t541
    _unknown_ _t545;                       // _t545
    signed int _t553;                      // _t553
    signed int _t556;                      // _t556
    signed int _t558;                      // _t558
    signed int _t561;                      // _t561
    intOrPtr _t566;                        // _t566
    signed int _t570;                      // _t570
    signed int _t572;                      // _t572
    signed int _t575;                      // _t575
    signed int _t576;                      // _t576
    signed long long _t608;                // _t608
    signed long long _t609;                // _t609
    signed long long _t617;                // _t617
    signed long long _t618;                // _t618
    signed long long _t628;                // _t628
    signed int _t649;                      // _t649
    signed int _t681;                      // _t681

    asm("wait");
    asm("fninit");
    asm("fnstcw word [0x4366c8]");
     *4417226 =  *4417224 & 64767;
    asm("fldcw word [0x4366ca]");
    _t130 =  *4417288;
    if(_t130 >  *4417272) {
L15:
        asm("wait");
        asm("fninit");
        asm("fldcw word [0x4366c8]");
        asm("wait");
        return _t130;
    } else {
        goto L1;
    }
    while(1) {
L1:
        asm("fild dword [0x4366fc]");
        asm("fiadd dword [0x436768]");
         *4417436 =  *4417276 +  *4417388;
        asm("fistp dword [0x436798]");
        asm("fild dword [0x436708]");
        asm("fiadd dword [0x436714]");
         *4417476 =  *4417288 +  *4417304;
        asm("fistp dword [0x4367c0]");
        _t608 = st0 *  *4417332 +  *4417328;
        asm("fdivp st1, st0");
        if(( *4417368 & -1) != 0) {
            goto L5;
        }
        _t135 =  *4417432;
        _t282 =  *4312544;
        if(_t135 >=  *4312552 || _t282 >  *4417472) {
L12:
             *4417212 = _t608;
            goto L13;
        } else {
L7:
            if(((_t135 >> 8) - ( *4417472 >> 8) & -1) == 0) {
                goto L12;
            }
            asm("fimul dword [0x436740]");
            asm("fiadd dword [0x436774]");
            asm("fistp dword [0x43677c]");
            asm("fimul dword [0x436744]");
            asm("fiadd dword [0x436778]");
            asm("fistp dword [0x436780]");
            asm("fimul dword [0x436750]");
            asm("fiadd dword [0x436770]");
            asm("fistp dword [0x4367b0]");
            asm("fdivp st1, st0");
            if(( *4417368 & -1) != 0) {
                 *4417480 =  *4417432 -  *4417472;
            } else {
                 *4417480 =  *4417472 -  *4417432;
            }
            _t617 = st0;
            asm("fimul dword [0x436748]");
            asm("fiadd dword [0x436720]");
            asm("fistp dword [0x436784]");
            asm("fimul dword [0x43674c]");
            asm("fiadd dword [0x436724]");
            asm("fistp dword [0x436788]");
            asm("fimul dword [0x436754]");
            asm("fiadd dword [0x43671c]");
            asm("fistp dword [0x4367b4]");
            if(( *4417368 & -1) == 0) {
                 *4417456 =  *4417460;
                 *4417460 =  *4417456;
                 *4417432 =  *4417472;
                 *4417436 =  *4417476;
                 *4417472 =  *4417432;
                 *4417476 =  *4417436;
                 *4417404 =  *4417412;
                 *4417408 =  *4417416;
                 *4417412 =  *4417404;
                 *4417416 =  *4417408;
            }
             *4417492 =  *4417460 -  *4417456;
            asm("fld1");
            asm("fidiv dword [0x4367b0]");
             *4417464 =  *4417412 -  *4417404;
             *4417468 =  *4417416 -  *4417408;
            _t147 =  *4417432 - ( *4417472 & -256) - 256 + (256 - ( *4417472 & 255) & 256);
             *4417452 = _t147;
            asm("fild dword [0x4367b4]");
            asm("fimul dword [0x4367c8]");
            _t618 = _t617 * st1;
             *4417484 = _t618;
            asm("fild dword [0x4367d4]");
            asm("fchs");
            asm("fmulp st1, st0");
             *4417488 = _t618;
            _t292 =  *4417472;
            _t375 =  *4312544;
            if(_t292 < _t375) {
                 *4417452 = _t147 - (_t375 & -256) - (_t292 & -256);
                 *4417472 =  *4312544;
            }
            asm("fild dword [0x4367ac]");
            asm("fdivp st1, st0");
            _t148 =  *4417432;
            _t293 = _t148;
            _t149 = _t148 & 255;
             *4417452 = _t149;
            _t376 =  *4312552;
            if(_t293 >= _t376) {
                 *4417452 = _t149 + (_t293 & -256) - (_t376 & -256);
                 *4417432 = _t376;
            }
            asm("fimul dword [0x4367b8]");
            asm("fiadd dword [0x43677c]");
            asm("fistp dword [0x436784]");
            asm("fimul dword [0x4367bc]");
            asm("fiadd dword [0x436780]");
            asm("fistp dword [0x436788]");
            asm("fimul dword [0x4367d4]");
            asm("fiadd dword [0x4367b0]");
            asm("fistp dword [0x4367b4]");
            asm("fild dword [0x4367ac]");
            asm("fdivp st1, st0");
            _t152 = ( *4417432 & -256) - 256;
             *4417432 = _t152;
             *4417440 = (_t152 >> 8) - ( *4417472 >> 8);
            _t608 = st0;
            asm("fimul dword [0x4367b8]");
            asm("fiadd dword [0x43677c]");
            asm("fistp dword [0x43677c]");
            asm("fimul dword [0x4367bc]");
            asm("fiadd dword [0x436780]");
            asm("fistp dword [0x436780]");
            asm("fimul dword [0x4367d4]");
            asm("fiadd dword [0x4367b0]");
            asm("fistp dword [0x4367b0]");
            _t155 =  *4417432;
            if(_t155 <  *4312544 || _t155 >=  *4312552) {
L13:
                 *4417276 =  *4417276 + 256;
                 *4417288 =  *4417288 + 256;
                asm("fild dword [0x4366fc]");
                _t609 = _t608 *  *4417284;
                 *4417280 = _t609;
                asm("fild dword [0x436708]");
                 *4417292 = _t609 *  *4417296;
                _t130 =  *4417288;
                if(_t130 >  *4417272) {
                    goto L15;
                }
                continue;
            } else {
                _t157 =  *4417436 - 256;
                if(_t157 <  *4312548 || _t157 >=  *4312556) {
                    goto L13;
                } else {
                     *4417436 = _t157;
                    asm("fld1");
                    asm("fidiv dword [0x4367b0]");
                     *4417420 =  *4417404 << 16 |  *4417408;
                     *4417428 =  *4417372;
                    asm("fild dword [0x4367b4]");
                    asm("fimul dword [0x4367a0]");
                    _t628 = _t608 * st1;
                     *4417444 = _t628;
                    asm("fild dword [0x4367b0]");
                    asm("fisub dword [0x4367b4]");
                    asm("fmulp st1, st0");
                     *4417448 = _t628;
                     *4417424 = ( *4417436 >> 8) *  *4312560 +  *4312484;
                    if(( *4417380 & 1) != 0) {
L28:
                        asm("fild dword [0x436784]");
                        asm("fild dword [0x43677c]");
                        asm("fsubp st1, st0");
                        asm("fistp dword [0x4366f0]");
                        asm("fild dword [0x436788]");
                        asm("fild dword [0x436780]");
                        asm("fsubp st1, st0");
                        asm("fistp dword [0x4366f4]");
                        if(( *4417268 & -1) == 0) {
                             *4417268 = 1;
                        }
                        asm("fild dword [0x4366f0]");
                        asm("fild dword [0x4366f4]");
                        asm("fdivp st1, st0");
                        _t496 =  *4417420;
                        _t380 =  *4417440 + 1;
                        _t556 =  *4417424 + ( *4417432 >> 8) + 1;
                        if(_t380 < 16) {
L69:
                            asm("fild dword [0x4366f0]");
                            asm("fild dword [0x4366f4]");
                            _t608 = _t628 *  *(4417496 + _t380 * 4) *  *(4417496 + _t380 * 4);
                            _t558 = _t556 - _t380 - 1;
                            asm("fxch st0, st1");
                            asm("fistp dword [0x4366bc]");
                            asm("fistp dword [0x4366bc]");
                            _t570 =  *4417212 << 16 |  *4417212 & 65535;
                            _t499 =  *4417420;
                            _t299 =  *4417376;
                            do {
                                _t499 = _t499 + _t570;
                                 *((char*)(_t558 + _t380)) =  *((intOrPtr*)(_t299 +  *((intOrPtr*)(_t558 + _t380))));
                                _t380 = _t380 - 1;
                            } while(_t380 > 0);
                            goto L71;
                        } else {
                             *4417236 = _t628;
                            asm("fild dword [0x4366f4]");
                            _t628 =  *4417448;
                            _t175 = _t556 & 3;
                             *4417212 = _t175;
                            asm("fild dword [0x4366bc]");
                            asm("fild dword [0x4366c4]");
                             *4417256 = _t380 - _t175;
                            _t382 = _t175;
                            if((_t382 & 3) == 0) {
                                _t383 =  *4417256;
                                _t301 = _t383 >> 4;
                                _t384 = _t383 & 15;
                                if(_t384 <= 0) {
                                    _t384 = 16;
                                    _t301 = _t301 - 1;
                                }
                                 *4417256 = _t301;
                                 *4417260 = _t384;
                                if(_t301 >= 1) {
                                    asm("fxch st0, st1");
                                    asm("fxch st0, st1");
                                    asm("fdivp st1, st0");
L65:
                                    asm("fistp dword [0x4366bc]");
                                    asm("fistp dword [0x4366bc]");
                                    _t303 =  *4417212 +  *4417404;
                                    _t386 =  *4417212 +  *4417408;
                                    asm("fxch st0, st1");
                                    asm("fxch st0, st1");
                                    do {
                                         *4417212 = _t496;
                                         *4417232 = _t303 << 16 | _t386 & 65535;
                                        _t308 =  *4417376;
                                        asm("fxch st0, st1");
                                        asm("fxch st0, st1");
                                         *(_t556 - 1) =  *((intOrPtr*)(_t308 +  *(_t556 - 1)));
                                         *(_t556 - 2) =  *((intOrPtr*)(_t308 +  *(_t556 - 2)));
                                         *(_t556 - 3) =  *((intOrPtr*)(_t308 +  *(_t556 - 3)));
                                         *(_t556 - 4) =  *((intOrPtr*)(_t308 +  *(_t556 - 4)));
                                        asm("fdivp st1, st0");
                                         *(_t556 - 5) =  *((intOrPtr*)(_t308 +  *(_t556 - 5)));
                                         *(_t556 - 6) =  *((intOrPtr*)(_t308 +  *(_t556 - 6)));
                                         *(_t556 - 7) =  *((intOrPtr*)(_t308 +  *(_t556 - 7)));
                                         *(_t556 - 8) =  *((intOrPtr*)(_t308 +  *(_t556 - 8)));
                                         *(_t556 - 9) =  *((intOrPtr*)(_t308 +  *(_t556 - 9)));
                                         *(_t556 - 10) =  *((intOrPtr*)(_t308 +  *(_t556 - 10)));
                                         *(_t556 - 11) =  *((intOrPtr*)(_t308 +  *(_t556 - 11)));
                                         *(_t556 - 12) =  *((intOrPtr*)(_t308 +  *(_t556 - 12)));
                                        asm("fxch st0, st1");
                                        _t649 = st0 * st5 + st2 + st2;
                                        asm("fxch st0, st1");
                                         *(_t556 - 13) =  *((intOrPtr*)(_t308 +  *(_t556 - 13)));
                                         *(_t556 - 14) =  *((intOrPtr*)(_t308 +  *(_t556 - 14)));
                                         *4417212 = _t649;
                                        asm("fxch st0, st2");
                                        _t608 = _t649 +  *4417252;
                                        asm("fxch st0, st2");
                                        _t496 =  *4417232;
                                         *(_t556 - 15) =  *((intOrPtr*)(_t308 +  *(_t556 - 15)));
                                         *(_t556 - 16) =  *((intOrPtr*)(_t308 +  *(_t556 - 16)));
                                        _t303 =  *4417212 +  *4417404;
                                         *4417212 = _t608;
                                        _t556 = _t556 - 16;
                                        _t386 =  *4417212 +  *4417408;
                                         *4417256 =  *4417256 - 1;
                                    } while( *4417256 != 0);
                                    if( *4417260 >= 17) {
L71:
                                        asm("wait");
                                        asm("fninit");
                                        asm("fldcw word [0x4366c8]");
                                        asm("wait");
                                        goto L13;
                                    }
                                    goto L68;
                                } else {
L68:
                                     *4417264 =  *4417264 - (_t496 >> 16) - ( *4417420 >> 16);
                                     *4417268 =  *4417268 - (_t496 & 65535) - ( *4417420 & 65535);
                                     *4417420 = _t496;
                                    _t380 =  *4417260;
                                    goto L69;
                                }
                            }
                            asm("fdivp st1, st0");
                            asm("fistp dword [0x4366bc]");
                            asm("fistp dword [0x4366bc]");
                            _t572 =  *4417212 << 16 |  *4417212 & 65535;
                            _t525 =  *4417420;
                            asm("fxch st0, st1");
                            asm("fxch st0, st1");
                            _t628 = st3 * st3 + st6;
                            asm("fdivp st1, st0");
                            _t315 =  *4417376;
                            do {
                                _t525 = _t525 + _t572;
                                 *(_t556 - 1) =  *((intOrPtr*)(_t315 +  *(_t556 - 1)));
                                _t556 = _t556 - 1;
                                _t382 = _t382 - 1;
                            } while(_t382 != 0);
                            _t445 =  *4417256;
                            _t317 = _t445 >> 4;
                            _t446 = _t445 & 15;
                            if(_t446 <= 0) {
                                _t446 = 16;
                                _t317 = _t317 - 1;
                            }
                             *4417256 = _t317;
                             *4417260 = _t446;
                            if(_t317 >= 1) {
                                goto L65;
                            } else {
                                 *4417212 = _t628;
                                goto L68;
                            }
                        }
                    }
                    asm("fild dword [0x436784]");
                    asm("fild dword [0x43677c]");
                    asm("fsubp st1, st0");
                    asm("fistp dword [0x4366f0]");
                    asm("fild dword [0x436788]");
                    asm("fild dword [0x436780]");
                    asm("fsubp st1, st0");
                    asm("fistp dword [0x4366f4]");
                    if(( *4417268 & -1) == 0) {
                         *4417268 = 1;
                    }
                    asm("fild dword [0x4366f0]");
                    asm("fild dword [0x4366f4]");
                    asm("fdivp st1, st0");
                    _t526 =  *4417420;
                    _t566 =  *4417428;
                    _t448 =  *4417440 + 1;
                    _t561 =  *4417424 + ( *4417432 >> 8) + 1;
                    if(_t448 < 16) {
L48:
                        asm("fild dword [0x4366f0]");
                        asm("fild dword [0x4366f4]");
                        _t608 = _t628 *  *(4417496 + _t448 * 4) *  *(4417496 + _t448 * 4);
                        asm("fxch st0, st1");
                        asm("fistp dword [0x4366bc]");
                        asm("fistp dword [0x4366bc]");
                        goto __eax;
                    } else {
                         *4417236 = _t628;
                        asm("fild dword [0x4366f4]");
                        _t628 =  *4417448;
                        _t244 = _t561 & 3;
                         *4417212 = _t244;
                        asm("fild dword [0x4366bc]");
                        asm("fild dword [0x4366c4]");
                         *4417256 = _t448 - _t244;
                        _t450 = _t244;
                        if((_t450 & 3) == 0) {
                            _t451 =  *4417256;
                            _t325 = _t451 >> 4;
                            _t452 = _t451 & 15;
                            if(_t452 <= 0) {
                                _t452 = 16;
                                _t325 = _t325 - 1;
                            }
                             *4417256 = _t325;
                             *4417260 = _t452;
                            if(_t325 >= 1) {
                                asm("fxch st0, st1");
                                asm("fxch st0, st1");
                                asm("fdivp st1, st0");
L44:
                                asm("fistp dword [0x4366bc]");
                                asm("fistp dword [0x4366bc]");
                                _t327 =  *4417212 +  *4417404;
                                _t454 =  *4417212 +  *4417408;
                                asm("fxch st0, st1");
                                asm("fxch st0, st1");
                                do {
                                     *4417212 = _t526;
                                    _t455 = _t454 & 65535;
                                     *4417232 = _t327 << 16 | _t455;
                                    _t331 = _t327 - (_t526 >> 16) >> 4 << 16 | _t455 - (_t526 & 65535) >> 4 & 65535;
                                    _t575 = _t331;
                                    asm("fxch st0, st1");
                                    asm("fxch st0, st1");
                                    asm("fdivp st1, st0");
                                    _t537 =  *4417212 - _t331 + _t575 + _t575 + _t575 + _t575;
                                     *(_t561 - 4) =  *((intOrPtr*)(_t566 + _t537));
                                    _t541 = _t537 + _t575 + _t575 + _t575 + _t575;
                                     *(_t561 - 8) =  *((intOrPtr*)(_t566 + _t541));
                                    asm("fxch st0, st1");
                                    _t681 = st0 * st5 + st2 + st2;
                                    asm("fxch st0, st1");
                                     *4417212 = _t681;
                                    _t545 = _t541 + _t575 + _t575 + _t575 + _t575;
                                    asm("fxch st0, st2");
                                    _t608 = _t681 +  *4417252;
                                    asm("fxch st0, st2");
                                     *(_t561 - 12) =  *((intOrPtr*)(_t566 + _t545));
                                    _t327 =  *4417212 +  *4417404;
                                    _t526 =  *4417232;
                                     *4417212 = _t608;
                                    _t454 =  *4417212 +  *4417408;
                                     *(_t561 - 16) =  *((intOrPtr*)(_t566 + _t545 + _t575 + _t575 + _t575 + _t575));
                                    _t561 = _t561 - 16;
                                     *4417256 =  *4417256 - 1;
                                } while( *4417256 != 0);
                                if( *4417260 >= 17) {
                                    asm("wait");
                                    asm("fninit");
                                    asm("fldcw word [0x4366c8]");
                                    asm("wait");
                                    goto L13;
                                }
                                goto L47;
                            } else {
L47:
                                 *4417264 =  *4417264 - (_t526 >> 16) - ( *4417420 >> 16);
                                 *4417268 =  *4417268 - (_t526 & 65535) - ( *4417420 & 65535);
                                 *4417420 = _t526;
                                _t448 =  *4417260;
                                goto L48;
                            }
                        }
                        asm("fdivp st1, st0");
                        asm("fistp dword [0x4366bc]");
                        asm("fistp dword [0x4366bc]");
                        asm("fxch st0, st1");
                        asm("fxch st0, st1");
                        _t576 =  *4417212 << 16 |  *4417212 & 65535;
                        _t553 =  *4417420;
                        _t628 = st3 * st3 + st6;
                        asm("fdivp st1, st0");
                        do {
                            _t364 = _t553;
                            _t553 = _t553 + _t576;
                             *(_t561 - 1) =  *((intOrPtr*)(_t566 + _t364));
                            _t561 = _t561 - 1;
                            _t450 = _t450 - 1;
                        } while(_t450 != 0);
                        _t489 =  *4417256;
                        _t366 = _t489 >> 4;
                        _t490 = _t489 & 15;
                        if(_t490 <= 0) {
                            _t490 = 16;
                            _t366 = _t366 - 1;
                        }
                         *4417256 = _t366;
                         *4417260 = _t490;
                        if(_t366 >= 1) {
                            goto L44;
                        } else {
                             *4417212 = _t628;
                            goto L47;
                        }
                    }
                    goto L28;
                }
            }
        }
L5:
        _t135 =  *4417432;
        _t281 =  *4312552;
        if(_t135 <  *4312544 || _t281 <=  *4417472) {
            goto L12;
        } else {
            goto L7;
        }
    }
}

signed int L0040F9DC(
    _unknown_ __esi                        // r5
)
{
    _unknown_ __edi;                       // r4
    signed int _t28;                       // _t28
    signed int _t29;                       // _t29
    signed int _t30;                       // _t30
    signed int _t35;                       // _t35
    signed int _t44;                       // _t44
    signed int _t49;                       // _t49
    signed int* _t53;                      // _t53
    signed int _t55;                       // _t55
    signed int _t57;                       // _t57
    signed int _t60;                       // _t60
    signed int _t62;                       // _t62
    signed int* _t66;                      // _t66

     *4417696 =  *((intOrPtr*)(__esi + 28));
    __ecx = __esi + 12;
    _t53 = __esi + 4;
    _t28 = __ecx[1];
    _t66 = __esi + 20;
    if(_t28 < _t53[1]) {
        _t29 = _t66[1];
        asm("xchg ecx, ebx");
        if(_t29 <= __ecx[1]) {
            asm("xchg edx, ecx");
            if(_t29 <= _t53[1]) {
                asm("xchg ecx, ebx");
            }
        }
    } else {
        if(_t28 >= _t66[1]) {
            asm("xchg edx, ecx");
            if(_t53[1] >= __ecx[1]) {
                asm("xchg ecx, ebx");
            }
        }
    }
    _t30 =  *_t53;
    if(_t30 < -8192000 || _t30 > 8192000) {
L23:
        return _t30;
    } else {
         *4417704 = _t30;
        if(_t30 < -8192000) {
            goto L23;
        }
         *0x004368AC = _t53[1];
        _t30 =  *__ecx;
        if(_t30 < -8192000 || _t30 > 8192000) {
            goto L23;
        } else {
             *0x004368B0 = _t30;
             *0x004368B4 = __ecx[1];
            _t30 =  *_t66;
            if(_t30 < -8192000 || _t30 > 8192000) {
                goto L23;
            } else {
                 *0x004368B8 = _t30;
                _t30 = _t66[1];
                if(_t30 > 8192000) {
                    goto L23;
                }
                 *0x004368BC = _t30;
                _t55 =  *0x004368AC >> 8;
                 *4417672 = _t55;
                _t35 = ( *0x004368B4 >> 8) - _t55;
                if(_t35 != 0) {
                     *4417676 = _t35;
                    L0040FC98(4417712, 4417704);
                    L0040FCFE(4417720, 4417704);
                    _t49 =  *4417688;
                    _t62 =  *4417692;
                    if(_t49 > _t62) {
                         *4417688 = _t62;
                         *4417692 = _t49;
                         *4417680 =  *4417684;
                         *4417684 =  *4417680;
                    }
                    L0040FBA0();
                }
                _t57 =  *0x004368B4 >> 8;
                 *4417672 = _t57;
                _t30 = ( *0x004368BC >> 8) - _t57;
                if(_t30 == 0) {
                    goto L23;
                } else {
                     *4417676 = _t30;
                    L0040FC98(4417720, 4417704);
                    L0040FCFE(4417720, 4417712);
                     *4417680 =  *4417680 + (( *0x004368B4 >> 8) - ( *0x004368AC >> 8)) *  *4417688;
                    _t44 =  *4417688;
                    _t60 =  *4417692;
                    if(_t44 < _t60) {
                         *4417688 = _t60;
                         *4417692 = _t44;
                         *4417680 =  *4417684;
                         *4417684 =  *4417680;
                    }
                    return L0040FBA0();
                }
            }
        }
    }
}

signed int L0040FBA0()
{
    signed int _t8;                        // _t8
    char _t11;                             // _t11
    intOrPtr _t13;                         // _t13
    signed int _t15;                       // _t15
    _unknown_ _t16;                        // _t16
    _unknown_ _t17;                        // _t17
    signed int _t19;                       // _t19
    signed int _t21;                       // _t21
    intOrPtr* _t23;                        // _t23
    signed int _t27;                       // _t27
    _unknown_ _t28;                        // _t28
    _unknown_ _t31;                        // _t31

    _t8 =  *4417680;
    __ebx =  *4417684;
    _t21 =  *4417672;
    if(_t21 >=  *4312500) {
L3:
        _t13 =  *4312524 - _t21;
        if(_t13 >=  *4417676) {
L7:
            _t31 =  *((intOrPtr*)(4312568 + _t21 * 4)) +  *4312484 - 1;
            __edi = _t8;
            do {
                _t15 = __ebx >> 16;
                _t27 = __edi >> 16;
                if(_t27 >=  *4312496) {
L11:
                    if(_t15 <=  *4312520) {
L14:
                        _t16 = _t15 - _t27;
                        if(_t16 <= 0) {
                            goto L18;
                        }
                        _t28 = _t27 + _t31;
                        _t23 =  *((intOrPtr*)(_t28 + _t16));
                        _t17 = _t16 - 1;
                        if(_t17 == 0) {
L17:
                             *((char*)(_t28 + 1)) =  *_t23;
                            goto L18;
                        } else {
                            goto L16;
                        }
                        do {
L16:
                            _t11 =  *_t23;
                            _t23 =  *((intOrPtr*)(_t28 + _t17));
                             *((char*)(_t28 + _t17 + 1)) = _t11;
                            _t17 = _t17 - 1;
                        } while(_t17 != 0);
                        goto L17;
                    }
                    if(_t27 >  *4312520) {
                        goto L18;
                    }
                    _t15 =  *4312520;
                    goto L14;
                }
                if(_t15 <  *4312496) {
                    goto L18;
                }
                _t27 =  *4312496;
                goto L11;
L18:
                __edi = __edi +  *4417688;
                __ebx = __ebx +  *4417692;
                _t31 = _t31 +  *4312560;
                 *4417676 =  *4417676 - 1;
            } while( *4417676 != 0);
            return __edi;
        }
        if(_t21 >  *4312524 || _t13 == 0) {
L20:
            return _t8;
        } else {
             *4417676 = _t13;
            goto L7;
        }
    }
    _t19 =  *4312500 - _t21;
     *4417676 =  *4417676 - _t19;
    if( *4417676 <= 0) {
        goto L20;
    }
    _t8 = _t8 + _t19 *  *4417688;
    __ebx = __ebx + _t19 *  *4417692;
    _t21 =  *4312500;
    goto L3;
}

signed int L0040FC98(
    intOrPtr* __edi,                       // r4
    signed int* __esi                      // r5
)
{
    signed int _t15;                       // _t15
    signed int _t17;                       // _t17
    signed int _t19;                       // _t19

    __esi = __esi;
    __edi = __edi;
    _t19 =  *((intOrPtr*)(__edi + 4)) - __esi[1];
    if(_t19 > 64) {
L7:
         *4417688 = ( *__edi -  *__esi << 16) / _t19;
        _t15 =  *4417688 >> 8;
         *4417680 = (256 - (__esi[1] & 255)) * _t15 + ( *__esi << 8);
        return _t15;
    }
    _t17 =  *__edi -  *__esi;
    if(_t17 <= 0) {
        _t17 =  ~_t17;
    }
    if(_t17 > 65536) {
        if(_t19 <= 3) {
            _t19 = 3;
        }
    } else {
        _t19 = 65;
    }
    goto L7;
}

signed int L0040FCFE(
    intOrPtr* __edi,                       // r4
    signed int* __esi                      // r5
)
{
    signed int _t15;                       // _t15
    signed int _t17;                       // _t17
    signed int _t19;                       // _t19

    __esi = __esi;
    __edi = __edi;
    _t19 =  *((intOrPtr*)(__edi + 4)) - __esi[1];
    if(_t19 > 64) {
L7:
         *4417692 = ( *__edi -  *__esi << 16) / _t19;
        _t15 =  *4417692 >> 8;
         *4417684 = (256 - (__esi[1] & 255)) * _t15 + ( *__esi << 8);
        return _t15;
    }
    _t17 =  *__edi -  *__esi;
    if(_t17 <= 0) {
        _t17 =  ~_t17;
    }
    if(_t17 > 65536) {
        if(_t19 <= 3) {
            _t19 = 3;
        }
    } else {
        _t19 = 65;
    }
    goto L7;
}

L00410A20(
    _unknown_ __esi                        // r5
)
{
    _unknown_ __edi;                       // r4
    signed int _t124;                      // _t124
    signed int _t131;                      // _t131
    signed int _t158;                      // _t158
    signed int _t160;                      // _t160
    signed int _t174;                      // _t174
    signed int _t175;                      // _t175
    signed int _t180;                      // _t180
    signed int _t186;                      // _t186
    signed int _t188;                      // _t188

    __ebp =  *(__esi + 4);
     *4433888 = __ebp[3];
     *4433892 = __ebp[5];
     *4433896 = __ebp[2];
     *4433900 = __ebp[4];
     *4433904 = __ebp[7];
     *4433908 = __ebp[6];
    __ecx =  *(__esi + 8);
    asm("rol eax, 0x10");
     *4433856 =  ~( *__ebp) *  *__ecx >> 32;
    asm("rol eax, 0x10");
     *4433856 =  *4433856 + ( ~(__ebp[1]) * __ecx[2] >> 32);
    asm("rol eax, 0x10");
     *4433860 =  ~( *__ebp) * __ecx[1] >> 32;
    asm("rol eax, 0x10");
     *4433860 =  *4433860 + ( ~(__ebp[1]) * __ecx[3] >> 32);
    _t186 = __ebp[4] - __ebp[2];
    asm("rol eax, 0x10");
     *4433868 = __ecx[1] * _t186 >> 32;
    asm("rol eax, 0x10");
     *4433864 =  *__ecx * _t186 >> 32;
    _t188 = __ebp[5] - __ebp[3];
    asm("rol eax, 0x10");
    _t124 = (__ecx[3] * _t188 >> 32) +  *4433860;
     *4433876 = _t124;
     *4433884 = _t124 +  *4433868;
     *4433868 =  *4433868 +  *4433860;
    asm("rol eax, 0x10");
    _t131 = (__ecx[2] * _t188 >> 32) +  *4433856;
     *4433872 = _t131;
     *4433880 = _t131 +  *4433864;
     *4433864 =  *4433864 +  *4433856;
     *4433856 =  *4433856 +  *((intOrPtr*)(__esi + 12));
     *4433860 =  *4433860 +  *((intOrPtr*)(__esi + 16));
     *4433864 =  *4433864 +  *((intOrPtr*)(__esi + 12));
     *4433868 =  *4433868 +  *((intOrPtr*)(__esi + 16));
     *4433872 =  *4433872 +  *((intOrPtr*)(__esi + 12));
     *4433876 =  *4433876 +  *((intOrPtr*)(__esi + 16));
     *4433880 =  *4433880 +  *((intOrPtr*)(__esi + 12));
     *4433884 =  *4433884 +  *((intOrPtr*)(__esi + 16));
     *0x0043A7FC =  *4433856;
     *0x0043A800 =  *4433860;
     *0x0043A804 =  *4433864;
     *0x0043A808 =  *4433868;
     *0x0043A80C =  *4433872;
     *0x0043A810 =  *4433876;
     *((intOrPtr*)(0x43a814)) = 0x43a820;
    _t158 =  *4433888;
     *0x0043A824 = _t158;
     *0x0043A82C = _t158;
     *0x0043A834 =  *4433892;
    _t160 =  *4433896;
     *0x0043A820 = _t160;
     *0x0043A830 = _t160;
     *0x0043A828 =  *4433900;
     *0x0043A818 =  *4433908;
     *0x0043A81C =  *4433904;
    _push(4433912);
    L0040B390();
    _pop(__eax);
     *0x0043A7FC =  *4433864;
     *0x0043A800 =  *4433868;
     *0x0043A804 =  *4433872;
     *0x0043A808 =  *4433876;
     *0x0043A80C =  *4433880;
     *0x0043A810 =  *4433884;
     *((intOrPtr*)(0x43a814)) = 0x43a820;
     *0x0043A824 =  *4433888;
    _t174 =  *4433892;
     *0x0043A82C = _t174;
     *0x0043A834 = _t174;
    _t175 =  *4433900;
     *0x0043A820 = _t175;
     *0x0043A830 = _t175;
     *0x0043A828 =  *4433896;
     *0x0043A818 =  *4433908;
     *0x0043A81C =  *4433904;
    _push(4433912);
    _t180 = L0040B390();
    _pop(__eax);
    return _t180;
}

L00410CBE(
    intOrPtr* __eax,                       // r0
    _unknown_ __edx,                       // r3
    _unknown_ __edi,                       // r4
    _unknown_ __esi                        // r5
)
{
    intOrPtr _t13;                         // _t13
    intOrPtr _t14;                         // _t14
    intOrPtr* _t17;                        // _t17
    intOrPtr* _t22;                        // _t22
    intOrPtr* _t26;                        // _t26
    intOrPtr* _t27;                        // _t27
    char _t31;                             // _t31
    char _t32;                             // _t32
    _unknown_ _t33;                        // _t33
    _unknown_ _t34;                        // _t34
    _unknown_ _t35;                        // _t35
    _unknown_ _t38;                        // _t38
    _unknown_ _t39;                        // _t39
    intOrPtr _t40;                         // _t40

    _t35 = __esi;
    _t33 = __edi;
    _t12 = __eax;
    if(__edx - 1 >= 0) {
        _push(_t39);
        _t31 =  *4434244;
        _t40 =  *4434248;
        do {
            _push(_t12);
            _push(_t35);
            _push(_t33);
            _t26 =  *((intOrPtr*)(_t35 + 2));
            _t13 =  *_t12;
            _t34 = _t33 + _t13;
            _t38 =  *((intOrPtr*)(_t35 + 8)) - _t13 - 1;
            if(_t38 < 0) {
                goto L6;
            }
            _t27 = _t26 + _t40;
            _t17 =  *_t26;
            _t38 = _t38 - 1;
            if(_t38 < 0) {
L5:
                _t31 =  *_t17;
                 *((char*)(_t34 + _t38 + 1)) = _t31;
                goto L6;
            } else {
                goto L4;
            }
            do {
L4:
                asm("adc bl, dl");
                _t22 = _t27;
                _t32 =  *_t17;
                _t27 = _t27 + _t40;
                _t17 =  *_t22;
                 *((char*)(_t34 + _t38 + 1)) = _t32;
                _t38 = _t38 - 1;
            } while(_t38 >= 0);
            goto L5;
L6:
            _pop(__edi);
            _t14 =  *4312560;
            _pop(__esi);
            _t33 = _t34 + _t14;
            _pop(__eax);
            _t35 = _t38 + 12;
            _t12 = _t14 + 4;
            _t31 = _t31 - 65536;
        } while(_t31 >= 0);
        _pop(__ebp);
        return _t12;
    }
    return __eax;
}

L00410D5C(
    intOrPtr* __eax,                       // r0
    _unknown_ __edx,                       // r3
    _unknown_ __edi,                       // r4
    _unknown_ __esi                        // r5
)
{
    intOrPtr _t9;                          // _t9
    intOrPtr _t10;                         // _t10
    char _t11;                             // _t11
    intOrPtr* _t19;                        // _t19
    intOrPtr* _t26;                        // _t26
    intOrPtr* _t27;                        // _t27
    intOrPtr* _t30;                        // _t30
    intOrPtr _t34;                         // _t34
    _unknown_ _t35;                        // _t35
    _unknown_ _t36;                        // _t36
    _unknown_ _t37;                        // _t37
    _unknown_ _t40;                        // _t40
    _unknown_ _t41;                        // _t41
    _unknown_ _t42;                        // _t42
    intOrPtr _t43;                         // _t43

    _t37 = __esi;
    _t35 = __edi;
    _t8 = __eax;
    if(__edx - 1 >= 0) {
        _push(_t42);
        _t34 =  *4434244;
        _t43 =  *4434248;
        do {
            _push(_t8);
            _push(_t37);
            _push(_t35);
            _t26 =  *((intOrPtr*)(_t37 + 2));
            _t9 =  *_t8;
            _t36 = _t35 + _t9;
            _t19 = _t26;
            _t40 =  *((intOrPtr*)(_t37 + 8)) - _t9 - 4;
            if(_t40 < 0) {
L4:
                _t41 = _t40 + 3;
                if(_t41 < 0) {
                    goto L7;
                }
                _t27 = _t26 + _t43;
                do {
                    _t11 =  *_t19;
                    _t19 = _t27;
                    asm("adc bl, dl");
                    _t27 = _t27 + _t43;
                     *((char*)(_t36 + _t41)) = _t11;
                    _t41 = _t41 - 1;
                } while(_t41 >= 0);
                goto L7;
            } else {
                goto L3;
            }
            do {
L3:
                asm("adc bl, dl");
                asm("adc bl, dl");
                _t30 = _t26 + _t43 + _t43 + _t43;
                asm("adc bl, dl");
                _t26 = _t30 + _t43;
                _t19 = _t26;
                asm("adc bl, dl");
                 *((intOrPtr*)(_t36 + _t40)) =  *_t30;
                _t40 = _t40 - 4;
            } while(_t40 >= 0);
            goto L4;
L7:
            _pop(__edi);
            _t10 =  *4312560;
            _pop(__esi);
            _t35 = _t36 + _t10;
            _pop(__eax);
            _t8 = _t10 + 4;
            _t37 = _t41 + 12;
            _t34 = _t34 - 65536;
        } while(_t34 >= 0);
        _pop(__ebp);
        return _t8;
    }
    return __eax;
}

L00410DF8(
    _unknown_ __eax                        // r0
)
{
    signed int _v6;                        // _cfa_fffffffa
    short _v8;                             // _cfa_fffffff8
    _unknown_ _v12;                        // _cfa_fffffff4
    intOrPtr _v16;                         // _cfa_fffffff0

    asm("wait");
    asm("fnstcw word [ebp-0x2]");
    asm("wait");
    _v8 = _v6 | 12;
    asm("fldcw word [ebp-0x4]");
    asm("fistp qword [ebp-0xc]");
    asm("fldcw word [ebp-0x2]");
    return _v16;
}

L00410E90()
{
    __eax =  *4434508;
    if(__eax != 0) {
         *__eax();
    }
    L00410FB0(4309000, 4309008);
    L00410FB0(4308992, 4308996);
}

L00410EC0(
    intOrPtr _a4                           // _cfa_4
)
{
    __eax = _a4;
    L00410F00(__eax, 0, 0);
    return __eax;
}

L00410F00(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    char _a12                              // _cfa_c
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ _t4;                         // _t4
    char _t5;                              // _t5
    intOrPtr* _t6;                         // _t6
    _unknown_ _t8;                         // _t8
    intOrPtr _t9;                          // _t9

    _push(_t4);
    _push(_t8);
    _t9 = _a4;
    _push(_t6);
    if( *4434592 == 1) {
        _push(_t9);
        __imp__GetCurrentProcess();
        _push(__eax);
        __imp__TerminateProcess();
    }
     *4434588 = 1;
    _t5 = _a12;
     *4434584 = _t5;
    if(_a8 == 0) {
        if( *4540044 != 0) {
            _t6 =  *4540040 - 4;
            while(_t6 >=  *4540044) {
                __eax =  *_t6;
                if(__eax != 0) {
                     *__eax();
                }
                _t6 = _t6 - 4;
            }
        }
        L00410FB0(4309012, 4309020);
    }
    L00410FB0(4309024, 4309028);
    if(_t5 == 0) {
         *4434592 = 1;
        _push(_t9);
        __imp__ExitProcess();
    }
    _pop(__edi);
    _pop(__esi);
    _pop(__ebx);
}

L00410FB0(
    intOrPtr* _a4,                         // _cfa_4
    intOrPtr _a8                           // _cfa_8
)
{
    intOrPtr __edi;                        // r4
    intOrPtr* __esi;                       // r5

    __edi = _a8;
    __esi = _a4;
    while(__edi > __esi) {
        __eax =  *__esi;
        if(__eax != 0) {
             *__eax();
        }
        __esi = __esi + 4;
    }
}

L00411170(
    intOrPtr _a4                           // _cfa_4
)
{
    _unknown_ _t3;                         // _t3

    if( *4434608 == 1) {
        L00412D80();
    }
    _t3 = L00412DC0(_a4);
    _push(255);
     *4434604();
    __esp = __esp + 4;
    return _t3;
}

L004111A0(
    intOrPtr _a4                           // _cfa_4
)
{
    return L004111C0(_a4,  *4435532);
}

L004111C0(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8                           // _cfa_8
)
{
    intOrPtr __edi;                        // r4
    intOrPtr __esi;                        // r5
    _unknown_ _t3;                         // _t3

    __esi = _a4;
    if(__esi <= -32) {
        if(__esi == 0) {
            __esi = 1;
        }
        __edi = _a8;
        while(1) {
            _t3 = 0;
            if(__esi <= -32) {
                _t3 = L00411210(__esi);
            }
            if(_t3 != 0 || __edi == 0) {
                break;
            }
            if(L00412FC0(__esi) != 0) {
                continue;
            } else {
                return 0;
            }
            goto L12;
        }
        return _t3;
    } else {
        return 0;
    }
L12:
}

L00411210(
    intOrPtr _a4                           // _cfa_4
)
{
    _unknown_ __esi;                       // r5
    intOrPtr _t2;                          // _t2
    _unknown_ _t5;                         // _t5
    unsigned int _t8;                      // _t8

    _t8 = _a4 + 15 & -16;
    if(_t8 >  *4437612) {
L2:
        _push(_t8);
        _t2 =  *4539764;
        _push(0);
        _push(_t2);
        __imp__HeapAlloc();
        return _t2;
    }
    _push(_t8 >> 4);
    _t5 = L00413350(__ecx);
    __esp = __esp + 4;
    if(_t5 == 0) {
        goto L2;
    }
    return _t5;
}

L00411250(
    intOrPtr _a4                           // _cfa_4
)
{
    char _v4;                              // _cfa_fffffffc
    char _v8;                              // _cfa_fffffff8
    intOrPtr __esi;                        // r5
    _unknown_ _t6;                         // _t6
    _unknown_ _t8;                         // _t8
    intOrPtr _t9;                          // _t9

    __esi = _a4;
    if(__esi == 0) {
        return _t6;
    } else {
        _t8 = L004132A0(__esi,  &_v4,  &_v8);
        if(_t8 == 0) {
            _push(__esi);
            _t9 =  *4539764;
            _push(0);
            _push(_t9);
            __imp__HeapFree();
            return _t9;
        }
        return L00413300(__edx, _v4, _v8, _t8);
    }
}

L004112A0(
    intOrPtr _a4                           // _cfa_4
)
{
    _unknown_ __edi;                       // r4
    intOrPtr __esi;                        // r5
    signed char _t12;                      // _t12

    __edi = -1;
    __esi = _a4;
    _t12 =  *(__esi + 12);
    if((_t12 & 64) == 0) {
        if((_t12 & 131) != 0) {
            __edi = L004138B0(__esi);
            L00413820(__esi);
            if(L00413750( *((intOrPtr*)(__esi + 16))) >= 0) {
                _t18 =  *((intOrPtr*)(__esi + 28));
                if( *((intOrPtr*)(__esi + 28)) != 0) {
                    L00411250(_t18);
                     *((intOrPtr*)(__esi + 28)) = 0;
                }
            } else {
                __edi = -1;
            }
        }
         *(__esi + 12) = 0;
        return __edi;
    } else {
         *(__esi + 12) = 0;
        return -1;
    }
}

signed int L00411310()
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    intOrPtr __esi;                        // r5
    signed int _t66;                       // _t66
    signed int _t67;                       // _t67
    intOrPtr _t68;                         // _t68
    _unknown_ _t69;                        // _t69
    signed int _t72;                       // _t72
    _unknown_ _t75;                        // _t75
    signed int _t78;                       // _t78
    signed int _t81;                       // _t81
    signed int _t84;                       // _t84
    _unknown_ _t88;                        // _t88
    signed int _t89;                       // _t89
    intOrPtr _t90;                         // _t90
    signed int _t92;                       // _t92
    signed int _t95;                       // _t95
    signed int _t98;                       // _t98
    signed int _t109;                      // _t109
    _unknown_ _t110;                       // _t110
    signed int _t111;                      // _t111
    _unknown_ _t115;                       // _t115
    intOrPtr* _t116;                       // _t116

    _t90 =  *((intOrPtr*)(__esp + 4));
    __esp = __esp - 12;
    _t66 =  *(__esp + 24);
    _push(_t88);
     *((intOrPtr*)(__esp + 4)) = _t90;
    _push(__esi);
    _t67 = _t66 *  *(__esp + 28);
    _push(_t110);
    _t89 = _t67;
     *(__esp + 16) = _t67;
    _push(_t115);
    if(_t67 != 0) {
        _t116 =  *((intOrPtr*)(__esp + 44));
        if(( *(_t116 + 12) & 268) == 0) {
             *(__esp + 24) = 4096;
        } else {
             *(__esp + 24) =  *(_t116 + 24);
        }
        if( *((intOrPtr*)(__esp + 20)) == 0) {
L20:
            _t68 =  *((intOrPtr*)(__esp + 40));
            _pop(__ebp);
            _pop(__edi);
            _pop(__esi);
            _pop(__ebx);
            __esp = __esp + 12;
            return _t68;
        } else {
            do {
                if(( *(_t116 + 12) & 268) == 0) {
L11:
                    if(_t89 <  *(__esp + 24)) {
                        _t69 = L004139C0(_t116);
                        if(_t69 == -1) {
                            _t72 = ( *((intOrPtr*)(__esp + 20)) - _t89) /  *(__esp + 36);
                            _pop(__ebp);
                            _pop(__edi);
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 12;
                            return _t72;
                        } else {
                            _t89 = _t89 - 1;
                             *(__esp + 16) =  *(__esp + 16) + 1;
                             *( *(__esp + 16)) = _t69;
                             *(__esp + 24) =  *(_t116 + 24);
                            goto L19;
                        }
                    } else {
                        _t92 = _t89;
                        if( *(__esp + 24) != 0) {
                            _t92 = _t89 - _t89 %  *(__esp + 24);
                        }
                        _t75 = L00413AB0(_t116[4],  *((intOrPtr*)(__esp + 20)), _t92);
                        if(_t75 == 0) {
                             *(_t116 + 12) =  *(_t116 + 12) | 16;
                            _t78 = ( *((intOrPtr*)(__esp + 20)) - _t89) /  *(__esp + 36);
                            _pop(__ebp);
                            _pop(__edi);
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 12;
                            return _t78;
                        } else {
                            if(_t75 == -1) {
                                 *(_t116 + 12) =  *(_t116 + 12) | 32;
                                _t81 = ( *((intOrPtr*)(__esp + 20)) - _t89) /  *(__esp + 36);
                                _pop(__ebp);
                                _pop(__edi);
                                _pop(__esi);
                                _pop(__ebx);
                                __esp = __esp + 12;
                                return _t81;
                            } else {
                                _t89 = _t89 - _t75;
                                 *(__esp + 16) =  *(__esp + 16) + _t75;
                                goto L19;
                            }
                        }
                    }
                } else {
                    _t84 =  *(_t116 + 4);
                    if(_t84 == 0) {
                        goto L11;
                    } else {
                        _t109 = _t89;
                        if(_t89 >= _t84) {
                            _t109 = _t84;
                        }
                        _t95 = _t109 >> 2;
                        _t111 =  *(__esp + 16);
                        __esi =  *_t116;
                        _t89 = _t89 - _t109;
                        _push(_t95 << 2);
                        _push(__esi);
                        _push(_t111);
                        memcpy();
                        __esp = __esp + 12;
                        _t98 = _t109 & 3;
                        _push(_t98 << 0);
                        _push(__esi);
                        _push(__esi + _t95 + _t95);
                        memcpy();
                        __esp = __esp + 12;
                        _t110 = __esi + _t98 + _t98;
                         *(_t116 + 4) =  *(_t116 + 4) - _t109;
                         *_t116 =  *_t116 + _t109;
                         *(__esp + 16) =  *(__esp + 16) + _t109;
                        goto L19;
                    }
                }
                goto L24;
L19:
            } while(_t89 != 0);
            goto L20;
        }
    } else {
        _pop(__ebp);
        _pop(__edi);
        _pop(__esi);
        _pop(__ebx);
        __esp = __esp + 12;
        return 0;
    }
L24:
}

L00411460(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr* _a8                          // _cfa_8
)
{
    return L00413D20(_a4,  *_a8,  *((intOrPtr*)(_t4 + 4)), 0);
}

L00411480(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    intOrPtr _a12                          // _cfa_c
)
{
    _unknown_ _t4;                         // _t4

    _t4 = L00413FE0();
    if(_t4 != 0) {
        return L00413DD0(_a4, _a8, _a12, _t4);
    } else {
        return 0;
    }
}

L004114B0(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8                           // _cfa_8
)
{
    return L00411480(_a4, _a8, 64);
}

L004114D0(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    intOrPtr _a12                          // _cfa_c
)
{
    _unknown_ __ebx;                       // r1
    intOrPtr __edi;                        // r4
    intOrPtr __esi;                        // r5
    signed int _t21;                       // _t21
    signed int _t25;                       // _t25
    _unknown_ _t27;                        // _t27
    _unknown_ _t30;                        // _t30
    intOrPtr _t31;                         // _t31

    __esi = _a4;
    _push(__edi);
    _t21 =  *(__esi + 12);
    if((_t21 & 131) == 0) {
L14:
        _pop(__edi);
         *4434520 = 22;
        return -1;
    } else {
        __edi = _a12;
        if(__edi == 0 || __edi == 1 || __edi == 2) {
             *(__esi + 12) = _t21 & -17;
            if(__edi != 1) {
                _t31 = _a8;
            } else {
                _push(__esi);
                __edi = 0;
                _t30 = L00411570();
                __esp = __esp + 4;
                _t31 = _a8 + _t30;
            }
            L004138B0(__esi);
            _t25 =  *(__esi + 12);
            if((_t25 & 128) == 0) {
                if((_t25 & 1) != 0 && (_t25 & 8) != 0 && (_t25 & 4) == 0) {
                     *((intOrPtr*)(__esi + 24)) = 512;
                }
            } else {
                 *(__esi + 12) = _t25 & -4;
            }
            _t27 = L004143E0( *((intOrPtr*)(__esi + 16)), _t31, __edi);
            _pop(__edi);
            asm("sbb eax, eax");
            return _t27 + 1;
        } else {
            goto L14;
        }
    }
}

L00411570()
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    intOrPtr* __esi;                       // r5
    signed int _t75;                       // _t75
    intOrPtr _t77;                         // _t77
    signed int _t85;                       // _t85
    signed char _t91;                      // _t91
    char* _t92;                            // _t92
    signed int _t96;                       // _t96
    intOrPtr _t101;                        // _t101
    char* _t103;                           // _t103
    intOrPtr _t104;                        // _t104
    _unknown_ _t107;                       // _t107
    intOrPtr _t108;                        // _t108
    _unknown_ _t111;                       // _t111

    __esi =  *((intOrPtr*)(__esp + 32));
    _push(_t113);
     *(__esp + 20) =  *(__esi + 16);
    if(__esi[1] < 0) {
        __esi[1] = 0;
    }
    _t111 = L004143E0( *(__esp + 20), 0, 1);
    if(_t111 >= 0) {
        _t75 =  *(__esi + 12);
         *(__esp + 28) = _t75;
        if((_t75 & 264) != 0) {
            _t108 =  *__esi;
            _t103 = __esi[2];
            _t77 = _t108 - _t103;
            _t101 = _t77;
             *((intOrPtr*)(__esp + 32)) = _t77;
            if(( *(__esp + 28) & 3) == 0) {
                if(( *(__esp + 28) & 128) != 0) {
                    goto L12;
                } else {
                    _pop(__ebp);
                     *4434520 = 22;
                    return -1;
                }
            } else {
                _t96 =  *(__esp + 20);
                 *(__esp + 16) = _t96;
                 *(__esp + 24) = _t96;
                 *(__esp + 16) =  *(__esp + 16) & -25;
                 *(__esp + 16) =  *(__esp + 16) >> 3;
                 *(__esp + 24) =  *(__esp + 24) & 31;
                _t113 =  *((intOrPtr*)( *(__esp + 16) + 4539776));
                if(( *( *((intOrPtr*)( *(__esp + 16) + 4539776)) + 4 +  *(__esp + 24) * 8) & 128) != 0 && _t103 < _t108) {
                    do {
                        if( *_t103 == 10) {
                            _t101 = _t101 + 1;
                        }
                        _t103 = _t103 + 1;
                    } while(_t103 < _t108);
                }
L12:
                if(_t111 != 0) {
                    if(( *(__esp + 28) & 1) == 0) {
L34:
                        _pop(__ebp);
                        return _t101 + _t111;
                    } else {
                        _t104 = __esi[1];
                        if(_t104 != 0) {
                            _t113 =  *((intOrPtr*)(__esp + 32)) + _t104;
                             *(__esp + 16) = (( *(__esp + 20) & -25) >> 3) + 4539776;
                            _t85 = ( *(__esp + 20) & 31) << 3;
                             *(__esp + 24) = _t85;
                            if(( *( *( *(__esp + 16)) + _t85 + 4) & 128) != 0) {
                                if(L004143E0( *(__esp + 20), 0, 2) != _t111) {
                                    L004143E0( *(__esp + 20), _t111, 0);
                                    if(_t113 > 512) {
L30:
                                        _t113 = __esi[6];
                                    } else {
                                        _t91 =  *(__esi + 12);
                                        if((_t91 & 8) == 0) {
                                            goto L30;
                                        } else {
                                            _t113 = 512;
                                            if((_t91 & 4) != 0) {
                                                goto L30;
                                            }
                                        }
                                    }
                                    if(( *( *( *(__esp + 16)) +  *(__esp + 24) + 4) & 4) != 0) {
                                        goto L32;
                                    }
                                } else {
                                    _t92 = __esi[2];
                                    _t107 = _t92 + _t113;
                                    while(_t107 > _t92) {
                                        if( *_t92 == 10) {
                                            _t113 = _t113 + 1;
                                        }
                                        _t92 = _t92 + 1;
                                    }
                                    if(( *(__esi + 13) & 32) != 0) {
L32:
                                        _t113 = _t113 + 1;
                                    }
                                }
                            }
                            _t111 = _t111 - _t113;
                            goto L34;
                        } else {
                            _pop(__ebp);
                            return 0 + _t111;
                        }
                    }
                } else {
                    _pop(__ebp);
                    return _t101;
                }
            }
        } else {
            _pop(__ebp);
            return _t111 - __esi[1];
        }
    } else {
        _pop(__ebp);
        return -1;
    }
}

L004117A0(
    intOrPtr _a4,                          // _cfa_4
    char _a8                               // _cfa_8
)
{
    _unknown_ _t3;                         // _t3
    _unknown_ _t5;                         // _t5

    _t3 = L004145E0(4438024);
    _t5 = L004147C0(4438024, _a4,  &_a8);
    L00414680(_t3, 4438024);
    return _t5;
}

L00412250(
    intOrPtr _a4                           // _cfa_4
)
{
    return L00412270(_a4, 0, 4);
}

L00412270(
    _unknown_ _a4,                         // _cfa_4
    signed int _a8,                        // _cfa_8
    signed int _a12                        // _cfa_c
)
{
    signed int _t10;                       // _t10
    signed int _t14;                       // _t14

    if((_a12 & 0) != 0) {
L5:
        return 1;
    } else {
        _t10 = _a8;
        _t14 = 0;
        if(_t10 != 0) {
            _t14 = 0 & _t10;
        }
        if(_t14 != 0) {
            goto L5;
        } else {
            return 0;
        }
    }
}

L004122B0()
{
    intOrPtr _v4;                          // _cfa_fffffffc
    intOrPtr* __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    char* __ebp;                           // r6
    intOrPtr* _t8;                         // _t8
    _unknown_ _t11;                        // _t11
    intOrPtr _t13;                         // _t13
    signed int _t20;                       // _t20
    intOrPtr _t33;                         // _t33
    signed int _t39;                       // _t39
    _unknown_ _t40;                        // _t40

    __edx =  *4434596;
    _t39 = 0;
    while( *__edx != 0) {
        if( *__edx != 61) {
            _t39 = _t39 + 1;
        }
        asm("repne scasb");
        __edx = __edx +  !-1;
    }
    _t8 = L004111A0(4 + _t39 * 4);
     *4434560 = _t8;
    __ebx = _t8;
    if(__ebx == 0) {
        L00411170(9);
    }
    __ebp =  *4434596;
    while( *__ebp != 0) {
        asm("repne scasb");
        _t20 =  !-1;
        _v4 = -1;
        if( *__ebp != 61) {
            _t13 = L004111A0(_t20);
             *__ebx = _t13;
            if(_t13 == 0) {
                L00411170(9);
            }
            asm("repne scasb");
            _t40 = __ebp - -1;
            _t33 =  *__ebx;
            __ebx = __ebx + 4;
            _push(-1 << 2);
            _push(_t40);
            _push(_t33);
            memcpy();
            __esp = __esp + 12;
            _push(3 << 0);
            _push(_t40);
            _push(_t40 + -1 + ( !-1 >> 2));
            memcpy();
            __esp = __esp + 12;
        }
        __ebp = __ebp + _v4;
    }
    _t11 = L00411250( *4434596);
     *4434596 = 0;
     *__ebx = 0;
    return _t11;
}

signed int L004123A0()
{
    char _v16;                             // _cfa_fffffff0
    signed int _v20;                       // _cfa_ffffffec
    _unknown_ __edi;                       // r4
    intOrPtr __esi;                        // r5
    signed int _t22;                       // _t22
    _unknown_ _t26;                        // _t26
    intOrPtr _t27;                         // _t27

    _push(_t26);
    _push(260);
    __esi = 4532064;
    _push(4532064);
    _push(0);
    __imp__GetModuleFileNameA();
     *4434576 = 4532064;
    if( *((char*)( *4540036)) != 0) {
        __esi =  *4540036;
    }
    _push( &_v16);
    _push( &_v20);
    _push(0);
    _push(0);
    _push(__esi);
    L00412440();
    __esp = __esp + 20;
    _t27 = L004111A0((_v20 << 2) + _v16);
    if(_t27 == 0) {
        L00411170(8);
    }
    _push( &_v16);
    _push( &_v20);
    _push(_t27 + _v20 * 4);
    _push(_t27);
    _push(__esi);
    L00412440();
    __esp = __esp + 20;
    _t22 = _v20 - 1;
     *4434552 = _t27;
    _pop(__edi);
     *4434548 = _t22;
    return _t22;
}

L00412440()
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr* _t40;                        // _t40
    intOrPtr* _t41;                        // _t41
    intOrPtr _t43;                         // _t43
    char _t46;                             // _t46
    intOrPtr* _t47;                        // _t47
    char _t48;                             // _t48
    unsigned int _t49;                     // _t49
    char _t55;                             // _t55
    _unknown_ _t58;                        // _t58
    signed int _t59;                       // _t59
    _unknown_ _t60;                        // _t60
    intOrPtr* _t61;                        // _t61
    intOrPtr* _t62;                        // _t62
    unsigned int _t63;                     // _t63
    unsigned int _t64;                     // _t64

    __ecx =  *((intOrPtr*)(__esp + 20));
    _push(_t34);
    _t40 =  *((intOrPtr*)(__esp + 20));
    _push(_t60);
    _t61 =  *((intOrPtr*)(__esp + 12));
    _push(_t58);
    __eax =  *((intOrPtr*)(__esp + 24));
    _push(_t63);
     *__ecx = 0;
     *_t40 = 1;
    if( *((intOrPtr*)(__esp + 24)) != 0) {
         *((intOrPtr*)(__esp + 24)) =  *((intOrPtr*)(__esp + 24)) + 4;
         *((intOrPtr*)( *((intOrPtr*)(__esp + 24)))) = __eax;
    }
    if( *_t61 == 34) {
        _t62 = _t61 + 1;
        if( *_t62 == 34) {
L24:
             *__ecx =  *__ecx + 1;
            if(__eax != 0) {
                 *__eax = 0;
                __eax = __eax + 1;
            }
            if( *_t62 == 34) {
                _t62 = _t62 + 1;
            }
L28:
            _t59 = 0;
L29:
            while( *_t62 != 0) {
                while(1) {
                    _t43 =  *_t62;
                    if(_t43 != 32 && _t43 != 9) {
                        break;
                    }
                    _t62 = _t62 + 1;
                }
                if( *_t62 == 0) {
                    break;
                }
                if( *((intOrPtr*)(__esp + 24)) != 0) {
                     *((intOrPtr*)(__esp + 24)) =  *((intOrPtr*)(__esp + 24)) + 4;
                     *((intOrPtr*)( *((intOrPtr*)(__esp + 24)))) = __eax;
                }
                 *((intOrPtr*)( *((intOrPtr*)(__esp + 32)))) =  *((intOrPtr*)( *((intOrPtr*)(__esp + 32)))) + 1;
                while(1) {
                    _t34 = 1;
                    _t64 = 0;
                    if( *_t62 != 92) {
                        goto L39;
                    }
                    do {
L38:
                        _t62 = _t62 + 1;
                        _t64 = _t64 + 1;
                    } while( *_t62 == 92);
L39:
                    if( *_t62 != 34) {
L47:
                        _t63 = _t64 - 1;
                        if(_t64 == 0) {
L51:
                            _t46 =  *_t62;
                            if(_t46 == 0 || _t59 == 0 && (_t46 == 32 || _t46 == 9)) {
                                if(__eax != 0) {
                                     *__eax = 0;
                                    __eax = __eax + 1;
                                }
                                 *__ecx =  *__ecx + 1;
                                goto L29;
                            } else {
                                if(_t34 == 0) {
L63:
                                    _t62 = _t62 + 1;
                                    while(1) {
                                        _t34 = 1;
                                        _t64 = 0;
                                        if( *_t62 != 92) {
                                            goto L39;
                                        }
                                        goto L38;
                                    }
                                }
                                if(__eax == 0) {
                                    if(( *0x0043AB91 & 4) != 0) {
                                        _t62 = _t62 + 1;
                                         *__ecx =  *__ecx + 1;
                                    }
                                     *__ecx =  *__ecx + 1;
                                    goto L63;
                                }
                                if(( *0x0043AB91 & 4) != 0) {
                                     *__eax = _t46;
                                    _t62 = _t62 + 1;
                                    __eax = __eax + 1;
                                     *__ecx =  *__ecx + 1;
                                }
                                _t48 =  *_t62;
                                __eax = __eax + 1;
                                _t62 = _t62 + 1;
                                 *((char*)(__eax - 1)) = _t48;
                                 *__ecx =  *__ecx + 1;
                                _t34 = 1;
                                _t64 = 0;
                                if( *_t62 != 92) {
                                    goto L39;
                                }
                                goto L38;
                            }
                        } else {
                            goto L48;
                        }
                        do {
L48:
                            if(__eax != 0) {
                                 *__eax = 92;
                                __eax = __eax + 1;
                            }
                            _t49 = _t63;
                             *__ecx =  *__ecx + 1;
                            _t63 = _t63 - 1;
                        } while(_t49 != 0);
                        goto L51;
                    }
                    if((_t64 & 1) != 0) {
L46:
                        _t64 = _t64 >> 1;
                        goto L47;
                    }
                    if(_t59 == 0) {
L44:
                        _t34 = 0;
L45:
                        asm("sbb edi, edi");
                        _t59 =  ~_t59;
                        goto L46;
                    }
                    _t47 = _t62 + 1;
                    if( *_t47 != 34) {
                        goto L44;
                    }
                    _t62 = _t47;
                    goto L45;
                }
            }
            if( *((intOrPtr*)(__esp + 24)) != 0) {
                 *((intOrPtr*)( *((intOrPtr*)(__esp + 24)))) = 0;
            }
            _t41 =  *((intOrPtr*)(__esp + 32));
            _pop(__ebp);
            _pop(__edi);
            _pop(__esi);
            _pop(__ebx);
             *_t41 =  *_t41 + 1;
            return __eax;
        } else {
            goto L17;
        }
        while(1) {
L17:
            _t34 =  *_t62;
            if( *_t62 == 0) {
                goto L24;
            }
            if(( *0x0043AB91 & 4) != 0) {
                 *__ecx =  *__ecx + 1;
                if(__eax != 0) {
                    _t62 = _t62 + 1;
                     *__eax = 0;
                    __eax = __eax + 1;
                }
            }
             *__ecx =  *__ecx + 1;
            if(__eax != 0) {
                 *__eax =  *_t62;
                __eax = __eax + 1;
            }
            _t62 = _t62 + 1;
            if( *_t62 != 34) {
                continue;
            } else {
                goto L24;
            }
        }
        goto L24;
    } else {
        goto L3;
    }
    do {
L3:
         *__ecx =  *__ecx + 1;
        if(__eax != 0) {
             *__eax =  *_t62;
            __eax = __eax + 1;
        }
        _t55 =  *_t61;
        _t62 = _t61 + 1;
        _t34 = _t55;
        if(( *0x0043AB91 & 4) != 0) {
             *__ecx =  *__ecx + 1;
            if(__eax != 0) {
                _t34 =  *_t62;
                 *__eax =  *_t62;
                __eax = __eax + 1;
            }
            _t62 = _t62 + 1;
        }
        if(_t55 == 32) {
            break;
        }
        if(_t55 == 0) {
L13:
            _t62 = _t62 - 1;
            goto L28;
        }
    } while(_t55 != 9);
    if(_t55 != 0) {
        if(__eax != 0) {
             *((char*)(__eax - 1)) = 0;
        }
        goto L28;
    }
    goto L13;
}

L00412620(
    signed int __eax                       // r0
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t15;                       // _t15
    signed int _t18;                       // _t18
    signed int _t21;                       // _t21
    signed int _t23;                       // _t23
    intOrPtr _t24;                         // _t24
    intOrPtr* _t29;                        // _t29
    signed int _t30;                       // _t30
    short* _t31;                           // _t31
    _unknown_ _t34;                        // _t34
    signed int _t35;                       // _t35
    signed int _t37;                       // _t37

    _t15 = 0;
    _t23 = 0;
    _t29 = __imp__GetEnvironmentStringsW;
    if( *4434824 != 0) {
L6:
        if( *4434824 != 1) {
            __eflags =  *4434824 - 2;
            if( *4434824 != 2) {
                __eflags = 0;
                return;
            } else {
                __eflags = _t15;
                if(_t15 != 0) {
L23:
                    _t35 = _t15;
                    __eflags =  *_t15;
                    if( *_t15 != 0) {
                        goto L24;
                        do {
                            do {
L24:
                                _t35 = _t35 + 1;
                                __eflags =  *_t35;
                            } while( *_t35 != 0);
                            _t35 = _t35 + 1;
                            __eflags =  *_t35;
                        } while( *_t35 != 0);
                    }
                    _t37 = _t35 - _t15 + 1;
                    _push(_t37);
                    L004111A0();
                     *((intOrPtr*)(__esp + 20)) = __eax;
                    __esp = __esp + 4;
                    __eflags = __eax;
                    if(__eax != 0) {
                        _t24 =  *((intOrPtr*)(__esp + 16));
                        _t30 = _t15;
                        _t18 = _t37 >> 2;
                        _push(_t18 << 2);
                        _push(_t30);
                        _push(_t24);
                        memcpy();
                        __esp = __esp + 12;
                        _push(_t15);
                        _t21 = _t37 & 3;
                        __eflags = _t21;
                        _push(_t21 << 0);
                        _push(_t30);
                        _push(_t30 + _t18 + _t18);
                        memcpy();
                        __esp = __esp + 12;
                        __imp__FreeEnvironmentStringsA();
                        return;
                    } else {
                        _push(_t15);
                        __imp__FreeEnvironmentStringsA();
                        __eflags = 0;
                        return;
                    }
                } else {
                    __imp__GetEnvironmentStrings();
                    _t15 = __eax;
                    __eflags = __eax;
                    if(__eax != 0) {
                        goto L23;
                    } else {
                        __eflags = 0;
                        return;
                    }
                }
            }
        } else {
            if(_t23 != 0) {
L10:
                __eflags =  *_t23;
                _t31 = _t23;
                if( *_t23 != 0) {
                    goto L11;
                    do {
                        do {
L11:
                            _t31 = _t31 + 2;
                            __eflags =  *_t31;
                        } while( *_t31 != 0);
                        _t31 = _t31 + 2;
                        __eflags =  *_t31;
                    } while( *_t31 != 0);
                }
                _push(0);
                _push(0);
                _t34 = (_t31 - _t23 >> 1) + 1;
                _push(0);
                _push(0);
                _push(_t34);
                _push(_t23);
                _push(0);
                _push(0);
                __imp__WideCharToMultiByte();
                __eflags = __eax;
                if(__eax == 0) {
L18:
                    _push(_t23);
                    __imp__FreeEnvironmentStringsW();
                    __eflags = 0;
                    return;
                } else {
                    L004111A0(__eax);
                    __eflags = __eax;
                    if(__eax == 0) {
                        goto L18;
                    } else {
                        _push(0);
                        _push(0);
                        _push(__eax);
                        _push(__eax);
                        _push(_t34);
                        _push(_t23);
                        _push(0);
                        _push(0);
                        __imp__WideCharToMultiByte();
                        __eflags = __eax;
                        if(__eflags == 0) {
                            L00411250(__eax);
                            __eflags = 0;
                        }
                        _push(_t23);
                        __imp__FreeEnvironmentStringsW();
                        return;
                    }
                }
            } else {
                 *_t29();
                _t23 = __eax;
                if(__eax != 0) {
                    goto L10;
                } else {
                    return;
                }
            }
        }
    } else {
         *_t29();
        _t23 = __eax;
        if(__eax == 0) {
            __imp__GetEnvironmentStrings();
            _t15 = __eax;
            __eflags = __eax;
            if(__eflags == 0) {
                __eflags = 0;
                return;
            } else {
                 *4434824 = 2;
                goto L6;
            }
        } else {
             *4434824 = 1;
            goto L6;
        }
    }
}

L004127B0(
    intOrPtr _a4                           // _cfa_4
)
{
    char _v20;                             // _cfa_ffffffec
    char _v22;                             // _cfa_ffffffea
    signed int _v24;                       // _cfa_ffffffe8
    intOrPtr _v28;                         // _cfa_ffffffe4
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ __ebp;                       // r6
    intOrPtr* _t43;                        // _t43
    _unknown_ _t44;                        // _t44
    signed int _t47;                       // _t47
    intOrPtr _t55;                         // _t55
    _unknown_ _t57;                        // _t57
    _unknown_ _t64;                        // _t64
    intOrPtr* _t74;                        // _t74
    signed char _t77;                      // _t77
    char _t82;                             // _t82
    char _t86;                             // _t86
    _unknown_ _t89;                        // _t89
    signed int _t92;                       // _t92
    char* _t95;                            // _t95
    char* _t96;                            // _t96
    _unknown_ _t97;                        // _t97
    intOrPtr _t98;                         // _t98

    __esp = __esp - 24;
    _push(_t64);
    _push(_t95);
    _push(_t89);
    _push(_t97);
    _t98 = L00412990(_a4);
    if(_t98 !=  *4435092) {
        if(_t98 != 0) {
            _v24 = 0;
            _t43 = 4435128;
            while( *_t43 != _t98) {
                _t43 = _t43 + 48;
                _v24 = _v24 + 1;
                if(_t43 < 4435368) {
                    continue;
                } else {
                    _push( &_v20);
                    _push(_t98);
                    __imp__GetCPInfo();
                    if( &_v20 != 1) {
                        if( *4435116 == 0) {
                            _pop(__ebp);
                            _pop(__edi);
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 24;
                            return -1;
                        } else {
                            L00412A40();
                            _pop(__ebp);
                            _pop(__edi);
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 24;
                            return 0;
                        }
                    } else {
                        _push(64 << 2);
                        _push(0);
                        _push(4434832);
                        memset();
                        __esp = __esp + 12;
                        asm("stosb");
                        if(_v28 <= 1) {
                            _t55 = 0;
                             *4435092 = 0;
                        } else {
                            _t95 =  &_v22;
                            if(_v22 != 0) {
                                while( *((intOrPtr*)(_t95 + 1)) != 0) {
                                    _t82 =  *_t95;
                                    if(0 >= 0) {
                                        do {
                                             *(_t82 + 4434833) =  *(_t82 + 4434833) | 4;
                                            _t82 = _t82 + 1;
                                        } while(0 >= _t82);
                                    }
                                    _t95 = _t95 + 2;
                                    if( *_t95 != 0) {
                                        continue;
                                    }
                                    goto L14;
                                }
                            }
L14:
                            _t57 = 1;
                            do {
                                 *(_t57 + 4434833) =  *(_t57 + 4434833) | 8;
                                _t57 = _t57 + 1;
                            } while(_t57 < 255);
                            _push(_t98);
                             *4435092 = _t98;
                            _t55 = L004129E0();
                            __esp = __esp + 4;
                        }
                        _pop(__ebp);
                        _pop(__edi);
                         *4435096 = _t55;
                        _pop(__esi);
                        _pop(__ebx);
                         *4435104 = 0;
                         *((intOrPtr*)(0x43aca4)) = 0;
                         *((intOrPtr*)(0x43aca8)) = 0;
                        __esp = __esp + 24;
                        return 0;
                    }
                }
                goto L31;
            }
            _t44 = 0;
            _push(64 << 2);
            _push(0);
            _push(4434832);
            memset();
            __esp = __esp + 12;
            asm("stosb");
            _t92 = (_v24 + _v24 * 2) * 2;
            do {
                _t96 = 4435144 + (_t44 + _t92) * 8;
                if( *_t96 != 0) {
                    while( *((intOrPtr*)(_t96 + 1)) != 0) {
                        _t86 =  *_t96;
                        if(0 >= 0) {
                            _t77 =  *((intOrPtr*)(_t44 + 4435120));
                            do {
                                 *(_t86 + 4434833) =  *(_t86 + 4434833) | _t77;
                                _t86 = _t86 + 1;
                            } while(0 >= _t86);
                        }
                        _t96 = _t96 + 2;
                        if( *_t96 != 0) {
                            continue;
                        }
                        goto L24;
                    }
                }
L24:
                _t44 = _t44 + 1;
            } while(_t44 < 4);
            _push(_t98);
             *4435092 = _t98;
             *4435096 = L004129E0();
            _t47 = _v24 << 4;
            __esp = __esp + 4;
            _t74 = _t47 + 4435132 + _t47 * 2;
            _pop(__ebp);
            _pop(__edi);
            _pop(__esi);
             *4435104 =  *_t74;
             *((intOrPtr*)(0x43aca4)) =  *((intOrPtr*)(_t47 + 4435136 + _t47 * 2));
            _pop(__ebx);
             *((intOrPtr*)(0x43aca8)) = _t74[2];
            __esp = __esp + 24;
            return 0;
        } else {
            L00412A40();
            _pop(__ebp);
            _pop(__edi);
            _pop(__esi);
            _pop(__ebx);
            __esp = __esp + 24;
            return 0;
        }
    } else {
        _pop(__ebp);
        _pop(__edi);
        _pop(__esi);
        _pop(__ebx);
        __esp = __esp + 24;
        return 0;
    }
L31:
}

L00412990(
    intOrPtr _a4                           // _cfa_4
)
{
    intOrPtr _t2;                          // _t2

     *4435116 = 0;
    _t2 = _a4;
    if(_t2 == -2) {
         *4435116 = 1;
        goto __imp__GetOEMCP;
    }
    if(_t2 == -3) {
         *4435116 = 1;
        goto __imp__GetACP;
    }
    if(_t2 == -4) {
         *4435116 = 1;
        return  *4439528;
    }
    return _t2;
}

L004129E0(
    intOrPtr _a4                           // _cfa_4
)
{
    if(_a4 - 932 > 18) {
L2:
        return 0;
    } else {
        switch( *((intOrPtr*)(0 +  &M00412A18))) {
            case 0:
                return 1041;
                goto L7;
            case 1:
                return 2052;
                goto L7;
            case 2:
                return 1042;
                goto L7;
            case 3:
                return 1028;
                goto L7;
            case 4:
                goto L2;
        }
    }
L7:
}

L00412A40()
{
    _unknown_ __edi;                       // r4
    _unknown_ _t7;                         // _t7

    _push(_t7);
    _push(64 << 2);
    _push(0);
    _push(4434832);
    memset();
    __esp = __esp + 12;
    asm("stosb");
     *4435104 = 0;
    _pop(__edi);
     *4435092 = 0;
     *4435096 = 0;
     *((intOrPtr*)(0x43aca4)) = 0;
     *((intOrPtr*)(0x43aca8)) = 0;
    return 0;
}

L00412A70()
{
    return L004127B0(-3);
}

L00412A80()
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed int _t37;                       // _t37
    signed int _t39;                       // _t39
    intOrPtr* _t41;                        // _t41
    signed char _t42;                      // _t42
    intOrPtr _t47;                         // _t47
    intOrPtr* _t51;                        // _t51
    intOrPtr* _t52;                        // _t52
    intOrPtr _t53;                         // _t53
    intOrPtr* _t56;                        // _t56
    signed int* _t66;                      // _t66
    intOrPtr* _t67;                        // _t67
    intOrPtr _t68;                         // _t68
    signed int _t69;                       // _t69
    intOrPtr _t70;                         // _t70
    signed int _t71;                       // _t71
    signed int _t72;                       // _t72
    intOrPtr* _t73;                        // _t73

    _t68 = L004111A0(256);
    if(_t68 == 0) {
        L00411170(27);
    }
     *4539776 = _t68;
     *4540032 = 32;
    if(_t68 + 256 <= _t68) {
L5:
        _push(__esp + 16);
        __imp__GetStartupInfoA();
        if( *((short*)(__esp + 66)) == 0 ||  *((intOrPtr*)(__esp + 68)) == 0) {
L25:
            _t69 = 0;
            _t51 = __imp__GetStdHandle;
            do {
                _t66 = _t69 * 8 +  *4539776;
                if( *_t66 != -1) {
                    _t66[1] = _t66[1] | 128;
                    goto L37;
                }
                _t37 = -10;
                _t66[1] = 129;
                if(_t69 != 0) {
                    _t37 = -11;
                    asm("adc eax, 0xffffffff");
                }
                _push(_t37);
                 *_t51();
                _t71 = _t37;
                if(_t37 == -1) {
L35:
                    _t66[1] = _t66[1] | 64;
                } else {
                    _push(_t71);
                    __imp__GetFileType();
                    if(_t37 == 0) {
                        goto L35;
                    }
                    _t39 = _t37 & 255;
                     *_t66 = _t71;
                    if(_t39 != 2) {
                        if(_t39 == 3) {
                            _t66[1] = _t66[1] | 8;
                        }
                    } else {
                        _t66[1] = _t66[1] | 64;
                    }
                }
L37:
                _t69 = _t69 + 1;
            } while(_t69 < 3);
            _push( *4540032);
            __imp__SetHandleCount();
            return;
        } else {
            _t41 =  *((intOrPtr*)(__esp + 68));
            _t70 =  *_t41;
            _t67 = _t41 + 4;
            _t52 = _t70 + _t67;
            if(_t70 >= 2048) {
                _t70 = 2048;
            }
            if( *4540032 >= _t70) {
L18:
                _t72 = 0;
                if(_t70 <= 0) {
                    goto L25;
                } else {
                    goto L19;
                }
                do {
L19:
                    _t53 =  *_t52;
                    if(_t53 == -1) {
                        goto L24;
                    }
                    _t42 =  *_t67;
                    if((_t42 & 1) == 0) {
                        goto L24;
                    }
                    if((_t42 & 8) != 0) {
L23:
                        _t56 =  *((intOrPtr*)(((_t72 & -25) >> 3) + 4539776)) + (_t72 & 31) * 8;
                         *_t56 =  *_t52;
                         *((char*)(_t56 + 4)) =  *_t67;
                        goto L24;
                    }
                    _push(_t53);
                    __imp__GetFileType();
                    if(_t42 == 0) {
                        goto L24;
                    }
                    goto L23;
L24:
                    _t72 = _t72 + 1;
                    _t67 = _t67 + 1;
                    _t52 = _t52 + 4;
                } while(_t72 < _t70);
                goto L25;
            } else {
                _t73 = 4539780;
                while(1) {
                    _t47 = L004111A0(256);
                    if(_t47 == 0) {
                        break;
                    }
                     *_t73 = _t47;
                     *4540032 =  *4540032 + 32;
                    if(_t47 + 256 <= _t47) {
L15:
                        _t73 = _t73 + 4;
                        if( *4540032 < _t70) {
                            continue;
                        }
                        goto L18;
                    }
                    do {
                         *((char*)(_t47 + 4)) = 0;
                        _t47 = _t47 + 8;
                         *((intOrPtr*)(_t47 - 8)) = -1;
                         *((char*)(_t47 - 3)) = 10;
                    } while( *_t73 + 256 > _t47);
                    goto L15;
                }
                _t70 =  *4540032;
                goto L18;
            }
        }
    } else {
        do {
             *((char*)(_t68 + 4)) = 0;
            _t68 = _t68 + 8;
             *((intOrPtr*)(_t68 - 8)) = -1;
             *((char*)(_t68 - 3)) = 10;
        } while( *4539776 + 256 > _t68);
        goto L5;
    }
}

L00412C60(
    intOrPtr __eax                         // r0
)
{
    _push(0);
    _push(4096);
    _push(1);
    __imp__HeapCreate();
     *4539764 = __eax;
    if(__eax != 0) {
        L00412FF0(__eax);
        if(__eax != 0) {
            return 1;
        } else {
            _push( *4539764);
            __imp__HeapDestroy();
            return 0;
        }
    } else {
        return 0;
    }
}

L00412D80()
{
    intOrPtr _t1;                          // _t1
    intOrPtr* _t3;                         // _t3

    _t1 =  *4434608;
    if(_t1 == 1 || _t1 == 0 &&  *4434612 == 1) {
        L00412DC0(252);
        _t3 =  *4435528;
        if(_t3 != 0) {
             *_t3();
        }
        L00412DC0(255);
        return;
    } else {
        return;
    }
}

L00412DC0(
    intOrPtr _a4                           // _cfa_4
)
{
    char _v260;                            // _cfa_fffffefc
    char _v272;                            // _cfa_fffffef0
    char _v428;                            // _cfa_fffffe54
    char _v432;                            // _cfa_fffffe50
    signed int __ebx;                      // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ __ebp;                       // r6
    intOrPtr* _t29;                        // _t29
    signed int _t42;                       // _t42
    signed int _t54;                       // _t54
    signed int _t63;                       // _t63
    signed int _t72;                       // _t72
    intOrPtr _t81;                         // _t81
    signed int _t83;                       // _t83
    signed int _t84;                       // _t84
    signed int _t85;                       // _t85
    intOrPtr _t119;                        // _t119
    _unknown_ _t121;                       // _t121
    _unknown_ _t122;                       // _t122
    _unknown_ _t123;                       // _t123
    char* _t126;                           // _t126

    _t42 = 0;
    _t29 = 4435384;
    _t81 = _a4;
    while( *_t29 != _t81) {
        _t29 = _t29 + 8;
        _t42 = _t42 + 1;
        if(_t29 < 4435528) {
            continue;
        }
        break;
    }
    __ebx = _t42 * 8;
    if( *((intOrPtr*)(4435384 + _t42 * 8)) != _t81) {
L17:
        return _t29;
    } else {
        if( *4434608 == 1 ||  *4434608 == 0 &&  *4434612 == 1) {
            if( *4539776 == 0) {
L15:
                _push(-12);
                __imp__GetStdHandle();
                _t119 = _t29;
L16:
                _push(0);
                _push( &_v428);
                asm("repne scasb");
                _push( !-1 - 1);
                _push( *((intOrPtr*)(__ebx + 4435388)));
                _push(_t119);
                __imp__WriteFile();
                return 0;
            }
            _t29 =  *4539776;
            _t119 = _t29[4];
            if(_t119 != -1) {
                goto L16;
            }
            goto L15;
        }
        if(_t81 == 252) {
            goto L17;
        } else {
            _push(260);
            _push( &_v260);
            _push(0);
             *__imp__GetModuleFileNameA();
            if( &_v260 == 0) {
                _push(5 << 2);
                _push("<program name unknown>");
                _push( &_v272);
                memcpy();
                __esp = __esp + 12;
                asm("movsw");
                asm("movsb");
            }
            _t126 =  &_v272;
            asm("repne scasb");
            if( !-1 > 60) {
                _push(3);
                asm("repne scasb");
                _t126 = __esp +  !-1 + 124;
                _push("...");
                _push(_t126);
                L00416300(0);
                __esp = __esp + 12;
            }
            _push(6 << 2);
            _push("Runtime Error!\n\nProgram: ");
            _push( &_v432);
            memcpy();
            __esp = __esp + 12;
            asm("movsw");
            asm("repne scasb");
            _t83 =  !-1;
            _t121 = _t126 - -1;
            asm("repne scasb");
            _t54 = _t83 >> 2;
            _push(_t54 << 2);
            _push(_t121);
            _push( &_v432 - 1);
            memcpy();
            __esp = __esp + 12;
            _push((_t83 & 3) << 0);
            _push(_t121);
            _push(_t121 + _t54 + _t54);
            memcpy();
            __esp = __esp + 12;
            asm("repne scasb");
            _t84 =  !-1;
            _t122 = "\n\n" - -1;
            asm("repne scasb");
            _t63 = _t84 >> 2;
            _push(_t63 << 2);
            _push(_t122);
            _push( &_v432 - 1);
            memcpy();
            __esp = __esp + 12;
            _push((_t84 & 3) << 0);
            _push(_t122);
            _push(_t122 + _t63 + _t63);
            memcpy();
            __esp = __esp + 12;
            asm("repne scasb");
            _t123 =  *((intOrPtr*)(__ebx + 4435388)) - -1;
            _t85 =  !-1;
            asm("repne scasb");
            _t72 = _t85 >> 2;
            _push(_t72 << 2);
            _push(_t123);
            _push( &_v432 - 1);
            memcpy();
            __esp = __esp + 12;
            _push(73744);
            _push("Microsoft Visual C++ Runtime Library");
            _push((_t85 & 3) << 0);
            _push(_t123);
            _push(_t123 + _t72 + _t72);
            memcpy();
            __esp = __esp + 12;
            _push( &_v432);
            L00416260( &_v432);
            __esp = __esp + 12;
            return  &_v432;
        }
    }
}

L00412FC0(
    intOrPtr _a4                           // _cfa_4
)
{
    intOrPtr _t3;                          // _t3

    __ecx =  *4532324;
    if(__ecx == 0) {
L3:
        return;
    } else {
        _t3 = _a4;
        _push(_t3);
         *__ecx();
        __esp = __esp + 4;
        if(_t3 == 0) {
            goto L3;
        } else {
            return;
        }
    }
}

L00412FF0(
    intOrPtr* __eax                        // r0
)
{
    intOrPtr* __ebx;                       // r1
    _unknown_ __edi;                       // r4
    intOrPtr* __esi;                       // r5
    intOrPtr* _t16;                        // _t16
    intOrPtr* _t36;                        // _t36
    _unknown_ _t37;                        // _t37

    _t16 = __eax;
    if( *4437600 != 0) {
        _push(2068);
        _t16 =  *4539764;
        _push(0);
        _push(_t16);
        __imp__HeapAlloc();
        __esi = _t16;
        __eflags = __esi;
        if(__eflags != 0) {
            goto L2;
        } else {
            __eflags = 0;
            return;
        }
    } else {
        __esi = 4435536;
L2:
        _push(4);
        _t36 = __imp__VirtualAlloc;
        _push(8192);
        _push(4194304);
        _push(0);
         *_t36();
        __ebx = _t16;
        if(__ebx == 0) {
L22:
            __eflags = __esi - 4435536;
            if(__esi != 4435536) {
                _push(__esi);
                _push(0);
                _push( *4539764);
                __imp__HeapFree();
            }
            __eflags = 0;
            return;
        } else {
            _push(4);
            _push(4096);
            _push(65536);
            _push(__ebx);
             *_t36();
            if(_t16 == 0) {
                _push(32768);
                _push(0);
                _push(__ebx);
                __imp__VirtualFree();
                goto L22;
            } else {
                if(__esi != 4435536) {
                     *__esi = 4435536;
                     *((intOrPtr*)(__esi + 4)) =  *4435540;
                     *4435540 = __esi;
                     *((intOrPtr*)(__esi[1])) = __esi;
                } else {
                    if( *4435536 == 0) {
                         *4435536 = 4435536;
                    }
                    if( *4435540 == 0) {
                         *4435540 = 4435536;
                    }
                }
                __ebp = 0;
                __esi[0x204] = __ebx;
                __esi[2] = 0;
                __esi[3] = 16;
                do {
                    _t37 = __esi + __ebp;
                    if(__ebp >= 16) {
                         *((char*)(_t37 + 16)) = 255;
                    } else {
                         *((char*)(_t37 + 16)) = 240;
                    }
                    __ebp = __ebp + 1;
                     *((char*)(_t37 + 1040)) = 241;
                } while(__ebp < 1024);
                _push(16384 << 2);
                _push(0);
                _push(__ebx);
                memset();
                __esp = __esp + 12;
                while(__esi[0x204] + 65536 > __ebx) {
                     *__ebx = __ebx + 8;
                    __ebx[1] = 240;
                     *((char*)(__ebx + 248)) = 255;
                    __ebx = __ebx + 4096;
                }
                return;
            }
        }
    }
}

L00413160(
    intOrPtr* _a4                          // _cfa_4
)
{
    intOrPtr* __esi;                       // r5
    intOrPtr _t7;                          // _t7
    intOrPtr _t9;                          // _t9

    _push(32768);
    __esi = _a4;
    _push(0);
    _t7 = __esi[0x204];
    _push(_t7);
    __imp__VirtualFree();
    if( *4437604 == __esi) {
        _t7 = __esi[1];
         *4437604 = _t7;
    }
    if(__esi == 4435536) {
         *4437600 = 0;
        return _t7;
    } else {
        _push(__esi);
        _push(0);
         *((intOrPtr*)(__esi[1])) =  *__esi;
        _t9 =  *__esi;
         *((intOrPtr*)(_t9 + 4)) = __esi[1];
        _push( *4539764);
        __imp__HeapFree();
        return _t9;
    }
}

L004131C0()
{
    char* __ebx;                           // r1
    _unknown_ __edi;                       // r4
    intOrPtr* __esi;                       // r5
    intOrPtr* _t16;                        // _t16
    _unknown_ _t18;                        // _t18
    intOrPtr _t19;                         // _t19

    __esi =  *4435540;
    do {
        if(__esi[0x204] != 0) {
            __ebp = 1023;
            __ebx = __esi + 1039;
             *((intOrPtr*)(__esp + 16)) = 0;
            __edi = 4190208;
            do {
                if( *__ebx != 240) {
                    goto L9;
                }
                _push(16384);
                _push(4096);
                _t18 = __esi[0x204] + __edi;
                _push(_t18);
                __imp__VirtualFree();
                if(_t18 != 0) {
                     *__ebx = 255;
                     *4437608 =  *4437608 - 1;
                    _t19 = __esi[3];
                    if(_t19 == -1 || __ebp < _t19) {
                        __esi[3] = __ebp;
                    }
                     *((intOrPtr*)(__esp + 16)) =  *((intOrPtr*)(__esp + 16)) + 1;
                    _t9 = __esp + 24;
                     *_t9 =  *((intOrPtr*)(__esp + 24)) - 1;
                    if( *_t9 == 0) {
                        break;
                    }
                }
L9:
                __edi = __edi - 4096;
                __ebp = __ebp - 1;
                __ebx = __ebx - 1;
            } while(__edi >= 0);
            _t16 = __esi;
            __esi = __esi[1];
            if( *((intOrPtr*)(__esp + 16)) != 0 &&  *((char*)(_t16 + 16)) == 255) {
                __edx = 1;
                __ecx = _t16 + 17;
                while( *__ecx == 255) {
                    __edx = __edx + 1;
                    __ecx = __ecx + 1;
                    if(__edx < 1024) {
                        continue;
                    }
                    break;
                }
                if(__edx == 1024) {
                    _t16 = L00413160(_t16);
                }
            }
        }
    } while(__esi !=  *4435540 &&  *((intOrPtr*)(__esp + 24)) > 0);
    return _t16;
}

L004132A0(
    signed int _a4,                        // _cfa_4
    intOrPtr* _a8,                         // _cfa_8
    signed int* _a12                       // _cfa_c
)
{
    intOrPtr _t7;                          // _t7
    intOrPtr* _t13;                        // _t13
    signed int _t15;                       // _t15
    signed int _t16;                       // _t16

    _t13 = 4435536;
    _t16 = _a4;
    while(1) {
        _t7 = _t13[0x204];
        if(_t7 != 0 && _t7 < _t16 && _t7 + 4194304 > _t16) {
             *_a8 = _t13;
            _t15 = _t16 & -4096;
             *_a12 = _t15;
            return (_t16 - _t15 - 256 >> 4) + _t15 + 8;
        }
        _t13 =  *_t13;
        if(_t13 != 4435536) {
            continue;
        } else {
            return 0;
        }
        break;
    }
}

L00413300(
    _unknown_ __edx,                       // r3
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    char* _a12                             // _cfa_c
)
{
    char* _t10;                            // _t10
    _unknown_ _t11;                        // _t11
    _unknown_ _t15;                        // _t15

    _t15 = (_a8 -  *((intOrPtr*)(_a4 + 2064)) >> 12) + _a4;
    _t10 = _a12;
     *((intOrPtr*)(_t15 + 16)) =  *((intOrPtr*)(_t15 + 16)) +  *_t10;
     *_t10 = 0;
     *((char*)(_t15 + 1040)) = 241;
    if( *((char*)(_t15 + 16)) == 240) {
         *4437608 =  *4437608 + 1;
        if( *4437608 == 32) {
            _push(16);
            _t11 = L004131C0();
            __esp = __esp + 4;
            return _t11;
        }
    }
    return _t10;
}

L00413350(
    _unknown_ __ecx                        // r2
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ _t80;                        // _t80
    intOrPtr* _t83;                        // _t83
    _unknown_ _t95;                        // _t95
    _unknown_ _t98;                        // _t98
    _unknown_ _t99;                        // _t99
    char _t100;                            // _t100
    _unknown_ _t103;                       // _t103
    signed int _t104;                      // _t104
    signed int _t105;                      // _t105
    intOrPtr _t112;                        // _t112
    intOrPtr _t113;                        // _t113
    signed int _t118;                      // _t118
    signed int _t120;                      // _t120
    _unknown_ _t122;                       // _t122
    intOrPtr* _t123;                       // _t123
    _unknown_ _t124;                       // _t124
    intOrPtr* _t125;                       // _t125
    signed int _t126;                      // _t126
    signed int _t127;                      // _t127
    _unknown_ _t128;                       // _t128
    signed int _t129;                      // _t129
    signed int _t130;                      // _t130
    intOrPtr* _t131;                       // _t131
    _unknown_ _t132;                       // _t132
    signed int _t134;                      // _t134
    intOrPtr* _t138;                       // _t138
    signed int _t140;                      // _t140

    _push(_t99);
    _push(_t128);
    _t100 =  *((intOrPtr*)(__esp + 12));
    _push(_t124);
    _push(_t132);
    _t125 =  *4437604;
    goto L1;
    do {
L17:
        _t125 =  *_t125;
        if( *4437604 != _t125) {
L1:
            if( *((intOrPtr*)(_t125 + 2064)) == 0) {
                continue;
            } else {
                break;
            }
        } else {
            _t131 = 4435536;
L19:
            while(_t131[0x204] == 0 ||  *(_t131 + 12) == -1) {
                _t131 =  *_t131;
                if(_t131 != 4435536) {
                    continue;
                } else {
                    L00412FF0(0);
                    if(0 == 0) {
                        _pop(__ebp);
                        _pop(__edi);
                        _pop(__esi);
                        _pop(__ebx);
                        return 0;
                    } else {
                        _t123 =  *((intOrPtr*)(0x810));
                         *((char*)(_t123 + 8)) = _t100;
                         *4437604 = 0;
                         *_t123 = _t100 + _t123 + 8;
                        _pop(__ebp);
                        _pop(__edi);
                        _t123[1] = 240 - _t100;
                        _pop(__esi);
                         *((intOrPtr*)(0x10)) =  *((intOrPtr*)(0x10)) - _t100;
                        _pop(__ebx);
                        return  *((intOrPtr*)(0x810)) + 256;
                    }
                }
                goto L45;
            }
            _t118 =  *(_t131 + 12);
            _t126 = _t118;
            _t103 = _t118 + 16;
            if(_t103 >= 1024) {
                _t103 = 1024;
            }
            _t127 = _t126 + 1;
            if(_t103 > _t127) {
                while( *((intOrPtr*)(_t131 + _t127 + 16)) == 255) {
                    _t127 = _t127 + 1;
                    if(_t103 > _t127) {
                        continue;
                    }
                    goto L32;
                }
            }
L32:
            _push(4);
            _t134 = _t118 << 12;
            _push(4096);
            _push(_t127 - _t118 << 12);
            _t80 =  *((intOrPtr*)(_t131 + 2064)) + _t134;
            _push(_t80);
            __imp__VirtualAlloc();
            if(_t80 != _t134 +  *((intOrPtr*)(_t131 + 2064))) {
                _pop(__ebp);
                _pop(__edi);
                _pop(__esi);
                _pop(__ebx);
                return 0;
            } else {
                _t104 =  *(_t131 + 12);
                _t138 = (_t104 << 12) +  *((intOrPtr*)(_t131 + 2064));
                while(_t104 < _t127) {
                    _t104 = _t104 + 1;
                     *_t138 = _t138 + 8;
                    _t138 = _t138 + 4096;
                    _t122 = _t131 + _t104 - 1;
                     *((intOrPtr*)(_t138 - 4092)) = 240;
                     *((char*)(_t138 - 3848)) = 255;
                     *((char*)(_t122 + 16)) = 240;
                     *((char*)(_t122 + 1040)) = 241;
                }
                 *4437604 = _t131;
                if(_t127 < 1024) {
                    while( *((intOrPtr*)(_t131 + _t127 + 16)) != 255) {
                        _t127 = _t127 + 1;
                        if(_t127 < 1024) {
                            continue;
                        }
                        goto L40;
                    }
                }
L40:
                _t105 =  *(_t131 + 12);
                 *(_t131 + 12) = -1;
                if(_t127 < 1024) {
                     *(_t131 + 12) = _t127;
                }
                _t120 = _t105 << 12;
                _t83 = _t131[0x204] + _t120;
                 *((char*)(_t83 + 8)) = _t100;
                 *(_t131 + 8) = _t105;
                 *((intOrPtr*)(_t131 + _t105 + 16)) =  *((intOrPtr*)(_t131 + _t105 + 16)) - _t100;
                _pop(__ebp);
                _pop(__edi);
                 *_t83 = _t100 + _t83 + 8;
                _t83[1] = _t83[1] - _t100;
                _pop(__esi);
                _pop(__ebx);
                return _t131[0x204] + _t120 + 256;
            }
        }
        goto L45;
    } while();
    _t129 =  *(_t125 + 8);
    if(_t129 >= 1024) {
L10:
        _t132 = 0;
        _t130 = 0;
        if( *(_t125 + 8) > 0) {
            do {
                _t112 =  *((intOrPtr*)(_t125 + _t130 + 16));
                if(0 < _t100 || _t112 == 255 || 0 <= _t100) {
                    goto L16;
                } else {
                    _push(_t100);
                    _push(0);
                    _push( *((intOrPtr*)(_t125 + 2064)) + _t132);
                    _t98 = L004135D0();
                    __esp = __esp + 12;
                    if(_t98 != 0) {
                        _pop(__ebp);
                         *4437604 = _t125;
                         *((intOrPtr*)(_t125 + _t130 + 16)) =  *((intOrPtr*)(_t125 + _t130 + 16)) - _t100;
                         *(_t125 + 8) = _t130;
                        _pop(__edi);
                        _pop(__esi);
                        _pop(__ebx);
                        return _t98;
                    } else {
                         *((char*)(_t125 + _t130 + 1040)) = _t100;
                        goto L16;
                    }
                }
                goto L45;
L16:
                _t132 = _t132 + 4096;
                _t130 = _t130 + 1;
            } while( *(_t125 + 8) > _t130);
        }
        goto L17;
    } else {
        _t140 = _t129 << 12;
        do {
            _t113 =  *((intOrPtr*)(_t125 + _t129 + 16));
            if(0 < _t100 || _t113 == 255 || 0 <= _t100) {
                goto L9;
            } else {
                _push(_t100);
                _push(0);
                _push( *((intOrPtr*)(_t125 + 2064)) + _t140);
                _t95 = L004135D0();
                __esp = __esp + 12;
                if(_t95 != 0) {
                    _pop(__ebp);
                     *4437604 = _t125;
                     *((intOrPtr*)(_t125 + _t129 + 16)) =  *((intOrPtr*)(_t125 + _t129 + 16)) - _t100;
                     *(_t125 + 8) = _t129;
                    _pop(__edi);
                    _pop(__esi);
                    _pop(__ebx);
                    return _t95;
                } else {
                     *((char*)(_t125 + _t129 + 1040)) = _t100;
                    goto L9;
                }
            }
            goto L45;
L9:
            _t140 = _t140 + 4096;
            _t129 = _t129 + 1;
        } while(_t140 < 4194304);
        goto L10;
    }
L45:
    goto L17;
}

L004135D0()
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    intOrPtr* _t38;                        // _t38
    intOrPtr _t49;                         // _t49
    intOrPtr _t54;                         // _t54
    intOrPtr _t56;                         // _t56
    char* _t57;                            // _t57
    char* _t61;                            // _t61
    char* _t66;                            // _t66
    char* _t71;                            // _t71
    intOrPtr _t75;                         // _t75
    intOrPtr _t76;                         // _t76
    intOrPtr _t77;                         // _t77
    _unknown_ _t79;                        // _t79
    char* _t80;                            // _t80
    char* _t81;                            // _t81

    _t38 =  *((intOrPtr*)(__esp + 4));
    __edx =  *((intOrPtr*)(__esp + 16));
    _t56 = _t38[1];
    _push(_t79);
    _t71 =  *_t38;
    _t80 = _t71;
    if(__edx > _t56) {
        _t57 = _t56 + _t71;
        if( *_t57 != 0) {
            _t80 = _t57;
        }
        _t75 =  *((intOrPtr*)(__esp + 24));
        if(__edx + _t80 >= _t38 + 248) {
L24:
            _t81 = _t38 + 8;
            if(_t71 <= _t38 + 8) {
L34:
                _pop(__ebp);
                return 0;
            } else {
                while(__edx + _t81 <= _t38 + 247) {
                    if( *_t81 != 0) {
                        _t81 = _t81;
                        goto L33;
                    } else {
                        _t61 = _t81 + 1;
                        _t49 = 1;
                        while( *_t61 == 0) {
                            _t61 = _t61 + 1;
                            _t49 = _t49 + 1;
                        }
                        if(_t49 >= __edx) {
                            _t76 = __edx + _t81;
                            if(_t76 >= _t38 + 248) {
                                _t38[1] = 0;
                                 *_t38 = _t38 + 8;
                            } else {
                                 *_t38 = _t76;
                                _t38[1] = _t49 - __edx;
                            }
                             *_t81 = __dl;
                            _pop(__ebp);
                            return (_t81 - _t38 << 4) + _t38 + 128;
                        } else {
                            _t75 = _t75 - _t49;
                            if(__edx > _t75) {
                                _pop(__ebp);
                                return 0;
                            } else {
                                _t81 = _t61;
L33:
                                if(_t71 > _t81) {
                                    continue;
                                } else {
                                    goto L34;
                                }
                            }
                        }
                    }
                    goto L40;
                }
                goto L34;
            }
        } else {
            do {
                if( *_t80 != 0) {
                    _t80 = _t80;
                    goto L17;
                } else {
                    _t66 = _t80 + 1;
                    _t54 = 1;
                    while( *_t66 == 0) {
                        _t66 = _t66 + 1;
                        _t54 = _t54 + 1;
                    }
                    if(_t54 >= __edx) {
                        _t77 = __edx + _t80;
                        if(_t77 >= _t38 + 248) {
                            _t38[1] = 0;
                             *_t38 = _t38 + 8;
                        } else {
                             *_t38 = _t77;
                            _t38[1] = _t54 - __edx;
                        }
                         *_t80 = __dl;
                        _pop(__ebp);
                        return (_t80 - _t38 << 4) + _t38 + 128;
                    } else {
                        if(_t71 != _t80) {
                            _t75 = _t75 - _t54;
                            if(__edx > _t75) {
                                _pop(__ebp);
                                return 0;
                            } else {
                                _t80 = _t66;
                                goto L17;
                            }
                        } else {
                            _t80 = _t66;
                            _t38[1] = _t54;
                            goto L17;
                        }
                    }
                }
                goto L40;
L17:
            } while(__edx + _t80 < _t38 + 248);
            goto L24;
        }
    } else {
         *_t71 = __dl;
        if(__edx + _t71 >= _t38 + 248) {
            _t38[1] = 0;
             *_t38 = _t38 + 8;
        } else {
             *_t38 =  *_t38 + __edx;
            _t38[1] = _t38[1] - __edx;
        }
        _pop(__ebp);
        return (_t71 - _t38 << 4) + _t38 + 128;
    }
L40:
}

L00413750(
    signed int _a4                         // _cfa_4
)
{
    intOrPtr* __ebx;                       // r1
    _unknown_ __edi;                       // r4
    signed int __esi;                      // r5
    _unknown_ __ebp;                       // r6
    _unknown_ _t16;                        // _t16
    _unknown_ _t23;                        // _t23
    _unknown_ _t24;                        // _t24
    signed int _t25;                       // _t25
    _unknown_ _t26;                        // _t26
    _unknown_ _t28;                        // _t28

    _push(_t24);
    _push(_t26);
    _t25 = _a4;
    if( *4540032 <= _t25) {
L11:
        _pop(__ebp);
         *4434520 = 9;
         *4434524 = 0;
        _pop(__edi);
        return -1;
    } else {
        __ebx = ((_t25 & -25) >> 3) + 4539776;
        __esi = (_t25 & 31) * 8;
        if(( *( *__ebx + __esi + 4) & 1) == 0) {
            goto L11;
        } else {
            if(_t25 == 1 || _t25 == 2) {
                _t16 = L00416600(2);
                if(_t16 == L00416600(1)) {
                    goto L7;
                } else {
                    goto L5;
                }
            } else {
L5:
                _t23 = L00416600(_t25);
                _push(_t23);
                __imp__CloseHandle();
                if(_t23 != 0) {
L7:
                    _t28 = 0;
                } else {
                    __imp__GetLastError();
                    _t28 = _t23;
                }
            }
            L00416570(_t25);
            if(_t28 == 0) {
                _pop(__ebp);
                _pop(__edi);
                 *( *__ebx + __esi + 4) = 0;
                return 0;
            } else {
                L004144A0(_t28);
                _pop(__ebp);
                _pop(__edi);
                return -1;
            }
        }
    }
}

signed char L00413820(
    intOrPtr* _a4                          // _cfa_4
)
{
    intOrPtr* __esi;                       // r5
    signed char _t12;                      // _t12
    _unknown_ _t14;                        // _t14

    __esi = _a4;
    _t12 =  *(__esi + 12);
    if((_t12 & 131) == 0 || (_t12 & 8) == 0) {
        return _t12;
    } else {
        _t14 = L00411250(__esi[2]);
         *__esi = 0;
         *(__esi + 12) =  *(__esi + 12) & -1033;
        __esi[2] = 0;
        __esi[1] = 0;
        return _t14;
    }
}

L004138B0(
    intOrPtr* _a4                          // _cfa_4
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    intOrPtr* __esi;                       // r5
    signed int _t15;                       // _t15
    signed int _t21;                       // _t21
    _unknown_ _t24;                        // _t24

    __esi = _a4;
    __edi = 0;
    _t15 =  *(__esi + 12);
    if((_t15 & 3) == 2 && (_t15 & 264) != 0) {
        _t18 = __esi[2];
        _t24 =  *__esi - __esi[2];
        if(_t24 > 0) {
            if(L004141B0(__esi[4], _t18, _t24) != _t24) {
                 *(__esi + 12) =  *(__esi + 12) | 32;
                __edi = -1;
            } else {
                _t21 =  *(__esi + 12);
                if((_t21 & 128) != 0) {
                     *(__esi + 12) = _t21 & -3;
                }
            }
        }
    }
     *__esi = __esi[2];
    __esi[1] = 0;
    return __edi;
}

L004139C0(
    intOrPtr* _a4                          // _cfa_4
)
{
    intOrPtr* __esi;                       // r5
    signed int _t40;                       // _t40
    signed int _t42;                       // _t42
    signed int _t45;                       // _t45
    signed char _t52;                      // _t52
    _unknown_ _t53;                        // _t53
    signed int _t65;                       // _t65
    signed int _t68;                       // _t68

    __esi = _a4;
    _t40 =  *(__esi + 12);
    if((_t40 & 131) == 0 || (_t40 & 64) != 0) {
        return -1;
    } else {
        if((_t40 & 2) == 0) {
            _t42 = _t40 | 1;
             *(__esi + 12) = _t42;
            if((_t42 & 268) != 0) {
                 *__esi = __esi[2];
            } else {
                L004166C0(__esi);
            }
            _t45 = L00413AB0( *(__esi + 16), __esi[2], __esi[6]);
             *(__esi + 4) = _t45;
            if(_t45 == 0 || _t45 == -1) {
                asm("sbb eax, eax");
                 *(__esi + 12) =  *(__esi + 12) | (_t45 & -16) + 32;
                 *(__esi + 4) = 0;
                return -1;
            } else {
                _t68 =  *(__esi + 12);
                if((_t68 & 130) == 0) {
                    _t65 =  *(__esi + 16);
                    _t53 = 4435368;
                    if(_t65 != -1) {
                        _t53 =  *((intOrPtr*)(((_t65 & -25) >> 3) + 4539776)) + (_t65 & 31) * 8;
                    }
                    if(( *(_t53 + 4) & 130) == 130) {
                         *(__esi + 12) = _t68 | 8192;
                    }
                }
                if(__esi[6] == 512) {
                    _t52 =  *(__esi + 12);
                    if((_t52 & 8) != 0 && (_t52 & 4) == 0) {
                        __esi[6] = 4096;
                    }
                }
                 *(__esi + 4) =  *(__esi + 4) - 1;
                 *__esi =  *__esi + 1;
                return 0;
            }
        } else {
             *(__esi + 12) = _t40 | 32;
            return -1;
        }
    }
}

L00413AB0(
    signed int _a4,                        // _cfa_4
    char* _a8,                             // _cfa_8
    intOrPtr _a12                          // _cfa_c
)
{
    char _v8;                              // _cfa_fffffff8
    char* _v12;                            // _cfa_fffffff4
    intOrPtr _v24;                         // _cfa_ffffffe8
    char _v28;                             // _cfa_ffffffe4
    intOrPtr _v32;                         // _cfa_ffffffe0
    char _v33;                             // _cfa_ffffffdf
    intOrPtr _v36;                         // _cfa_ffffffdc
    intOrPtr _v44;                         // _cfa_ffffffd4
    intOrPtr _v48;                         // _cfa_ffffffd0
    intOrPtr _v52;                         // _cfa_ffffffcc
    char _v53;                             // _cfa_ffffffcb
    signed int __ebx;                      // r1
    _unknown_ __edi;                       // r4
    intOrPtr* __esi;                       // r5
    intOrPtr* __ebp;                       // r6
    signed int _t64;                       // _t64
    _unknown_ _t71;                        // _t71
    signed char* _t75;                     // _t75
    intOrPtr _t78;                         // _t78
    char _t79;                             // _t79
    signed char* _t81;                     // _t81
    intOrPtr _t83;                         // _t83
    char _t92;                             // _t92
    intOrPtr _t94;                         // _t94
    signed char _t97;                      // _t97
    signed char _t98;                      // _t98
    signed char _t99;                      // _t99
    char* _t105;                           // _t105
    char* _t106;                           // _t106
    char* _t111;                           // _t111

    _t64 = _a4;
    __esp = __esp - 16;
    _push(__ebx);
    _push(__esi);
    _push(_t110);
    _push(__ebp);
    if( *4540032 <= _t64) {
L47:
        _pop(__ebp);
         *4434520 = 9;
         *4434524 = 0;
        _pop(__edi);
        _pop(__esi);
        _pop(__ebx);
        __esp = __esp + 16;
        return -1;
    } else {
        __ebp = ((_t64 & -25) >> 3) + 4539776;
        __ebx = (_a4 & 31) * 8;
        _t71 =  *__ebp + __ebx;
        if(( *(_t71 + 4) & 1) == 0) {
            goto L47;
        } else {
            _t106 = _a8;
            _t94 = _a12;
            _v12 = 0;
            if(_t94 == 0) {
L46:
                _pop(__ebp);
                _pop(__edi);
                _pop(__esi);
                _pop(__ebx);
                __esp = __esp + 16;
                return 0;
            } else {
                if(( *(_t71 + 4) & 2) != 0) {
                    goto L46;
                } else {
                    if(( *(_t71 + 4) & 72) != 0) {
                        _t92 =  *((intOrPtr*)(_t71 + 5));
                        if(_t92 != 10) {
                             *_t106 = _t92;
                            _t106 = _t106 + 1;
                            _t94 = _t94 - 1;
                            _v12 = 1;
                             *((char*)( *__ebp + __ebx + 5)) = 10;
                        }
                    }
                    _push(0);
                    _push( &_v8);
                    _push(_t94);
                    _push(_t106);
                    _push( *((intOrPtr*)( *__ebp + __ebx)));
                    __imp__ReadFile();
                    if( &_v8 != 0) {
                        _v32 = _v32 + _v28;
                        _t75 =  *__ebp + __ebx + 4;
                        _t97 =  *_t75;
                        if((_t97 & 128) != 0) {
                            if(_v28 == 0 ||  *_v12 != 10) {
                                _t98 = _t97 & 251;
                            } else {
                                _t98 = _t97 | 4;
                            }
                            _t111 = _v12;
                             *_t75 = _t98;
                            __esi = _t111;
                            _t78 = _v32 + _t111;
                            _v24 = _t78;
                            if(_t78 > _t111) {
                                while(1) {
                                    _t79 =  *__esi;
                                    if(_t79 == 26) {
                                        break;
                                    }
                                    if(_t79 == 13) {
                                        if(_v24 - 1 <= __esi) {
                                            __esi = __esi + 1;
                                            _push(0);
                                            _push( &_v28);
                                            _v32 = 0;
                                            _push(1);
                                            _t83 =  *((intOrPtr*)( *__ebp + __ebx));
                                            _push( &_v33);
                                            _push(_t83);
                                            __imp__ReadFile();
                                            if(_t83 == 0) {
                                                __imp__GetLastError();
                                                _v52 = _t83;
                                            }
                                            if(_v52 != 0 || _v48 == 0) {
L38:
                                                 *_t111 = 13;
                                                goto L39;
                                            } else {
                                                if(( *((signed char*)( *__ebp + __ebx + 4)) & 72) == 0) {
                                                    if(_t111 != _v32 || _v53 != 10) {
                                                        L004143E0(_v36, -1, 1);
                                                        if(_v53 != 10) {
                                                            goto L38;
                                                        }
                                                    } else {
                                                         *_t111 = 10;
                                                        goto L39;
                                                    }
                                                } else {
                                                    if(_v53 != 10) {
                                                         *_t111 = 13;
                                                        _t111 = _t111 + 1;
                                                         *((char*)( *__ebp + __ebx + 5)) = _v53;
                                                    } else {
                                                         *_t111 = 10;
                                                        goto L39;
                                                    }
                                                }
                                            }
                                        } else {
                                            _t105 = __esi + 1;
                                            if( *_t105 != 10) {
                                                __esi = _t105;
                                                 *_t111 = _t79;
                                            } else {
                                                __esi = __esi + 2;
                                                 *_t111 = 10;
                                            }
                                            goto L39;
                                        }
                                    } else {
                                        __esi = __esi + 1;
                                         *_t111 = _t79;
L39:
                                        _t111 = _t111 + 1;
                                    }
                                    if(__esi < _v44) {
                                        continue;
                                    } else {
                                    }
                                    goto L44;
                                }
                                _t81 =  *__ebp + __ebx + 4;
                                _t99 =  *_t81;
                                if((_t99 & 64) == 0) {
                                     *_t81 = _t99 | 2;
                                }
                            }
L44:
                            _t110 = _t111 - _v12;
                            _v32 = _t111 - _v12;
                        }
                        _pop(__ebp);
                        _pop(__edi);
                        _pop(__esi);
                        _pop(__ebx);
                        __esp = __esp + 16;
                        return _v32;
                    } else {
                        __imp__GetLastError();
                        if( &_v8 != 5) {
                            if( &_v8 != 109) {
                                L004144A0( &_v8);
                                _pop(__ebp);
                                _pop(__edi);
                                _pop(__esi);
                                _pop(__ebx);
                                __esp = __esp + 16;
                                return -1;
                            } else {
                                _pop(__ebp);
                                _pop(__edi);
                                _pop(__esi);
                                _pop(__ebx);
                                __esp = __esp + 16;
                                return 0;
                            }
                        } else {
                            _pop(__ebp);
                             *4434524 =  &_v8;
                            _pop(__edi);
                             *4434520 = 9;
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 16;
                            return -1;
                        }
                    }
                }
            }
        }
    }
}

L00413D20(
    intOrPtr* _a4,                         // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    intOrPtr _a16                          // _cfa_10
)
{
    intOrPtr __edi;                        // r4
    intOrPtr* __esi;                       // r5
    signed int _t23;                       // _t23
    signed int _t27;                       // _t27
    _unknown_ _t29;                        // _t29

    _push(__edi);
    __esi = _a4;
    _t23 =  *(__esi + 12);
    if((_t23 & 131) == 0) {
L16:
        _pop(__edi);
         *4434520 = 22;
        return -1;
    } else {
        __edi = _a16;
        if(__edi == 0 || __edi == 1 || __edi == 2) {
             *(__esi + 12) = _t23 & -17;
            if(__edi == 1) {
                _a8 = _a8 + L00416800(__esi);
                asm("adc [esp+0x14], edx");
                __edi = 0;
            }
            L004138B0(__esi);
            _t27 =  *(__esi + 12);
            if((_t27 & 128) == 0) {
                if((_t27 & 1) != 0 && (_t27 & 8) != 0 && (_t27 & 4) == 0) {
                    __esi[6] = 512;
                }
            } else {
                 *(__esi + 12) = _t27 & -4;
            }
            _push(__edi);
            __edx = __esi[4];
            _push(_a12);
            _push(_a8);
            _push(__esi[4]);
            _t29 = L00416710();
            __esp = __esp + 16;
            if(__edx != -1 || _t29 != -1) {
                _pop(__edi);
                return 0;
            } else {
                _pop(__edi);
                return -1;
            }
        } else {
            goto L16;
        }
    }
}

L00413DD0(
    intOrPtr _a4,                          // _cfa_4
    char* _a8,                             // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    intOrPtr* _a16                         // _cfa_10
)
{
    signed int _v4;                        // _cfa_fffffffc
    signed int __esi;                      // r5
    char _t26;                             // _t26
    intOrPtr* _t29;                        // _t29
    _unknown_ _t32;                        // _t32
    _unknown_ _t36;                        // _t36
    char* _t38;                            // _t38
    char* _t39;                            // _t39
    intOrPtr _t42;                         // _t42
    intOrPtr _t43;                         // _t43
    _unknown_ _t44;                        // _t44
    _unknown_ _t46;                        // _t46
    signed int _t48;                       // _t48
    _unknown_ _t50;                        // _t50
    _unknown_ _t51;                        // _t51

    _t38 = _a8;
    _push(_t36);
    _push(_t46);
    _t26 =  *_t38;
    _push(_t44);
    _push(_t50);
    if(_t26 == 97) {
        _t42 = 265;
L7:
        _t48 =  *4439552 | 2;
        goto L8;
    } else {
        if(_t26 == 114) {
            _t42 = 0;
            _t48 =  *4439552 | 1;
L8:
            _t51 = 1;
            _t39 = _t38 + 1;
            if( *_t39 != 0) {
                while(_t51 != 0) {
                    _t32 =  *_t39 - 43;
                    if(_t32 > 73) {
L12:
                        _t51 = 0;
                    } else {
                        _v4 = 0;
                        _v4 =  *((intOrPtr*)(_t32 + 4276116));
                        switch( *((intOrPtr*)(_v4 * 4 +  &M00413F6C))) {
                            case 0:
                                if((__dl & 2) == 0) {
                                    __edx = __edx | 2;
                                    __esi = __esi | 128;
                                    __edx = __edx & -2;
                                    __esi = __esi & -4;
                                }
                                goto L40;
                            case 1:
                                if((__dl & 64) == 0) {
                                    __edx = __edx | 64;
                                }
                                goto L40;
                            case 2:
                                if(1 == 0) {
                                    __edx = __edx | 16;
                                }
                                goto L40;
                            case 3:
                                if(1 == 0) {
                                    __edx = __edx | 32;
                                }
                                goto L40;
                            case 4:
                                if((__dh & 16) == 0) {
                                    __edx = __edx | 4096;
                                }
                                goto L40;
                            case 5:
                                if((__dh & 192) == 0) {
                                    __edx = __edx | 32768;
                                }
                                goto L40;
                            case 6:
                                if(1 == 0) {
                                    __esi = __esi | 16384;
                                }
                                goto L40;
                            case 7:
                                if(1 == 0) {
                                    __esi = __esi & -16385;
                                }
                                goto L40;
                            case 8:
                                if((__dh & 192) == 0) {
                                    __edx = __edx | 16384;
                                }
                                goto L40;
                            case 9:
                                goto L12;
                        }
                    }
L40:
                    _t39 = _t39 + 1;
                    if( *_t39 != 0) {
                        continue;
                    }
                    goto L41;
                }
            }
L41:
            _t43 = L004169E0(_a4, _t42, _a12, 420);
            if(_t43 >= 0) {
                _t29 = _a16;
                 *4438632 =  *4438632 + 1;
                _pop(0);
                _pop(1);
                 *(_t29 + 12) = _t48;
                _pop(__esi);
                _t29[1] = 0;
                _pop(1);
                 *_t29 = 0;
                _t29[2] = 0;
                _t29[7] = 0;
                _t29[4] = _t43;
                return _t29;
            } else {
                _pop(0);
                _pop(1);
                _pop(__esi);
                _pop(1);
                return 0;
            }
        } else {
            if(_t26 == 119) {
                _t42 = 769;
                goto L7;
            } else {
                _pop(0);
                _pop(1);
                _pop(__esi);
                _pop(1);
                return 0;
            }
        }
    }
}

L00413FE0()
{
    signed int __edi;                      // r4
    intOrPtr* __esi;                       // r5
    intOrPtr _t17;                         // _t17
    intOrPtr* _t19;                        // _t19
    intOrPtr* _t21;                        // _t21

    __esi = 0;
    __edi = 0;
    if( *4539760 <= 0) {
L9:
        if(__esi != 0) {
            __esi[1] = 0;
            __esi[3] = 0;
            __esi[2] = 0;
             *__esi = 0;
             *((intOrPtr*)(__esi + 28)) = 0;
             *((intOrPtr*)(__esi + 16)) = -1;
        }
        return __esi;
    }
    _t21 =  *4535652;
    while(1) {
        _t17 =  *_t21;
        if(_t17 == 0) {
            break;
        }
        if(( *(_t17 + 12) & 131) == 0) {
            __esi =  *((intOrPtr*)( *4535652 + __edi * 4));
            goto L9;
        }
        _t21 = _t21 + 4;
        __edi = __edi + 1;
        if( *4539760 > __edi) {
            continue;
        }
        goto L9;
    }
     *((intOrPtr*)( *4535652 + __edi * 4)) = L004111A0(32);
    _t19 =  *((intOrPtr*)( *4535652 + __edi * 4));
    if(_t19 != 0) {
        __esi = _t19;
    }
    goto L9;
}

signed int L00414060(
    signed int _a4,                        // _cfa_4
    intOrPtr* _a8                          // _cfa_8
)
{
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    intOrPtr* __esi;                       // r5
    _unknown_ __ebp;                       // r6
    signed char _t45;                      // _t45
    signed int _t49;                       // _t49
    intOrPtr _t56;                         // _t56
    _unknown_ _t60;                        // _t60
    signed int _t70;                       // _t70
    _unknown_ _t74;                        // _t74
    _unknown_ _t79;                        // _t79
    signed int _t80;                       // _t80
    _unknown_ _t81;                        // _t81
    _unknown_ _t82;                        // _t82

    __esi = _a8;
    _push(_t79);
    _push(_t81);
    _t80 =  *(__esi + 16);
    _t45 =  *(__esi + 12);
    if((_t45 & 130) == 0 || (_t45 & 64) != 0) {
        _pop(__ebp);
        _pop(__edi);
         *(__esi + 12) = _t45 | 32;
        return -1;
    } else {
        if((_t45 & 1) == 0) {
L5:
            _t82 = 0;
            _t49 =  *(__esi + 12) | 2;
             *(__esi + 12) = _t49;
             *(__esi + 12) = _t49 & -17;
            __esi[1] = 0;
            if(( *(__esi + 12) & 268) == 0) {
                if(__esi == 4438024 || __esi == 4438056) {
                    if(L00416E00(_t80) == 0) {
                        goto L9;
                    }
                } else {
L9:
                    L004166C0(__esi);
                }
            }
            if(( *(__esi + 12) & 264) == 0) {
                _t74 = 1;
                _t82 = L004141B0(_t80,  &_a4, 1);
            } else {
                _t56 = __esi[2];
                _t74 =  *__esi - _t56;
                 *__esi = _t56 + 1;
                __esi[1] = __esi[6] - 1;
                if(_t74 <= 0) {
                    _t60 = 4435368;
                    if(_t80 != -1) {
                        _t60 =  *((intOrPtr*)(((_t80 & -25) >> 3) + 4539776)) + (_t80 & 31) * 8;
                    }
                    if(( *(_t60 + 4) & 32) != 0) {
                        L004143E0(_t80, 0, 2);
                    }
                } else {
                    _t82 = L004141B0(_t80, __esi[2], _t74);
                }
                 *((char*)(__esi[2])) = _a4;
            }
            if(_t82 == _t74) {
                _pop(__ebp);
                _pop(__edi);
                return _a4 & 255;
            } else {
                _pop(__ebp);
                 *(__esi + 12) =  *(__esi + 12) | 32;
                _pop(__edi);
                return -1;
            }
        } else {
            __esi[1] = 0;
            _t70 =  *(__esi + 12);
            if((_t70 & 16) == 0) {
                _pop(__ebp);
                _pop(__edi);
                 *(__esi + 12) = _t70 | 32;
                return -1;
            } else {
                 *__esi = __esi[2];
                 *(__esi + 12) =  *(__esi + 12) & -2;
                goto L5;
            }
        }
    }
}

L004141B0(
    char _a4,                              // _cfa_4
    intOrPtr* _a8,                         // _cfa_8
    intOrPtr _a12                          // _cfa_c
)
{
    char* _v12;                            // _cfa_fffffff4
    char _v1028;                           // _cfa_fffffbfc
    intOrPtr _v1032;                       // _cfa_fffffbf8
    signed int _v1036;                     // _cfa_fffffbf4
    _unknown_ _v1040;                      // _cfa_fffffbf0
    char _v1044;                           // _cfa_fffffbec
    intOrPtr _v1048;                       // _cfa_fffffbe8
    intOrPtr _v1052;                       // _cfa_fffffbe4
    intOrPtr _v1056;                       // _cfa_fffffbe0
    intOrPtr* _v1060;                      // _cfa_fffffbdc
    intOrPtr _v1064;                       // _cfa_fffffbd8
    intOrPtr _v1068;                       // _cfa_fffffbd4
    intOrPtr* __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ __ebp;                       // r6
    signed int _t59;                       // _t59
    signed char _t60;                      // _t60
    char* _t62;                            // _t62
    intOrPtr _t81;                         // _t81
    char _t82;                             // _t82
    intOrPtr* _t89;                        // _t89
    signed int _t95;                       // _t95
    _unknown_ _t100;                       // _t100
    char* _t101;                           // _t101
    _unknown_ _t102;                       // _t102
    intOrPtr _t103;                        // _t103
    signed int _t104;                      // _t104
    intOrPtr _t105;                        // _t105

    _t95 = _a4;
    __esp = __esp - 1048;
    _push(__ebx);
    _push(_t102);
    _push(_t100);
    _push(_t104);
    if( *4540032 <= _t95) {
L30:
        _pop(__ebp);
         *4434520 = 9;
         *4434524 = 0;
        _pop(__edi);
        _pop(__esi);
        _pop(__ebx);
        __esp = __esp + 1048;
        return -1;
    } else {
        _v1040 = ((_t95 & -25) >> 3) + 4539776;
        _t59 = (_t95 & 31) << 3;
        __ebx =  *_v1040;
        _t104 = _t59;
        _v1036 = _t59;
        _t60 =  *((intOrPtr*)( &_a4 +  *_v1040));
        if((_t60 & 1) == 0) {
            goto L30;
        } else {
            _t103 = 0;
            _t105 = _a12;
            _v1032 = 0;
            if(_t105 != 0) {
                if((_t60 & 32) != 0) {
                    L004143E0(_t95, 0, 2);
                }
                _t89 = _v1036 +  *_v1040;
                if(( *(_t89 + 4) & 128) == 0) {
                    _t62 =  &_v1044;
                    _push(0);
                    _push( &_v1044);
                    _push(_t105);
                    _push(_a8);
                    _push( *_t89);
                    __imp__WriteFile();
                    if( &_v1044 == 0) {
                        goto L19;
                    } else {
                        _v1068 = 0;
                        _v1052 = _v1064;
                    }
                } else {
                    _v1048 = 0;
                    __ebx = _a8;
                    while(__ebx - _a8 < _t105) {
                        while(__ebx - _a8 < _t105) {
                            _t82 =  *__ebx;
                            __ebx = __ebx + 1;
                            if(_t82 == 10) {
                                 *_t101 = 13;
                                _t103 = _t103 + 1;
                                _t101 = _t101 + 1;
                            }
                             *_t101 = _t82;
                            _t101 = _t101 + 1;
                            if(_t101 -  &_v1028 < 1024) {
                                continue;
                            }
                            break;
                        }
                        _push(0);
                        _t100 = _t101 -  &_v1028;
                        _push( &_v1044);
                        _push(_t100);
                        _push( &_v1028);
                        _t62 =  *_v1040;
                        _push( *((intOrPtr*)(_t62 + _v1036)));
                        __imp__WriteFile();
                        if(_t62 == 0) {
L19:
                            __imp__GetLastError();
                            _v1068 = _t62;
                        } else {
                            _t81 = _v1064;
                            _v1052 = _v1052 + _t81;
                            if(_t81 >= _t100) {
                                continue;
                            } else {
                            }
                        }
                        goto L20;
                    }
                }
L20:
                if(_v1052 != 0) {
                    _pop(__ebp);
                    _pop(__edi);
                    _pop(__esi);
                    _pop(__ebx);
                    __esp = __esp + 1048;
                    return _v1052 - _t103;
                } else {
                    if(_v1068 == 0) {
                        if(( *( *_v1060 + _v1056 + 4) & 64) == 0 ||  *_v12 != 26) {
                            _pop(__ebp);
                             *4434520 = 28;
                             *4434524 = 0;
                            _pop(__edi);
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 1048;
                            return -1;
                        } else {
                            _pop(__ebp);
                            _pop(__edi);
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 1048;
                            return 0;
                        }
                    } else {
                        if(_v1068 != 5) {
                            L004144A0(_v1068);
                            _pop(__ebp);
                            _pop(__edi);
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 1048;
                            return -1;
                        } else {
                             *4434520 = 9;
                            _pop(__ebp);
                            _pop(__edi);
                             *4434524 = _v1068;
                            _pop(__esi);
                            _pop(__ebx);
                            __esp = __esp + 1048;
                            return -1;
                        }
                    }
                }
            } else {
                _pop(__ebp);
                _pop(__edi);
                _pop(__esi);
                _pop(__ebx);
                __esp = __esp + 1048;
                return 0;
            }
        }
    }
}

L004143E0(
    signed int _a4,                        // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    intOrPtr _a12                          // _cfa_c
)
{
    _unknown_ __ebx;                       // r1
    intOrPtr* __edi;                       // r4
    signed int __esi;                      // r5
    _unknown_ _t20;                        // _t20
    signed int _t27;                       // _t27

    _t27 = _a4;
    _push(__edi);
    if( *4540032 <= _t27) {
L9:
        _pop(__edi);
         *4434520 = 9;
         *4434524 = 0;
        return -1;
    } else {
        __edi = ((_t27 & -25) >> 3) + 4539776;
        __esi = (_t27 & 31) * 8;
        if(( *( *__edi + __esi + 4) & 1) == 0) {
            goto L9;
        } else {
            _t20 = L00416600(_t27);
            if(_t20 != -1) {
                _push(_a12);
                _push(0);
                _push(_a8);
                _push(_t20);
                __imp__SetFilePointer();
                __ebx = _t20;
                if(_t20 == -1) {
                    __imp__GetLastError();
                }
                if(0 == 0) {
                    _t22 =  *__edi;
                    _pop(__edi);
                     *(_t22 + __esi + 4) =  *( *__edi + __esi + 4) & 253;
                    return __ebx;
                } else {
                    L004144A0(0);
                    _pop(__edi);
                    return -1;
                }
            } else {
                _pop(__edi);
                 *4434520 = 9;
                return -1;
            }
        }
    }
}

signed int L004144A0(
    intOrPtr _a4                           // _cfa_4
)
{
    signed int _t4;                        // _t4
    intOrPtr _t5;                          // _t5

    __edx = _a4;
    _t4 = 0;
    __ecx = 4437616;
     *4434524 = __edx;
L1:
L1:
    if( *__ecx == __edx) {
        _t5 =  *((intOrPtr*)(4437620 + _t4 * 8));
         *4434520 = _t5;
        return _t5;
    } else {
        goto L2;
    }
L11:
L2:
    __ecx = __ecx + 8;
    _t4 = _t4 + 1;
    if(__ecx < 4437976) {
        goto L1;
    } else {
        if(__edx < 19) {
L7:
            if(__edx < 188 || __edx > 202) {
                 *4434520 = 22;
                return _t4;
            } else {
                 *4434520 = 8;
                return _t4;
            }
        } else {
            if(__edx > 36) {
                goto L7;
            } else {
                 *4434520 = 13;
                return _t4;
            }
        }
    }
    goto L11;
}

signed int L004145E0(
    intOrPtr* _a4                          // _cfa_4
)
{
    _unknown_ __edi;                       // r4
    intOrPtr* __esi;                       // r5
    signed int _t16;                       // _t16
    intOrPtr _t17;                         // _t17
    intOrPtr _t20;                         // _t20
    _unknown_ _t24;                        // _t24
    intOrPtr* _t25;                        // _t25

    _push(_t24);
    __esi = _a4;
    if(L00416E00(__esi[4]) != 0) {
        if(__esi != 4438024) {
            if(__esi != 4438056) {
                _pop(__edi);
                return 0;
            } else {
                _t16 = 1;
                goto L6;
            }
        } else {
            _t16 = 0;
L6:
             *4438632 =  *4438632 + 1;
            if(( *(__esi + 12) & 268) == 0) {
                _t25 = 4437984 + _t16 * 4;
                if( *_t25 != 0) {
L11:
                    _t17 =  *_t25;
                    __esi[2] = _t17;
                    _pop(__edi);
                     *__esi = _t17;
                    __esi[6] = 4096;
                    __esi[1] = 4096;
                     *(__esi + 12) =  *(__esi + 12) | 4354;
                    return 1;
                } else {
                    _t20 = L004111A0(4096);
                     *_t25 = _t20;
                    if(_t20 != 0) {
                        goto L11;
                    } else {
                        _pop(__edi);
                        return 0;
                    }
                }
            } else {
                _pop(__edi);
                return 0;
            }
        }
    } else {
        _pop(__edi);
        return 0;
    }
}

L00414680(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr* _a8                          // _cfa_8
)
{
    _unknown_ __esi;                       // r5
    _unknown_ _t12;                        // _t12
    _unknown_ _t13;                        // _t13
    _unknown_ _t14;                        // _t14
    intOrPtr* _t15;                        // _t15

    _push(_t14);
    _t15 = _a8;
    if(_a4 == 0) {
        if(( *(_t15 + 13) & 16) != 0) {
            _t12 = L004138B0(_t15);
        }
        goto L5;
    } else {
        if(( *(_t15 + 13) & 16) == 0) {
L5:
            _pop(__esi);
            return _t12;
        } else {
            _t13 = L004138B0(_t15);
             *(_t15 + 12) =  *(_t15 + 12) & -4353;
            _t15[6] = 0;
             *_t15 = 0;
            _t15[2] = 0;
            _pop(__esi);
            return _t13;
        }
    }
}

signed int L004147C0(
    signed int _a4,                        // _cfa_4
    signed int _a8,                        // _cfa_8
    char _a12                              // _cfa_c
)
{
    char _v1;                              // _cfa_ffffffff
    char _v511;                            // _cfa_fffffe01
    signed int _v512;                      // _cfa_fffffe00
    signed int _v516;                      // _cfa_fffffdfc
    char _v520;                            // _cfa_fffffdf8
    signed int _v524;                      // _cfa_fffffdf4
    signed int _v528;                      // _cfa_fffffdf0
    intOrPtr _v532;                        // _cfa_fffffdec
    signed int _v536;                      // _cfa_fffffde8
    signed int _v540;                      // _cfa_fffffde4
    signed int _v544;                      // _cfa_fffffde0
    signed int _v548;                      // _cfa_fffffddc
    signed int _v552;                      // _cfa_fffffdd8
    signed int _v556;                      // _cfa_fffffdd4
    signed int _v560;                      // _cfa_fffffdd0
    signed int _v564;                      // _cfa_fffffdcc
    signed int _v568;                      // _cfa_fffffdc8
    signed int _v572;                      // _cfa_fffffdc4
    signed int _v576;                      // _cfa_fffffdc0
    char _v580;                            // _cfa_fffffdbc
    char _v581;                            // _cfa_fffffdbb
    char _v582;                            // _cfa_fffffdba
    signed int _v588;                      // _cfa_fffffdb4
    intOrPtr _v592;                        // _cfa_fffffdb0
    signed int __ebx;                      // r1
    signed int __edi;                      // r4
    signed int __esi;                      // r5
    signed int __ebp;                      // r6
    signed int _t267;                      // _t267
    signed int _t270;                      // _t270
    signed int _t275;                      // _t275

    _a8 = _a8 + 1;
    _push(__esi);
    _v564 = 0;
    _push(__edi);
    __bl =  *_a8;
    _push(__ebp);
    _v540 = 0;
    if(__bl == 0) {
L36:
        _pop(__ebp);
        _pop(__edi);
        _pop(__esi);
        return _v564;
    } else {
        __esi = _v512;
        __ebp = _v512;
        __edi = _v512;
        while(_v564 >= 0) {
            _t275 =  *(_v540 + 4306488 + _t267 * 8) >> 4;
            _t270 = _t275;
            _v540 = _t275;
            if(_t275 > 7) {
L35:
                _a8 = _a8 + 1;
                __bl =  *_a8;
                if(__bl != 0) {
                    continue;
                }
                goto L36;
            }
            switch( *((intOrPtr*)(_t270 * 4 +  &M00415058))) {
                case 0:
L32:
                    __eax = 0;
                    __ecx =  *4438928;
                    __al = __bl;
                    _v544 = 0;
                    __eflags =  *(__ecx + 1) & 128;
                    if(( *(__ecx + 1) & 128) != 0) {
                        __eax =  &_v564;
                        __ecx = _a4;
                        __edx = __bl;
                        __eax = L00415170(_a4, __bl, _a4,  &_v564);
                        __ecx = _a8;
                        __bl =  *_a8;
                        _a8 = _a8 + 1;
                        __eflags = _a8;
                    }
                    __eax =  &_v564;
                    __ecx = _a4;
                    __edx = __bl;
                    __eax = L00415170(_a4, __bl, _a4,  &_v564);
                    goto L35;
                case 1:
                    _v524 = 0;
                    __esi = 0;
                    __ebp = -1;
                    _v528 = 0;
                    _v552 = 0;
                    _v548 = 0;
                    _v544 = 0;
                    goto L35;
                case 2:
                    __ecx = __bl;
                    __ecx = __bl - 32;
                    __eflags = __ecx - 16;
                    if(__ecx > 16) {
                        goto L35;
                    }
                    0 =  *((intOrPtr*)(__ecx + 4280464));
                    switch( *((intOrPtr*)(0 +  &M00415078))) {
                        case 0:
                            goto L12;
                        case 1:
                            goto L13;
                        case 2:
                            goto L14;
                        case 3:
                            goto L15;
                        case 4:
                            goto L16;
                        case 5:
                            goto L35;
                    }
                case 3:
                    __eflags = __bl - 42;
                    if(__bl != 42) {
                        __eax = _v552;
                        __ecx = __bl;
                        __edx = _v552 + _v552 * 4;
                        __ecx = __bl + __edx * 2 - 48;
                        _v552 = __bl + __edx * 2 - 48;
                    } else {
                        __eax =  &_a12;
                        __eax = L00415240( &_a12);
                        _v552 = __eax;
                        __eflags = __eax;
                        if(__eax < 0) {
                            __eax =  ~__eax;
                            __esi = __esi | 4;
                            _v552 = __eax;
                        }
                    }
                    goto L35;
                case 4:
                    __ebp = 0;
                    goto L35;
                case 5:
                    __eflags = __bl - 42;
                    if(__bl != 42) {
                        __eax = __ebp + __ebp * 4;
                        __ecx = __bl;
                        __ebp = __bl + (__ebp + __ebp * 4) * 2 - 48;
                    } else {
                        __eax =  &_a12;
                        __ebp = L00415240( &_a12);
                        __eflags = __ebp;
                        if(__ebp < 0) {
                            __ebp = -1;
                        }
                    }
                    goto L35;
                case 6:
                    __ecx = __bl;
                    __ecx = __bl - 73;
                    __eflags = __ecx - 46;
                    if(__ecx > 46) {
                        goto L35;
                    }
                    0 =  *((intOrPtr*)(__ecx + 4280504));
                    switch( *((intOrPtr*)(0 +  &M004150A4))) {
                        case 0:
                            __eax = _a8;
                            __eflags =  *__eax - 54;
                            if( *__eax != 54) {
L31:
                                _v540 = 0;
                                goto L32;
                            }
                            __eflags =  *((char*)(__eax + 1)) - 52;
                            if( *((char*)(__eax + 1)) != 52) {
                                goto L31;
                            } else {
                                _a8 = _a8 + 2;
                                __esi = __esi | 32768;
                                goto L35;
                            }
                        case 1:
                            __esi = __esi | 32;
                            goto L35;
                        case 2:
                            __esi = __esi | 16;
                            goto L35;
                        case 3:
                            __esi = __esi | 2048;
                            goto L35;
                        case 4:
                            goto L35;
                    }
                case 7:
                    __ecx = __bl;
                    __ecx = __bl - 67;
                    __eflags = __ecx - 53;
                    if(__ecx > 53) {
L135:
                        __eflags = _v528;
                        if(_v528 != 0) {
                            goto L35;
                        }
                        __eflags = __esi & 64;
                        if((__esi & 64) == 0) {
L144:
                            _v552 = _v552 - __edi;
                            __eax = _v552 - __edi - _v548;
                            __eflags = __esi & 12;
                            _v560 = _v552 - __edi - _v548;
                            if((__esi & 12) == 0) {
                                __eax =  &_v564;
                                __ecx = _a4;
                                __edx = _v560;
                                L004151C0(32, _v560, _a4,  &_v564);
                            }
                            __eax =  &_v564;
                            __ecx = _a4;
                            __edx = _v548;
                            _push( &_v564);
                            __eax =  &_v582;
                            _push(_a4);
                            _push(_v548);
                            _push( &_v582);
                            L00415200();
                            __esp = __esp + 16;
                            __eflags = __esi & 8;
                            if((__esi & 8) != 0) {
                                __eflags = __esi & 4;
                                if((__esi & 4) == 0) {
                                    __eax =  &_v564;
                                    __ecx = _a4;
                                    __edx = _v560;
                                    L004151C0(48, _v560, _a4,  &_v564);
                                }
                            }
                            __eflags = _v544;
                            if(_v544 == 0) {
L155:
                                __eax =  &_v564;
                                __ecx = _a4;
                                __edx = _v576;
                                L00415200(__edx, __edi, _a4,  &_v564);
                                goto L156;
                            } else {
                                __eflags = __edi;
                                if(__edi <= 0) {
                                    goto L155;
                                }
                                __ebx = _v576;
                                __eax = __edi - 1;
                                _v572 = __edi - 1;
                                while(1) {
                                    __eax = __ebx;
                                    __ecx =  &_v580;
                                    __ax =  *__ebx;
                                    __ebx = __ebx + 2;
                                    L00416EB0( &_v580, __eax);
                                    __eflags = __eax;
                                    if(__eax <= 0) {
                                        break;
                                    }
                                    __ecx =  &_v564;
                                    __edx = _a4;
                                    _push( &_v564);
                                    _push(__edx);
                                    _push(__eax);
                                    __eax =  &_v580;
                                    _push( &_v580);
                                    L00415200();
                                    __ecx = _v572;
                                    _v572 = _v572 - 1;
                                    __esp = __esp + 16;
                                    __eflags = _v572;
                                    if(_v572 != 0) {
                                        continue;
                                    }
                                    break;
                                }
L156:
                                __eflags = __esi & 4;
                                if((__esi & 4) != 0) {
                                    __eax =  &_v564;
                                    __ecx = _a4;
                                    __edx = _v560;
                                    L004151C0(32, __edx, _a4,  &_v564);
                                }
                                goto L35;
                            }
                        }
                        __eflags = __esi & 256;
                        if((__esi & 256) == 0) {
                            __eflags = __esi & 1;
                            if((__esi & 1) == 0) {
                                __eflags = __esi & 2;
                                if((__esi & 2) == 0) {
                                    goto L144;
                                }
                                _v582 = 32;
L143:
                                _v548 = 1;
                                goto L144;
                            }
                            _v582 = 43;
                            goto L143;
                        }
                        _v582 = 45;
                        goto L143;
                    }
                    0 =  *((intOrPtr*)(__ecx + 4280620));
                    switch( *((intOrPtr*)(0 +  &M004150E8))) {
                        case 0:
                            __eflags = __esi & 2096;
                            if((__esi & 2096) == 0) {
                                __esi = __esi | 2048;
                                __eflags = __esi;
                            }
                            goto L44;
                        case 1:
                            _v524 = 1;
                            __bl = __bl + 32;
                            __eflags = __bl;
                            goto L48;
                        case 2:
                            __eflags = __esi & 2096;
                            if((__esi & 2096) == 0) {
                                __esi = __esi | 2048;
                                __eflags = __esi;
                            }
                            goto L52;
                        case 3:
L75:
                            _v532 = 7;
                            goto L76;
                        case 4:
                            __eax =  &_a12;
                            __eax = L00415240( &_a12);
                            __eflags = __eax;
                            if(__eax == 0) {
L66:
                                __eax =  *4438636;
                                __ecx = -1;
                                __edi = __eax;
                                _v576 = __eax;
                                __eax = 0;
                                asm("repne scasb");
                                __ecx =  !-1;
                                __edi =  !-1 - 1;
                                goto L135;
                            }
                            __ecx =  *(__eax + 4);
                            __eflags = __ecx;
                            if(__ecx == 0) {
                                goto L66;
                            }
                            __eflags = __esi & 2048;
                            if((__esi & 2048) == 0) {
                                _v544 = 0;
                                __edi =  *__eax;
                                _v576 = __ecx;
                            } else {
                                _v544 = 1;
                                __edi =  *__eax;
                                __edi =  *__eax >> 1;
                                _v576 = __ecx;
                            }
                            goto L135;
                        case 5:
L44:
                            __eflags = __esi & 2064;
                            __eax =  &_a12;
                            _push( &_a12);
                            if((__esi & 2064) == 0) {
                                __edi = 1;
                                L00415240();
                                _v512 = __al;
                                __esp = __esp + 4;
                            } else {
                                __eax = L00415270();
                                __esp = __esp + 4;
                                _push(__eax);
                                __eax =  &_v512;
                                _push( &_v512);
                                __eax = L00416EB0();
                                __esp = __esp + 8;
                                __edi = __eax;
                                __eflags = __edi;
                                if(__edi < 0) {
                                    _v528 = 1;
                                }
                            }
                            __eax =  &_v512;
                            _v576 =  &_v512;
                            goto L135;
                        case 6:
                            _v536 = 10;
                            __esi = __esi | 64;
                            goto L78;
                        case 7:
L48:
                            __esi = __esi | 64;
                            __eax =  &_v512;
                            _v576 =  &_v512;
                            __eflags = __ebp;
                            if(__eflags >= 0) {
                                if(__eflags == 0) {
                                    __eflags = __bl - 103;
                                    if(__bl == 103) {
                                        __ebp = 1;
                                    }
                                }
                            } else {
                                __ebp = 6;
                            }
                            _a12 = _a12 + 8;
                            __eax = _a12;
                            __ecx =  *(__eax - 8);
                            __edx =  *(__eax - 4);
                            __eax = __eax - 8;
                            _v520 = __ecx;
                            __eax = _v524;
                            _v516 = __edx;
                            __edx =  &_v512;
                            _push(_v524);
                            __ecx = __bl;
                            _push(__ebp);
                            _push(__bl);
                            __ecx =  &_v520;
                            _push( &_v512);
                            _push( &_v520);
                            __edi = __esi;
                             *4434624();
                            __esp = __esp + 20;
                            __edi = __esi & 128;
                            __eflags = __edi;
                            if(__edi != 0) {
                                __eflags = __ebp;
                                if(__ebp == 0) {
                                    __eax =  &_v512;
                                    _push( &_v512);
                                     *4434636();
                                    __esp = __esp + 4;
                                }
                            }
                            __eflags = __bl - 103;
                            if(__bl == 103) {
                                __eflags = __edi;
                                if(__edi == 0) {
                                    __eax =  &_v512;
                                    _push( &_v512);
                                     *4434628();
                                    __esp = __esp + 4;
                                }
                            }
                            __eflags = _v512 - 45;
                            if(_v512 == 45) {
                                __esi = __esi | 256;
                                __eflags = __esi;
                                __eax =  &_v511;
                                _v576 =  &_v511;
                            }
                            __edi = _v576;
                            __ecx = -1;
                            __eax = 0;
                            asm("repne scasb");
                            __ecx =  !-1;
                            __edi =  !-1 - 1;
                            goto L135;
                        case 8:
                            __eax =  &_a12;
                            __eax = L00415240( &_a12);
                            __ecx = _v564;
                            __eflags = __esi & 32;
                            if((__esi & 32) == 0) {
                                 *__eax = __ecx;
                            } else {
                                 *__eax = __cx;
                            }
                            _v528 = 1;
                            goto L135;
                        case 9:
                            _v536 = 8;
                            __eflags = __esi & 128;
                            if((__esi & 128) != 0) {
                                __esi = __esi | 512;
                            }
                            goto L78;
                        case 0xa:
                            __ebp = 8;
                            goto L75;
                        case 0xb:
L52:
                            __ebx = 2147483647;
                            __eflags = __ebp - -1;
                            if(__ebp != -1) {
                                __ebx = __ebp;
                            }
                            __eax =  &_a12;
                            __eax = L00415240( &_a12);
                            _v576 = __eax;
                            __eflags = __esi & 2064;
                            if((__esi & 2064) == 0) {
                                __eflags = _v576;
                                if(_v576 == 0) {
                                    __eax =  *4438636;
                                    _v576 =  *4438636;
                                }
                                __edi = _v576;
                                __eax = __ebx;
                                __ebx = __ebx - 1;
                                __eflags = __eax;
                                if(__eax == 0) {
L134:
                                    __edi = __edi - _v576;
                                    __eflags = __edi;
                                    goto L135;
                                } else {
                                    while(1) {
                                        __eflags =  *__edi;
                                        if( *__edi == 0) {
                                            goto L134;
                                        }
                                        __edi = __edi + 1;
                                        __eax = __ebx;
                                        __ebx = __ebx - 1;
                                        __eflags = __eax;
                                        if(__eax != 0) {
                                            continue;
                                        }
                                        goto L134;
                                    }
                                    goto L134;
                                }
                            }
                            __eflags = __eax;
                            if(__eax == 0) {
                                __eax =  *4438640;
                                _v576 =  *4438640;
                            }
                            __edi = _v576;
                            __eax = __ebx;
                            _v544 = 1;
                            __ebx = __ebx - 1;
                            __eflags = __eax;
                            if(__eax == 0) {
L60:
                                __edi = __edi - _v576;
                                __edi = __edi >> 1;
                                goto L135;
                            } else {
                                goto L58;
                            }
                            while(1) {
L58:
                                __eflags =  *__edi;
                                if( *__edi == 0) {
                                    goto L60;
                                }
                                __edi = __edi + 2;
                                __eax = __ebx;
                                __ebx = __ebx - 1;
                                __eflags = __eax;
                                if(__eax != 0) {
                                    continue;
                                }
                                goto L60;
                            }
                            goto L60;
                        case 0xc:
                            _v536 = 10;
                            goto L78;
                        case 0xd:
                            _v532 = 39;
L76:
                            _v536 = 16;
                            __eflags = __esi & 128;
                            if((__esi & 128) != 0) {
                                _v582 = 48;
                                _v548 = 2;
                                _v532 = _v532 + 81;
                                __eflags = __al;
                                _v581 = __al;
                            }
L78:
                            __eflags = __esi & 32768;
                            if((__esi & 32768) == 0) {
                                __eflags = __esi & 32;
                                if((__esi & 32) == 0) {
                                    __eflags = __esi & 64;
                                    __eax =  &_a12;
                                    _push( &_a12);
                                    if((__esi & 64) == 0) {
                                        __eax = L00415240();
                                        __esp = __esp + 4;
L89:
                                        _v572 = __eax;
                                        _v568 = 0;
L90:
                                        __eflags = __esi & 64;
                                        if((__esi & 64) == 0) {
L95:
                                            __eax = _v572;
                                            __ecx = _v568;
                                            _v560 = _v572;
                                            _v556 = _v568;
L96:
                                            __eflags = __esi & 32768;
                                            if((__esi & 32768) == 0) {
                                                _v560 = _v560 & -1;
                                                _v556 = 0;
                                                __eflags = _v556;
                                            }
                                            __eflags = __ebp;
                                            if(__ebp >= 0) {
                                                __esi = __esi & -9;
                                                __eflags = __esi;
                                            } else {
                                                __ebp = 1;
                                            }
                                            __eflags = _v556;
                                            if(_v556 == 0) {
                                                __eflags = _v560;
                                                if(_v560 == 0) {
                                                    _v548 = 0;
                                                }
                                            }
                                            __eax =  &_v1;
                                            _v576 =  &_v1;
                                            while(1) {
                                                __eax = __ebp;
                                                __ebp =  &_v1;
                                                __eflags = __eax;
                                                if(__eax > 0) {
                                                    goto L108;
                                                }
L106:
                                                __eflags = _v556;
                                                if(_v556 != 0) {
                                                    goto L108;
                                                }
                                                __eflags = _v560;
                                                if(_v560 == 0) {
                                                    __edi =  &_v1;
                                                    __edi =  &_v1 - _v576;
                                                    _v576 = _v576 + 1;
                                                    __eflags = __esi & 512;
                                                    if((__esi & 512) == 0) {
                                                        goto L135;
                                                    }
                                                    __eax = _v576;
                                                    __eflags =  *_v576 - 48;
                                                    if( *_v576 != 48) {
L114:
                                                        __edi = __edi + 1;
                                                        _v576 = _v576 - 1;
                                                        __eax = _v576;
                                                         *_v576 = 48;
                                                        goto L135;
                                                    }
                                                    __eflags = __edi;
                                                    if(__edi != 0) {
                                                        goto L135;
                                                    }
                                                    goto L114;
                                                }
L108:
                                                __eax = _v536;
                                                __ecx = _v556;
                                                asm("cdq");
                                                _v572 = _v536;
                                                __eax = _v560;
                                                _v568 = __edx;
                                                __edx = _v572;
                                                __edi = _v568;
                                                __ebx = L00416FC0(_v560, _v556, _v572, _v568) + 48;
                                                __ecx = _v572;
                                                __eax = _v576;
                                                __edx = _v588;
                                                _v592 = L00416F50(_v576, _v572, _v588, _v568);
                                                __eflags = __ebx - 57;
                                                _v588 = __edx;
                                                if(__ebx > 57) {
                                                    0 = __ebx;
                                                }
                                                __eax = _v576;
                                                _v576 = _v576 - 1;
                                                 *_v576 = __bl;
                                                __eax = __ebp;
                                                __ebp =  &_v1;
                                                __eflags = __eax;
                                                if(__eax > 0) {
                                                    goto L108;
                                                }
                                                goto L106;
                                            }
                                        }
                                        __eflags = _v568;
                                        if(__eflags > 0) {
                                            goto L95;
                                        }
                                        if(__eflags < 0) {
L94:
                                            __eax = _v572;
                                            __ecx = _v568;
                                            __eax =  ~_v572;
                                            asm("adc ecx, 0x0");
                                            _v560 =  ~_v572;
                                            __ecx =  ~_v568;
                                            __esi = __esi | 256;
                                            _v556 =  ~_v568;
                                            goto L96;
                                        }
                                        __eflags = _v572;
                                        if(_v572 >= 0) {
                                            goto L95;
                                        }
                                        goto L94;
                                    }
                                    _v572 = L00415240();
                                    __esp = __esp + 4;
                                    asm("cdq");
                                    _v568 = __edx;
                                    goto L90;
                                }
                                __eflags = __esi & 64;
                                __eax =  &_a12;
                                _push( &_a12);
                                if((__esi & 64) == 0) {
                                    __eax = L00415240();
                                    __eax = __ax & 65535;
                                    __esp = __esp + 4;
                                    goto L89;
                                }
                                __eax = L00415240();
                                _v572 = __eax;
                                __esp = __esp + 4;
                                asm("cdq");
                                _v568 = __edx;
                                goto L90;
                            }
                            __eax =  &_a12;
                            _v572 = L00415250( &_a12);
                            _v568 = __edx;
                            goto L90;
                        case 0xe:
                            goto L135;
                    }
                case 8:
L12:
                    __esi = __esi | 2;
                    goto L35;
                case 9:
L13:
                    __esi = __esi | 128;
                    goto L35;
                case 0xa:
L14:
                    __esi = __esi | 1;
                    goto L35;
                case 0xb:
L15:
                    __esi = __esi | 4;
                    goto L35;
                case 0xc:
L16:
                    __esi = __esi | 8;
                    goto L35;
                case 0xd:
                    goto L35;
            }
        }
        goto L36;
    }
}

L00415170(
    _unknown_ __ecx,                       // r2
    char _a4,                              // _cfa_4
    intOrPtr* _a8,                         // _cfa_8
    intOrPtr* _a12                         // _cfa_c
)
{
    intOrPtr _t8;                          // _t8
    signed int _t9;                        // _t9
    intOrPtr* _t10;                        // _t10
    intOrPtr* _t16;                        // _t16

    __edx = _a8;
    _t8 = __edx[1] - 1;
    __edx[1] = _t8;
    if(_t8 < 0) {
        _t9 = L00414060(_a4, __edx);
    } else {
         *((char*)( *__edx)) = _a4;
        _t16 =  *__edx;
        _t9 =  *_t16;
         *__edx = _t16 + 1;
    }
    _t10 = _a12;
    if(_t9 != -1) {
         *_t10 =  *_t10 + 1;
        return _t10;
    } else {
         *_t10 = -1;
        return _t10;
    }
}

L004151C0(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    intOrPtr* _a16                         // _cfa_10
)
{
    intOrPtr __ebx;                        // r1
    intOrPtr __edi;                        // r4
    intOrPtr __esi;                        // r5
    intOrPtr* __ebp;                       // r6

    __esi = _a4;
    __edi = _a8;
    __ebx = _a12;
    __ebp = _a16;
    while(1) {
        __eax = __edi;
        __edi = __edi - 1;
        if(__eax <= 0) {
            break;
        }
        __eax = L00415170(__ecx, __esi, __ebx, __ebp);
        if( *__ebp != -1) {
            continue;
        }
        break;
    }
    return __eax;
}

L00415200(
    char* _a4,                             // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    intOrPtr* _a16                         // _cfa_10
)
{
    intOrPtr __ebx;                        // r1
    intOrPtr __edi;                        // r4
    char* __esi;                           // r5
    intOrPtr* __ebp;                       // r6
    intOrPtr _t5;                          // _t5
    char* _t6;                             // _t6

    __esi = _a4;
    __edi = _a8;
    __ebx = _a12;
    __ebp = _a16;
    while(1) {
        _t5 = __edi;
        __edi = __edi - 1;
        if(_t5 <= 0) {
            break;
        }
        _t6 = __esi;
        _push(__ebp);
        __esi = __esi + 1;
        _push(__ebx);
        __ecx =  *_t6;
        _push(__ecx);
        _t5 = L00415170(__ecx);
        __esp = __esp + 12;
        if( *__ebp != -1) {
            continue;
        }
        break;
    }
    return _t5;
}

L00415240(
    intOrPtr* _a4                          // _cfa_4
)
{
    intOrPtr* _t3;                         // _t3
    intOrPtr _t6;                          // _t6

    _t3 = _a4;
    _t6 =  *_t3 + 4;
     *_t3 = _t6;
    return  *((intOrPtr*)(_t6 - 4));
}

L00415250(
    intOrPtr* _a4                          // _cfa_4
)
{
    intOrPtr* _t4;                         // _t4
    intOrPtr _t7;                          // _t7

    _t4 = _a4;
    _t7 =  *_t4 + 8;
     *_t4 = _t7;
    return  *((intOrPtr*)(_t7 - 8));
}

L00415270(
    intOrPtr* _a4                          // _cfa_4
)
{
    intOrPtr* _t3;                         // _t3
    intOrPtr _t6;                          // _t6

    _t3 = _a4;
    _t6 =  *_t3 + 4;
     *_t3 = _t6;
    return  *((intOrPtr*)(_t6 - 4));
}

signed short L00415545(
    signed short __eax,                    // r0
    signed long long __fp0                 // r28
)
{
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed short _t20;                     // _t20
    signed short _t22;                     // _t22
    signed short _t29;                     // _t29
    intOrPtr _t32;                         // _t32
    signed long long _t42;                 // _t42

    _t42 = __fp0;
    _t20 = __eax;
    if( *4434500 != 0) {
L9:
        asm("fldcw word [ebp-0xa4]");
        asm("wait");
        return _t20;
    }
    asm("fst qword [0x452870]");
    _t22 =  *((intOrPtr*)(__ebp - 144));
    if(_t22 == 0) {
L6:
        _t20 =  *(__ebp - 164) & 32;
        __eflags = _t20;
        if(_t20 != 0) {
            goto L9;
        }
        asm("wait");
        asm("fnstsw ax");
        _t20 = _t20 & 32;
        __eflags = _t20;
        if(_t20 != 0) {
             *((intOrPtr*)(__ebp - 142)) = 8;
L17:
            _push(__esi);
            _push(__edi);
            _t32 =  *((intOrPtr*)(__ebp - 148)) + 1;
             *((intOrPtr*)(__ebp - 138)) = _t32;
            if( *4532344 == 0) {
                asm("cld");
                __esi = __ebp + 8;
                __edi = __ebp - 134;
                asm("movsd");
                asm("movsd");
                if( *((char*)(_t32 + 12)) != 1) {
                    __esi = __ebp + 16;
                    __edi = __ebp - 126;
                    asm("movsd");
                    asm("movsd");
                }
            }
             *(__ebp - 118) = _t42;
            _t20 = L004182B0( *((intOrPtr*)( *((intOrPtr*)(__ebp - 148)) + 14)), __ebp - 142, __ebp - 164);
            _pop(__edi);
            _pop(__esi);
        }
        goto L9;
    }
    if(_t22 == 255 || _t22 == 254) {
        _t29 =  *4532342 & 32752;
        __eflags = _t29;
        if(__eflags == 0) {
             *((intOrPtr*)(__ebp - 142)) = 4;
            asm("fxch st0, st1");
            asm("fscale");
            st1 =  *4306616;
            _t42 = st0;
            asm("fabs");
            asm("fcomp qword [0x41b6a8]");
            asm("wait");
            asm("fnstsw ax");
            asm("sahf");
            if(__eflags < 0) {
                _t42 = _t42 *  *4306632;
            }
            goto L17;
        }
        __eflags = _t29 - 32752;
        if(__eflags == 0) {
             *((intOrPtr*)(__ebp - 142)) = 3;
            asm("fxch st0, st1");
            asm("fscale");
            st1 =  *4306608;
            _t42 = st0;
            asm("fabs");
            asm("fcomp qword [0x41b6a0]");
            asm("wait");
            asm("fnstsw ax");
            asm("sahf");
            if(__eflags > 0) {
                _t42 = _t42 *  *4306624;
            }
            goto L17;
        } else {
            goto L6;
        }
    } else {
        _t20 = _t22;
        if(_t20 == 0) {
            goto L9;
        } else {
             *((intOrPtr*)(__ebp - 142)) = _t20;
            goto L17;
        }
    }
}

L00416260(
    intOrPtr __eax,                        // r0
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    intOrPtr _a12                          // _cfa_c
)
{
    intOrPtr* __ebx;                       // r1
    intOrPtr* __esi;                       // r5
    intOrPtr* _t5;                         // _t5

    __esi = 0;
    if( *4439532 != 0) {
L4:
        _t5 =  *4439536;
        if(_t5 != 0) {
             *_t5();
            __esi = _t5;
        }
        if(__esi != 0 &&  *4439540 != 0) {
            _push(__esi);
             *4439540();
            __esi = _t5;
        }
        _push(_a12);
        _push(_a8);
        _push(_a4);
        _push(__esi);
         *4439532();
        return;
    } else {
        _push("user32.dll");
        __imp__LoadLibraryA();
        if(__eax == 0) {
L10:
            return;
        } else {
            _push("MessageBoxA");
            __ebx = __imp__GetProcAddress;
            _push(__eax);
             *__ebx();
             *4439532 = __eax;
            if(__eax == 0) {
                goto L10;
            } else {
                _push("GetActiveWindow");
                _push(__eax);
                 *__ebx();
                _push("GetLastActivePopup");
                 *4439536 = __eax;
                _push(__eax);
                 *__ebx();
                 *4439540 = __eax;
                goto L4;
            }
        }
    }
}

signed int L00416300(
    _unknown_ __eax,                       // r0
    signed int _a4,                        // _cfa_4
    signed int _a8,                        // _cfa_8
    unsigned int _a12                      // _cfa_c
)
{
    _unknown_ __ebx;                       // r1
    signed int __edi;                      // r4
    _unknown_ __esi;                       // r5
    signed int _t23;                       // _t23
    signed int _t28;                       // _t28
    _unknown_ _t29;                        // _t29
    signed int _t30;                       // _t30
    unsigned int _t31;                     // _t31
    unsigned int _t32;                     // _t32
    unsigned int _t33;                     // _t33
    signed int _t36;                       // _t36
    _unknown_ _t40;                        // _t40
    signed int _t41;                       // _t41

    _t31 = _a12;
    if(_t31 == 0) {
L19:
        return _a4;
    } else {
        _push(_t40);
        _push(_t29);
        _t30 = _t31;
        _t41 = _a8;
        __edi = _a4;
        if((_t41 & 3) != 0) {
            while(1) {
                _t23 =  *_t41;
                _t41 = _t41 + 1;
                 *__edi = _t23;
                __edi = __edi + 1;
                _t31 = _t31 - 1;
                if(_t31 == 0) {
                    goto L11;
                }
                if(_t23 == 0) {
                    if((__edi & 3) == 0) {
L15:
                        _t30 = _t31;
                        _t32 = _t31 >> 2;
                        if(_t32 != 0) {
                            goto L31;
                        } else {
                            goto L16;
                        }
                    } else {
                        while(1) {
                             *__edi = _t23;
                            __edi = __edi + 1;
                            _t31 = _t31 - 1;
                            if(_t31 == 0) {
                                goto L34;
                            }
                            if((__edi & 3) != 0) {
                                continue;
                            } else {
                                goto L15;
                            }
                            goto L35;
                        }
                        goto L34;
                    }
                } else {
                    if((_t41 & 3) != 0) {
                        continue;
                    } else {
                        _t30 = _t31;
                        _t33 = _t31 >> 2;
                        if(_t33 != 0) {
                            goto L21;
                        } else {
                            goto L8;
                        }
                    }
                }
                goto L35;
            }
            goto L11;
        } else {
            _t33 = _t31 >> 2;
            if(_t33 != 0) {
                do {
L21:
                    _t28 =  *_t41 ^ -1 ^ 2130640639 +  *_t41;
                    _t36 =  *_t41;
                    _t41 = _t41 + 4;
                    if((_t28 & -2130640640) == 0) {
                        goto L20;
                    } else {
                        if(_t36 == 0) {
                             *__edi = 0;
                            goto L30;
                        } else {
                            if(_t36 == 0) {
                                 *__edi = _t36 & 255;
                                goto L30;
                            } else {
                                if((_t36 & 16711680) == 0) {
                                     *__edi = _t36 & 65535;
                                    goto L30;
                                } else {
                                    if((_t36 & -16777216) != 0) {
                                        goto L20;
                                    } else {
                                         *__edi = _t36;
L30:
                                        __edi = __edi + 4;
                                        _t23 = 0;
                                        _t32 = _t33 - 1;
                                        if(_t32 != 0) {
L31:
                                            _t23 = 0;
                                            do {
                                                 *__edi = _t23;
                                                __edi = __edi + 4;
                                                _t32 = _t32 - 1;
                                            } while(_t32 != 0);
                                        }
                                        _t30 = _t30 & 3;
                                        if(_t30 != 0) {
                                            goto L16;
                                        } else {
L34:
                                            _pop(__ebx);
                                            _pop(__esi);
                                            return _a4;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    goto L35;
L20:
                     *__edi = _t36;
                    __edi = __edi + 4;
                    _t33 = _t33 - 1;
                } while(_t33 != 0);
L8:
                _t30 = _t30 & 3;
                if(_t30 == 0) {
                    goto L11;
                } else {
                    goto L9;
                }
            } else {
                while(1) {
L9:
                    _t23 =  *_t41;
                    _t41 = _t41 + 1;
                     *__edi = _t23;
                    __edi = __edi + 1;
                    if(_t23 == 0) {
                        break;
                    }
                    _t30 = _t30 - 1;
                    if(_t30 != 0) {
                        continue;
                    } else {
L11:
                        _pop(__ebx);
                        _pop(__esi);
                        return _a4;
                    }
                    goto L35;
                }
L17:
                _t30 = _t30 - 1;
                if(_t30 != 0) {
L16:
                     *__edi = _t23;
                    __edi = __edi + 1;
                    goto L17;
                }
                _pop(__ebx);
                _pop(__esi);
                goto L19;
            }
        }
    }
L35:
}

signed int L00416400()
{
    _unknown_ __ebx;                       // r1
    signed int __edi;                      // r4
    _unknown_ __esi;                       // r5
    signed int* _t12;                      // _t12
    signed int* _t14;                      // _t14
    _unknown_ _t16;                        // _t16
    signed int** _t17;                     // _t17
    signed int** _t21;                     // _t21
    signed int _t23;                       // _t23
    signed int* _t27;                      // _t27

    _t23 = -1;
    __edi = 0;
    _t16 = 0;
    _t21 = 4539776;
    while(1) {
        _t27 =  *_t21;
        if(_t27 == 0) {
            break;
        }
        _t14 =  &(_t27[0x40]);
        if(_t27 < _t14) {
            while((_t27[1] & 1) != 0) {
                _t27 =  &(_t27[2]);
                if(_t27 < _t14) {
                    continue;
                } else {
                }
                goto L8;
            }
             *_t27 = -1;
            _t23 = (_t27 -  *_t21 >> 3) + _t16;
        }
L8:
        if(_t23 != -1) {
L16:
            return _t23;
        } else {
            _t16 = _t16 + 32;
            _t21 =  &(_t21[1]);
            __edi = __edi + 1;
            if(_t21 < 4540032) {
                continue;
            } else {
                return _t23;
            }
        }
    }
    _t12 = L004111A0(256);
    if(_t12 != 0) {
        _t17 =  &(4539776[__edi]);
         *4540032 =  *4540032 + 32;
         *_t17 = _t12;
        if( &(_t12[0x40]) > _t12) {
            do {
                _t12[1] = 0;
                _t12 =  &(_t12[2]);
                 *(_t12 - 8) = -1;
                 *((char*)(_t12 - 3)) = 10;
            } while( &(( *_t17)[0x40]) > _t12);
        }
        _t23 = __edi << 5;
    }
    goto L16;
}

L004164C0(
    signed int _a4,                        // _cfa_4
    intOrPtr _a8                           // _cfa_8
)
{
    intOrPtr __ebx;                        // r1
    intOrPtr* __edi;                       // r4
    signed int __esi;                      // r5

    __ecx = _a4;
    _push(__edi);
    if(__ecx >=  *4540032) {
L12:
        _pop(__edi);
         *4434520 = 9;
         *4434524 = 0;
        return -1;
    } else {
        __edi = ((__ecx & -25) >> 3) + 4539776;
        __esi = (__ecx & 31) * 8;
        if( *((intOrPtr*)( *(((__ecx & -25) >> 3) + 4539776) + __esi)) != -1) {
            goto L12;
        } else {
            if( *4434612 != 1) {
L10:
                __ebx = _a8;
            } else {
                if(__ecx == 0) {
                    __ebx = _a8;
                    _push(__ebx);
                    _push(-10);
                    __imp__SetStdHandle();
                } else {
                    if(__ecx == 1) {
                        __ebx = _a8;
                        _push(__ebx);
                        _push(-11);
                        __imp__SetStdHandle();
                    } else {
                        if(__ecx == 2) {
                            __ebx = _a8;
                            _push(__ebx);
                            _push(-12);
                            __imp__SetStdHandle();
                        } else {
                            goto L10;
                        }
                    }
                }
            }
            _pop(__edi);
             *((intOrPtr*)( *__edi + __esi)) = __ebx;
            return 0;
        }
    }
}

L00416570(
    signed int _a4                         // _cfa_4
)
{
    intOrPtr* __edi;                       // r4
    signed int __esi;                      // r5
    intOrPtr* _t15;                        // _t15

    __ecx = _a4;
    _push(__edi);
    if(__ecx >=  *4540032) {
L13:
        _pop(__edi);
         *4434520 = 9;
         *4434524 = 0;
        return -1;
    } else {
        __edi = ((__ecx & -25) >> 3) + 4539776;
        __esi = (__ecx & 31) * 8;
        _t15 =  *(((__ecx & -25) >> 3) + 4539776) + __esi;
        if(( *(_t15 + 4) & 1) == 0 ||  *_t15 == -1) {
            goto L13;
        } else {
            if( *4434612 == 1) {
                if(__ecx == 0) {
                    _push(0);
                    _push(-10);
                    goto L11;
                } else {
                    if(__ecx == 1) {
                        _push(0);
                        _push(-11);
                        goto L11;
                    } else {
                        if(__ecx == 2) {
                            _push(0);
                            _push(-12);
L11:
                            __imp__SetStdHandle();
                        } else {
                        }
                    }
                }
            }
            _pop(__edi);
             *((intOrPtr*)( *__edi + __esi)) = -1;
            return 0;
        }
    }
}

L00416600(
    signed int _a4                         // _cfa_4
)
{
    intOrPtr* _t11;                        // _t11
    signed int _t13;                       // _t13

    _t13 = _a4;
    if(_t13 >=  *4540032) {
L3:
         *4434520 = 9;
         *4434524 = 0;
        return -1;
    } else {
        _t11 =  *((intOrPtr*)(((_t13 & -25) >> 3) + 4539776)) + (_t13 & 31) * 8;
        if(( *(_t11 + 4) & 1) == 0) {
            goto L3;
        } else {
            return  *_t11;
        }
    }
}

L004166C0(
    intOrPtr* _a4                          // _cfa_4
)
{
    intOrPtr* __esi;                       // r5
    intOrPtr _t13;                         // _t13
    intOrPtr _t15;                         // _t15

     *4438632 =  *4438632 + 1;
    __esi = _a4;
    _t13 = L004111A0(4096);
    __esi[2] = _t13;
    if(_t13 == 0) {
         *(__esi + 12) =  *(__esi + 12) | 4;
        __esi[2] = __esi + 20;
        __esi[6] = 2;
    } else {
         *(__esi + 12) =  *(__esi + 12) | 8;
        __esi[6] = 4096;
    }
    _t15 = __esi[2];
     *__esi = _t15;
    __esi[1] = 0;
    return _t15;
}

L00416710(
    signed int _a4,                        // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    char _a12,                             // _cfa_c
    intOrPtr _a16                          // _cfa_10
)
{
    char _v4;                              // _cfa_fffffffc
    intOrPtr _v8;                          // _cfa_fffffff8
    _unknown_ _v20;                        // _cfa_ffffffec
    intOrPtr _v24;                         // _cfa_ffffffe8
    intOrPtr* __edi;                       // r4
    signed int __esi;                      // r5
    intOrPtr _t29;                         // _t29
    signed int _t35;                       // _t35

    _t35 = _a4;
    __esp = __esp - 8;
    _push(__esi);
    _push(__edi);
    if( *4540032 <= _t35) {
L8:
        _pop(__edi);
        _pop(__esi);
         *4434520 = 9;
         *4434524 = 0;
        __esp = __esp + 8;
        return -1;
    } else {
        __edi = ((_t35 & -25) >> 3) + 4539776;
        __esi = (_t35 & 31) * 8;
        if(( *( *__edi + __esi + 4) & 1) == 0) {
            goto L8;
        } else {
            _v8 = _a8;
            _push(_t35);
            _v4 = _a12;
            _t29 = L00416600();
            __esp = __esp + 4;
            if(_t29 != -1) {
                _push(_a16);
                _push( &_v4);
                _push(_v8);
                _push(_t29);
                __imp__SetFilePointer();
                _v24 = _t29;
                if(_t29 != -1) {
L7:
                     *( *__edi + __esi + 4) =  *( *__edi + __esi + 4) & 253;
                    _pop(__edi);
                    _pop(__esi);
                    __esp = __esp + 8;
                    return _v24;
                } else {
                    __imp__GetLastError();
                    if(_t29 == 0) {
                        goto L7;
                    } else {
                        L004144A0(_t29);
                        _pop(__edi);
                        _pop(__esi);
                        __esp = __esp + 8;
                        return -1;
                    }
                }
            } else {
                _pop(__edi);
                _pop(__esi);
                 *4434520 = 9;
                __esp = __esp + 8;
                return -1;
            }
        }
    }
}

L00416800(
    intOrPtr* _a4                          // _cfa_4
)
{
    intOrPtr _v4;                          // _cfa_fffffffc
    signed int _v8;                        // _cfa_fffffff8
    char _v12;                             // _cfa_fffffff4
    intOrPtr _v16;                         // _cfa_fffffff0
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    intOrPtr* __esi;                       // r5
    _unknown_ __ebp;                       // r6
    char* _t76;                            // _t76
    intOrPtr _t79;                         // _t79
    _unknown_ _t86;                        // _t86
    signed char _t90;                      // _t90
    char* _t91;                            // _t91
    intOrPtr _t98;                         // _t98
    signed int _t99;                       // _t99
    intOrPtr _t100;                        // _t100
    _unknown_ _t103;                       // _t103
    char _t106;                            // _t106
    signed char _t107;                     // _t107
    char _t122;                            // _t122

    __esi = _a4;
    _push(_t114);
    _push(_t119);
    _v8 =  *(__esi + 16);
    if(__esi[1] < 0) {
        __esi[1] = 0;
    }
    _v16 = L00416710(_v8, 0, 0, 1);
    _t122 = _t106;
    _v12 = _t106;
    if(_t122 > 0) {
L6:
        _t107 =  *(__esi + 12);
        if((_t107 & 264) != 0) {
            _t100 =  *__esi;
            _t76 = __esi[2];
            _t98 = _t100 - _t76;
            _v4 = _t98;
            if((_t107 & 3) == 0) {
                if((_t107 & 128) != 0) {
                    goto L14;
                } else {
                    _pop(__ebp);
                    _pop(__edi);
                     *4434520 = 22;
                    return -1;
                }
            } else {
                _t119 = _v8 & 31;
                _t114 =  *(((_v8 & -25) >> 3) + 4539776);
                if(( *( *(((_v8 & -25) >> 3) + 4539776) + 4 + (_v8 & 31) * 8) & 128) != 0 && _t76 < _t100) {
                    do {
                        if( *_t76 == 10) {
                            _v4 = _v4 + 1;
                        }
                        _t76 = _t76 + 1;
                    } while(_t76 < _t100);
                }
L14:
                if(_v12 != 0 || _v16 != 0) {
                    if((_t107 & 1) != 0) {
                        _t79 = __esi[1];
                        if(_t79 != 0) {
                            _t114 = _t79 + _t98;
                            _t119 = ((_v8 & -25) >> 3) + 4539776;
                            _t99 = (_v8 & 31) * 8;
                            if(( *( *_t119 + _t99 + 4) & 128) != 0) {
                                _t86 = L00416710(_v8, 0, 0, 2);
                                if(_t107 != _v12 || _t86 != _v16) {
                                    L00416710(_v8, _v16, _v12, 0);
                                    if(_t114 > 512) {
L34:
                                        _t114 = __esi[6];
                                    } else {
                                        _t90 =  *(__esi + 12);
                                        if((_t90 & 8) == 0) {
                                            goto L34;
                                        } else {
                                            _t114 = 512;
                                            if((_t90 & 4) != 0) {
                                                goto L34;
                                            }
                                        }
                                    }
                                    if(( *( *_t119 + _t99 + 4) & 4) != 0) {
                                        goto L36;
                                    }
                                } else {
                                    _t91 = __esi[2];
                                    _t103 = _t91 + _t114;
                                    while(_t103 > _t91) {
                                        if( *_t91 == 10) {
                                            _t114 = _t114 + 1;
                                        }
                                        _t91 = _t91 + 1;
                                    }
                                    if(( *(__esi + 13) & 32) != 0) {
L36:
                                        _t114 = _t114 + 1;
                                    }
                                }
                            }
                            _v16 = _v16 - _t114;
                            asm("sbb dword [esp+0x14], 0x0");
                        } else {
                            _v4 = 0;
                        }
                    }
                    asm("adc edx, [esp+0x14]");
                    _pop(__ebp);
                    _pop(__edi);
                    return _v4 + _v16;
                } else {
                    _pop(__ebp);
                    _pop(__edi);
                    return _v4;
                }
            }
        } else {
            _pop(__ebp);
            asm("cdq");
            asm("sbb edi, edx");
            _pop(__edi);
            return _v16 - __esi[1];
        }
    } else {
        if(_t122 < 0 || _v16 < 0) {
            _pop(__ebp);
            _pop(__edi);
            return -1;
        } else {
            goto L6;
        }
    }
}

signed int L004169E0(
    signed int _a4,                        // _cfa_4
    signed int _a8,                        // _cfa_8
    intOrPtr _a12,                         // _cfa_c
    signed int _a16                        // _cfa_10
)
{
    signed int _v4;                        // _cfa_fffffffc
    signed int _v8;                        // _cfa_fffffff8
    char _v12;                             // _cfa_fffffff4
    signed int _v16;                       // _cfa_fffffff0
    signed int _v20;                       // _cfa_ffffffec
    signed int _v24;                       // _cfa_ffffffe8
    signed int _v52;                       // _cfa_ffffffcc
    char _v56;                             // _cfa_ffffffc8
    char _v57;                             // _cfa_ffffffc7
    signed int __ebx;                      // r1
    signed int __edi;                      // r4
    signed int __esi;                      // r5
    signed int __ebp;                      // r6
    signed int _t70;                       // _t70
    _unknown_ _t72;                        // _t72
    _unknown_ _t75;                        // _t75
    signed char _t76;                      // _t76
    _unknown_ _t79;                        // _t79
    signed int _t80;                       // _t80

    _v8 = 0;
    _push(_t75);
    _v12 = 12;
    _push(_t79);
    _push(__edi);
    _t80 = _a8;
    _push(__ebp);
    if((_t80 & 128) == 0) {
        _v4 = 1;
        _t76 = 0;
        __eflags = 0;
    } else {
        _t76 = 16;
        _v4 = 0;
    }
    if((_t80 & 32768) == 0 && ((_t80 & 16384) != 0 ||  *4439984 != 32768)) {
        _t76 = _t76 | 128;
    }
    _t70 = _t80 & 3;
    if(_t70 == 0) {
        _v20 = -2147483648;
L14:
        _t72 = _a12 - 16;
        __eflags = _t72 - 48;
        if(_t72 > 48) {
L16:
            _pop(__ebp);
             *4434520 = 22;
             *4434524 = 0;
            _pop(__edi);
            _pop(__esi);
            _pop(__ebx);
            return -1;
        } else {
            switch( *((intOrPtr*)(0 +  &M00416DB0))) {
                case 0:
                    _v24 = 0;
                    goto L21;
                case 1:
                    _v24 = 1;
                    goto L21;
                case 2:
                    _v24 = 2;
                    goto L21;
                case 3:
                    _v24 = 3;
L21:
                    __eax = __esi;
                    __eax = __esi & 1792;
                    __eflags = __eax - 256;
                    if(__eflags > 0) {
                        __eflags = __eax - 768;
                        if(__eflags > 0) {
                            __eflags = __eax - 1280;
                            if(__eflags > 0) {
                                __eflags = __eax - 1536;
                                if(__eax == 1536) {
                                    goto L38;
                                } else {
                                    __eflags = __eax - 1792;
                                    if(__eax == 1792) {
                                        goto L40;
                                    } else {
                                        goto L35;
                                    }
                                }
                            } else {
                                if(__eflags == 0) {
L40:
                                    _v16 = 1;
                                    goto L41;
                                } else {
                                    __eflags = __eax - 1024;
                                    if(__eax == 1024) {
                                        goto L36;
                                    } else {
                                        goto L35;
                                    }
                                }
                            }
                        } else {
                            if(__eflags == 0) {
                                _v16 = 2;
                                goto L41;
                            } else {
                                __eflags = __eax - 512;
                                if(__eax == 512) {
L38:
                                    _v16 = 5;
                                    goto L41;
                                } else {
                                    goto L35;
                                }
                            }
                        }
                    } else {
                        if(__eflags == 0) {
                            _v16 = 4;
                            goto L41;
                        } else {
                            __eflags = __eax;
                            if(__eax == 0) {
L36:
                                _v16 = 3;
L41:
                                __eflags = __esi & 256;
                                __ebp = 128;
                                if((__esi & 256) != 0) {
                                     *4434528 =  !( *4434528);
                                    __eax =  !( *4434528) & _a16;
                                    __eflags = 128 & __eax;
                                    if((128 & __eax) == 0) {
                                        __ebp = 1;
                                    }
                                }
                                __eflags = __esi & 64;
                                if((__esi & 64) != 0) {
                                    _v20 = _v20 | 65536;
                                    __ebp = __ebp | 67108864;
                                    __eflags = __ebp;
                                }
                                __eflags = __esi & 4096;
                                if((__esi & 4096) != 0) {
                                    __ebp = __ebp | 256;
                                    __eflags = __ebp;
                                }
                                __eflags = __esi & 32;
                                if((__esi & 32) == 0) {
                                    __eflags = __esi & 16;
                                    if((__esi & 16) != 0) {
                                        __ebp = __ebp | 268435456;
                                        __eflags = __ebp;
                                    }
                                } else {
                                    __ebp = __ebp | 134217728;
                                }
                                __eax = L00416400();
                                __eflags = __eax - -1;
                                __edi = __eax;
                                if(__eax != -1) {
                                    __eax = _v16;
                                    _push(0);
                                    __ecx =  &_v12;
                                    _push(__ebp);
                                    _push(_v16);
                                    __eax = _v20;
                                    _push( &_v12);
                                    __ecx = _a4;
                                    _push(_v24);
                                    _push(__eax);
                                    __ebp = __imp__CreateFileA;
                                    _push(_a4);
                                     *__imp__CreateFileA();
                                    __eflags = __eax - -1;
                                    __ebp = __eax;
                                    if(__eax != -1) {
                                        _push(__ebp);
                                        __imp__GetFileType();
                                        __eflags = __eax;
                                        if(__eax != 0) {
                                            __eflags = __eax - 2;
                                            if(__eax != 2) {
                                                __eflags = __eax - 3;
                                                if(__eax == 3) {
                                                    __bl = __bl | 8;
                                                    __eflags = __bl;
                                                }
                                            } else {
                                                __bl = __bl | 64;
                                            }
                                            _push(__ebp);
                                            __bl = __bl | 1;
                                            _push(__edi);
                                            L004164C0();
                                            __esp = __esp + 8;
                                            __edi = __edi & -25;
                                            __eax = (__edi & -25) >> 3;
                                            __ebp = ((__edi & -25) >> 3) + 4539776;
                                            __edi = __edi & 31;
                                            __eax = (__edi & 31) << 3;
                                            _v52 = __eax;
                                             *( *__ebp + __eax + 4) = __bl;
                                            __al = __bl;
                                            __al = __bl & 72;
                                            __eflags = __al;
                                            _v56 = __al;
                                            if(__al != 0) {
L74:
                                                __eflags = _v56;
                                                if(_v56 == 0) {
                                                    __eflags = __esi & 8;
                                                    if((__esi & 8) != 0) {
                                                        __eax =  *__ebp;
                                                        __ecx = _v52;
                                                        _t64 = __eax + __ecx + 4;
                                                         *_t64 =  *(__eax + __ecx + 4) | 32;
                                                        __eflags =  *_t64;
                                                    }
                                                }
                                                __eax = __edi;
                                                _pop(__ebp);
                                                _pop(__edi);
                                                _pop(__esi);
                                                _pop(__ebx);
                                                return __edi;
                                            } else {
                                                __eflags = __bl & 128;
                                                if((__bl & 128) == 0) {
                                                    goto L74;
                                                } else {
                                                    __eflags = __esi & 2;
                                                    if((__esi & 2) == 0) {
                                                        goto L74;
                                                    } else {
                                                        L004143E0(__edi, -1, 2);
                                                        __ebx = __eax;
                                                        __eflags = __ebx - -1;
                                                        if(__ebx != -1) {
                                                            __eax =  &_v57;
                                                            _push(1);
                                                            _v57 = 0;
                                                            _push( &_v57);
                                                            _push(__edi);
                                                            L00413AB0();
                                                            __esp = __esp + 12;
                                                            __eflags = __eax;
                                                            if(__eax != 0) {
L72:
                                                                L004143E0(__edi, 0, 0);
                                                                __eflags = __eax - -1;
                                                                if(__eax != -1) {
                                                                    goto L74;
                                                                } else {
                                                                    L00413750(__edi);
                                                                    __eax = -1;
                                                                    _pop(__ebp);
                                                                    _pop(__edi);
                                                                    _pop(__esi);
                                                                    _pop(__ebx);
                                                                    return -1;
                                                                }
                                                            } else {
                                                                __eflags = _v57 - 26;
                                                                if(_v57 != 26) {
                                                                    goto L72;
                                                                } else {
                                                                    _push(__ebx);
                                                                    _push(__edi);
                                                                    L00419460(__ecx);
                                                                    __esp = __esp + 8;
                                                                    __eflags = __eax - -1;
                                                                    if(__eax != -1) {
                                                                        goto L72;
                                                                    } else {
                                                                        L00413750(__edi);
                                                                        __eax = -1;
                                                                        _pop(__ebp);
                                                                        _pop(__edi);
                                                                        _pop(__esi);
                                                                        _pop(__ebx);
                                                                        return -1;
                                                                    }
                                                                }
                                                            }
                                                        } else {
                                                            __eflags =  *4434524 - 131;
                                                            if( *4434524 == 131) {
                                                                goto L74;
                                                            } else {
                                                                L00413750(__edi);
                                                                __eax = -1;
                                                                _pop(__ebp);
                                                                _pop(__edi);
                                                                _pop(__esi);
                                                                _pop(__ebx);
                                                                return -1;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        } else {
                                            _push(__ebp);
                                            __imp__CloseHandle();
                                            __imp__GetLastError();
                                            L004144A0(__eax);
                                            __eax = -1;
                                            _pop(__ebp);
                                            _pop(__edi);
                                            _pop(__esi);
                                            _pop(__ebx);
                                            return -1;
                                        }
                                    } else {
                                        __imp__GetLastError();
                                        L004144A0(__eax);
                                        __eax = -1;
                                        _pop(__ebp);
                                        _pop(__edi);
                                        _pop(__esi);
                                        _pop(__ebx);
                                        return -1;
                                    }
                                } else {
                                    __eax = -1;
                                    _pop(__ebp);
                                     *4434520 = 24;
                                     *4434524 = 0;
                                    _pop(__edi);
                                    _pop(__esi);
                                    _pop(__ebx);
                                    return -1;
                                }
                            } else {
L35:
                                __eax = -1;
                                _pop(__ebp);
                                 *4434520 = 22;
                                 *4434524 = 0;
                                _pop(__edi);
                                _pop(__esi);
                                _pop(__ebx);
                                return -1;
                            }
                        }
                    }
                    goto L78;
                case 4:
                    goto L16;
            }
        }
    } else {
        if(_t70 == 1) {
            _v20 = 1073741824;
            goto L14;
        } else {
            if(_t70 == 2) {
                _v20 = -1073741824;
                goto L14;
            } else {
                _pop(__ebp);
                 *4434520 = 22;
                 *4434524 = 0;
                _pop(__edi);
                _pop(__esi);
                _pop(__ebx);
                return -1;
            }
        }
    }
L78:
}

L00416E00(
    intOrPtr _a4                           // _cfa_4
)
{
    if(_a4 <  *4540032) {
        return 0;
    } else {
        return 0;
    }
}

L00416EB0(
    char* _a4,                             // _cfa_4
    _unknown_ _a8                          // _cfa_8
)
{
    intOrPtr _t6;                          // _t6
    char* _t11;                            // _t11

    _t11 = _a4;
    __esp = __esp - 4;
    if(_t11 != 0) {
        if( *4439512 != 0) {
             *__esp = 0;
            _push(__esp);
            _push(0);
            _push( *4438912);
            _t6 =  *4439528;
            _push(_t11);
            _push(1);
            _push( &_a8);
            _push(544);
            _push(_t6);
            __imp__WideCharToMultiByte();
            if(_t6 == 0 ||  *__esp != 0) {
                 *4434520 = 42;
                _t6 = -1;
            }
            __esp = __esp + 4;
            return _t6;
        } else {
            if(_a8 <= 255) {
                 *_t11 = _a8;
                __esp = __esp + 4;
                return 1;
            } else {
                __esp = __esp + 4;
                 *4434520 = 42;
                return -1;
            }
        }
    } else {
        __esp = __esp + 4;
        return 0;
    }
}

signed int L00416F50(
    signed int _a4,                        // _cfa_4
    unsigned int _a8,                      // _cfa_8
    signed int _a12,                       // _cfa_c
    signed int _a16                        // _cfa_10
)
{
    _unknown_ __ebx;                       // r1
    signed int __esi;                      // r5
    unsigned int _t34;                     // _t34
    signed int _t35;                       // _t35
    signed int _t36;                       // _t36
    signed int _t38;                       // _t38
    signed int _t39;                       // _t39
    signed int _t45;                       // _t45
    unsigned int _t47;                     // _t47
    unsigned int _t51;                     // _t51
    unsigned int _t55;                     // _t55

    _t34 = _a16;
    __eflags = _t34;
    if(_t34 != 0) {
        _t47 = _t34;
        _t45 = _a12;
        _t51 = _a8;
        _t35 = _a4;
        do {
            asm("rcr ebx, 1");
            _t51 = _t51 >> 1;
            asm("rcr eax, 1");
            _t47 = _t47 >> 1;
            __eflags = _t47;
        } while(_t47 != 0);
        _t36 = _t35 / _t45;
        __esi = _t36;
        _t38 = _a12;
        _t39 = _t38 * __esi;
        _t55 = (_t38 * __esi >> 32) + _t36 * _a16;
        __eflags = _t55;
        if(_t55 < 0) {
L8:
            __esi = __esi - 1;
            __eflags = __esi;
L9:
            __eflags = 0;
            return __esi;
        }
        __eflags = _t55 - _a8;
        if(__eflags > 0) {
            goto L8;
        }
        if(__eflags < 0) {
            goto L9;
        }
        __eflags = _t39 - _a4;
        if(_t39 <= _a4) {
            goto L9;
        }
        goto L8;
    }
    return _a4 / _a12;
}

signed int L00416FC0(
    signed int _a4,                        // _cfa_4
    unsigned int _a8,                      // _cfa_8
    signed int _a12,                       // _cfa_c
    signed int _a16                        // _cfa_10
)
{
    signed int __ebx;                      // r1
    unsigned int _t37;                     // _t37
    signed int _t38;                       // _t38
    signed int _t39;                       // _t39
    signed int _t40;                       // _t40
    signed int _t41;                       // _t41
    unsigned int _t49;                     // _t49
    unsigned int _t53;                     // _t53
    unsigned int _t57;                     // _t57

    _t37 = _a16;
    __eflags = _t37;
    if(_t37 != 0) {
        _t49 = _t37;
        __ebx = _a12;
        _t53 = _a8;
        _t38 = _a4;
        do {
            asm("rcr ebx, 1");
            _t53 = _t53 >> 1;
            asm("rcr eax, 1");
            _t49 = _t49 >> 1;
            __eflags = _t49;
        } while(_t49 != 0);
        _t39 = _t38 / __ebx;
        _t40 = _t39 * _a16;
        asm("xchg ecx, eax");
        _t41 = _t40 * _a12;
        _t57 = (_t40 * _a12 >> 32) + _t39;
        __eflags = _t57;
        if(_t57 < 0) {
L8:
            _t41 = _t41 - _a12;
            asm("sbb edx, [esp+0x14]");
L9:
            asm("sbb edx, [esp+0xc]");
            asm("sbb edx, 0x0");
            return  ~(_t41 - _a4);
        }
        __eflags = _t57 - _a8;
        if(__eflags > 0) {
            goto L8;
        }
        if(__eflags < 0) {
            goto L9;
        }
        __eflags = _t41 - _a4;
        if(_t41 <= _a4) {
            goto L9;
        }
        goto L8;
    }
    return _a4 % _a12;
}

L004170E7()
{
    short _t17;                            // _t17

    if( *((char*)(__edx + 14)) != 5) {
        _t17 = 4927;
    } else {
        _t17 = 63;
    }
     *((short*)(__ebp - 162)) = _t17;
    asm("fldcw word [ebp-0xa2]");
    asm("fxam");
     *((intOrPtr*)(__ebp - 148)) = __edx;
    asm("wait");
    asm("fnstsw word [ebp-0xa0]");
     *((char*)(__ebp - 144)) = 0;
    asm("fxch st0, st1");
    asm("fxam");
    asm("wait");
    asm("fnstsw word [ebp-0xa0]");
    asm("fxch st0, st1");
    asm("rol ch, 1");
    asm("xlatb");
    asm("rol cl, 1");
    asm("xlatb");
    goto ( *__ebx);
}

L004182B0(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr* _a8,                         // _cfa_8
    _unknown_ _a12                         // _cfa_c
)
{
    signed int _v32;                       // _cfa_ffffffe0
    intOrPtr _v44;                         // _cfa_ffffffd4
    intOrPtr _v48;                         // _cfa_ffffffd0
    char _v88;                             // _cfa_ffffffa8
    char _v92;                             // _cfa_ffffffa4
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    intOrPtr* __esi;                       // r5
    signed int _t25;                       // _t25
    _unknown_ _t28;                        // _t28
    intOrPtr _t40;                         // _t40
    _unknown_ _t44;                        // _t44
    _unknown_ _t45;                        // _t45
    _unknown_ _t46;                        // _t46
    intOrPtr* _t47;                        // _t47

    __esp = __esp - 92;
    _push(__ebx);
    _push(_t46);
    _t47 = _a8;
    _push(_t44);
    _v92 = 0;
    _t25 =  *_t47 - 1;
    if(_t25 > 7) {
L7:
        _t45 = 0;
L8:
        if(_t45 == 0) {
L17:
            L00419EF0(_v92,  &_v88, _v92, 65535);
            _t28 = 0;
            if( *_t47 != 8 &&  *4440248 == 0) {
                _push(_t47);
                _t28 = L00419EA0();
                __esp = __esp + 4;
            }
            if(_t28 == 0) {
                _t28 = L00419E70( *_t47);
            }
            _pop(__edi);
            _pop(__esi);
            _pop(__ebx);
            __esp = __esp + 92;
            return _t28;
        }
        __ebx = _t47 + 24;
        if(L00419BB0(_t45, _t47 + 24, _v92) != 0) {
            goto L17;
        }
        _t40 = _a4;
        if(_t40 == 16) {
L15:
            _v32 = _v32 | 1;
            _v44 = _t47[5];
            _v32 = _v32 & -29 | 2;
            _v48 = _t47[4];
L16:
            L00419840( &_v88,  &_v92, _t45, _t40, _t47 + 8, __ebx);
            goto L17;
        }
        if(_t40 == 22 || _t40 == 29) {
            goto L15;
        } else {
            _v32 = _v32 & -2;
            goto L16;
        }
    }
    switch( *((intOrPtr*)(_t25 * 4 +  &M004183B0))) {
        case 0:
            _t45 = 8;
            goto L8;
        case 1:
            __edi = 4;
            goto L8;
        case 2:
            __edi = 17;
            goto L8;
        case 3:
            __edi = 18;
            goto L8;
        case 4:
            goto L7;
        case 5:
             *__esi = 1;
            goto L7;
        case 6:
            __edi = 16;
            goto L8;
    }
}

L00419460(
    _unknown_ __ecx,                       // r2
    char _a4,                              // _cfa_4
    signed int _a4104,                     // _cfa_1008
    intOrPtr _a4108                        // _cfa_100c
)
{
    intOrPtr _v0;                          // _cfa_0
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    _unknown_ __ebp;                       // r6
    intOrPtr _t20;                         // _t20
    _unknown_ _t22;                        // _t22
    intOrPtr _t27;                         // _t27
    _unknown_ _t29;                        // _t29
    intOrPtr _t30;                         // _t30
    intOrPtr _t32;                         // _t32
    _unknown_ _t34;                        // _t34
    intOrPtr _t35;                         // _t35
    _unknown_ _t42;                        // _t42
    _unknown_ _t45;                        // _t45
    signed int _t46;                       // _t46
    _unknown_ _t47;                        // _t47
    intOrPtr _t49;                         // _t49

    L0041A340(4100, __ecx);
    _push(_t34);
    _push(_t45);
    _push(_t42);
    _t35 = 0;
    _t46 = _a4104;
    _push(_t47);
    if( *4540032 <= _t46 || ( *( *((intOrPtr*)(((_t46 & -25) >> 3) + 4539776)) + 4 + (_t46 & 31) * 8) & 1) == 0) {
        _pop(__ebp);
         *4434520 = 9;
        _pop(__edi);
        _pop(__esi);
        _pop(__ebx);
        __esp = __esp + 4100;
        return -1;
    } else {
        _t20 = L004143E0(_t46, 0, 1);
        _v0 = _t20;
        if(_t20 == -1) {
L19:
            _pop(__ebp);
            _pop(__edi);
            _pop(__esi);
            _pop(__ebx);
            __esp = __esp + 4100;
            return -1;
        } else {
            _t22 = L004143E0(_t46, 0, 2);
            if(_t22 == -1) {
                goto L19;
            } else {
                _t39 = _a4108;
                _t49 = _a4108 - _t22;
                if(_t49 <= 0) {
                    if(__eflags < 0) {
                        L004143E0(_t46, _t39, 0);
                        _t27 = L00416600(_t46);
                        _push(_t27);
                        __imp__SetEndOfFile();
                        __eflags = _t27 - 1;
                        asm("sbb ebx, ebx");
                        __eflags = 0 - -1;
                        if(0 == -1) {
                             *4434520 = 13;
                            __imp__GetLastError();
                             *4434524 = _t27;
                        }
                    }
                } else {
                    _push(32768);
                    _push(1024 << 2);
                    _push(0);
                    _push( &_a4);
                    memset();
                    __esp = __esp + 12;
                    _push(_t46);
                    _t29 = L0041A2C0();
                    __esp = __esp + 8;
                    _t42 = _t29;
                    do {
                        _t30 = 4096;
                        if(_t49 < 4096) {
                            _t30 = _t49;
                        }
                        _t32 = L004141B0(_t46,  &_a4, _t30);
                        if(_t32 == -1) {
                            __eflags =  *4434524 - 5;
                            if( *4434524 == 5) {
                                 *4434520 = 13;
                            }
                            _t35 = _t32;
                        } else {
                            goto L9;
                        }
                        break;
L9:
                        _t49 = _t49 - _t32;
                    } while(_t49 > 0);
                    L0041A2C0(_t46, _t42);
                }
                L004143E0(_t46, _v0, 0);
                _pop(__ebp);
                _pop(__edi);
                _pop(__esi);
                _pop(__ebx);
                __esp = __esp + 4100;
                return _t35;
            }
        }
    }
}

signed short L004195D0(
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8,                          // _cfa_8
    signed int _a10,                       // _cfa_a
    intOrPtr _a12                          // _cfa_c
)
{
    signed short _v2;                      // _cfa_fffffffe
    intOrPtr _v4;                          // _cfa_fffffffc
    signed short _t11;                     // _t11

    __esp = __esp - 8;
    _v4 = _a8;
     *__esp = _a4;
    _t11 = _a12 + 1022 << 4 | _a10 & 32783;
    _v2 = _t11;
    __esp = __esp + 8;
    return _t11;
}

L00419680(
    signed int _a4,                        // _cfa_4
    signed int _a8,                        // _cfa_8
    signed int _a10,                       // _cfa_a
    signed char _a11,                      // _cfa_b
    intOrPtr* _a12                         // _cfa_c
)
{
    intOrPtr _v4;                          // _cfa_fffffffc
    long long _v8;                         // _cfa_fffffff8
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed char _t41;                      // _t41
    intOrPtr* _t44;                        // _t44
    _unknown_ _t45;                        // _t45
    _unknown_ _t51;                        // _t51
    unsigned short _t53;                   // _t53
    unsigned short _t56;                   // _t56
    long long _t57;                        // _t57

    __esp = __esp - 8;
    _push(_t51);
    _t41 = _a8 & 2147483647 | _a4;
    _push(16);
    if(_t41 != 0) {
        _t53 = _a10 & 32752;
        if(_t53 != 0 || (_a8 & 1048575) == 0 && _a4 == 0) {
            _push(0);
            _push(_a8);
            _t56 = (_t53 >> 4) - 1022;
            _push(_a4);
            L004195D0();
            _v8 = _t57;
            __esp = __esp + 12;
            goto L16;
        } else {
            asm("fldz");
            asm("fcomp qword [esp+0x14]");
            _t56 = -1021;
            asm("fnstsw ax");
            _t45 = 1;
            if((_t41 & 65) != 0) {
                _t45 = 0;
            }
            if((_a10 & 16) != 0) {
L12:
                _a10 = _a10 & 65519;
                if(_t45 != 0) {
                    _a11 = _a11 | 128;
                }
                L004195D0(_a4, _a8, 0);
                _v8 = _t57;
                goto L16;
            } else {
                __edi = 16;
                do {
                    _a8 = _a8 << 1;
                    if((_a4 & -2147483648) != 0) {
                        _a8 = _a8 | 1;
                    }
                    _t56 = _t56 - 1;
                    _a4 = _a4 << 1;
                } while((_a10 & __di) == 0);
                goto L12;
            }
        }
    } else {
        _t56 = 0;
        _v8 = 0;
        _v4 = 0;
L16:
        _t44 = _a12;
        _pop(16);
         *_t44 = _t56;
        _pop(__esi);
        __esp = __esp + 8;
        return _t44;
    }
}

signed int L00419840(
    char _a4,                              // _cfa_4
    signed int* _a8,                       // _cfa_8
    signed char _a12,                      // _cfa_c
    signed int _a16,                       // _cfa_10
    signed int* _a20,                      // _cfa_14
    signed int* _a24                       // _cfa_18
)
{
    intOrPtr _v4;                          // _cfa_fffffffc
    signed int* _v12;                      // _cfa_fffffff4
    signed int* __ebx;                     // r1
    _unknown_ __edi;                       // r4
    _unknown_ __esi;                       // r5
    signed char _t150;                     // _t150
    signed int _t152;                      // _t152
    signed int _t158;                      // _t158
    signed int* _t166;                     // _t166
    signed char* _t173;                    // _t173
    signed int _t176;                      // _t176
    unsigned int _t180;                    // _t180
    signed int _t184;                      // _t184
    _unknown_ _t205;                       // _t205
    signed int* _t206;                     // _t206
    signed char _t208;                     // _t208
    signed int* _t232;                     // _t232
    signed int* _t234;                     // _t234
    signed int* _t254;                     // _t254
    _unknown_ _t258;                       // _t258
    signed int* _t259;                     // _t259
    _unknown_ _t260;                       // _t260
    intOrPtr _t261;                        // _t261
    _unknown_ _t285;                       // _t285

    __esp = __esp - 4;
    _push(_t205);
    _push(_t260);
    _a4[1] = 0;
    _push(_t258);
    _a4[2] = 0;
    _a4[3] = 0;
    _t208 = _a12;
    if((_t208 & 16) == 0) {
        _t261 = _v4;
    } else {
        _t261 = -1073741681;
        _a4[1] = _a4[1] | 1;
    }
    if((_t208 & 2) != 0) {
        _t261 = -1073741677;
        _a4[1] = _a4[1] | 2;
    }
    if((_t208 & 1) != 0) {
        _t261 = -1073741679;
        _a4[1] = _a4[1] | 4;
    }
    if((_t208 & 4) != 0) {
        _t261 = -1073741682;
        _a4[1] = _a4[1] | 8;
    }
    if((_t208 & 8) != 0) {
        _t261 = -1073741680;
        _a4[1] = _a4[1] | 16;
    }
    _t206 = _a8;
    _a4[2] = (( !( *_t206) & 1) << 4 ^ _a4[2]) & 16 ^ _a4[2];
    asm("sbb eax, eax");
    _a4[2] = ( ~( *_t206 & 4) << 3 ^ _a4[2]) & 8 ^ _a4[2];
    asm("sbb eax, eax");
    _a4[2] = ( ~( *_t206 & 8) << 2 ^ _a4[2]) & 4 ^ _a4[2];
    asm("sbb eax, eax");
    _a4[2] = ( ~( *_t206 & 16) +  ~( *_t206 & 16) ^ _a4[2]) & 2 ^ _a4[2];
    asm("sbb eax, eax");
    _a4[2] = ( ~( *_t206 & 32) ^ _a4[2]) & 1 ^ _a4[2];
    _t150 = L00419EB0();
    if((_t150 & 1) != 0) {
        _a4[3] = _a4[3] | 16;
    }
    if((_t150 & 4) != 0) {
        _a4[3] = _a4[3] | 8;
    }
    if((_t150 & 8) != 0) {
        _a4[3] = _a4[3] | 4;
    }
    if((_t150 & 16) != 0) {
        _a4[3] = _a4[3] | 2;
    }
    if((_t150 & 32) != 0) {
        _a4[3] = _a4[3] | 1;
    }
    _t152 =  *_t206 & 3072;
    _t285 = _t152 - 1024;
    if(_t285 > 0) {
        if(_t152 == 2048) {
             *_a4 =  *_a4 & -2 | 2;
        } else {
            if(_t152 == 3072) {
                 *_a4 =  *_a4 | 3;
            }
        }
    } else {
        if(_t285 == 0) {
             *_a4 =  *_a4 & -3 | 1;
        } else {
            if(_t152 == 0) {
                 *_a4 =  *_a4 & -4;
            }
        }
    }
    _t158 =  *_t206 & 768;
    if(_t158 == 0) {
         *_a4 =  *_a4 & -21 | 8;
    } else {
        if(_t158 == 512) {
             *_a4 =  *_a4 & -25 | 4;
        } else {
            if(_t158 == 768) {
                 *_a4 =  *_a4 & -29;
            }
        }
    }
     *_a4 = (_a16 << 5 ^  *_a4) & 131040 ^  *_a4;
    _a4[8] = _a4[8] | 1;
    _a4[8] = _a4[8] & -29 | 2;
    _t166 = _a20;
    _t254 = _a4;
    _t254[5] = _t166[1];
    _t254[4] =  *_t166;
    _a4[0x14] = _a4[0x14] | 1;
    _t259 = _a24;
    _a4[0x14] = _a4[0x14] & -29 | 2;
    _t232 = _a4;
    _t232[0x11] = _t259[1];
    _t232[0x10] =  *_t259;
    L00419ED0();
    _push( &_a4);
    _push(1);
    _push(0);
    _push(_t261);
    __imp__RaiseException();
    _t173 =  &(_v12[2]);
    if(( *_t173 & 16) != 0) {
         *_t206 =  *_t206 & -2;
    }
    if(( *_t173 & 8) != 0) {
         *_t206 =  *_t206 & -5;
    }
    if(( *_t173 & 4) != 0) {
         *_t206 =  *_t206 & -9;
    }
    if(( *_t173 & 2) != 0) {
         *_t206 =  *_t206 & -17;
    }
    if(( *_t173 & 1) != 0) {
         *_t206 =  *_t206 & -33;
    }
    _t176 =  *_v12 & 3;
    if(_t176 > 3) {
L55:
        _t180 = ( *_v12 & 28) >> 2;
        if(_t180 == 0) {
             *_t206 =  *_t206 & -3073 | 768;
        } else {
            if(_t180 == 1) {
                 *_t206 =  *_t206 & -3073 | 512;
            } else {
                if(_t180 == 2) {
                     *_t206 =  *_t206 & -3073;
                }
            }
        }
        _t234 = _v12;
        _t184 = _t234[0x11];
        _t259[1] = _t184;
         *_t259 = _t234[0x10];
        _pop(__edi);
        _pop(__esi);
        _pop(__ebx);
        __esp = __esp + 4;
        return _t184;
    } else {
        switch( *((intOrPtr*)(_t176 * 4 +  &M00419B9C))) {
            case 0:
                 *_t206 =  *_t206 & -3073;
                goto L55;
            case 1:
                 *__ebx =  *__ebx & -2049 | 1024;
                goto L55;
            case 2:
                 *__ebx =  *__ebx & -1025 | 2048;
                goto L55;
            case 3:
                 *__ebx =  *__ebx | 3072;
                goto L55;
        }
    }
}

signed int L00419BB0(
    signed int _a4,                        // _cfa_4
    signed int* _a8,                       // _cfa_8
    signed int _a12                        // _cfa_c
)
{
    char _v4;                              // _cfa_fffffffc
    signed char _v6;                       // _cfa_fffffffa
    unsigned int _v8;                      // _cfa_fffffff8
    signed int _v12;                       // _cfa_fffffff4
    _unknown_ __ebx;                       // r1
    _unknown_ __edi;                       // r4
    signed int __esi;                      // r5
    _unknown_ __ebp;                       // r6
    signed int _t76;                       // _t76
    signed char _t81;                      // _t81
    signed int _t83;                       // _t83
    signed int* _t87;                      // _t87
    signed int* _t88;                      // _t88
    signed int* _t89;                      // _t89
    signed int* _t90;                      // _t90
    signed int* _t91;                      // _t91
    _unknown_ _t94;                        // _t94
    signed int _t102;                      // _t102
    _unknown_ _t103;                       // _t103
    signed int _t105;                      // _t105
    signed int _t114;                      // _t114

    __esi = _a4;
    _push(_t103);
    _push(1);
    _t105 = __esi & 31;
    if((__esi & 8) == 0 || (_a12 & 1) == 0) {
        __eflags = __esi & 4;
        if((__esi & 4) == 0) {
L6:
            __eflags = __esi & 1;
            if((__esi & 1) == 0) {
L27:
                __eflags = __esi & 2;
                if((__esi & 2) == 0) {
                    goto L51;
                }
                __eflags = _a12 & 16;
                if((_a12 & 16) == 0) {
                    goto L51;
                }
                __eflags = __esi & 16;
                if((__esi & 16) != 0) {
                }
                _t87 = _a8;
                _t76 = _t87[1] & 2147483647 |  *_t87;
                __eflags = _t76;
                if(_t76 == 0) {
                    goto L48;
                } else {
                    _t81 = L00419680( *_t87, _t87[1],  &_v4);
                    _v12 = _t114;
                    _t94 = _v4 - 1536;
                    __eflags = _t94 - -1074;
                    if(_t94 >= -1074) {
                        asm("fldz");
                        asm("fcomp qword [esp+0x10]");
                        _t102 = 1;
                        asm("fnstsw ax");
                        __eflags = _t81 & 65;
                        if((_t81 & 65) != 0) {
                            _t102 = 0;
                            __eflags = 0;
                        }
                        _v6 = _v6 & 15;
                        _v6 = _v6 | 16;
                        __eflags = _t94 - -1021;
                        if(_t94 >= -1021) {
L44:
                            __eflags = _t102;
                            if(_t102 != 0) {
                                asm("fchs");
                                _v12 = _v12;
                            }
L46:
                            _t76 = _v8;
                            _t87[1] = _t76;
                             *_t87 = _v12;
L48:
                            __eflags = 1;
                            if(1 != 0) {
                                _t76 = L00419F30(_t76, 16);
                            }
                            _t105 = _t105 & -3;
                            __eflags = _t105;
                            goto L51;
                        } else {
                            _t83 = -1021 - _t94;
                            __eflags = -1021;
                            do {
                                __eflags = _v12 & 1;
                                if((_v12 & 1) != 0) {
                                    __eflags = 0;
                                    if(0 == 0) {
                                    }
                                }
                                _v12 = _v12 >> 1;
                                __eflags = _v8 & 1;
                                if((_v8 & 1) != 0) {
                                    _v12 = _v12 | -2147483648;
                                    __eflags = _v12;
                                }
                                _v8 = _v8 >> 1;
                                _t83 = _t83 - 1;
                                __eflags = _t83;
                            } while(_t83 != 0);
                            goto L44;
                        }
                    }
                    _v12 = 0;
                    _v8 = 0;
                    goto L46;
                }
            }
            __eflags = _a12 & 8;
            if((_a12 & 8) == 0) {
                goto L27;
            }
            L00419F30(_t76, 8);
            _t76 = _a12 & 3072;
            __eflags = _t76 - 1024;
            if(__eflags > 0) {
                __eflags = _t76 - 2048;
                if(_t76 == 2048) {
                    asm("fldz");
                    _t88 = _a8;
                    asm("fcomp qword [ebx]");
                    asm("fnstsw ax");
                    __eflags = _t76 & 1;
                    if((_t76 & 1) == 0) {
                        asm("fchs");
                        _t105 = _t105 & -2;
                         *_t88 =  *4440008;
                    } else {
                        _t76 =  *4439996;
                        _t105 = _t105 & -2;
                        _t88[1] = _t76;
                         *_t88 =  *4439992;
                    }
                } else {
                    __eflags = _t76 - 3072;
                    if(_t76 == 3072) {
                        asm("fldz");
                        _t89 = _a8;
                        asm("fcomp qword [ebx]");
                        asm("fnstsw ax");
                        __eflags = _t76 & 1;
                        if((_t76 & 1) == 0) {
                            asm("fchs");
                            _t105 = _t105 & -2;
                             *_t89 =  *4440008;
                        } else {
                            _t76 =  *4440012;
                            _t105 = _t105 & -2;
                            _t89[1] = _t76;
                             *_t89 =  *4440008;
                        }
                    } else {
                        _t105 = _t105 & -2;
                    }
                }
            } else {
                if(__eflags == 0) {
                    asm("fldz");
                    _t90 = _a8;
                    asm("fcomp qword [ebx]");
                    asm("fnstsw ax");
                    __eflags = _t76 & 1;
                    if((_t76 & 1) == 0) {
                        asm("fchs");
                        _t105 = _t105 & -2;
                         *_t90 =  *4439992;
                    } else {
                        _t76 =  *4440012;
                        _t105 = _t105 & -2;
                        _t90[1] = _t76;
                         *_t90 =  *4440008;
                    }
                } else {
                    __eflags = _t76;
                    if(_t76 == 0) {
                        asm("fldz");
                        _t91 = _a8;
                        asm("fcomp qword [ebx]");
                        asm("fnstsw ax");
                        __eflags = _t76 & 1;
                        if((_t76 & 1) == 0) {
                            asm("fchs");
                            _t105 = _t105 & -2;
                             *_t91 =  *4439992;
                        } else {
                            _t76 =  *4439996;
                            _t105 = _t105 & -2;
                            _t91[1] = _t76;
                             *_t91 =  *4439992;
                        }
                    } else {
                        _t105 = _t105 & -2;
                    }
                }
            }
            goto L51;
        }
        __eflags = _a12 & 4;
        if((_a12 & 4) == 0) {
            goto L6;
        } else {
            _t105 = _t105 & -5;
            _t76 = L00419F30(_t76, 4);
            __esp = __esp + 4;
            goto L51;
        }
    } else {
        _t105 = _t105 & -9;
        _t76 = L00419F30(_t76, 1);
        __esp = __esp + 4;
L51:
        if((__esi & 16) != 0 && (_a12 & 32) != 0) {
            _t105 = _t105 & -17;
            _t76 = L00419F30(_t76, 32);
            __esp = __esp + 4;
        }
        _pop(__ebp);
        asm("sbb eax, eax");
        _pop(__edi);
        return  ~_t76;
    }
}

L00419E70(
    intOrPtr _a4                           // _cfa_4
)
{
    __eax = _a4;
    if(__eax == 1) {
         *4434520 = 33;
        return __eax;
    } else {
        if(__eax < 2) {
            return __eax;
        } else {
            if(__eax <= 3) {
                 *4434520 = 34;
                return __eax;
            }
            return __eax;
        }
    }
}

L00419EA0()
{
    return 0;
}

L00419EB0()
{
    short _v2;                             // _cfa_fffffffe

    asm("wait");
    asm("fnstsw word [esp+0x2]");
    return _v2;
}

L00419ED0()
{
    short _v2;                             // _cfa_fffffffe

    asm("fnstsw word [esp+0x2]");
    asm("fclex");
    return _v2;
}

signed int L00419EF0(
    _unknown_ __eax,                       // r0
    _unknown_ __edx,                       // r3
    signed int _a4,                        // _cfa_4
    signed int _a8                         // _cfa_8
)
{
    signed short _v2;                      // _cfa_fffffffe

    asm("wait");
    asm("fnstcw word [esp]");
    _v2 =  !_a8 &  *__esp | _a8 & _a4;
    asm("fldcw word [esp+0x2]");
    return  *__esp;
}

L00419F30(
    _unknown_ __eax,                       // r0
    intOrPtr _a4                           // _cfa_4
)
{
    long long _v8;                         // _cfa_fffffff8

    __eax = __eax;
    __ecx = _a4;
    __esp = __esp - 12;
    if((__cl & 1) != 0) {
        __fp0 = tword [0x43c0c0];
        asm("fistp dword [esp]");
        asm("wait");
    }
    if((__cl & 8) != 0) {
        asm("wait");
        asm("fnstsw ax");
        __fp0 = tword [0x43c0c0];
        _v8 = __fp0;
        asm("wait");
        asm("wait");
        asm("fnstsw ax");
    }
    if((__cl & 16) != 0) {
        __fp0 = tword [0x43c0d0];
        _v8 = __fp0;
        asm("wait");
    }
    if((__cl & 4) != 0) {
        asm("fldz");
        asm("fld1");
        asm("fdivrp st1, st0");
        st0 = __fp0;
        asm("wait");
    }
    if((__cl & 32) != 0) {
        asm("fldpi");
        _v8 = __fp0;
        asm("wait");
    }
    __esp = __esp + 12;
    return __eax;
}

L0041A2C0(
    signed int _a4,                        // _cfa_4
    signed int _a8                         // _cfa_8
)
{
    _unknown_ __ebx;                       // r1
    signed int _t15;                       // _t15
    _unknown_ _t19;                        // _t19
    signed int _t22;                       // _t22
    signed char* _t24;                     // _t24
    signed char _t26;                      // _t26
    signed char _t27;                      // _t27

    _t22 = _a4;
    _push(_t19);
    if( *4540032 <= _t22) {
L8:
        _pop(__ebx);
         *4434520 = 9;
        return -1;
    } else {
        _t24 =  *((intOrPtr*)(((_t22 & -25) >> 3) + 4539776)) + 4 + (_t22 & 31) * 8;
        _t26 =  *_t24;
        if((_t26 & 1) == 0) {
            goto L8;
        } else {
            _t15 = _a8;
            if(_t15 != 32768) {
                if(_t15 != 16384) {
                    _pop(__ebx);
                     *4434520 = 22;
                    return -1;
                } else {
                    _t27 = _t26 | 128;
                    goto L6;
                }
            } else {
                _t27 = _t26 & 127;
L6:
                 *_t24 = _t27;
                asm("sbb eax, eax");
                _pop(__ebx);
                return (_t15 & 16384) + 16384;
            }
        }
    }
}

L0041A340(
    _unknown_ __eax,                       // r0
    _unknown_ __ecx,                       // r2
    char _a4                               // _cfa_4
)
{
    _unknown_ _t7;                         // _t7
    _unknown_ _t8;                         // _t8
    intOrPtr _t9;                          // _t9
    char* _t11;                            // _t11

    _t7 = __eax;
    _push(__ecx);
    _t11 =  &_a4;
    if(__eax >= 4096) {
        do {
            _t11 = _t11 - 4096;
            _t7 = _t7 - 4096;
        } while(_t7 >= 4096);
    }
    _t8 = __esp;
    __esp = _t11 - _t7;
    _t9 =  *((intOrPtr*)(_t8 + 4));
    _push(_t9);
    return _t9;
}

L00456B20()
{
    intOrPtr _t65;                         // _t65
    signed int _t85;                       // _t85
    signed int _t86;                       // _t86
    signed int _t87;                       // _t87
    signed int _t92;                       // _t92
    signed int _t93;                       // _t93
    signed int _t94;                       // _t94
    signed int _t96;                       // _t96
    signed int _t109;                      // _t109
    signed int _t119;                      // _t119
    intOrPtr _t120;                        // _t120
    intOrPtr _t121;                        // _t121
    intOrPtr _t122;                        // _t122
    intOrPtr _t123;                        // _t123
    intOrPtr _t124;                        // _t124
    signed int _t131;                      // _t131
    intOrPtr _t132;                        // _t132
    intOrPtr _t133;                        // _t133
    intOrPtr _t134;                        // _t134
    intOrPtr _t135;                        // _t135
    intOrPtr _t136;                        // _t136

    __ebx = 4434196;
    _t65 =  *4434200;
    _t96 =  *4434216 - _t65;
    if (_t96 !=  *4434208 - _t65) goto 4549445;
    goto 4549451;
    __esi = 0 / _t96 >> 1;
    _t109 = (( *((intOrPtr*)(0x43a924)) -  *4434196 +  *((intOrPtr*)(0x43a924)) -  *4434196) * __esi >> 32) -  *((intOrPtr*)(0x43a91c)) -  *4434196;
    if (_t109 - -3 < 0) goto 4549490;
    if (_t109 - 3 > 0) goto 4549490;
     *4434272 = (_t109 >> 2 | 1) << 2;
    _t100 =  *((intOrPtr*)(0x43a92c));
     *4434340 = ( *((intOrPtr*)(0x43a940)) -  *((intOrPtr*)(0x43a930)) +  *((intOrPtr*)(0x43a940)) -  *((intOrPtr*)(0x43a930))) * __esi >> 32;
    _t85 = ((( *((intOrPtr*)(0x43a93c)) -  *((intOrPtr*)(0x43a92c)) +  *((intOrPtr*)(0x43a93c)) -  *((intOrPtr*)(0x43a92c))) * __esi >> 32) -  *((intOrPtr*)(0x43a934)) + _t100 << 16) /  *4434272;
     *4434256 = _t85;
    _t86 =  ~_t85;
    _t87 = _t86 >> 3;
    _t119 = _t87;
     *4434280 = _t119;
    _t120 = _t119 + _t87;
     *4434284 = _t120;
    _t121 = _t120 + _t87;
     *4434288 = _t121;
    _t122 = _t121 + _t87;
     *4434292 = _t122;
    _t123 = _t122 + _t87;
     *4434296 = _t123;
    _t124 = _t123 + _t87;
     *4434300 = _t124;
     *4434304 = _t124 + _t87;
    _t92 = ( *4434340 -  *((intOrPtr*)(0x43a938)) +  *((intOrPtr*)(0x43a930)) << 16) /  *4434272;
     *4434260 = _t92;
    _t93 =  ~_t92;
    asm("ror ecx, 0x10");
     *4434244 = _t86;
     *4434248 = _t93 >> 8;
    _t94 = _t93 >> 3;
    _t131 = _t94;
     *4434312 = _t131;
    _t132 = _t131 + _t94;
     *4434316 = _t132;
    _t133 = _t132 + _t94;
     *4434320 = _t133;
    _t134 = _t133 + _t94;
     *4434324 = _t134;
    _t135 = _t134 + _t94;
     *4434328 = _t135;
    _t136 = _t135 + _t94;
     *4434332 = _t136;
     *4434336 = _t136 + _t94;
    return;
    asm("xchg ebx, ebx");
    asm("xchg ebx, ebx");
    asm("xchg ebx, ebx");
    asm("xchg ebx, ebx");
    asm("xchg ebx, ebx");
    asm("xchg ebx, ebx");
    _push(__ebp);
    __edx =  *(__esi + 4);
    __edx =  *(__esi + 4) >> 8;
     *4434196 = __edx;
     *(__esi + 12) =  *(__esi + 12) >> 8;
    __eax = ( *(__esi + 12) >> 8) - __edx;
     *0x0043A918 = __eax;
    if (__eax == 0) goto 4549801;
    4551184();
    __eax =  *4434420;
    __edx =  *4434440;
    __esi =  *4434416;
    __ebx = 0x43a91c;
    4550496();
    _pop(__ebp);
    return;
    asm("xchg ebx, ebx");
    asm("xchg ebx, ebx");
    _push(__ebp);
    __edx =  *(__esi + 4);
    __edx =  *(__esi + 4) >> 8;
     *4434196 = __edx;
     *(__esi + 12) =  *(__esi + 12) >> 8;
    __eax = ( *(__esi + 12) >> 8) - __edx;
     *0x0043A918 = __eax;
    if (__eax == 0) goto 4549854;
    4551744();
    __edx =  *4434440;
    __ebx =  &(__ebx[2]);
    4550384();
    _pop(__ebp);
    return;
    _push(__ebp);
    __eax =  *(__esi + 12);
    if ( *4312548 -  *(__esi + 12) < 0) goto 4549887;
     *0x0043A918 = 0;
    __eax =  *4312516;
     *4434196 =  *4312516;
    goto 4550138;
    __eax =  *(__esi + 4);
    if ( *4312556 -  *(__esi + 4) > 0) goto 4549917;
     *0x0043A918 = 0;
    __eax =  *4312524;
     *4434196 =  *4312524;
    goto 4550138;
    4550576();
    4434196 = 0x43a91c;
     *4434436 = 0x43a91c;
    _push(4434196);
    __edx =  *(__esi + 4);
    __edx =  *(__esi + 4) >> 8;
     *4434196 = __edx;
     *(__esi + 12) =  *(__esi + 12) >> 8;
    __eax = ( *(__esi + 12) >> 8) - __edx;
     *0x0043A918 = __eax;
    if (__eax == 0) goto 4549997;
    _push(__esi);
    4551184();
    __eax =  *4434420;
    __edx =  *4434440;
    __esi =  *4434416;
    __ebx =  &(__ebx[2]);
    4550496();
    _pop(__esi);
     *4434436 = __ebx;
    _pop(__ebx);
    if ( *4434452 != 1) goto 4550138;
    __eax =  *(__esi + 8);
    __edx =  *(__esi + 12);
     *__esi =  *(__esi + 8);
     *(__esi + 4) =  *(__esi + 12);
    __eax =  *(__esi + 24);
    __edx =  *(__esi + 28);
     *(__esi + 16) =  *(__esi + 24);
     *(__esi + 20) =  *(__esi + 28);
    __eax =  *4434456;
    __edx =  *4434460;
     *(__esi + 8) =  *4434456;
     *(__esi + 12) =  *4434460;
    __eax =  *4434464;
    __edx =  *4434468;
     *(__esi + 24) =  *4434464;
     *(__esi + 28) =  *4434468;
    4551115();
    __eax =  *(__esi + 12);
    __edx =  *(__esi + 4);
    __eax =  *(__esi + 12) >> 8;
    __edx =  *(__esi + 4) >> 8;
    __eax = ( *(__esi + 12) >> 8) - ( *(__esi + 4) >> 8);
     *4434472 = __eax;
    if (__eax == 0) goto 4550138;
     *0x0043A918 = __ebx[1] + __eax;
    4551184();
    __eax =  *4434420;
    __edx =  *4434440;
    __esi =  *4434416;
    __ebx =  *4434436;
    4550496();
    _pop(__ebp);
    return;
    asm("xchg ebx, ebx");
    asm("xchg ebx, ebx");
}

L00456C70()
{
    signed int _t34;                       // _t34
    signed int* _t36;                      // _t36
    signed int _t39;                       // _t39
    _unknown_ _t41;                        // _t41

    _t39 =  *(_t41 + 4) >> 8;
     *_t36 = _t39;
    _t34 = ( *(_t41 + 12) >> 8) - _t39;
    _t36[1] = _t34;
    if (_t34 == 0) goto 4549801;
    4551184();
    4550496();
    _pop(__ebp);
    return;
    asm("xchg ebx, ebx");
    asm("xchg ebx, ebx");
    _push(__ebp);
    __edx = __esi[1];
    __edx = __esi[1] >> 8;
     *__ebx = __edx;
    __esi[3] = __esi[3] >> 8;
    __eax = (__esi[3] >> 8) - __edx;
    __ebx[1] = __eax;
    if (__eax == 0) goto 4549854;
    4551744();
    __edx =  *4434440;
    __ebx =  &(__ebx[2]);
    4550384();
    return;
    _push(__ebp);
    __eax = __esi[3];
    if ( *4312548 - __esi[3] < 0) goto 4549887;
    __ebx[1] = 0;
    __eax =  *4312516;
     *__ebx =  *4312516;
    goto 4550138;
    __eax = __esi[1];
    if ( *4312556 - __esi[1] > 0) goto 4549917;
    __ebx[1] = 0;
    __eax =  *4312524;
     *__ebx =  *4312524;
    goto 4550138;
    4550576();
    __ebx =  &(__ebx[2]);
     *4434436 =  &(__ebx[2]);
    _push(__ebx);
    __edx = __esi[1];
    __edx = __esi[1] >> 8;
     *__ebx = __edx;
    __esi[3] = __esi[3] >> 8;
    __eax = (__esi[3] >> 8) - __edx;
    __ebx[1] = __eax;
    if (__eax == 0) goto 4549997;
    _push(__esi);
    4551184();
    __eax =  *4434420;
    __edx =  *4434440;
    __esi =  *4434416;
    __ebx =  &(__ebx[2]);
    4550496();
    _pop(__esi);
     *4434436 = __ebx;
    _pop(__ebx);
    if ( *4434452 != 1) goto 4550138;
    __eax = __esi[2];
    __edx = __esi[3];
     *__esi = __esi[2];
    __esi[1] = __esi[3];
    __eax = __esi[6];
    __edx = __esi[7];
    __esi[4] = __esi[6];
    __esi[5] = __esi[7];
    __eax =  *4434456;
    __edx =  *4434460;
    __esi[2] =  *4434456;
    __esi[3] =  *4434460;
    __eax =  *4434464;
    __edx =  *4434468;
    __esi[6] =  *4434464;
    __esi[7] =  *4434468;
    4551115();
    __eax = __esi[3];
    __edx = __esi[1];
    __eax = __esi[3] >> 8;
    __edx = __esi[1] >> 8;
    __eax = (__esi[3] >> 8) - (__esi[1] >> 8);
     *4434472 = __eax;
    if (__eax == 0) goto 4550138;
    __ebx[1] = __ebx[1] + __eax;
    4551184();
    __eax =  *4434420;
    __edx =  *4434440;
    __esi =  *4434416;
    __ebx =  *4434436;
    4550496();
    _pop(__ebp);
    return;
    asm("xchg ebx, ebx");
    asm("xchg ebx, ebx");
}

L00456CB0()
{
    signed int _t30;                       // _t30
    signed int* _t31;                      // _t31
    signed int _t34;                       // _t34

    _t34 = __esi[1] >> 8;
     *_t31 = _t34;
    _t30 = (__esi[3] >> 8) - _t34;
    _t31[1] = _t30;
    if (_t30 == 0) goto 4549854;
    4551744();
    4550384();
    return;
    _push(__ebp);
    __eax = __esi[3];
    if ( *4312548 - __esi[3] < 0) goto 4549887;
    __ebx[1] = 0;
    __eax =  *4312516;
     *__ebx =  *4312516;
    goto 4550138;
    __eax = __esi[1];
    if ( *4312556 - __esi[1] > 0) goto 4549917;
    __ebx[1] = 0;
    __eax =  *4312524;
     *__ebx =  *4312524;
    goto 4550138;
    4550576();
    __ebx =  &(__ebx[2]);
     *4434436 =  &(__ebx[2]);
    _push(__ebx);
    __edx = __esi[1];
    __edx = __esi[1] >> 8;
     *__ebx = __edx;
    __esi[3] = __esi[3] >> 8;
    __eax = (__esi[3] >> 8) - __edx;
    __ebx[1] = __eax;
    if (__eax == 0) goto 4549997;
    _push(__esi);
    4551184();
    __eax =  *4434420;
    __edx =  *4434440;
    __esi =  *4434416;
    __ebx =  &(__ebx[2]);
    4550496();
    _pop(__esi);
     *4434436 = __ebx;
    _pop(__ebx);
    if ( *4434452 != 1) goto 4550138;
    __eax = __esi[2];
    __edx = __esi[3];
     *__esi = __esi[2];
    __esi[1] = __esi[3];
    __eax = __esi[6];
    __edx = __esi[7];
    __esi[4] = __esi[6];
    __esi[5] = __esi[7];
    __eax =  *4434456;
    __edx =  *4434460;
    __esi[2] =  *4434456;
    __esi[3] =  *4434460;
    __eax =  *4434464;
    __edx =  *4434468;
    __esi[6] =  *4434464;
    __esi[7] =  *4434468;
    4551115();
    __eax = __esi[3];
    __edx = __esi[1];
    __eax = __esi[3] >> 8;
    __edx = __esi[1] >> 8;
    __eax = (__esi[3] >> 8) - (__esi[1] >> 8);
     *4434472 = __eax;
    if (__eax == 0) goto 4550138;
    __ebx[1] = __ebx[1] + __eax;
    4551184();
    __eax =  *4434420;
    __edx =  *4434440;
    __esi =  *4434416;
    __ebx =  *4434436;
    4550496();
    _pop(__ebp);
    return;
    asm("xchg ebx, ebx");
    asm("xchg ebx, ebx");
}

L00456CE0()
{
    signed int _t32;                       // _t32
    intOrPtr _t40;                         // _t40
    signed int* _t42;                      // _t42
    signed int* _t43;                      // _t43
    signed int _t48;                       // _t48
    _unknown_ _t57;                        // _t57
    intOrPtr* _t58;                        // _t58

    if ( *4312548 -  *(_t57 + 12) < 0) goto 4549887;
    _t42[1] = 0;
     *_t42 =  *4312516;
    goto 4550138;
    if ( *4312556 -  *(_t57 + 4) > 0) goto 4549917;
    _t42[1] = 0;
     *_t42 =  *4312524;
    goto 4550138;
    4550576();
     *4434436 =  &(_t42[2]);
    _push(_t42);
    _t48 =  *(_t57 + 4) >> 8;
     *_t42 = _t48;
    _t32 = ( *(_t57 + 12) >> 8) - _t48;
    _t42[1] = _t32;
    if (_t32 == 0) goto 4549997;
    _push(_t57);
    4551184();
    _t58 =  *4434416;
    _t43 =  &(_t42[2]);
    4550496();
    _pop(__esi);
     *4434436 = _t43;
    _pop(__ebx);
    if ( *4434452 != 1) goto 4550138;
     *_t58 = _t58[2];
     *(_t58 + 4) =  *(_t58 + 12);
    _t58[4] = _t58[6];
    _t58[5] = _t58[7];
    _t58[2] =  *4434456;
     *(_t58 + 12) =  *4434460;
    _t58[6] =  *4434464;
    _t58[7] =  *4434468;
    4551115();
    _t40 = ( *(_t58 + 12) >> 8) - ( *(_t58 + 4) >> 8);
     *4434472 = _t40;
    if (_t40 == 0) goto 4550138;
    _t43[1] = _t43[1] + _t40;
    4551184();
    4550496();
    _pop(__ebp);
    return;
    asm("xchg ebx, ebx");
    asm("xchg ebx, ebx");
}

L00456E00()
{

}

L00456E00()
{

}

// Statistics:
//    6433 Register nodes
//    5734 Temporaries nodes
//     617 Casts
//    2086 Statements
//     662 Labels
//     564 Gotos
//     196 Blocks
//   49236 Nodes
//     498 Assembly nodes
//     449 Unknown Types


Total time: 12 seconds.
