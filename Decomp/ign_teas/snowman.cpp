
int32_t g452e20;

void* g453034;

void** g453030;

void* g453038;

void* g45303c;

int32_t fun_401000(int16_t* a1, void** a2) {
    uint32_t edx3;
    int32_t ebx4;
    int16_t* ecx5;
    int16_t* edi6;
    int16_t* esi7;

    edx3 = 0;
    ebx4 = 0x452a20;
    ecx5 = a1;
    edi6 = ecx5;
    esi7 = reinterpret_cast<int16_t*>(0x452e30);
    do {
        ebx4 = ebx4 + 4;
        *esi7 = *edi6;
        ++edi6;
        ++esi7;
        ++edx3;
        *reinterpret_cast<int32_t*>(ebx4 - 4) = static_cast<int32_t>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx5) + edx3 + 0x1ff)) << 4;
    } while (reinterpret_cast<uint32_t>(esi7) < 0x453030);
    g452e20 = 0x80;
    g453034 = reinterpret_cast<void*>(ecx5 + 0x180);
    g453030 = reinterpret_cast<void**>(0);
    g453038 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(a2) * 2 + 0xfffffa00);
    g45303c = reinterpret_cast<void*>(0);
    return 1;
}

int32_t DirectInputCreateA = 0x554d8;

int32_t fun_40a498() {
    goto DirectInputCreateA;
}

void fun_417239(signed char cl, int32_t a2) {
    int32_t ebp3;

    *reinterpret_cast<signed char*>(ebp3 - 0x90) = 1;
    return;
}

int32_t g43bfa4 = 0;

int32_t GetStringTypeA = 0x557d0;

int32_t GetStringTypeW = 0x557e2;

void** g43bde8 = reinterpret_cast<void**>(0);

int32_t MultiByteToWideChar = 0x55652;

void** fun_4117e0(void** a1, int32_t a2);

void fun_411250(void** a1);

int32_t fun_4183d0(int32_t a1, void* a2, int32_t a3, void* a4, void** a5, int32_t a6) {
    int32_t eax7;
    int32_t esi8;
    int32_t eax9;
    int32_t eax10;
    int32_t edi11;
    void** esi12;
    void** ebx13;
    int32_t eax14;
    void** eax15;
    int32_t edi16;
    int32_t esi17;
    int32_t eax18;
    int32_t eax19;
    int32_t ebp20;

    eax7 = g43bfa4;
    if (eax7) {
        esi8 = GetStringTypeA;
    } else {
        esi8 = GetStringTypeA;
        eax9 = reinterpret_cast<int32_t>(esi8(0));
        if (!eax9) {
            eax10 = reinterpret_cast<int32_t>(GetStringTypeW());
            if (!eax10) {
                goto 1;
            } else {
                eax7 = 1;
            }
        } else {
            eax7 = 2;
        }
    }
    g43bfa4 = eax7;
    if (eax7 != 2) {
        g43bfa4 = eax7;
        if (eax7 == 1) {
            edi11 = 0;
            esi12 = reinterpret_cast<void**>(0);
            ebx13 = a5;
            if (!ebx13) {
                ebx13 = g43bde8;
            }
            eax14 = reinterpret_cast<int32_t>(MultiByteToWideChar());
            if (eax14 && ((eax15 = fun_4117e0(2, eax14), esi12 = eax15, !!esi12) && (eax18 = reinterpret_cast<int32_t>(MultiByteToWideChar(ebx13, 1, edi16, esi17, esi12, eax14)), !!eax18))) {
                eax19 = reinterpret_cast<int32_t>(GetStringTypeW(ebx13, esi12, eax18, a3, ebx13, 1, edi16, esi17, esi12, eax14));
                edi11 = eax19;
            }
            fun_411250(esi12);
            eax7 = edi11;
        }
        return eax7;
    } else {
        if (!a6) {
        }
        esi8();
        goto ebp20;
    }
}

int32_t fun_404500(void* a1);

void** fun_4044d0(void* a1);

void** fun_403630(void* a1, void** a2);

struct s0 {
    signed char f0;
    signed char f1;
};

void** fun_4114b0(void* a1, struct s0* a2);

struct s1 {
    void* f0;
    void** f4;
};

int32_t fun_411460(void** a1, struct s1* a2);

void** fun_411310(void** a1, uint32_t a2, void** a3, void** a4);

int32_t fun_4112a0(void** a1);

int32_t g41c90c = 0;

void** fun_4043a0(void* a1) {
    int32_t eax2;
    void** eax3;
    void** eax4;
    void** eax5;
    void** eax6;

    eax2 = fun_404500(a1);
    if (eax2 == 1) {
        eax3 = fun_4044d0(a1);
        if (eax3) {
            eax4 = fun_403630(0, eax3);
            if (eax4) {
                eax5 = fun_4114b0(a1, "rb");
                if (eax5) {
                    fun_411460(eax5, reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4 - 4 - 4 - 4 - 4 + 4 + 4 - 4 - 4 + 4 + 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 + 4 + 8 + 12);
                    eax6 = fun_411310(eax4, 1, eax3, eax5);
                    if (eax3 == eax6) {
                        fun_4112a0(eax5);
                        return eax4;
                    } else {
                        g41c90c = 0x7da;
                        return 0;
                    }
                } else {
                    g41c90c = 0x7d0;
                    return 0;
                }
            } else {
                g41c90c = 0x802;
                return 0;
            }
        } else {
            g41c90c = 0x7f8;
            return 0;
        }
    } else {
        g41c90c = 0x7ee;
        return 0;
    }
}

struct s2 {
    signed char[8] pad8;
    int32_t f8;
    int32_t fc;
    int32_t f10;
    signed char[4] pad24;
    int32_t f18;
    signed char[16] pad44;
    int32_t f2c;
    int32_t f30;
    signed char[24] pad76;
    int32_t f4c;
    int32_t f50;
};

struct s2** g41c848 = reinterpret_cast<struct s2**>(0);

int32_t g453094;

struct s3 {
    signed char[8] pad8;
    int32_t f8;
    int32_t fc;
    int32_t f10;
    signed char[24] pad44;
    int32_t f2c;
    int32_t f30;
    signed char[4] pad56;
    int32_t f38;
    signed char[16] pad76;
    int32_t f4c;
    int32_t f50;
};

struct s3** g4530c0;

struct s2** g4530a0;

int32_t g43c7d8;

int32_t fun_409476(int32_t a1, int32_t a2, int32_t a3);

int32_t g41c7ac = 0;

struct s2** g453070;

uint32_t g43c7f0;

uint32_t g453080;

int32_t g453088;

void* g453084;

uint32_t g453090;

void* g45308c;

void* g43c7f4;

int32_t g453098;

void* g43c7c4;

void* g43c7e0;

struct s2** g41c844 = reinterpret_cast<struct s2**>(0);

int32_t fun_403d20() {
    int1_t zf1;
    int32_t eax2;
    uint32_t v3;
    int32_t eax4;
    struct s2** ecx5;
    struct s2* eax6;
    int32_t eax7;
    void* esp8;
    struct s2** ecx9;
    void* v10;
    struct s2** v11;
    struct s2* eax12;
    int32_t eax13;
    void* esp14;
    int32_t ebx15;
    int32_t ecx16;
    uint32_t v17;
    int32_t eax18;
    uint32_t edx19;
    void* esi20;
    struct s3** edx21;
    void* v22;
    struct s3* eax23;
    int32_t eax24;
    uint32_t edx25;
    struct s3** ecx26;
    struct s3* eax27;
    int32_t eax28;
    int32_t eax29;
    void* eax30;
    uint32_t esi31;
    void* eax32;
    void* eax33;
    int1_t less34;
    struct s3** eax35;
    struct s3* ebx36;
    int32_t v37;
    int32_t eax38;
    struct s2** ecx39;
    struct s2* eax40;
    int32_t eax41;
    int32_t v42;
    struct s2** ecx43;
    void* v44;
    struct s2** v45;
    struct s2* eax46;
    int32_t eax47;
    int32_t edi48;
    void* esi49;
    uint32_t ebp50;
    void* v51;
    int32_t eax52;
    struct s2** edx53;
    uint32_t ebx54;
    struct s3** ecx55;
    void* ebx56;
    void* v57;
    struct s3** v58;
    struct s3* eax59;
    int32_t eax60;
    int32_t ecx61;
    int32_t eax62;
    int16_t cx63;
    void* esp64;
    struct s2* eax65;
    int32_t eax66;
    void* v67;
    struct s2** edx68;
    struct s2** v69;
    struct s2* eax70;
    int32_t eax71;
    int32_t eax72;
    int32_t ecx73;
    void* eax74;
    struct s2** edx75;
    void* v76;
    struct s2* eax77;
    int32_t eax78;
    void* eax79;
    uint32_t ecx80;
    void* eax81;
    int1_t less82;
    struct s3** eax83;
    struct s3* ebx84;
    struct s2** ecx85;
    struct s2* eax86;
    int32_t v87;
    int32_t eax88;
    void* eax89;

    zf1 = reinterpret_cast<int1_t>(g41c848 == 1);
    if (zf1) 
        goto addr_40430e_2;
    g453094 = 4;
    g4530c0 = reinterpret_cast<struct s3**>(0);
    g4530a0 = reinterpret_cast<struct s2**>(0);
    g43c7d8 = 0;
    g41c848 = reinterpret_cast<struct s2**>(0);
    eax2 = fun_409476(0, 0x453070, 0);
    if (eax2) 
        goto addr_40430e_2;
    v3 = 4;
    eax4 = g41c7ac;
    ecx5 = g453070;
    eax6 = *ecx5;
    eax7 = reinterpret_cast<int32_t>(eax6->f18(ecx5, eax4));
    esp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0xe8 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4);
    if (!eax7) {
        g43c7d8 = 1;
        ecx9 = g453070;
        v10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp8) + 40);
        v11 = ecx9;
        eax12 = *ecx9;
        eax13 = reinterpret_cast<int32_t>(eax12->fc(v11, v10, 0x4530c0, 0, ecx5, eax4));
        esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp8) - 4 - 4 - 4 - 4 - 4 + 4);
        if (eax13) {
            addr_40430e_2:
            return 0;
        } else {
            ebx15 = 0;
            do {
                ecx16 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp14) + ebx15 * 4 + 84);
                *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v17) + 2) = 1;
                __asm__("cdq ");
                eax18 = reinterpret_cast<int32_t>(1 + (edx19 & 7)) >> 3;
                *reinterpret_cast<int16_t*>(&v17) = *reinterpret_cast<int16_t*>(&eax18);
                esi20 = reinterpret_cast<void*>(ecx16 / reinterpret_cast<uint32_t>(100));
                edx21 = g4530c0;
                g43c7f0 = v17 & 0xffff;
                v22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) + 16);
                eax23 = *edx21;
                eax24 = reinterpret_cast<int32_t>(eax23->f38(edx21, v22, v11, v10, 0x4530c0, 0, 0x10001));
                esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) - 4 - 4 - 4 + 4);
                edx25 = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp14) + ebx15 * 4 + 84);
                g453080 = edx25;
                g453088 = 0;
                g453084 = reinterpret_cast<void*>(1);
                __asm__("cdq ");
                edx19 = edx25 & 7;
                g453090 = (reinterpret_cast<int32_t>(1 + edx19) >> 3) - 1;
                if (!eax24) {
                    ebx15 = 6;
                }
                ++ebx15;
            } while (ebx15 < 6);
            if (eax24) 
                goto addr_40430e_2;
            ecx26 = g4530c0;
            eax27 = *ecx26;
            eax28 = reinterpret_cast<int32_t>(eax27->fc(ecx26, reinterpret_cast<int32_t>(esp14) + 0x84, edx21, v22, v11, v10, 0x4530c0, 0, 0x10001));
            if (eax28) 
                goto addr_40430e_2;
        }
        g45308c = esi20;
        g43c7f4 = reinterpret_cast<void*>(20);
        eax29 = g453098;
        eax30 = reinterpret_cast<void*>(eax29 * reinterpret_cast<uint32_t>(esi20) * g43c7f0);
        esi31 = reinterpret_cast<uint32_t>(esi20) * g43c7f0;
        g43c7c4 = eax30;
        eax32 = g43c7f4;
        eax33 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax32) - esi31);
        less34 = reinterpret_cast<int32_t>(eax33) < reinterpret_cast<int32_t>(g43c7c4);
        if (less34) {
            g43c7c4 = eax33;
        }
        eax35 = g4530c0;
        g43c7e0 = reinterpret_cast<void*>(0);
        ebx36 = *eax35;
        ebx36->f30();
        g41c844 = reinterpret_cast<struct s2**>(1);
        g41c848 = reinterpret_cast<struct s2**>(1);
        goto v37;
    }
    eax38 = g41c7ac;
    ecx39 = g453070;
    eax40 = *ecx39;
    eax41 = reinterpret_cast<int32_t>(eax40->f18(ecx39, eax38, 3, ecx5, eax4));
    esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp8) - 4 - 4 - 4 - 4 + 4);
    if (eax41) 
        goto addr_40430e_2;
    v42 = 0x4530c0;
    ecx43 = g453070;
    v44 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) + 40);
    v45 = ecx43;
    eax46 = *ecx43;
    eax47 = reinterpret_cast<int32_t>(eax46->fc(v45, v44));
    esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) - 4 - 4 - 4 - 4 - 4 + 4);
    if (eax47) 
        goto addr_40430e_2;
    edi48 = 0;
    do {
        esi49 = *reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp14) + edi48 * 4 + 0x6c);
        ebp50 = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp14) + edi48 * 4 + 84);
        *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v51) + 2) = 1;
        *reinterpret_cast<int16_t*>(&v51) = 1;
        __asm__("cdq ");
        eax52 = reinterpret_cast<int32_t>(reinterpret_cast<int32_t>(esi49) + (reinterpret_cast<uint32_t>(edx53) & 7)) >> 3;
        *reinterpret_cast<int16_t*>(&v3) = *reinterpret_cast<int16_t*>(&eax52);
        ebx54 = v3 & 0xffff;
        ecx55 = g4530c0;
        g43c7f0 = ebx54;
        ebx56 = reinterpret_cast<void*>(ebx54 * ebp50);
        v57 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) + 16);
        v58 = ecx55;
        eax59 = *ecx55;
        eax60 = reinterpret_cast<int32_t>(eax59->f38(v58, v57, v45, v44));
        esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) - 4 - 4 - 4 + 4);
        ecx61 = eax60;
        g453080 = ebp50;
        eax62 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp14) + edi48 * 4 + 60);
        g453084 = esi49;
        g453088 = eax62 - 1;
        __asm__("cdq ");
        edx53 = reinterpret_cast<struct s2**>(ebp50 % 100 & 7);
        g453090 = (reinterpret_cast<int32_t>(reinterpret_cast<int32_t>(esi49) + reinterpret_cast<uint32_t>(edx53)) >> 3) - 1;
        if (!ecx61) {
            cx63 = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp14) + edi48 * 4 + 60);
            esp64 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) - 4 - 4);
            *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v42) + 2) = cx63;
            edx53 = g453070;
            v51 = ebx56;
            g43c7f4 = ebx56;
            v3 = 0xe8;
            *reinterpret_cast<int16_t*>(&v42) = 1;
            eax65 = *edx53;
            eax66 = reinterpret_cast<int32_t>(eax65->fc(edx53, reinterpret_cast<int32_t>(esp64) + 48, 0x4530a0, 0, v58, v57, v45, v44));
            esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp64) - 4 - 4 - 4 + 4);
            ecx61 = eax66;
            if (ecx61) 
                goto addr_40430e_2;
            edi48 = 6;
        }
        ++edi48;
    } while (edi48 < 6);
    if (ecx61) 
        goto addr_40430e_2;
    v67 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) + 0x84);
    edx68 = g4530a0;
    v69 = edx68;
    g45308c = ebx56;
    eax70 = *edx68;
    eax71 = reinterpret_cast<int32_t>(eax70->fc(v69, v67, v58, v57, v45, v44));
    esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) - 4 - 4 - 4 + 4);
    if (eax71) 
        goto addr_40430e_2;
    g43c7f4 = reinterpret_cast<void*>(20);
    eax72 = g453098;
    ecx73 = 24;
    eax74 = reinterpret_cast<void*>((eax72 + 27) * reinterpret_cast<uint32_t>(v51) * g43c7f0);
    g43c7c4 = eax74;
    while (ecx73) {
        --ecx73;
    }
    edx75 = g453070;
    v76 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) + 0x98);
    eax77 = *edx75;
    eax78 = reinterpret_cast<int32_t>(eax77->f10(edx75, v76, v69, v67, v58, v57, v45, v44));
    if (eax78) 
        goto addr_4040c5_28;
    if (!0) 
        goto addr_4040ac_30;
    addr_4040c5_28:
    eax79 = g43c7f4;
    ecx80 = v42 * g43c7f0;
    eax81 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax79) - ecx80);
    less82 = reinterpret_cast<int32_t>(eax81) < reinterpret_cast<int32_t>(g43c7c4);
    if (less82) {
        g43c7c4 = eax81;
    }
    eax83 = g4530c0;
    g43c7e0 = reinterpret_cast<void*>(0);
    ebx84 = *eax83;
    ebx84->f30(eax83, 0, 0, 1, edx75, v76, v69, v67, v58, v57, v45, v44);
    ecx85 = g4530a0;
    eax86 = *ecx85;
    eax86->f30();
    g41c844 = reinterpret_cast<struct s2**>(1);
    g41c848 = reinterpret_cast<struct s2**>(1);
    goto v87;
    addr_4040ac_30:
    eax88 = g453098;
    eax89 = reinterpret_cast<void*>((eax88 + 2) * v42 * g43c7f0);
    g43c7c4 = eax89;
    goto addr_4040c5_28;
}

struct s4 {
    signed char[64] pad64;
    void*** f40;
};

void** fun_4111a0(void** a1);

struct s5 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** fun_403630(void* a1, void** a2) {
    struct s4* ecx3;
    struct s4* v4;
    void**** ecx5;
    void*** edi6;
    int1_t zf7;
    void*** eax8;
    void** ebx9;
    void*** v10;
    int1_t zf11;
    void*** edx12;
    void** esi13;
    void** ebp14;
    void** eax15;
    int1_t zf16;
    void** eax17;
    void** esi18;
    int32_t ecx19;
    void** edi20;
    void** eax21;
    void** ebx22;
    int32_t eax23;
    void** esi24;
    void** ecx25;
    void** eax26;
    void** eax27;
    void** esi28;
    void*** ecx29;
    int32_t eax30;
    void** eax31;
    void** eax32;
    struct s5* ecx33;

    ecx3 = *reinterpret_cast<struct s4**>(reinterpret_cast<uint32_t>(a1) * 4 + 0x4530d0);
    v4 = ecx3;
    ecx5 = &ecx3->f40;
    edi6 = reinterpret_cast<void***>(0);
    if (!*ecx5) {
        addr_40369c_2:
        zf7 = reinterpret_cast<int1_t>(edi6 == 64);
    } else {
        do {
            zf7 = reinterpret_cast<int1_t>(edi6 == 64);
            if (reinterpret_cast<int32_t>(edi6) >= 64) 
                break;
            eax8 = *ecx5;
            ebx9 = reinterpret_cast<void**>(0);
            v10 = eax8;
            if (!*eax8) {
                addr_40368e_5:
                zf11 = reinterpret_cast<int1_t>(ebx9 == 64);
            } else {
                edx12 = eax8;
                do {
                    zf11 = reinterpret_cast<int1_t>(ebx9 == 64);
                    if (reinterpret_cast<signed char>(ebx9) >= reinterpret_cast<signed char>(64)) 
                        break;
                    esi13 = *edx12;
                    ebp14 = reinterpret_cast<void**>(0);
                    eax15 = esi13 + 4;
                    if (!*reinterpret_cast<void***>(eax15)) {
                        addr_403680_9:
                        zf16 = reinterpret_cast<int1_t>(ebp14 == 16);
                    } else {
                        do {
                            zf16 = reinterpret_cast<int1_t>(ebp14 == 16);
                            if (reinterpret_cast<signed char>(ebp14) >= reinterpret_cast<signed char>(16)) 
                                break;
                            eax15 = eax15 + 8;
                            ++ebp14;
                        } while (*reinterpret_cast<void***>(eax15));
                        goto addr_403680_9;
                    }
                    if (!zf16) 
                        goto addr_4036af_13;
                    edx12 = edx12 + 4;
                    ++ebx9;
                } while (*edx12);
                goto addr_40368e_5;
            }
            if (!zf11) 
                goto addr_4036da_16;
            ++ecx5;
            ++edi6;
        } while (*ecx5);
        goto addr_40369c_2;
    }
    if (zf7) {
        return 0;
    }
    eax17 = fun_4111a0(0x100);
    esi18 = eax17;
    if (!esi18) {
        return 0;
    }
    ecx19 = 64;
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(v4) + reinterpret_cast<int32_t>(edi6) * 4 + 64) = esi18;
    edi20 = esi18;
    while (ecx19) {
        --ecx19;
        *reinterpret_cast<void***>(edi20) = reinterpret_cast<void**>(0);
        edi20 = edi20 + 4;
        esi18 = esi18 + 4;
    }
    eax21 = fun_4111a0(0x80);
    ebx22 = eax21;
    if (!ebx22) 
        goto addr_40377d_26;
    eax23 = 16;
    *reinterpret_cast<void***>(esi18) = ebx22;
    esi24 = ebx22 + 4;
    ecx25 = esi24;
    do {
        *reinterpret_cast<void***>(ecx25) = reinterpret_cast<void**>(0);
        ecx25 = ecx25 + 8;
        --eax23;
    } while (eax23);
    eax26 = fun_4111a0(a2);
    if (!eax26) 
        goto addr_4037b0_30;
    *reinterpret_cast<void***>(ebx22) = eax26;
    *reinterpret_cast<void***>(esi24) = a2;
    return eax26;
    addr_4037b0_30:
    return 0;
    addr_40377d_26:
    return 0;
    addr_4036da_16:
    eax27 = fun_4111a0(0x80);
    esi28 = eax27;
    if (!esi28) {
        return 0;
    }
    ecx29 = reinterpret_cast<void***>(esi28 + 12);
    v10[reinterpret_cast<unsigned char>(ebx9) * 4] = esi28;
    eax30 = 15;
    do {
        *ecx29 = reinterpret_cast<void**>(0);
        ecx29 = ecx29 + 8;
        --eax30;
    } while (eax30);
    eax31 = fun_4111a0(a2);
    if (!eax31) 
        goto addr_403723_36;
    *reinterpret_cast<void***>(esi28) = eax31;
    *reinterpret_cast<void***>(esi28 + 4) = a2;
    return eax31;
    addr_403723_36:
    return 0;
    addr_4036af_13:
    eax32 = fun_4111a0(a2);
    if (eax32) {
        ecx33 = reinterpret_cast<struct s5*>(esi13 + reinterpret_cast<unsigned char>(ebp14) * 8);
        ecx33->f0 = eax32;
        ecx33->f4 = a2;
        return eax32;
    } else {
        return 0;
    }
}

struct s7 {
    void** f0;
    signed char f1;
};

struct s6 {
    struct s7* f0;
    struct s7* f4;
    uint32_t f8;
    uint32_t fc;
};

void* g43c7e4;

void* g43c7cc;

void* g43c7c8;

int32_t g43c7dc;

int32_t g43c7d0;

int32_t g43c7d4;

int32_t g4530b0;

int32_t g43c7e8;

int32_t g4530b4;

uint32_t g4530b8;

int32_t g43c7ec;

uint32_t g4530bc;

struct s6* fun_403910() {
    int1_t zf1;
    int1_t zf2;
    int1_t zf3;
    struct s2** eax4;
    struct s2* eax5;
    struct s2** eax6;
    struct s2* eax7;
    void* eax8;
    void* ecx9;
    void* tmp32_10;
    void* ecx11;
    void* eax12;
    void* ecx13;
    void* eax14;
    int1_t less_or_equal15;
    void* eax16;
    int1_t less17;
    void* eax18;
    int1_t less_or_equal19;
    void* eax20;
    void* edx21;
    int1_t less22;
    void* eax23;
    int1_t less_or_equal24;
    struct s2** ecx25;
    struct s2* eax26;
    int32_t eax27;
    int1_t zf28;
    int32_t eax29;
    int32_t ecx30;
    int32_t eax31;
    uint32_t ecx32;
    int32_t eax33;
    struct s2** eax34;
    struct s2* eax35;
    struct s2** ecx36;
    struct s2* eax37;
    int1_t zf38;
    struct s3** eax39;
    struct s3* eax40;
    struct s3** eax41;
    struct s3* eax42;
    void* eax43;
    void* ecx44;
    void* tmp32_45;
    void* ecx46;
    void* eax47;
    void* ecx48;
    void* eax49;
    int1_t less_or_equal50;
    void* eax51;
    int1_t less52;
    void* eax53;
    int1_t less_or_equal54;
    void* eax55;
    void* edx56;
    int1_t less57;
    void* eax58;
    int1_t less_or_equal59;
    struct s3** ecx60;
    struct s3* eax61;
    int32_t eax62;
    int1_t zf63;
    int32_t eax64;
    int32_t ecx65;
    int32_t eax66;
    uint32_t ecx67;
    int32_t eax68;
    struct s3** eax69;
    struct s3* eax70;
    struct s3** ecx71;
    struct s3* eax72;

    zf1 = reinterpret_cast<int1_t>(g41c848 == 1);
    if (zf1) {
        zf2 = g43c7d8 == 1;
        if (!zf2) {
            zf3 = g41c844 == 0;
            if (zf3) {
                eax4 = g4530a0;
                eax5 = *eax4;
                eax5->f30(eax4, 0, 0, 1);
                g41c844 = reinterpret_cast<struct s2**>(1);
            }
            eax6 = g4530a0;
            eax7 = *eax6;
            eax7->f10();
            eax8 = g43c7e4;
            ecx9 = g43c7f4;
            tmp32_10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax8) + reinterpret_cast<uint32_t>(g43c7c4));
            g43c7cc = tmp32_10;
            if (reinterpret_cast<int32_t>(tmp32_10) >= reinterpret_cast<int32_t>(ecx9)) {
                g43c7cc = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43c7cc) - reinterpret_cast<uint32_t>(ecx9));
            }
            ecx11 = g45308c;
            eax12 = g43c7cc;
            ecx13 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx11) * g43c7f0);
            eax14 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax12) + reinterpret_cast<uint32_t>(ecx13));
            g43c7c8 = eax14;
            less_or_equal15 = reinterpret_cast<int32_t>(g43c7f4) <= reinterpret_cast<int32_t>(eax14);
            if (!less_or_equal15) {
                eax16 = g43c7c8;
                less17 = reinterpret_cast<int32_t>(g43c7e0) < reinterpret_cast<int32_t>(eax16);
                if (less17 && (eax18 = g43c7e0, less_or_equal19 = reinterpret_cast<int32_t>(g43c7cc) <= reinterpret_cast<int32_t>(eax18), less_or_equal19)) {
                    goto eax6;
                }
            } else {
                eax20 = g43c7f4;
                g43c7c8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43c7c8) - reinterpret_cast<uint32_t>(eax20));
                edx21 = g43c7c8;
                less22 = reinterpret_cast<int32_t>(g43c7e0) < reinterpret_cast<int32_t>(edx21);
                if (less22 || (eax23 = g43c7e0, less_or_equal24 = reinterpret_cast<int32_t>(g43c7cc) <= reinterpret_cast<int32_t>(eax23), less_or_equal24)) {
                    goto eax6;
                }
            }
            ecx25 = g4530a0;
            eax26 = *ecx25;
            eax27 = reinterpret_cast<int32_t>(eax26->f2c());
            g43c7dc = eax27;
            if (eax27 != 0x88780096) {
                zf28 = g43c7dc == 0;
                if (zf28) {
                    eax29 = g43c7d0;
                    ecx30 = g43c7d4;
                    g4530b0 = eax29;
                    eax31 = g43c7e8;
                    g4530b4 = ecx30;
                    ecx32 = g43c7f0;
                    g4530b8 = eax31 / ecx32;
                    eax33 = g43c7ec;
                    g4530bc = eax33 / ecx32;
                    goto ecx25;
                } else {
                    goto ecx25;
                }
            } else {
                eax34 = g4530a0;
                eax35 = *eax34;
                eax35->f50(eax34);
                ecx36 = g4530a0;
                eax37 = *ecx36;
                eax37->f30();
                goto ecx36;
            }
        } else {
            zf38 = g41c844 == 0;
            if (zf38) {
                eax39 = g4530c0;
                eax40 = *eax39;
                eax40->f30(eax39, 0, 0, 1);
                g41c844 = reinterpret_cast<struct s2**>(1);
            }
            eax41 = g4530c0;
            eax42 = *eax41;
            eax42->f10();
            eax43 = g43c7e4;
            ecx44 = g43c7f4;
            tmp32_45 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax43) + reinterpret_cast<uint32_t>(g43c7c4));
            g43c7cc = tmp32_45;
            if (reinterpret_cast<int32_t>(tmp32_45) >= reinterpret_cast<int32_t>(ecx44)) {
                g43c7cc = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43c7cc) - reinterpret_cast<uint32_t>(ecx44));
            }
            ecx46 = g45308c;
            eax47 = g43c7cc;
            ecx48 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx46) * g43c7f0);
            eax49 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax47) + reinterpret_cast<uint32_t>(ecx48));
            g43c7c8 = eax49;
            less_or_equal50 = reinterpret_cast<int32_t>(g43c7f4) <= reinterpret_cast<int32_t>(eax49);
            if (!less_or_equal50) {
                eax51 = g43c7c8;
                less52 = reinterpret_cast<int32_t>(g43c7e0) < reinterpret_cast<int32_t>(eax51);
                if (less52 && (eax53 = g43c7e0, less_or_equal54 = reinterpret_cast<int32_t>(g43c7cc) <= reinterpret_cast<int32_t>(eax53), less_or_equal54)) {
                    goto eax41;
                }
            } else {
                eax55 = g43c7f4;
                g43c7c8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43c7c8) - reinterpret_cast<uint32_t>(eax55));
                edx56 = g43c7c8;
                less57 = reinterpret_cast<int32_t>(g43c7e0) < reinterpret_cast<int32_t>(edx56);
                if (less57 || (eax58 = g43c7e0, less_or_equal59 = reinterpret_cast<int32_t>(g43c7cc) <= reinterpret_cast<int32_t>(eax58), less_or_equal59)) {
                    goto eax41;
                }
            }
            ecx60 = g4530c0;
            eax61 = *ecx60;
            eax62 = reinterpret_cast<int32_t>(eax61->f2c());
            g43c7dc = eax62;
            if (eax62 != 0x88780096) {
                zf63 = g43c7dc == 0;
                if (zf63) {
                    eax64 = g43c7d0;
                    ecx65 = g43c7d4;
                    g4530b0 = eax64;
                    eax66 = g43c7e8;
                    g4530b4 = ecx65;
                    ecx67 = g43c7f0;
                    g4530b8 = eax66 / ecx67;
                    eax68 = g43c7ec;
                    g4530bc = eax68 / ecx67;
                    goto ecx60;
                } else {
                    goto ecx60;
                }
            } else {
                eax69 = g4530c0;
                eax70 = *eax69;
                eax70->f50(eax69);
                ecx71 = g4530c0;
                eax72 = *ecx71;
                eax72->f30();
                goto ecx71;
            }
        }
    } else {
        return 0;
    }
}

void* fun_401080(void** ecx, void** a2, void* a3) {
    void* eax4;
    int1_t zf5;
    void* ecx6;
    int1_t less_or_equal7;
    void** edi8;
    void* esi9;
    int32_t edx10;
    void* ebx11;
    unsigned char* esi12;
    void** bx13;
    uint32_t eax14;
    uint32_t edx15;
    uint32_t edx16;
    void** bx17;
    int32_t edx18;
    uint32_t edx19;
    void* eax20;
    void* eax21;
    int1_t less22;
    void* eax23;
    void* ecx24;
    void* eax25;
    uint32_t edx26;

    eax4 = g453038;
    zf5 = g45303c == eax4;
    if (zf5) {
        return 0;
    }
    ecx6 = a3;
    less_or_equal7 = reinterpret_cast<int32_t>(ecx6) <= reinterpret_cast<int32_t>(g453038);
    if (!less_or_equal7) {
        ecx6 = g453038;
    }
    edi8 = a2;
    esi9 = g453034;
    edx10 = g452e20;
    ebx11 = g45303c;
    esi12 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi9) + (reinterpret_cast<uint32_t>(ebx11) >> 1));
    bx13 = g453030;
    eax14 = reinterpret_cast<uint32_t>(ebx11) & 1;
    if (!eax14) 
        goto addr_4010f9_6;
    *reinterpret_cast<unsigned char*>(&eax14) = reinterpret_cast<unsigned char>(*esi12 >> 4);
    edx15 = edx10 + eax14;
    bx13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(bx13) + reinterpret_cast<uint16_t>(*reinterpret_cast<void**>(edx15 * 2 + 0x452e30)));
    edx10 = *reinterpret_cast<int32_t*>(edx15 * 4 + 0x452a20);
    *reinterpret_cast<void***>(edi8) = bx13;
    edi8 = edi8 + 2;
    ++esi12;
    ecx6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx6) - 1);
    if (!ecx6) 
        goto addr_401151_8;
    do {
        addr_4010f9_6:
        *reinterpret_cast<unsigned char*>(&eax14) = reinterpret_cast<unsigned char>(*esi12 & 15);
        edx16 = edx10 + eax14;
        bx17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(bx13) + reinterpret_cast<uint16_t>(*reinterpret_cast<void**>(edx16 * 2 + 0x452e30)));
        edx18 = *reinterpret_cast<int32_t*>(edx16 * 4 + 0x452a20);
        *reinterpret_cast<void***>(edi8) = bx17;
        *reinterpret_cast<unsigned char*>(&eax14) = reinterpret_cast<unsigned char>(*esi12 >> 4);
        edx19 = edx18 + eax14;
        bx13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(bx17) + reinterpret_cast<uint16_t>(*reinterpret_cast<void**>(edx19 * 2 + 0x452e30)));
        edx10 = *reinterpret_cast<int32_t*>(edx19 * 4 + 0x452a20);
        *reinterpret_cast<void***>(edi8 + 2) = bx13;
        edi8 = edi8 + 4;
        ++esi12;
        ecx6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx6) - 2);
    } while (reinterpret_cast<int32_t>(ecx6) > reinterpret_cast<int32_t>(1));
    if (reinterpret_cast<int32_t>(ecx6) >= reinterpret_cast<int32_t>(1)) 
        goto addr_401139_10;
    addr_401151_8:
    g452e20 = edx10;
    g453030 = bx13;
    eax20 = g45303c;
    eax21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax20) + reinterpret_cast<uint32_t>(a3));
    less22 = reinterpret_cast<int32_t>(g453038) < reinterpret_cast<int32_t>(eax21);
    if (!less22) {
        g45303c = eax21;
        return a3;
    } else {
        eax23 = g453038;
        ecx24 = g453038;
        eax25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax23) - reinterpret_cast<uint32_t>(g45303c));
        g45303c = ecx24;
        return eax25;
    }
    addr_401139_10:
    *reinterpret_cast<unsigned char*>(&eax14) = reinterpret_cast<unsigned char>(*esi12 & 15);
    edx26 = edx10 + eax14;
    bx13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(bx13) + reinterpret_cast<uint16_t>(*reinterpret_cast<void**>(edx26 * 2 + 0x452e30)));
    edx10 = *reinterpret_cast<int32_t*>(edx26 * 4 + 0x452a20);
    *reinterpret_cast<void***>(edi8) = bx13;
    goto addr_401151_8;
}

uint32_t g43c3c4 = 0;

void* g43c400;

struct s8 {
    void** f0;
    signed char f1;
};

int32_t g43c3c8 = 0;

uint32_t g43c3d0 = 0;

struct s9 {
    signed char[2] pad2;
    void** f2;
};

struct s10 {
    signed char f0;
    void** f1;
};

int32_t fun_4013c0(struct s7* a1, void** a2, uint32_t a3, uint32_t a4) {
    int1_t less5;
    uint32_t esi6;
    uint32_t eax7;
    uint32_t edi8;
    uint32_t v9;
    uint32_t edx10;
    int32_t edx11;
    uint32_t edx12;
    int32_t edx13;
    uint32_t edx14;
    uint32_t edx15;
    void** ecx16;
    int1_t zf17;
    struct s8* eax18;
    int1_t zf19;
    int1_t zf20;
    int1_t zf21;
    int1_t less22;
    int1_t zf23;
    int1_t zf24;
    int1_t zf25;
    int1_t less26;
    struct s7* ecx27;
    struct s7* ebx28;
    void** dx29;
    int1_t zf30;
    int1_t zf31;
    int1_t less32;
    int1_t zf33;
    void** dx34;
    struct s9* ebx35;
    int1_t zf36;
    int1_t zf37;
    int1_t less38;
    int1_t zf39;
    void** dx40;
    struct s9* ebx41;
    struct s7* ebx42;
    struct s9* ebx43;
    int1_t zf44;
    int1_t zf45;
    int1_t less46;
    int1_t zf47;
    int1_t zf48;
    int1_t zf49;
    int1_t less50;
    int1_t zf51;
    int1_t zf52;
    int1_t zf53;
    int1_t less54;
    int1_t zf55;
    int1_t zf56;
    int1_t zf57;
    int1_t less58;
    int1_t zf59;
    int1_t zf60;
    int1_t zf61;
    int1_t zf62;
    int1_t less63;
    int1_t zf64;
    int1_t zf65;
    int1_t zf66;
    int1_t less67;
    int16_t dx68;
    int16_t dx69;
    struct s9* ebx70;
    int1_t zf71;
    int1_t zf72;
    int1_t less73;
    int1_t zf74;
    void** dx75;
    uint16_t dx76;
    int1_t zf77;
    int1_t zf78;
    int1_t less79;
    int1_t zf80;
    signed char dl81;
    struct s10* ecx82;
    int1_t zf83;
    uint1_t cf84;
    int1_t zf85;
    int16_t dx86;
    int1_t zf87;
    uint1_t cf88;
    int1_t zf89;
    int16_t dx90;
    int16_t dx91;
    int1_t zf92;
    uint32_t ecx93;
    uint32_t ecx94;
    int1_t zf95;
    int1_t zf96;
    uint32_t ecx97;
    uint32_t ecx98;
    void** dx99;
    uint16_t dx100;
    void** dx101;
    struct s7* v102;
    int1_t less103;
    int1_t zf104;
    int1_t zf105;
    int1_t zf106;
    int1_t zf107;
    int16_t dx108;
    void** dl109;
    void** dx110;
    struct s7* ebx111;
    struct s9* ebx112;

    less5 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0);
    esi6 = a3;
    if (less5) {
        eax7 = a4;
        edi8 = v9;
    } else {
        __asm__("cdq ");
        edi8 = ((esi6 ^ edx10) - edx11 & 1 ^ edx12) - edx13;
        __asm__("cdq ");
        esi6 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(esi6 - edx14) >> 1);
        __asm__("cdq ");
        eax7 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(a4 - edx15) >> 1);
    }
    ecx16 = a2;
    zf17 = reinterpret_cast<int1_t>(g43c400 == 16);
    eax18 = reinterpret_cast<struct s8*>(ecx16 + eax7 * 2);
    if (!zf17) {
        addr_4014cd_5:
        zf19 = reinterpret_cast<int1_t>(g43c400 == 16);
        if (!zf19) 
            goto addr_401585_6;
    } else {
        zf20 = g43c3c8 == 1;
        if (!zf20 || ((zf21 = g43c3d0 == 0, !zf21) || (less22 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0), !less22))) {
            zf23 = reinterpret_cast<int1_t>(g43c400 == 16);
            if (!zf23) 
                goto addr_401522_9;
            zf24 = g43c3c8 == 1;
            if (!zf24) 
                goto addr_4014cd_5;
            zf25 = g43c3d0 == 0;
            if (!zf25) 
                goto addr_4014cd_5;
            less26 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0);
            if (less26) 
                goto addr_4014cd_5; else 
                goto addr_401490_13;
        } else {
            ecx27 = a1;
            ebx28 = ecx27;
            if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
                do {
                    dx29 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax18->f0) ^ 0x8000);
                    ebx28 = ebx28 + 1 + 1;
                    (ebx28 - 2)->f0 = dx29;
                    ++eax18;
                    (ebx28 - 1)->f0 = dx29;
                    --esi6;
                } while (esi6);
                goto addr_401976_17;
            }
        }
    }
    zf30 = g43c3c8 == 1;
    if (!zf30 || ((zf31 = g43c3d0 == 1, !zf31) || (less32 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0), !less32))) {
        addr_401522_9:
        zf33 = reinterpret_cast<int1_t>(g43c400 == 16);
        if (!zf33) 
            goto addr_4015d8_19;
    } else {
        ecx27 = a1;
        ebx28 = ecx27;
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
            do {
                dx34 = eax18->f0;
                ebx35 = reinterpret_cast<struct s9*>(ebx28 + 1);
                *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebx35) - 2) = dx34;
                ebx28 = reinterpret_cast<struct s7*>(&ebx35->f2);
                (ebx28 - 1)->f0 = dx34;
                ++eax18;
                --esi6;
            } while (esi6);
            goto addr_401976_17;
        }
    }
    zf36 = g43c3c8 == 1;
    if (!zf36 || ((zf37 = g43c3d0 == 1, !zf37) || (less38 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0), less38))) {
        addr_401585_6:
        zf39 = reinterpret_cast<int1_t>(g43c400 == 16);
        if (!zf39) 
            goto addr_40163b_24;
    } else {
        ecx27 = a1;
        ebx28 = ecx27;
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
            do {
                dx40 = eax18->f0;
                ebx41 = reinterpret_cast<struct s9*>(ebx28 + 1);
                *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebx41) - 2) = dx40;
                ebx42 = reinterpret_cast<struct s7*>(&ebx41->f2);
                (ebx42 - 1)->f0 = dx40;
                ebx43 = reinterpret_cast<struct s9*>(ebx42 + 1);
                *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebx43) - 2) = dx40;
                ebx28 = reinterpret_cast<struct s7*>(&ebx43->f2);
                (ebx28 - 1)->f0 = dx40;
                ++eax18;
                --esi6;
            } while (esi6);
            goto addr_401976_17;
        }
    }
    zf44 = g43c3c8 == 0;
    if (!zf44 || ((zf45 = g43c3d0 == 0, !zf45) || (less46 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0), !less46))) {
        addr_4015d8_19:
        zf47 = reinterpret_cast<int1_t>(g43c400 == 16);
        if (!zf47) 
            goto addr_401689_29;
    } else {
        ecx27 = a1;
        ebx28 = ecx27;
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
            do {
                ++ebx28;
                ++eax18;
                (ebx28 - 1)->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax18->f0) ^ 0x8000);
                --esi6;
            } while (esi6);
            goto addr_401976_17;
        }
    }
    zf48 = g43c3c8 == 0;
    if (!zf48 || ((zf49 = g43c3d0 == 0, !zf49) || (less50 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0), less50))) {
        addr_40163b_24:
        zf51 = reinterpret_cast<int1_t>(g43c400 == 16);
        if (!zf51) 
            goto addr_4016dd_34;
    } else {
        ecx27 = a1;
        ebx28 = ecx27;
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
            do {
                ebx28 = ebx28 + 1 + 1;
                (ebx28 - 2)->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax18->f0) ^ 0x8000);
                ++eax18;
                --esi6;
                (ebx28 - 1)->f0 = reinterpret_cast<void**>(*reinterpret_cast<uint16_t*>(&(eax18 - 1)->f0) ^ 0x8000);
            } while (esi6);
            goto addr_401976_17;
        }
    }
    zf52 = g43c3c8 == 0;
    if (!zf52 || ((zf53 = g43c3d0 == 1, !zf53) || (less54 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0), !less54))) {
        addr_401689_29:
        zf55 = reinterpret_cast<int1_t>(g43c400 == 16);
        if (!zf55 || ((zf56 = g43c3c8 == 0, !zf56) || ((zf57 = g43c3d0 == 1, !zf57) || (less58 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0), less58)))) {
            addr_4016dd_34:
            zf59 = reinterpret_cast<int1_t>(g43c400 == 8);
            if (!zf59) {
                addr_401798_39:
                zf60 = reinterpret_cast<int1_t>(g43c400 == 8);
                if (!zf60) 
                    goto addr_40183d_40;
            } else {
                zf61 = g43c3c8 == 1;
                if (!zf61 || ((zf62 = g43c3d0 == 0, !zf62) || (less63 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0), !less63))) {
                    zf64 = reinterpret_cast<int1_t>(g43c400 == 8);
                    if (!zf64) 
                        goto addr_4017e9_43;
                    zf65 = g43c3c8 == 1;
                    if (!zf65) 
                        goto addr_401798_39;
                    zf66 = g43c3d0 == 0;
                    if (!zf66) 
                        goto addr_401798_39;
                    less67 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0);
                    if (less67) 
                        goto addr_401798_39; else 
                        goto addr_401767_47;
                } else {
                    ecx27 = a1;
                    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
                        do {
                            dx68 = reinterpret_cast<int16_t>(reinterpret_cast<signed char>(eax18->f0) >> 8);
                            ecx27 = reinterpret_cast<struct s7*>(&ecx27->f1 + 1);
                            ++eax18;
                            (ecx27 - 1)->f0 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(&dx68) ^ 0x80);
                            dx69 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&(eax18 - 1)->f0) >> 8);
                            --esi6;
                            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ecx27) - 1) = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(&dx69) ^ 0x80);
                        } while (esi6);
                        goto addr_401972_51;
                    }
                }
            }
        } else {
            ecx27 = a1;
            ebx28 = ecx27;
            if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
                do {
                    ebx70 = reinterpret_cast<struct s9*>(ebx28 + 1);
                    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebx70) - 2) = eax18->f0;
                    ebx28 = reinterpret_cast<struct s7*>(&ebx70->f2);
                    ++eax18;
                    (ebx28 - 1)->f0 = eax18->f0;
                    --esi6;
                } while (esi6);
                goto addr_401976_17;
            }
        }
    } else {
        ecx27 = a1;
        ebx28 = ecx27;
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
            do {
                ++ebx28;
                (ebx28 - 1)->f0 = eax18->f0;
                ++eax18;
                --esi6;
            } while (esi6);
            goto addr_401976_17;
        }
    }
    zf71 = g43c3c8 == 1;
    if (!zf71 || ((zf72 = g43c3d0 == 1, !zf72) || (less73 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0), !less73))) {
        addr_4017e9_43:
        zf74 = reinterpret_cast<int1_t>(g43c400 == 8);
        if (!zf74) 
            goto addr_40188b_59;
    } else {
        ecx27 = a1;
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
            do {
                dx75 = eax18->f0;
                ecx27 = reinterpret_cast<struct s7*>(&ecx27->f1 + 1);
                ++eax18;
                --esi6;
                (ecx27 - 1)->f0 = (&dx75)[1];
                dx76 = *reinterpret_cast<uint16_t*>(&(eax18 - 1)->f0);
                *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ecx27) - 1) = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&dx76) + 1);
            } while (esi6);
            goto addr_401972_51;
        }
    }
    zf77 = g43c3c8 == 1;
    if (!zf77 || ((zf78 = g43c3d0 == 1, !zf78) || (less79 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0), less79))) {
        addr_40183d_40:
        zf80 = reinterpret_cast<int1_t>(g43c400 == 8);
        if (!zf80) 
            goto addr_4018e8_64;
    } else {
        ecx27 = a1;
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
            do {
                dl81 = eax18->f1;
                ++eax18;
                ecx82 = reinterpret_cast<struct s10*>(&ecx27->f1 + 1 + 1);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx82) - 3) = dl81;
                (ecx82 - 1)->f0 = dl81;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx82) - 1) = dl81;
                ecx82->f0 = dl81;
                ecx27 = reinterpret_cast<struct s7*>(&ecx82->f1);
                --esi6;
            } while (esi6);
            goto addr_401972_51;
        }
    }
    zf83 = g43c3c8 == 0;
    if (!zf83 || (cf84 = reinterpret_cast<uint1_t>(g43c3d0 < 1), ecx16 = reinterpret_cast<void**>(-(reinterpret_cast<unsigned char>(ecx16) - (reinterpret_cast<unsigned char>(ecx16) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx16) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ecx16) + cf84))))), reinterpret_cast<signed char>(ecx16) >= reinterpret_cast<signed char>(0xabe0))) {
        addr_40188b_59:
        zf85 = reinterpret_cast<int1_t>(g43c400 == 8);
        if (!zf85) 
            goto addr_401927_69;
    } else {
        ecx27 = a1;
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
            do {
                ecx27 = reinterpret_cast<struct s7*>(&ecx27->f1);
                dx86 = reinterpret_cast<int16_t>(reinterpret_cast<signed char>(eax18->f0) >> 8);
                ++eax18;
                --esi6;
                *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ecx27) - 1) = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(&dx86) ^ 0x80);
            } while (esi6);
            goto addr_401972_51;
        }
    }
    zf87 = g43c3c8 == 0;
    if (!zf87 || (cf88 = reinterpret_cast<uint1_t>(g43c3d0 < 1), reinterpret_cast<int32_t>(-(reinterpret_cast<unsigned char>(ecx16) - (reinterpret_cast<unsigned char>(ecx16) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx16) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ecx16) + cf88))))) < 0xabe0)) {
        addr_4018e8_64:
        zf89 = reinterpret_cast<int1_t>(g43c400 == 8);
        if (!zf89) 
            goto addr_40196e_74;
    } else {
        ecx27 = a1;
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
            do {
                dx90 = reinterpret_cast<int16_t>(reinterpret_cast<signed char>(eax18->f0) >> 8);
                ecx27 = reinterpret_cast<struct s7*>(&ecx27->f1 + 1);
                ++eax18;
                (ecx27 - 1)->f0 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(&dx90) ^ 0x80);
                dx91 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&(eax18 - 1)->f0) >> 8);
                --esi6;
                *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ecx27) - 1) = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(&dx91) ^ 0x80);
            } while (esi6);
            goto addr_401972_51;
        }
    }
    zf92 = g43c3c8 == 0;
    if (!zf92 || (ecx93 = g43c3d0, ecx94 = ecx93 - 1, reinterpret_cast<int32_t>(-(ecx94 - (ecx94 + reinterpret_cast<uint1_t>(ecx94 < ecx94 + reinterpret_cast<uint1_t>(ecx94 < 1))))) >= 0xabe0)) {
        addr_401927_69:
        zf95 = reinterpret_cast<int1_t>(g43c400 == 8);
        if (!zf95 || ((zf96 = g43c3c8 == 0, !zf96) || (ecx97 = g43c3d0, ecx98 = ecx97 - 1, reinterpret_cast<int32_t>(-(ecx98 - (ecx98 + reinterpret_cast<uint1_t>(ecx98 < ecx98 + reinterpret_cast<uint1_t>(ecx98 < 1))))) < 0xabe0))) {
            addr_40196e_74:
            ecx27 = a1;
        } else {
            ecx27 = a1;
            if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
                do {
                    dx99 = eax18->f0;
                    ecx27 = reinterpret_cast<struct s7*>(&ecx27->f1 + 1);
                    ++eax18;
                    --esi6;
                    (ecx27 - 1)->f0 = (&dx99)[1];
                    dx100 = *reinterpret_cast<uint16_t*>(&(eax18 - 1)->f0);
                    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ecx27) - 1) = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&dx100) + 1);
                } while (esi6);
            }
        }
    } else {
        ecx27 = a1;
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
            do {
                dx101 = eax18->f0;
                ecx27 = reinterpret_cast<struct s7*>(&ecx27->f1);
                ++eax18;
                --esi6;
                *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ecx27) - 1) = (&dx101)[1];
            } while (esi6);
        }
    }
    addr_401972_51:
    ebx28 = v102;
    addr_401976_17:
    less103 = reinterpret_cast<int32_t>(g43c3c4) < reinterpret_cast<int32_t>(0xabe0);
    if (!less103 && edi8 == 1) {
        zf104 = reinterpret_cast<int1_t>(g43c400 == 16);
        if (zf104) {
            ecx27 = ebx28;
        }
        zf105 = reinterpret_cast<int1_t>(g43c400 == 8);
        if (!zf105) {
            zf106 = reinterpret_cast<int1_t>(g43c400 == 16);
            if (!zf106 || (zf107 = g43c3c8 == 0, !zf107)) {
                ecx27->f0 = (ecx27 - 2)->f0;
            } else {
                ecx27->f0 = (ecx27 - 1)->f0;
            }
        } else {
            ecx27->f0 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ecx27) - 1);
        }
    }
    return 1;
    addr_401767_47:
    ecx27 = a1;
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
        do {
            dx108 = reinterpret_cast<int16_t>(reinterpret_cast<signed char>(eax18->f0) >> 8);
            dl109 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(&dx108) ^ 0x80);
            ecx27 = reinterpret_cast<struct s7*>(&ecx27->f1 + 1 + 1 + 1);
            ++eax18;
            --esi6;
            (ecx27 - 2)->f0 = dl109;
            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ecx27) - 3) = dl109;
            (ecx27 - 1)->f0 = dl109;
            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ecx27) - 1) = dl109;
        } while (esi6);
        goto addr_401972_51;
    }
    addr_401490_13:
    ecx27 = a1;
    ebx28 = ecx27;
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi6 == 0))) {
        do {
            dx110 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax18->f0) ^ 0x8000);
            ebx111 = ebx28 + 1 + 1;
            (ebx111 - 2)->f0 = dx110;
            ebx112 = reinterpret_cast<struct s9*>(ebx111 + 1);
            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(ebx112) - 4) = dx110;
            ebx28 = reinterpret_cast<struct s7*>(&ebx112->f2);
            (ebx28 - 2)->f0 = dx110;
            ++eax18;
            (ebx28 - 1)->f0 = dx110;
            --esi6;
        } while (esi6);
        goto addr_401976_17;
    }
}

void* fun_4035a0(signed char* a1);

void* g452960;

void** fun_4037d0(void* a1, void** a2);

void** g4528b0;

void** g4529f8;

void** g45295c;

void** g452a00;

void** g4528c0;

void fun_402540() {
    void* eax1;
    void** eax2;
    void* eax3;
    void** eax4;
    void* eax5;
    void** eax6;
    void* eax7;
    void** eax8;
    void* eax9;
    void** eax10;

    eax1 = fun_4035a0(0);
    g452960 = eax1;
    eax2 = fun_4037d0(eax1, 0x4b000);
    g4528b0 = eax2;
    eax3 = g452960;
    eax4 = fun_403630(eax3, 0x1dffff);
    g4529f8 = eax4;
    eax5 = g452960;
    eax6 = fun_403630(eax5, 0x2ffff);
    g45295c = eax6;
    eax7 = g452960;
    eax8 = fun_403630(eax7, 0x20000);
    g452a00 = eax8;
    eax9 = g452960;
    eax10 = fun_403630(eax9, 0x20000);
    g4528c0 = eax10;
    return;
}

void** g4528b8;

void** g4528c8;

void** g4528b4;

void** g452948;

void** g4529d0;

void** g4529d4;

void** g4529d8;

void** g4529dc;

int32_t fun_404320(void* a1, void** a2, void** a3, int32_t a4);

void fun_410ec0(int32_t a1);

void** g452970;

signed char* g452974;

void* g452978;

void fun_4025d0() {
    uint32_t esi1;
    void** eax2;
    void** eax3;
    void** eax4;
    void** eax5;
    void** eax6;
    void** eax7;
    void** eax8;
    void** eax9;
    void** eax10;
    void** eax11;
    void* edi12;
    void** ebx13;
    void** ebx14;
    void** eax15;
    void** ebp16;
    void*** eax17;
    uint32_t ebp18;
    int32_t ebx19;
    void** esi20;
    void** esi21;
    signed char* esi22;
    int32_t edx23;
    int32_t eax24;
    signed char* edi25;
    int32_t ecx26;
    signed char eax27;
    void* esi28;
    void** eax29;
    int32_t ebx30;
    void* eax31;
    void* ecx32;
    void** edx33;

    esi1 = 0;
    eax2 = fun_4043a0("data\\ign.pfm");
    g4528b8 = eax2;
    eax3 = fun_4043a0("data\\ign.psq");
    g4528c8 = eax3;
    eax4 = fun_4043a0("data\\ign.col");
    g4528b4 = eax4;
    eax5 = fun_4043a0("data\\ign0.pic");
    g452948 = eax5;
    eax6 = fun_4043a0("data\\ign1.pic");
    g4529d0 = eax6;
    eax7 = fun_4043a0("data\\ign2.pic");
    g4529d4 = eax7;
    eax8 = fun_4043a0("data\\ign4.pic");
    g4529d8 = eax8;
    eax9 = fun_4043a0("data\\ign3.pic");
    g4529dc = eax9;
    eax10 = g452a00;
    eax11 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax10 + 0xffff) & 0xffff0000);
    g452a00 = eax11;
    edi12 = reinterpret_cast<void*>("data\\IGN1.TEX");
    fun_404320("data\\ign.pan", eax11, 0x10000, 0);
    ebx13 = g4529f8;
    ebx14 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebx13 + 0xffff) & 0xffff0000);
    do {
        eax15 = fun_4044d0(edi12);
        ebp16 = eax15;
        if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ebp16) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ebp16 == 0))) {
            fun_410ec0(0);
        }
        if (reinterpret_cast<signed char>(ebp16) > reinterpret_cast<signed char>(0x100000)) {
            ebp16 = reinterpret_cast<void**>(0x100000);
        }
        fun_404320(edi12, ebx14, ebp16, 0);
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ebp16) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ebp16 == 0))) {
            eax17 = reinterpret_cast<void***>(esi1 * 4 + 0x4528d0);
            ebp18 = reinterpret_cast<uint32_t>(ebp16 + 0xffff) >> 16;
            esi1 = esi1 + ebp18;
            do {
                *eax17 = ebx14;
                eax17 = eax17 + 4;
                ebx14 = ebx14 + 0x10000;
                --ebp18;
            } while (ebp18);
        }
        edi12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi12) + 50);
    } while (reinterpret_cast<uint32_t>(edi12) < reinterpret_cast<uint32_t>("data\\ign.shd"));
    ebx19 = 0;
    *reinterpret_cast<int32_t*>(esi1 * 4 + 0x4528d0) = 0;
    esi20 = g45295c;
    esi21 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esi20 + 0xffff) & 0xffff0000);
    g452970 = esi21;
    esi22 = reinterpret_cast<signed char*>(esi21 + 0x10000);
    fun_404320("data\\ign.shd", esi21, 0x10000, 0);
    g452974 = esi22;
    do {
        *esi22 = *reinterpret_cast<signed char*>(&ebx19);
        ++esi22;
        ++ebx19;
    } while (ebx19 < 0x100);
    edx23 = 1;
    do {
        eax24 = *reinterpret_cast<signed char*>(&edx23);
        edi25 = esi22;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx26) + 1) = *reinterpret_cast<signed char*>(&eax24);
        ++edx23;
        *reinterpret_cast<signed char*>(&ecx26) = *reinterpret_cast<signed char*>(&eax24);
        eax27 = reinterpret_cast<signed char>(ecx26 << 16);
        *reinterpret_cast<int16_t*>(&eax27) = *reinterpret_cast<int16_t*>(&ecx26);
        ecx26 = 64;
        while (ecx26) {
            --ecx26;
            *edi25 = eax27;
            edi25 = edi25 + 4;
            esi22 = esi22 + 4;
        }
        esi22 = esi22 + 0x100;
    } while (edx23 < 0x100);
    esi28 = reinterpret_cast<void*>(0);
    eax29 = g4528c0;
    ebx30 = 0;
    g452978 = reinterpret_cast<void*>(0);
    g4528c0 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax29 + 0xffff) & 0xffff0000);
    do {
        eax31 = reinterpret_cast<void*>(0);
        do {
            ecx32 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi28) + reinterpret_cast<int32_t>(eax31));
            edx33 = g4528c0;
            eax31 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax31) + 1);
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx32) + reinterpret_cast<unsigned char>(edx33)) = *reinterpret_cast<signed char*>(&ebx30);
        } while (reinterpret_cast<int32_t>(eax31) < 0x100);
        esi28 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi28) + 0x100);
        ++ebx30;
    } while (reinterpret_cast<int32_t>(esi28) < 0x10000);
    return;
}

int32_t fun_4019d0(void** a1, int32_t* a2, uint32_t* a3);

void fun_402f70(int32_t a1);

void* g41c554 = reinterpret_cast<void*>(0);

void* g41c550 = reinterpret_cast<void*>(0);

void fun_4030c0(void*** a1, void* a2, void* a3);

int32_t g41c55c = 0x1e0;

void* g41c558 = reinterpret_cast<void*>(0x280);

int32_t fun_402a80(void* a1, int32_t a2, int32_t a3);

void** g452958;

void fun_4027d0() {
    void** eax1;
    void* eax2;
    void* ecx3;
    void** eax4;
    int32_t ecx5;
    void* edx6;
    void** eax7;

    eax1 = g4528b8;
    fun_4019d0(eax1, 0x4528d0, 0x452970);
    fun_402f70(1);
    eax2 = g41c554;
    ecx3 = g41c550;
    eax4 = g4528b4;
    fun_4030c0(eax4 + 8, ecx3, eax2);
    ecx5 = g41c55c;
    edx6 = g41c558;
    fun_402a80(edx6, ecx5, 0);
    eax7 = fun_4044d0("data\\ign.psq");
    g452958 = eax7;
    return;
}

int32_t g41c520 = 0;

void* g43c3fc = reinterpret_cast<void*>(0);

void** g43c3cc = reinterpret_cast<void**>(0);

int32_t g41c030 = 0;

int32_t fun_4011a0() {
    int32_t edi1;
    void* esi2;
    void** eax3;
    void** eax4;
    int32_t eax5;
    int32_t eax6;
    int16_t* edx7;
    void** v8;
    int32_t eax9;
    int32_t eax10;
    void* eax11;
    int1_t less12;
    uint32_t eax13;
    void* eax14;
    uint32_t ecx15;
    void** eax16;

    edi1 = 0;
    esi2 = reinterpret_cast<void*>("data\\IGN1.DPS");
    do {
        eax3 = fun_4044d0(esi2);
        *reinterpret_cast<void***>(edi1 + 0x43c3a0) = eax3;
        if (reinterpret_cast<signed char>(eax3) < reinterpret_cast<signed char>(0x300)) 
            break;
        eax4 = fun_4043a0(esi2);
        *reinterpret_cast<void***>(edi1 + 0x43c3d8) = eax4;
        if (!eax4) 
            goto addr_401223_4;
        edi1 = edi1 + 4;
        esi2 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi2) + 50);
    } while (reinterpret_cast<uint32_t>(esi2) < 0x41c1fa);
    goto addr_4011e0_6;
    return 0;
    addr_401223_4:
    return 0;
    addr_4011e0_6:
    eax5 = g41c520;
    eax6 = *reinterpret_cast<int32_t*>(eax5 * 4 + 0x41c200) << 2;
    edx7 = *reinterpret_cast<int16_t**>(eax6 + 0x43c3d8);
    v8 = *reinterpret_cast<void***>(eax6 + 0x43c3a0);
    fun_401000(edx7, v8);
    g453098 = 20;
    eax9 = fun_403d20();
    if (eax9 == 1) {
        eax10 = g453088;
        g43c3c8 = eax10;
        eax11 = g453084;
        less12 = reinterpret_cast<int32_t>(g453080) < reinterpret_cast<int32_t>(0xabe0);
        g43c400 = eax11;
        eax13 = g453090;
        g43c3d0 = eax13;
        eax14 = g45308c;
        g43c3fc = eax14;
        if (!less12) {
            __asm__("cdq ");
            eax14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(eax14) - reinterpret_cast<uint32_t>(edx7)) >> 1);
        }
        ecx15 = g453080;
        g43c3fc = eax14;
        g43c3c4 = ecx15;
        eax16 = fun_403630(0, reinterpret_cast<uint32_t>(eax14) + reinterpret_cast<uint32_t>(eax14));
        g43c3cc = eax16;
        if (eax16) {
            g41c030 = 1;
            return 1;
        } else {
            return 0;
        }
    } else {
        return 0;
    }
}

struct s11 {
    signed char[72] pad72;
    void** f48;
};

struct s11* g4528bc;

struct s11* g4528c4;

int32_t g41c548 = 0;

void* g4529fc;

void fun_404600(void** a1, void* a2, int32_t a3, int32_t a4, void* a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9);

void fun_4046a0(int32_t a1);

int32_t fun_402840(int32_t a1, int32_t a2, int32_t a3) {
    struct s11* eax4;
    int1_t zf5;
    int1_t less_or_equal6;
    int1_t less7;
    int1_t less8;
    int16_t ax9;
    int16_t fpu_status_word10;
    void* eax11;
    void* ecx12;
    struct s11* eax13;
    int16_t ax14;
    int16_t fpu_status_word15;
    int16_t ax16;
    int16_t fpu_status_word17;
    int16_t ax18;
    int16_t fpu_status_word19;
    void* eax20;
    void* ecx21;
    struct s11* eax22;
    int16_t ax23;
    int16_t fpu_status_word24;
    int1_t zf25;
    int16_t ax26;
    int16_t fpu_status_word27;
    void* eax28;
    void* ecx29;
    struct s11* eax30;
    int1_t zf31;
    int16_t ax32;
    int16_t fpu_status_word33;
    void* eax34;
    void* ecx35;
    struct s11* eax36;
    int16_t ax37;
    int16_t fpu_status_word38;
    int32_t eax39;
    void* ecx40;
    void** eax41;
    void* esi42;
    struct s11* eax43;
    void** edx44;

    eax4 = g4528bc;
    zf5 = g4528c4 == eax4;
    if (zf5) {
        less_or_equal6 = g41c548 <= 2;
        if (less_or_equal6) {
            less7 = reinterpret_cast<int32_t>(g4529fc) < reinterpret_cast<int32_t>(10);
            if (!less7 && ((less8 = reinterpret_cast<int32_t>(g4529fc) < reinterpret_cast<int32_t>(40), less8) && (ax9 = fpu_status_word10, !(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax9) + 1) & 65)))) {
                __asm__("fld qword [0x41c550]");
                __asm__("fadd qword [0x41b020]");
                __asm__("fstp qword [0x41c550]");
                eax11 = g41c554;
                ecx12 = g41c550;
                eax13 = g4528bc;
                fun_4030c0(&eax13->f48, ecx12, eax11);
            }
            __asm__("fld qword [esp+0xc]");
            __asm__("fmul qword [0x41b028]");
            __asm__("fild dword [0x4529fc]");
            __asm__("fcompp ");
            ax14 = fpu_status_word15;
            if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax14) + 1) & 65) && (ax16 = fpu_status_word17, !!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax16) + 1) & 1))) {
                __asm__("fld qword [0x41c550]");
                __asm__("fsub qword [0x41b020]");
                __asm__("fcom qword [0x41b018]");
                __asm__("fstp qword [0x41c550]");
                ax18 = fpu_status_word19;
                if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax18) + 1) & 1) {
                    g41c550 = reinterpret_cast<void*>(0);
                    g41c554 = reinterpret_cast<void*>(0);
                }
                eax20 = g41c554;
                ecx21 = g41c550;
                eax22 = g4528bc;
                fun_4030c0(&eax22->f48, ecx21, eax20);
            }
            __asm__("fld qword [esp+0xc]");
            __asm__("fmul qword [0x41b030]");
            __asm__("fild dword [0x4529fc]");
            __asm__("fcompp ");
            ax23 = fpu_status_word24;
            if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax23) + 1) & 65)) {
                return 1;
            }
        }
        zf25 = g41c548 == 3;
        if (zf25 && (ax26 = fpu_status_word27, !(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax26) + 1) & 65))) {
            __asm__("fld qword [0x41c550]");
            __asm__("fadd qword [0x41b020]");
            __asm__("fstp qword [0x41c550]");
            eax28 = g41c554;
            ecx29 = g41c550;
            eax30 = g4528bc;
            fun_4030c0(&eax30->f48, ecx29, eax28);
        }
        zf31 = g41c548 == 4;
        if (zf31) {
            __asm__("fldz ");
            __asm__("fcomp qword [0x41c550]");
            ax32 = fpu_status_word33;
            if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax32) + 1) & 1) {
                __asm__("fld qword [0x41c550]");
                __asm__("fsub qword [0x41b020]");
                __asm__("fstp qword [0x41c550]");
                eax34 = g41c554;
                ecx35 = g41c550;
                eax36 = g4528bc;
                fun_4030c0(&eax36->f48, ecx35, eax34);
            }
            __asm__("fldz ");
            __asm__("fcomp qword [0x41c550]");
            ax37 = fpu_status_word38;
            if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax37) + 1) & 1)) {
                return 1;
            }
        }
        eax39 = g41c55c;
        ecx40 = g41c558;
        eax41 = g4528b0;
        fun_404600(eax41, ecx40, 0, 0, ecx40, eax39, 0x43c7f8, 0, 0);
        fun_4046a0(0x43c7f8);
        g4529fc = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g4529fc) + 1);
        return 0;
    } else {
        esi42 = reinterpret_cast<void*>(0);
        g4528c4 = eax4;
        g4529fc = reinterpret_cast<void*>(0);
        g41c550 = reinterpret_cast<void*>(0);
        g41c554 = reinterpret_cast<void*>(0);
        fun_4030c0(&eax4->f48, 0, 0);
        do {
            eax43 = g4528bc;
            edx44 = g4528b0;
            esi42 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi42) + 1);
            *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edx44) + reinterpret_cast<uint32_t>(esi42) + 0xffffffff) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax43) + reinterpret_cast<uint32_t>(esi42) + 0x34d);
        } while (reinterpret_cast<int32_t>(esi42) < reinterpret_cast<int32_t>(0x4b000));
        return 0;
    }
}

void* fun_410df8(int32_t a1, void* a2) {
    void* v3;

    __asm__("wait ");
    __asm__("fnstcw word [ebp-0x2]");
    __asm__("wait ");
    __asm__("fldcw word [ebp-0x4]");
    __asm__("fistp qword [ebp-0xc]");
    __asm__("fldcw word [ebp-0x2]");
    return v3;
}

void* g41c53c = reinterpret_cast<void*>(0);

int32_t g41c560 = 0;

void* g41c538 = reinterpret_cast<void*>(0);

void* g41c540 = reinterpret_cast<void*>(0);

struct s12 {
    void** f0;
    signed char[3] pad4;
    void* f4;
};

void** fun_401e30(void* a1, int32_t a2);

void** g452980;

void** g45298c;

void** g452984;

void** g452988;

int32_t g452990;

int32_t g452994;

uint32_t g452998;

int32_t g45299c;

void** fun_402e10(int32_t a1);

void fun_402f00(void* a1, int32_t a2, void* a3, int32_t a4, void* a5, uint32_t a6, void* a7, void* a8, void* a9);

int32_t fun_402aa0(void* a1, int32_t a2) {
    int1_t zf3;
    int16_t ax4;
    int16_t fpu_status_word5;
    int1_t less_or_equal6;
    void* eax7;
    void* ecx8;
    void** eax9;
    int1_t zf10;
    void* eax11;
    void* ecx12;
    void** eax13;
    int16_t ax14;
    int16_t fpu_status_word15;
    void* eax16;
    void* ecx17;
    struct s12* tmp32_18;
    void* tmp32_19;
    void* tmp32_20;
    void** eax21;
    int1_t zf22;
    int32_t eax23;
    void** eax24;
    void** ecx25;
    void** eax26;
    void* eax27;
    int32_t eax28;
    void** eax29;
    int1_t zf30;
    void* ecx31;
    void** eax32;
    void* ecx33;
    void** eax34;
    void* ecx35;
    int32_t eax36;
    void** eax37;
    void* ecx38;
    void* v39;
    void* v40;
    int32_t eax41;
    uint32_t v42;
    void* v43;
    int32_t v44;
    void* v45;
    int32_t v46;
    void* v47;
    void* ecx48;
    void** eax49;
    void* ecx50;
    void** eax51;
    void* ecx52;
    int32_t eax53;
    void** eax54;
    void* ecx55;
    int32_t eax56;
    void** eax57;
    void* ecx58;
    int32_t eax59;
    int32_t eax60;
    int32_t ecx61;
    void* eax62;
    void** ecx63;

    zf3 = g41c548 == 1;
    if (zf3 && ((ax4 = fpu_status_word5, !(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax4) + 1) & 65)) && (less_or_equal6 = reinterpret_cast<int32_t>(g41c53c) <= reinterpret_cast<int32_t>(4), !less_or_equal6))) {
        __asm__("fld qword [0x41c550]");
        __asm__("fadd qword [0x41b020]");
        __asm__("fstp qword [0x41c550]");
        eax7 = g41c554;
        ecx8 = g41c550;
        eax9 = g4528b4;
        fun_4030c0(eax9 + 8, ecx8, eax7);
    }
    zf10 = g41c548 == 2;
    if (zf10 && (eax11 = g41c554, ecx12 = g41c550, eax13 = g4528b4, fun_4030c0(eax13 + 8, ecx12, eax11), ax14 = fpu_status_word15, !(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax14) + 1) & 65))) {
        ++g41c548;
        g41c560 = 1;
        fun_402f70(1);
    }
    eax16 = g41c538;
    ecx17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(a1) - reinterpret_cast<uint32_t>(g41c540));
    tmp32_18 = reinterpret_cast<struct s12*>((reinterpret_cast<uint32_t>(eax16) + reinterpret_cast<uint32_t>(eax16) * 2 << 2) + reinterpret_cast<unsigned char>(g4528c8));
    tmp32_19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(tmp32_18->f0) + reinterpret_cast<uint32_t>(g41c53c));
    g41c53c = ecx17;
    if (reinterpret_cast<int32_t>(ecx17) >= reinterpret_cast<int32_t>(tmp32_18->f4) && (tmp32_20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g41c540) + reinterpret_cast<uint32_t>(tmp32_18->f4)), g41c540 = tmp32_20, g41c53c = reinterpret_cast<void*>(0), eax21 = g452958, g41c538 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g41c538) + 1), zf22 = reinterpret_cast<int1_t>(reinterpret_cast<signed char>(eax21) / 12 == g41c538), zf22)) {
        g41c538 = reinterpret_cast<void*>(0);
    }
    eax23 = g41c560;
    eax24 = fun_401e30(tmp32_19, eax23);
    ecx25 = g4528c0;
    g452980 = eax24;
    eax26 = g4528b0;
    g45298c = ecx25;
    g452984 = eax26;
    g452988 = eax26;
    eax27 = g41c558;
    g452990 = 0;
    g452994 = 0;
    g452998 = reinterpret_cast<uint32_t>(eax27) - 1;
    eax28 = g41c55c;
    g45299c = eax28 - 1;
    fun_402e10(0x452980);
    eax29 = g452948;
    zf30 = g41c560 == 0;
    if (!zf30) {
        ecx31 = g41c558;
        fun_402f00(0, 57, 40, 40, 0, 0, 0x140, ecx31, eax29 + 0x34e);
        eax32 = g452948;
        ecx33 = g41c558;
        fun_402f00(40, 57, 40, 40, reinterpret_cast<uint32_t>(ecx33) + 0xffffffd8, 0, 0x140, ecx33, eax32 + 0x34e);
        eax34 = g452948;
        ecx35 = g41c558;
        eax36 = g41c55c;
        fun_402f00(0, 97, 40, 40, 0, eax36 - 40, 0x140, ecx35, eax34 + 0x34e);
        eax37 = g452948;
        ecx38 = g41c558;
        v39 = reinterpret_cast<void*>(eax37 + 0x34e);
        v40 = ecx38;
        eax41 = g41c55c;
        v42 = eax41 - 40;
        v43 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx38) + 0xffffffd8);
        v44 = 40;
        v45 = reinterpret_cast<void*>(40);
        v46 = 97;
        v47 = reinterpret_cast<void*>(40);
    } else {
        ecx48 = g41c558;
        fun_402f00(0, 0, 20, 20, 0, 0, 0x140, ecx48, eax29 + 0x34e);
        eax49 = g452948;
        ecx50 = g41c558;
        fun_402f00(20, 0, 20, 20, reinterpret_cast<uint32_t>(ecx50) + 0xffffffec, 0, 0x140, ecx50, eax49 + 0x34e);
        eax51 = g452948;
        ecx52 = g41c558;
        eax53 = g41c55c;
        fun_402f00(0, 20, 20, 20, 0, eax53 - 20, 0x140, ecx52, eax51 + 0x34e);
        eax54 = g452948;
        ecx55 = g41c558;
        v39 = reinterpret_cast<void*>(eax54 + 0x34e);
        v40 = ecx55;
        eax56 = g41c55c;
        v42 = eax56 - 20;
        v43 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx55) + 0xffffffec);
        v44 = 20;
        v45 = reinterpret_cast<void*>(20);
        v46 = 20;
        v47 = reinterpret_cast<void*>(20);
    }
    fun_402f00(v47, v46, v45, v44, v43, v42, 0x140, v40, v39);
    eax57 = g452948;
    ecx58 = g41c558;
    eax59 = g41c55c;
    eax60 = eax59 + eax59;
    __asm__("cdq ");
    __asm__("cdq ");
    fun_402f00(40, 0, 0xad, 57, reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(ecx58) + 0xffffff53 - eax60 % 0xc8) >> 1, eax60 / 0xc8, 0x140, ecx58, eax57 + 0x34e);
    ecx61 = g41c55c;
    eax62 = g41c558;
    ecx63 = g4528b0;
    fun_404600(ecx63, eax62, 0, 0, eax62, ecx61, 0x43c7f8, 0, 0);
    fun_4046a0(0x43c7f8);
    return 0;
}

void fun_410f00(int32_t a1, int32_t a2, int32_t a3);

void fun_410ec0(int32_t a1) {
    fun_410f00(a1, 0, 0);
    return;
}

int32_t fun_404320(void* a1, void** a2, void** a3, int32_t a4) {
    void** eax5;
    void** eax6;

    eax5 = fun_4114b0(a1, "rb");
    if (eax5) {
        __asm__("cdq ");
        fun_411460(eax5, reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4 - 4 - 4 - 4 - 4 + 4 + 8 + 8);
        eax6 = fun_411310(a2, 1, a3, eax5);
        if (a3 == eax6) {
            fun_4112a0(eax5);
            return 1;
        } else {
            return 0x7da;
        }
    } else {
        return 0x7d0;
    }
}

void fun_404690(int32_t a1);

void fun_4030c0(void*** a1, void* a2, void* a3) {
    void* v4;
    void* edi5;
    int32_t v6;
    int32_t ebp7;
    int32_t edi8;
    int16_t ax9;
    int16_t fpu_status_word10;
    int16_t ax11;
    int16_t fpu_status_word12;
    void* eax13;

    v4 = edi5;
    v6 = ebp7;
    edi8 = 0;
    do {
        __asm__("fild dword [esp+0x10]");
        __asm__("fmul qword [esp+0x20]");
        __asm__("fcom qword [0x41b038]");
        __asm__("fstp qword [esp+0x10]");
        ax9 = fpu_status_word10;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax9) + 1) & 65)) {
        }
        __asm__("fldz ");
        __asm__("fcomp qword [esp+0x10]");
        ax11 = fpu_status_word12;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax11) + 1) & 65)) {
        }
        __asm__("fld qword [esp+0x10]");
        ++edi8;
        eax13 = fun_410df8(v6, v4);
        *reinterpret_cast<signed char*>(edi8 + 0x43c467) = *reinterpret_cast<signed char*>(&eax13);
    } while (edi8 < 0x300);
    fun_404690(0x43c468);
    return;
}

void* g41c870 = reinterpret_cast<void*>(0x280);

int32_t g41c878 = 8;

int32_t g41c87c = 1;

int32_t g41c874 = 0x1e0;

void fun_404660();

void fun_4046b0(void** a1, void* a2, void* a3, int32_t a4, int32_t a5);

void fun_402f70(int32_t a1) {
    void** eax2;
    void* eax3;
    void** ecx4;
    int32_t eax5;
    void* ecx6;
    void** eax7;
    int32_t ecx8;
    void* edx9;
    void** eax10;
    void* ecx11;
    int32_t edx12;
    int32_t ecx13;
    void* edx14;
    void** eax15;
    int32_t ecx16;
    void* edx17;
    void** eax18;

    g41c560 = a1;
    if (!a1) {
        g41c558 = reinterpret_cast<void*>(0x140);
        g41c55c = 0xc8;
    }
    if (a1 == 1) {
        g41c558 = reinterpret_cast<void*>(0x280);
        g41c55c = 0x1e0;
    }
    eax2 = g4528b4;
    fun_4030c0(eax2 + 8, 0, 0);
    eax3 = reinterpret_cast<void*>(0);
    do {
        ecx4 = g4528b0;
        eax3 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax3) + 1);
        *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ecx4) + reinterpret_cast<uint32_t>(eax3) + 0xffffffff) = 0;
    } while (reinterpret_cast<int32_t>(eax3) < reinterpret_cast<int32_t>(0x4b000));
    eax5 = g41c55c;
    ecx6 = g41c558;
    eax7 = g4528b0;
    fun_404600(eax7, ecx6, 0, 0, ecx6, eax5, 0x43c7f8, 0, 0);
    fun_4046a0(0x43c7f8);
    ecx8 = g41c55c;
    edx9 = g41c558;
    eax10 = g4528b0;
    fun_404600(eax10, edx9, 0, 0, edx9, ecx8, 0x43c7f8, 0, 0);
    ecx11 = g41c558;
    edx12 = g41c55c;
    g41c870 = ecx11;
    g41c878 = 8;
    g41c87c = 1;
    g41c874 = edx12;
    fun_404660();
    ecx13 = g41c55c;
    edx14 = g41c558;
    eax15 = g4528b0;
    fun_4046b0(eax15, edx14, edx14, ecx13, 8);
    ecx16 = g41c55c;
    edx17 = g41c558;
    fun_402a80(edx17, ecx16, 0);
    eax18 = g4528b4;
    fun_4030c0(eax18 + 8, 0, 0);
    return;
}

void fun_402f00(void* a1, int32_t a2, void* a3, int32_t a4, void* a5, uint32_t a6, void* a7, void* a8, void* a9) {
    void* ecx10;
    void* tmp32_11;
    void* esi12;
    int32_t ebp13;
    void* eax14;
    void* edi15;
    int32_t edx16;
    void* ebx17;
    void** ebx18;

    ecx10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a9) + (reinterpret_cast<int32_t>(a7) * a2 + reinterpret_cast<int32_t>(a1)));
    tmp32_11 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a8) * a6 + reinterpret_cast<uint32_t>(a5) + reinterpret_cast<unsigned char>(g4528b0));
    esi12 = tmp32_11;
    ebp13 = a4;
    if (!(reinterpret_cast<uint1_t>(ebp13 < 0) | reinterpret_cast<uint1_t>(ebp13 == 0))) {
        eax14 = a3;
        do {
            edi15 = reinterpret_cast<void*>(0);
            if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax14) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(eax14 == 0))) {
                do {
                    edx16 = 0;
                    ebx17 = reinterpret_cast<void*>(0);
                    *reinterpret_cast<signed char*>(&edx16) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx10) + reinterpret_cast<uint32_t>(edi15));
                    *reinterpret_cast<signed char*>(&ebx17) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi12) + reinterpret_cast<uint32_t>(edi15));
                    edi15 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi15) + 1);
                    ebx18 = g452a00;
                    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi12) + reinterpret_cast<uint32_t>(edi15) + 0xffffffff) = *reinterpret_cast<signed char*>((edx16 << 8) + reinterpret_cast<int32_t>(ebx17) + reinterpret_cast<unsigned char>(ebx18));
                } while (reinterpret_cast<int32_t>(edi15) < reinterpret_cast<int32_t>(eax14));
            }
            ecx10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx10) + reinterpret_cast<int32_t>(a7));
            esi12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi12) + reinterpret_cast<uint32_t>(a8));
            --ebp13;
        } while (ebp13);
    }
    return;
}

int32_t fun_404a90(signed char a1) {
    int32_t ecx2;
    int32_t eax3;

    ecx2 = 0;
    eax3 = 0;
    *reinterpret_cast<signed char*>(&ecx2) = a1;
    *reinterpret_cast<signed char*>(&eax3) = *reinterpret_cast<signed char*>(ecx2 + 0x43cdb0);
    return eax3;
}

int32_t g43ccf0;

void fun_404600(void** a1, void* a2, int32_t a3, int32_t a4, void* a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9) {
    g43ccf0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
    return;
}

int32_t g43ccf8;

void fun_4046a0(int32_t a1) {
    g43ccf8(a1);
    return;
}

int32_t g43cce0;

void fun_404660() {
    goto g43cce0;
}

int32_t g43cd20;

void fun_4046b0(void** a1, void* a2, void* a3, int32_t a4, int32_t a5) {
    g43cd20(a1, a2, a3, a4, a5);
    return;
}

int32_t fun_40a4a0();

int32_t fun_402a80(void* a1, int32_t a2, int32_t a3) {
    fun_40a4a0();
    return 1;
}

int32_t g43cd08;

void fun_404690(int32_t a1) {
    g43cd08(a1);
    return;
}

int32_t g43c7c0;

int32_t g43c7b8;

int32_t LoadCursorA = 0x553d4;

int32_t g43c790;

int32_t LoadIconA = 0x553c8;

int32_t GetStockObject = 0x5547e;

int32_t RegisterClassA = 0x553b6;

int32_t timeBeginPeriod = 0x554fa;

int32_t fun_404b00();

int32_t fun_403510();

int32_t PeekMessageA = 0x553a6;

int32_t GetMessageA = 0x55398;

int32_t TranslateMessage = 0x55384;

int32_t DispatchMessageA = 0x55370;

int32_t g43c7a4;

int32_t fun_4032a0(void* a1, int32_t a2);

void fun_403540(void* a1, int32_t a2);

int32_t fun_403340(int32_t a1, uint32_t a2, int32_t a3, int32_t a4);

int32_t fun_403140(int32_t a1, int32_t a2, int32_t a3, void*** a4) {
    int32_t ebp5;
    int32_t edi6;
    int32_t esi7;
    int32_t ebx8;
    int32_t eax9;
    int32_t ebp10;
    uint16_t ax11;
    int32_t eax12;
    void* esp13;
    int32_t esi14;
    int32_t edi15;
    int32_t ebx16;
    int32_t ebp17;
    int1_t zf18;
    void* esp19;
    int32_t eax20;
    void* esp21;
    void* v22;
    void* esp23;
    void* v24;
    int32_t eax25;
    void* esp26;
    int32_t eax27;
    int32_t eax28;
    void* esp29;
    void* v30;
    void* esp31;
    int32_t v32;

    g43c7c0 = 0x41b1c0;
    g43c7b8 = a1;
    eax9 = reinterpret_cast<int32_t>(LoadCursorA(0, 0x7f00, ebp5, edi6, esi7, ebx8));
    g43c790 = eax9;
    ebp10 = LoadIconA;
    ebp10();
    GetStockObject();
    ax11 = reinterpret_cast<uint16_t>(RegisterClassA());
    if (!ax11) {
        goto "Ignition";
    }
    timeBeginPeriod();
    fun_404b00();
    eax12 = fun_403510();
    esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 68 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 + 4 - 4 + 4);
    if (!eax12) {
        goto 0;
    }
    esi14 = PeekMessageA;
    edi15 = GetMessageA;
    ebx16 = TranslateMessage;
    ebp17 = DispatchMessageA;
    while (1) {
        zf18 = g43c7a4 == 0;
        esp19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4 - 4 - 4);
        if (zf18) {
            eax20 = reinterpret_cast<int32_t>(edi15());
            esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) - 4 - 4 + 4);
            if (!eax20) 
                break;
            v22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp21) + 16);
            ebx16(v22);
            esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp21) - 4 - 4 + 4);
            ebp17(reinterpret_cast<int32_t>(esp23) + 16, v22);
            esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) - 4 - 4 + 4);
        } else {
            v24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) + 28);
            eax25 = reinterpret_cast<int32_t>(esi14(v24, 0));
            esp26 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp19) - 4 - 4 - 4 + 4);
            if (!eax25) {
                eax27 = fun_4032a0(v24, 0);
                esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp26) - 4 + 4);
                if (eax27) 
                    continue;
                fun_403540(v24, 0);
                esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4 + 4);
            } else {
                eax28 = reinterpret_cast<int32_t>(edi15());
                esp29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp26) - 4 - 4 - 4 - 4 - 4 + 4);
                if (!eax28) 
                    goto addr_403282_13;
                v30 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp29) + 16);
                ebx16(v30);
                esp31 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp29) - 4 - 4 + 4);
                ebp17(reinterpret_cast<int32_t>(esp31) + 16, v30);
                esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp31) - 4 - 4 + 4);
            }
        }
    }
    goto fun_403340;
    addr_403282_13:
    goto v32;
}

int32_t g43c7bc;

int32_t PostMessageA = 0x55462;

void fun_403540(void* a1, int32_t a2) {
    int32_t eax3;

    eax3 = g43c7bc;
    PostMessageA();
    goto eax3;
}

int32_t timeGetTime = 0x5551c;

int32_t g41c830 = 0;

int32_t g41c824 = 0;

int32_t fun_4034d0() {
    int32_t eax1;
    int32_t edx2;
    int1_t zf3;
    int32_t tmp32_4;
    int32_t eax5;

    eax1 = reinterpret_cast<int32_t>(timeGetTime());
    edx2 = g41c830;
    if (!edx2) {
        edx2 = eax1;
    }
    zf3 = g43c7a4 == 0;
    g41c830 = edx2;
    if (!zf3) {
        tmp32_4 = g41c824 + (eax1 - edx2);
        g41c824 = tmp32_4;
    }
    g41c830 = eax1;
    eax5 = g41c824;
    return eax5;
}

int32_t fun_4023f0() {
    fun_402540();
    fun_4025d0();
    fun_4027d0();
    fun_4011a0();
    return 1;
}

void fun_402e30();

int32_t fun_4012a0();

int32_t g41c7b0 = 0;

int32_t g41c544 = 0;

int32_t g41c7a8 = 0;

int32_t fun_402410() {
    int32_t ecx1;
    int32_t eax2;
    int32_t eax3;
    int32_t v4;
    int32_t eax5;
    int1_t zf6;
    int32_t v7;
    void* eax8;
    int32_t eax9;
    int32_t eax10;
    int32_t eax11;

    fun_402e30();
    fun_4012a0();
    ecx1 = g41c548;
    if (ecx1) {
        addr_40247b_2:
        eax2 = g41c7b0;
    } else {
        eax3 = g41c544;
        g4528bc = *reinterpret_cast<struct s11**>(eax3 * 4 + 0x4529d0);
        eax5 = fun_402840(0, 0x3ff00000, v4);
        ecx1 = g41c548;
        if (eax5 == 1) {
            ++g41c544;
        }
        zf6 = g41c544 == 3;
        if (!zf6) 
            goto addr_40247b_2; else 
            goto addr_402461_6;
    }
    addr_402480_7:
    g41c548 = ecx1;
    if (ecx1 == 1 || ecx1 == 2) {
        v7 = eax2;
        __asm__("fild dword [esp+0x0]");
        __asm__("fmul qword [0x41b008]");
        __asm__("fsub qword [0x452950]");
        __asm__("fst qword [0x452a08]");
        eax8 = fun_410df8(v7, __return_address());
        fun_402aa0(eax8, v7);
        ecx1 = g41c548;
    }
    g41c548 = ecx1;
    if (ecx1 == 3 || ecx1 == 4) {
        eax9 = g41c544;
        g4528bc = *reinterpret_cast<struct s11**>(eax9 * 4 + 0x4529d0);
        eax10 = fun_402840(0, 0x40140000, v7);
        eax11 = g41c544;
        if (eax10 == 1) {
            ++eax11;
        }
        g41c544 = eax11;
        if (eax11 == 4) {
            g41c7a8 = 2;
        }
    }
    return 0;
    addr_402461_6:
    __asm__("fild dword [0x41c7b0]");
    ++ecx1;
    eax2 = g41c7b0;
    __asm__("fmul qword [0x41b008]");
    __asm__("fstp qword [0x452950]");
    goto addr_402480_7;
}

int32_t fun_4013a0();

int32_t fun_403820(void* a1);

int32_t fun_402520() {
    void* eax1;

    fun_4013a0();
    eax1 = g452960;
    fun_403820(eax1);
    return 0;
}

int32_t fun_404b90();

int32_t fun_4038e0();

int32_t fun_404b30() {
    fun_404b90();
    fun_4038e0();
    return 1;
}

int32_t fun_404670();

int32_t g43d1c0;

struct s13 {
    signed char[8] pad8;
    int32_t f8;
    signed char[12] pad24;
    int32_t f18;
    int32_t f1c;
    int32_t f20;
    signed char[4] pad40;
    int32_t f28;
    int32_t f2c;
    signed char[4] pad52;
    int32_t f34;
};

struct s13** g43d1bc;

struct s14 {
    signed char[8] pad8;
    int32_t f8;
    int32_t fc;
};

struct s14** g43ceb0;

int32_t g41c894 = 0;

int32_t g41c890 = 0;

int32_t timeKillEvent = 0x5552a;

int32_t fun_403560() {
    int1_t zf1;
    struct s13** eax2;
    struct s13* eax3;
    int1_t zf4;
    struct s13** eax5;
    struct s13* eax6;
    int1_t zf7;
    struct s14** eax8;
    struct s14* eax9;
    int1_t zf10;
    int32_t eax11;

    fun_404670();
    zf1 = g43d1c0 == 0;
    if (!zf1) {
        eax2 = g43d1bc;
        eax3 = *eax2;
        eax3->f20(eax2);
        g43d1c0 = 0;
    }
    zf4 = g43d1bc == 0;
    if (!zf4) {
        eax5 = g43d1bc;
        eax6 = *eax5;
        eax6->f8(eax5);
        g43d1bc = reinterpret_cast<struct s13**>(0);
    }
    zf7 = g43ceb0 == 0;
    if (!zf7) {
        eax8 = g43ceb0;
        eax9 = *eax8;
        eax9->f8(eax8);
        g43ceb0 = reinterpret_cast<struct s14**>(0);
    }
    zf10 = g41c894 == 0;
    if (!zf10) {
        eax11 = g41c890;
        timeKillEvent(eax11);
    }
    return 1;
}

int32_t fun_404890() {
    int1_t zf1;
    struct s13** eax2;
    struct s13* eax3;
    int1_t zf4;
    struct s13** eax5;
    struct s13* eax6;
    int1_t zf7;
    struct s14** eax8;
    struct s14* eax9;
    int1_t zf10;
    int32_t eax11;

    zf1 = g43d1c0 == 0;
    if (!zf1) {
        eax2 = g43d1bc;
        eax3 = *eax2;
        eax3->f20(eax2);
        g43d1c0 = 0;
    }
    zf4 = g43d1bc == 0;
    if (!zf4) {
        eax5 = g43d1bc;
        eax6 = *eax5;
        eax6->f8(eax5);
        g43d1bc = reinterpret_cast<struct s13**>(0);
    }
    zf7 = g43ceb0 == 0;
    if (!zf7) {
        eax8 = g43ceb0;
        eax9 = *eax8;
        eax9->f8(eax8);
        g43ceb0 = reinterpret_cast<struct s14**>(0);
    }
    zf10 = g41c894 == 0;
    if (!zf10) {
        eax11 = g41c890;
        timeKillEvent(eax11);
    }
    return 1;
}

int32_t g43cce4;

int32_t g43cd14;

int32_t fun_404670() {
    int32_t eax1;

    eax1 = reinterpret_cast<int32_t>(g43cce4());
    if (eax1) {
        goto g43cd14;
    } else {
        return 0;
    }
}

int32_t g43ccdc;

int32_t g43cd10;

int32_t fun_404640(int32_t a1) {
    int32_t eax2;

    eax2 = reinterpret_cast<int32_t>(g43ccdc());
    if (eax2) {
        goto g43cd10;
    } else {
        return 0;
    }
}

int32_t g41b1b0 = 0x6f1d2b61;

struct s15 {
    signed char f0;
    signed char[31] pad32;
    signed char f20;
};

struct s15* g43cd60;

signed char g43cda8;

int32_t g43ceb4;

int32_t g43d1c4;

int32_t g43d1b8;

int32_t fun_4046f0(int32_t a1) {
    int32_t eax2;
    int32_t eax3;
    struct s14** ecx4;
    void* v5;
    struct s14* eax6;
    int32_t eax7;
    struct s13** eax8;
    struct s13* eax9;
    int32_t eax10;
    struct s13** ecx11;
    struct s13* eax12;
    int32_t eax13;
    struct s13** ecx14;
    struct s13* eax15;
    int32_t eax16;
    struct s13** eax17;
    struct s13* eax18;
    int32_t eax19;
    int32_t* edi20;
    int32_t ecx21;
    int32_t edx22;
    int32_t* edi23;
    int32_t ecx24;
    int32_t* edi25;
    int32_t ecx26;
    int32_t edx27;
    int32_t edi28;

    eax2 = g41b1b0;
    eax3 = fun_40a498();
    if (!eax3) {
        ecx4 = g43ceb0;
        v5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 36 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 24);
        eax6 = *ecx4;
        eax7 = reinterpret_cast<int32_t>(eax6->fc());
        if (!eax7) {
            eax8 = g43d1bc;
            eax9 = *eax8;
            eax10 = reinterpret_cast<int32_t>(eax9->f2c());
            if (!eax10) {
                ecx11 = g43d1bc;
                eax12 = *ecx11;
                eax13 = reinterpret_cast<int32_t>(eax12->f34());
                if (!eax13) {
                    ecx14 = g43d1bc;
                    eax15 = *ecx14;
                    eax16 = reinterpret_cast<int32_t>(eax15->f18());
                    if (!eax16) {
                        eax17 = g43d1bc;
                        eax18 = *eax17;
                        eax19 = reinterpret_cast<int32_t>(eax18->f1c());
                        g43d1c0 = 1;
                        if (eax19 < 0) {
                            g43d1c0 = 0;
                        }
                        edi20 = reinterpret_cast<int32_t*>(0x43cd68);
                        ecx21 = 16;
                        edx22 = 0;
                        g43cd60 = reinterpret_cast<struct s15*>(0x43cd68);
                        while (ecx21) {
                            --ecx21;
                            *edi20 = -1;
                            ++edi20;
                        }
                        edi23 = reinterpret_cast<int32_t*>(0x43ceb8);
                        ecx24 = 64;
                        g43cda8 = 0;
                        while (ecx24) {
                            --ecx24;
                            *edi23 = 0;
                            ++edi23;
                        }
                        edi25 = reinterpret_cast<int32_t*>(0x43cdb0);
                        ecx26 = 64;
                        while (ecx26) {
                            --ecx26;
                            *edi25 = 0;
                            ++edi25;
                        }
                        do {
                            *reinterpret_cast<signed char*>(edx22 + 0x43cfb8) = 0;
                            *reinterpret_cast<int32_t*>(edx22 * 4 + 0x43d1c8) = 0;
                            *reinterpret_cast<signed char*>(edx22 + 0x43d0b8) = 0;
                            ++edx22;
                        } while (edx22 < 0x100);
                        edx27 = g41c7b0;
                        g43ceb4 = 0x43d1bc;
                        g43d1c4 = 0;
                        g43d1b8 = edx27;
                        g41c894 = 0;
                        g41c890 = 0;
                        goto v5;
                    } else {
                        goto 0x43d1bc;
                    }
                } else {
                    goto 0x300;
                }
            } else {
                goto edi28;
            }
        } else {
            goto 16;
        }
    } else {
        goto eax2;
    }
}

void* fun_4035a0(signed char* a1) {
    int32_t* eax2;
    void* esi3;
    void** eax4;
    signed char* ecx5;
    void* edi6;
    void*** edi7;
    int32_t ecx8;

    eax2 = reinterpret_cast<int32_t*>(0x4530d0);
    esi3 = reinterpret_cast<void*>(0);
    do {
        if (!*eax2) 
            break;
        ++eax2;
        esi3 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi3) + 1);
    } while (reinterpret_cast<uint32_t>(eax2) < 0x4534d0);
    if (!reinterpret_cast<int1_t>(esi3 == 0x100)) {
        eax4 = fun_4111a0(0x140);
        if (eax4) {
            ecx5 = a1;
            *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi3) * 4 + 0x4530d0) = eax4;
            if (!ecx5) {
                *reinterpret_cast<void***>(eax4) = reinterpret_cast<void**>(0);
            } else {
                edi6 = reinterpret_cast<void*>(0);
                if (*ecx5) {
                    do {
                        if (reinterpret_cast<int32_t>(edi6) >= reinterpret_cast<int32_t>(63)) 
                            break;
                        *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax4) + reinterpret_cast<uint32_t>(edi6)) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx5) + reinterpret_cast<uint32_t>(edi6));
                        edi6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi6) + 1);
                    } while (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx5) + reinterpret_cast<uint32_t>(edi6)));
                }
                *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax4) + reinterpret_cast<uint32_t>(edi6)) = 0;
            }
            edi7 = reinterpret_cast<void***>(eax4 + 64);
            ecx8 = 64;
            while (ecx8) {
                --ecx8;
                *edi7 = reinterpret_cast<void**>(0);
                edi7 = edi7 + 4;
                esi3 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi3) + 4);
            }
            return esi3;
        } else {
            return 0xffffffff;
        }
    } else {
        return 0xffffffff;
    }
}

int32_t g43ae4c = 0;

void** fun_4111c0(void** a1, int32_t a2);

void** fun_4111a0(void** a1) {
    int32_t eax2;
    void** eax3;

    eax2 = g43ae4c;
    eax3 = fun_4111c0(a1, eax2);
    return eax3;
}

struct s16 {
    struct s16* f0;
    signed char[2060] pad2064;
    void** f810;
};

signed char* fun_4132a0(void** a1, struct s16** a2, uint32_t* a3);

int32_t g454574;

int32_t HeapFree = 0x555cc;

struct s17 {
    signed char[2064] pad2064;
    int32_t f810;
};

void fun_413300(struct s17* a1, int32_t a2, signed char* a3);

void fun_411250(void** a1) {
    void* esp2;
    signed char* eax3;
    int32_t eax4;
    struct s17* v5;
    int32_t v6;

    esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4);
    if (a1) {
        eax3 = fun_4132a0(a1, reinterpret_cast<int32_t>(esp2) + 8, reinterpret_cast<int32_t>(esp2) + 4);
        if (!eax3) {
            eax4 = g454574;
            HeapFree(eax4, 0, a1);
        } else {
            fun_413300(v5, v6, eax3);
            return;
        }
    }
    return;
}

int32_t fun_403820(void* a1) {
    void** ecx2;
    void** v3;
    void*** v4;
    int32_t v5;
    void** ebp6;
    void** v7;
    int32_t v8;
    void** ebx9;
    void** edi10;
    int32_t esi11;
    void** v12;

    ecx2 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(a1) * 4 + 0x4530d0);
    v3 = ecx2;
    v4 = reinterpret_cast<void***>(ecx2 + 64);
    v5 = 64;
    do {
        if (*v4) {
            ebp6 = *v4;
            v7 = *v4;
            v8 = 64;
            do {
                ebx9 = *reinterpret_cast<void***>(ebp6);
                if (ebx9) {
                    edi10 = ebx9 + 4;
                    esi11 = 16;
                    do {
                        if (*reinterpret_cast<void***>(edi10)) {
                            v12 = *reinterpret_cast<void***>(edi10 + 0xfffffffc);
                            fun_411250(v12);
                        }
                        edi10 = edi10 + 8;
                        --esi11;
                    } while (esi11);
                    fun_411250(ebx9);
                }
                ebp6 = ebp6 + 4;
                --v8;
            } while (v8);
            fun_411250(v7);
        }
        v4 = v4 + 4;
        --v5;
    } while (v5);
    fun_411250(v3);
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(a1) * 4 + 0x4530d0) = 0;
    return 1;
}

int32_t DirectSoundCreate = 0x554b8;

int32_t fun_409476(int32_t a1, int32_t a2, int32_t a3) {
    goto DirectSoundCreate;
}

int32_t g43ccd8;

int32_t fun_4052c0();

void fun_4052d0();

void fun_405900();

int32_t fun_405bf0();

int32_t g43cce8;

int32_t fun_405ce0();

int32_t g43ccec;

struct s19 {
    signed char[28] pad28;
    int32_t f1c;
};

struct s18 {
    int32_t f0;
    signed char[40] pad44;
    struct s19** f2c;
};

int32_t fun_405cf0(int32_t* a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, struct s18* a6, int32_t a7, int32_t a8);

struct s21 {
    signed char[96] pad96;
    int32_t f60;
    int32_t f64;
    signed char[4] pad108;
    int32_t f6c;
    signed char[16] pad128;
    int32_t f80;
};

struct s20 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    int32_t fc;
    int32_t* f10;
    int32_t* f14;
    void* f18;
    uint32_t f1c;
    uint32_t f20;
    signed char[8] pad44;
    struct s21** f2c;
};

int32_t fun_405d60(void* a1, void* a2, void* a3, int32_t a4, void* a5, int32_t a6, struct s20* a7, void* a8, uint32_t a9);

int32_t g43ccf4;

int32_t fun_405ef0(struct s20* a1);

struct s23 {
    signed char[56] pad56;
    int32_t f38;
};

struct s22 {
    int32_t f0;
    signed char[36] pad40;
    int32_t f28;
    struct s23** f2c;
};

int32_t fun_405fd0(struct s22* a1);

int32_t g43ccfc;

int32_t fun_406040();

int32_t g43cd00;

int32_t fun_406050(struct s20* a1, int32_t a2);

int32_t g43cd04;

int32_t fun_4061a0(struct s20* a1);

int32_t fun_4061f0(signed char* a1);

int32_t g43cd0c;

int32_t fun_406250();

int32_t fun_405220() {
    g43ccd8 = reinterpret_cast<int32_t>(fun_4052c0);
    g43ccdc = reinterpret_cast<int32_t>(fun_4052d0);
    g43cce0 = reinterpret_cast<int32_t>(fun_405900);
    g43cce4 = reinterpret_cast<int32_t>(fun_405bf0);
    g43cce8 = reinterpret_cast<int32_t>(fun_405ce0);
    g43ccec = reinterpret_cast<int32_t>(fun_405cf0);
    g43ccf0 = reinterpret_cast<int32_t>(fun_405d60);
    g43ccf4 = reinterpret_cast<int32_t>(fun_405ef0);
    g43ccf8 = reinterpret_cast<int32_t>(fun_405fd0);
    g43ccfc = reinterpret_cast<int32_t>(fun_406040);
    g43cd00 = reinterpret_cast<int32_t>(fun_406050);
    g43cd04 = reinterpret_cast<int32_t>(fun_4061a0);
    g43cd08 = reinterpret_cast<int32_t>(fun_4061f0);
    g43cd0c = reinterpret_cast<int32_t>(fun_406250);
    return 1;
}

int32_t fun_404d20();

int32_t fun_404d30();

int32_t g43cd18;

int32_t fun_404d40();

int32_t g43cd1c;

int32_t fun_404d50();

struct s24 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    signed char f9;
    void* fc;
    int32_t f10;
    int32_t f14;
    void* f18;
    signed char* f1c;
};

int32_t fun_404d60(void* a1, struct s24* a2, void* a3, void* a4, int32_t a5);

int32_t g43cd24;

int32_t fun_404e20(void* a1, void* a2, void* a3, void* a4);

int32_t g43cd28;

struct s27 {
    int32_t f0;
    int32_t f4;
};

struct s28 {
    void*** f0;
    int32_t f4;
    int32_t f8;
};

struct s29 {
    int32_t f0;
    int32_t f4;
};

struct s30 {
    int32_t f0;
    signed char[4] pad8;
    int32_t f8;
    int32_t fc;
    int32_t f10;
    int32_t f14;
    int32_t f18;
    int32_t f1c;
};

struct s26 {
    struct s27* f0;
    struct s28* f4;
    struct s29* f8;
    struct s30* fc;
};

struct s25 {
    int32_t f0;
    struct s26* f4;
};

int32_t fun_405050(struct s25* a1);

int32_t g43cd2c;

int32_t fun_404fb0(int32_t a1, int32_t a2, int32_t a3);

int32_t g43cd30;

struct s31 {
    void*** f0;
    int32_t f4;
    int32_t f8;
};

struct s32 {
    signed char[4] pad4;
    int32_t f4;
    int32_t f8;
    int32_t fc;
    int32_t f10;
    int32_t f14;
    int32_t f18;
    int32_t f1c;
};

struct s31* fun_407000(struct s32* a1, struct s31* a2);

int32_t g43cd48;

void*** fun_406860(void*** a1, void*** a2);

int32_t g43cd44;

int32_t fun_4070d0(void** a1, void*** a2);

int32_t g43cd4c;

struct s33 {
    signed char[24] pad24;
    void** f18;
    signed char[3] pad28;
    void** f1c;
};

int32_t fun_4070f0(struct s33* a1);

int32_t g43cd50;

struct s34 {
    void** f0;
    signed char[23] pad24;
    int32_t f18;
    int32_t f1c;
};

int32_t fun_407110(struct s34* a1, void*** a2);

int32_t g43cd54;

int32_t fun_406f60();

int32_t g43cd5c;

struct s35 {
    void* f0;
    void* f4;
    int32_t f8;
    void* fc;
    void* f10;
    void* f14;
    void* f18;
    struct s24* f1c;
    int32_t f20;
    void* f24;
};

int32_t fun_404f10(struct s35* a1);

int32_t g43cd58;

struct s36 {
    void* f0;
    void* f4;
    int32_t f8;
    void* fc;
    void* f10;
    void* f14;
    void* f18;
    struct s24* f1c;
    signed char[4] pad36;
    void* f24;
};

int32_t fun_404f70(struct s36* a1);

void fun_407fe0();

void fun_407190();

int32_t fun_406fc0();

int32_t fun_404c60() {
    g43cd10 = reinterpret_cast<int32_t>(fun_404d20);
    g43cd14 = reinterpret_cast<int32_t>(fun_404d30);
    g43cd18 = reinterpret_cast<int32_t>(fun_404d40);
    g43cd1c = reinterpret_cast<int32_t>(fun_404d50);
    g43cd20 = reinterpret_cast<int32_t>(fun_404d60);
    g43cd24 = reinterpret_cast<int32_t>(fun_404e20);
    g43cd28 = reinterpret_cast<int32_t>(fun_405050);
    g43cd2c = reinterpret_cast<int32_t>(fun_404fb0);
    g43cd30 = reinterpret_cast<int32_t>(fun_407000);
    g43cd48 = reinterpret_cast<int32_t>(fun_406860);
    g43cd44 = reinterpret_cast<int32_t>(fun_4070d0);
    g43cd4c = reinterpret_cast<int32_t>(fun_4070f0);
    g43cd50 = reinterpret_cast<int32_t>(fun_407110);
    g43cd54 = reinterpret_cast<int32_t>(fun_406f60);
    g43cd5c = reinterpret_cast<int32_t>(fun_404f10);
    g43cd58 = reinterpret_cast<int32_t>(fun_404f70);
    fun_407fe0();
    fun_407190();
    fun_406fc0();
    return 1;
}

int32_t g43cd64;

void fun_404aa0(int32_t a1, int32_t a2) {
    int32_t ecx3;

    ecx3 = g43cd64;
    if (ecx3) {
        ecx3(a1, a2);
    }
    return;
}

void fun_404ac0(int32_t a1, uint32_t a2) {
    signed char cl3;
    struct s15* eax4;
    struct s15* eax5;
    int1_t zf6;

    if (reinterpret_cast<int32_t>(a2) <= reinterpret_cast<int32_t>(83) && (cl3 = *reinterpret_cast<signed char*>(a2 + 0x41c898), eax4 = g43cd60, eax4->f0 = cl3, eax5 = g43cd60, eax5->f20 = cl3, g43cd60 = reinterpret_cast<struct s15*>(&g43cd60->pad32), zf6 = reinterpret_cast<int1_t>(g43cd60 == 0x43cd88), zf6)) {
        g43cd60 = reinterpret_cast<struct s15*>(0x43cd68);
    }
    return;
}

struct s26* g43ea34;

struct s27* g41c9dc = reinterpret_cast<struct s27*>(0);

struct s29* g41c9e4 = reinterpret_cast<struct s29*>(0);

void fun_4067e0(struct s34* a1, void*** a2);

int32_t g41c9b8 = 0;

int32_t g41c9bc = 0;

uint32_t g41c9c0 = 0;

uint32_t g41c9c4 = 0;

uint32_t g41c9d0 = 0;

uint32_t g41c9c8 = 0;

uint32_t g41c9cc = 0;

int32_t g45306c;

int32_t g41c9d4 = 0;

struct s24* fun_408dc9();

struct s24* fun_405170() {
    struct s26* eax1;
    struct s28* esi2;
    void*** v3;
    uint32_t v4;
    uint32_t tmp32_5;
    int32_t v6;
    uint32_t tmp32_7;
    int32_t v8;
    int32_t eax9;
    struct s24* eax10;

    eax1 = g43ea34;
    g41c9dc = eax1->f0;
    g41c9e4 = eax1->f8;
    esi2 = eax1->f4;
    v3 = esi2->f0;
    fun_4067e0(reinterpret_cast<int32_t>(__zero_stack_offset()) - 64 - 4 + 4, v3);
    g41c9b8 = esi2->f4;
    g41c9bc = esi2->f8;
    g41c9c0 = (v4 & 0xff) << 8;
    g41c9c4 = v4 & 0xff00;
    tmp32_5 = (v6 << 8) + g41c9c0;
    g41c9d0 = v4 & 0xffff0000;
    g41c9c8 = tmp32_5;
    tmp32_7 = (v8 << 8) + g41c9c4;
    g41c9cc = tmp32_7;
    eax9 = g45306c;
    g41c9d4 = eax9;
    eax10 = fun_408dc9();
    return eax10;
}

void fun_4050b0(int32_t a1) {
    return;
}

int32_t g41c97c = 0;

int32_t g41c980 = 0;

void*** g41c984 = reinterpret_cast<void***>(0);

int32_t g41c988 = 0;

int32_t g41c98c = 0;

int32_t g41c990 = 0;

int32_t g41c994 = 0;

int32_t g41c998 = 0;

int32_t g41c99c = 0;

int32_t g41c9a0 = 0;

int32_t g41c9a4 = 0;

int32_t g41c9a8 = 0;

int32_t g41c9ac = 0;

struct s37 {
    signed char[4] pad4;
    void* f4;
    void* f8;
    void* fc;
    void* f10;
    void* f14;
    void* f18;
    int32_t f1c;
    int32_t f20;
    int32_t f24;
    int32_t f28;
    int32_t f2c;
    int32_t f30;
    signed char* f34;
};

void fun_408040(struct s37* a1);

void fun_4050c0() {
    struct s26* eax1;
    struct s28** ecx2;
    struct s26* ecx3;
    struct s26* ecx4;
    struct s30** ecx5;

    eax1 = g43ea34;
    g41c97c = eax1->f0->f0;
    ecx2 = &eax1->f4;
    g41c980 = eax1->f0->f4;
    g41c984 = (*ecx2)->f0;
    g41c988 = (*ecx2)->f4;
    ecx3 = g43ea34;
    g41c98c = ecx3->f8->f0;
    g41c990 = ecx3->f8->f4;
    ecx4 = g43ea34;
    ecx5 = &ecx4->fc;
    g41c994 = ecx4->fc->f8;
    g41c998 = (*ecx5)->fc;
    g41c99c = (*ecx5)->f10;
    g41c9a0 = (*ecx5)->f14;
    g41c9a4 = (*ecx5)->f18;
    g41c9a8 = (*ecx5)->f1c;
    g41c9ac = (*ecx5)->f0;
    fun_408040(0x41c978);
    return;
}

int32_t fun_406050(struct s20* a1, int32_t a2) {
    struct s21** eax3;
    struct s21* ebx4;
    int32_t eax5;
    int32_t v6;
    struct s21** eax7;
    struct s21* ebx8;
    int32_t eax9;
    struct s21** eax10;
    struct s21* ebx11;
    int32_t v12;
    struct s21** eax13;
    struct s21* ebx14;
    int32_t eax15;
    int32_t** edx16;
    int32_t** ebx17;
    int32_t* ecx18;
    int32_t* v19;
    struct s21** eax20;
    struct s21* ebx21;
    int32_t* v22;
    struct s21** eax23;
    struct s21* ebx24;
    int32_t* v25;
    void* esi26;
    int32_t v27;
    int32_t v28;

    if (a1->f0) {
        if (a1->f8 == 1) {
            if (a1->fc != a2) {
                eax3 = a1->f2c;
                ebx4 = *eax3;
                eax5 = reinterpret_cast<int32_t>(ebx4->f80());
                if (!eax5) {
                    a1->fc = 0;
                } else {
                    goto v6;
                }
            } else {
                return 1;
            }
        }
        eax7 = a1->f2c;
        ebx8 = *eax7;
        eax9 = reinterpret_cast<int32_t>(ebx8->f60());
        if (eax9 == 0x887601c2) {
            eax10 = a1->f2c;
            ebx11 = *eax10;
            ebx11->f6c(eax10);
            a1->f4 = 1;
        }
        if (a2 != 1) {
            if (a2 != 2) {
                if (a2 != 3) {
                    goto v12;
                } else {
                    eax13 = a1->f2c;
                    ebx14 = *eax13;
                    eax15 = reinterpret_cast<int32_t>(ebx14->f64());
                    edx16 = &a1->f10;
                    ebx17 = &a1->f14;
                    ecx18 = v19;
                    *edx16 = reinterpret_cast<int32_t*>(0);
                }
            } else {
                eax20 = a1->f2c;
                ebx21 = *eax20;
                eax15 = reinterpret_cast<int32_t>(ebx21->f64());
                edx16 = &a1->f10;
                ecx18 = v22;
                ebx17 = &a1->f14;
                *edx16 = ecx18;
            }
            *ebx17 = ecx18;
        } else {
            eax23 = a1->f2c;
            ebx24 = *eax23;
            eax15 = reinterpret_cast<int32_t>(ebx24->f64());
            edx16 = &a1->f10;
            ebx17 = &a1->f14;
            *edx16 = v25;
            *ebx17 = reinterpret_cast<int32_t*>(0);
        }
        if (!eax15) {
            a1->fc = a2;
            a1->f18 = esi26;
            a1->f8 = 1;
            goto v27;
        } else {
            *edx16 = reinterpret_cast<int32_t*>(0);
            *ebx17 = reinterpret_cast<int32_t*>(0);
            a1->f8 = 0;
            goto v28;
        }
    } else {
        return 0;
    }
}

int32_t fun_4061a0(struct s20* a1) {
    struct s21*** ecx2;
    struct s21** eax3;
    struct s21* eax4;
    int32_t eax5;

    if (a1->f0) {
        if (a1->f8) {
            ecx2 = &a1->f2c;
            eax3 = *ecx2;
            eax4 = *eax3;
            eax5 = reinterpret_cast<int32_t>(eax4->f80());
            if (!eax5) {
                a1->f8 = 0;
                a1->fc = 0;
                goto ecx2;
            } else {
                goto ecx2;
            }
        } else {
            return 1;
        }
    } else {
        return 0;
    }
}

void** fun_406470(void** a1) {
    void** eax2;

    if (a1) {
        eax2 = fun_4111a0(a1);
        return eax2;
    } else {
        return 0;
    }
}

void fun_4065a0(void** a1, void** a2) {
    void** esi3;
    void** edi4;
    void** esi5;
    void** eax6;
    void** edx7;
    void** eax8;

    esi3 = reinterpret_cast<void**>(0);
    edi4 = a1;
    if (edi4) {
        if (*reinterpret_cast<void***>(edi4)) {
            do {
                ++esi3;
            } while (*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edi4) + reinterpret_cast<unsigned char>(esi3)));
        }
        esi5 = esi3 + 1;
        eax6 = fun_406470(esi5);
        edx7 = eax6;
        *reinterpret_cast<void***>(a2) = eax6;
        eax8 = reinterpret_cast<void**>(0);
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi5) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(esi5 == 0))) {
            do {
                ++eax8;
                *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax8) + reinterpret_cast<unsigned char>(edx7) + 0xffffffff) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edi4) + reinterpret_cast<unsigned char>(eax8));
            } while (reinterpret_cast<signed char>(eax8) < reinterpret_cast<signed char>(esi5));
        }
        return;
    } else {
        *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
        return;
    }
}

void fun_4067a0(void** a1, void** a2) {
    void** eax3;
    void** ecx4;
    void** esi5;
    void** edi6;
    void** ebp7;
    void** edx8;

    eax3 = a1;
    ecx4 = a2;
    esi5 = reinterpret_cast<void**>(0);
    edi6 = *reinterpret_cast<void***>(eax3 + 16);
    ebp7 = *reinterpret_cast<void***>(ecx4 + 16);
    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax3 + 8)) > reinterpret_cast<signed char>(0)) {
        do {
            edx8 = reinterpret_cast<void**>(0);
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax3 + 4)) > reinterpret_cast<signed char>(0)) {
                do {
                    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edx8) + reinterpret_cast<unsigned char>(ebp7)) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edx8) + reinterpret_cast<unsigned char>(edi6));
                    ++edx8;
                } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax3 + 4)) > reinterpret_cast<signed char>(edx8));
            }
            edi6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi6) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax3 + 20)));
            ebp7 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp7) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx4 + 20)));
            ++esi5;
        } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax3 + 8)) > reinterpret_cast<signed char>(esi5));
    }
    return;
}

struct s38 {
    signed char[8] pad8;
    int32_t f8;
    void** fc;
};

void fun_406490(struct s38* a1) {
    struct s38* esi2;
    void** edi3;
    void** v4;
    void** eax5;
    int32_t edx6;
    void** ecx7;
    void* eax8;
    int32_t edx9;
    void* ecx10;

    esi2 = a1;
    edi3 = esi2->fc;
    v4 = reinterpret_cast<void**>(esi2->f8 * 4 + 0xfa0);
    eax5 = fun_4111a0(v4);
    edx6 = 0;
    esi2->fc = eax5;
    if (esi2->f8 > 0) {
        ecx7 = edi3;
        eax8 = reinterpret_cast<void*>(0);
        do {
            ecx7 = ecx7 + 4;
            eax8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax8) + 4);
            ++edx6;
            *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(esi2->fc) + reinterpret_cast<uint32_t>(eax8) - 4) = *reinterpret_cast<void***>(ecx7);
        } while (esi2->f8 > edx6);
    }
    edx9 = esi2->f8;
    if (edx9 + 0x3e8 > edx9) {
        ecx10 = reinterpret_cast<void*>(edx9 * 4);
        do {
            ecx10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx10) + 4);
            ++edx9;
            *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(esi2->fc) + reinterpret_cast<uint32_t>(ecx10) - 4) = 0;
        } while (esi2->f8 + 0x3e8 > edx9);
    }
    esi2->f8 = esi2->f8 + 0x3e8;
    fun_411250(edi3);
    return;
}

void fun_406570(void** a1) {
    if (a1) {
        fun_411250(a1);
    }
    return;
}

void** g444b28;

void fun_406f40(void** a1);

void fun_406d90(void** a1) {
    void** edx2;
    void** edi3;
    void** ebp4;
    void** eax5;
    void** ecx6;
    void** ebx7;
    void** esi8;
    void** v9;
    void** ebp10;
    void** v11;
    void** ecx12;

    edx2 = *reinterpret_cast<void***>(a1 + 8);
    if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edx2) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(edx2 == 0) || (reinterpret_cast<signed char>(edx2) > reinterpret_cast<signed char>(0x100) || (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(a1 + 4)) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(a1 + 4) == 0) || (reinterpret_cast<signed char>(*reinterpret_cast<void***>(a1 + 4)) > reinterpret_cast<signed char>(0x100) || (edi3 = g444b28, ebp4 = *reinterpret_cast<void***>(a1 + 16), eax5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp4) & 0xffff0000), ecx6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp4) & 0xffffff00), edi3 == 0))))) {
        addr_406f2b_2:
        return;
    } else {
        do {
            if (*reinterpret_cast<void***>(edi3 + 8) == eax5) 
                break;
            edi3 = *reinterpret_cast<void***>(edi3 + 20);
        } while (edi3);
        goto addr_406df9_5;
    }
    ebx7 = *reinterpret_cast<void***>(edi3 + 12);
    do {
        if (*reinterpret_cast<void***>(ebx7 + 8) == ecx6) 
            break;
        ebx7 = *reinterpret_cast<void***>(ebx7 + 20);
    } while (ebx7);
    goto addr_406e10_9;
    esi8 = *reinterpret_cast<void***>(ebx7 + 12);
    do {
        if (*reinterpret_cast<void***>(esi8 + 8) == ebp4) 
            break;
        esi8 = *reinterpret_cast<void***>(esi8 + 20);
    } while (esi8);
    goto addr_406e27_13;
    v9 = reinterpret_cast<void**>(0);
    ebp10 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edx2) * 4 + 0x444c40);
    do {
        if (*reinterpret_cast<void***>(ebp10 + 4) == ebx7) 
            break;
        v9 = ebp10;
        ebp10 = *reinterpret_cast<void***>(ebp10);
    } while (ebp10);
    goto addr_406e4e_17;
    if (*reinterpret_cast<void***>(esi8 + 20) || *reinterpret_cast<void***>(esi8 + 16)) {
        if (!*reinterpret_cast<void***>(esi8 + 16)) {
            *reinterpret_cast<void***>(ebx7 + 12) = *reinterpret_cast<void***>(esi8 + 20);
        } else {
            *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi8 + 16) + 20) = *reinterpret_cast<void***>(esi8 + 20);
        }
        if (*reinterpret_cast<void***>(esi8 + 20)) {
            *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi8 + 20) + 16) = *reinterpret_cast<void***>(esi8 + 16);
        }
    } else {
        if (*reinterpret_cast<void***>(ebx7 + 20) || *reinterpret_cast<void***>(ebx7 + 16)) {
            if (!*reinterpret_cast<void***>(ebx7 + 16)) {
                *reinterpret_cast<void***>(edi3 + 12) = *reinterpret_cast<void***>(ebx7 + 20);
            } else {
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx7 + 16) + 20) = *reinterpret_cast<void***>(ebx7 + 20);
            }
            if (*reinterpret_cast<void***>(ebx7 + 20)) {
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx7 + 20) + 16) = *reinterpret_cast<void***>(ebx7 + 16);
            }
        } else {
            v11 = *reinterpret_cast<void***>(edi3 + 8);
            fun_406f40(v11);
            ecx12 = edi3 + 20;
            if (!*reinterpret_cast<void***>(edi3 + 16)) {
                g444b28 = *reinterpret_cast<void***>(ecx12);
            } else {
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi3 + 16) + 20) = *reinterpret_cast<void***>(ecx12);
            }
            if (*reinterpret_cast<void***>(ecx12)) {
                *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx12) + 16) = *reinterpret_cast<void***>(edi3 + 16);
            }
            fun_406570(edi3);
        }
        if (!v9) {
            *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 8)) * 4 + 0x444c40) = *reinterpret_cast<void***>(ebp10);
        } else {
            *reinterpret_cast<void***>(v9) = *reinterpret_cast<void***>(ebp10);
        }
        fun_406570(ebp10);
        fun_406570(ebx7);
    }
    fun_406570(esi8);
    goto addr_406f2b_2;
    addr_406e4e_17:
    return;
    addr_406e27_13:
    return;
    addr_406e10_9:
    return;
    addr_406df9_5:
    return;
}

struct s40 {
    signed char[8] pad8;
    void* f8;
    void** fc;
};

struct s39 {
    struct s39* f0;
    struct s40* f4;
};

void** fun_406d50(void** a1, void** a2);

void fun_406ba0(void** a1, void** a2);

void fun_406b70(void** a1, void** a2, void** a3);

void fun_406a10(void** a1) {
    void** ebx2;
    void* esp3;
    void** edx4;
    struct s39* esi5;
    struct s40* ebp6;
    void** ecx7;
    void** v8;
    void** eax9;
    void** v10;
    void** eax11;
    void** ecx12;
    void** v13;
    void*** esp14;
    void** v15;
    void** eax16;
    void* esp17;
    void*** esi18;
    void** eax19;
    void** v20;
    void* esp21;
    void** edi22;
    int32_t ecx23;
    void** v24;
    void* esp25;
    void*** esi26;
    void** eax27;
    void** edi28;
    int32_t ecx29;
    void** eax30;
    int32_t ecx31;
    void** eax32;

    ebx2 = a1;
    esp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 72 - 4 - 4 - 4 - 4);
    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx2 + 8)) <= reinterpret_cast<signed char>(0)) {
        addr_406b66_2:
        return;
    } else {
        do {
            edx4 = *reinterpret_cast<void***>(ebx2 + 8);
            if (reinterpret_cast<signed char>(edx4) > reinterpret_cast<signed char>(0x100)) 
                goto addr_406b66_2;
            if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx2 + 4)) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(ebx2 + 4) == 0)) 
                goto addr_406b66_2;
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx2 + 4)) > reinterpret_cast<signed char>(0x100)) 
                goto addr_406b66_2;
            esi5 = *reinterpret_cast<struct s39**>(reinterpret_cast<unsigned char>(edx4) * 4 + 0x444c40);
            if (esi5) {
                do {
                    ebp6 = esi5->f4;
                    ecx7 = *reinterpret_cast<void***>(ebx2 + 4);
                    v8 = ebp6->fc;
                    eax9 = fun_406d50(ecx7, v8);
                    v10 = eax9;
                    esp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp3) - 4 - 4 - 4 + 4 + 8);
                    if (eax9) 
                        goto addr_406a81_8;
                    esi5 = esi5->f0;
                } while (esi5);
                eax11 = g444b28;
                ecx12 = *reinterpret_cast<void***>(ebx2 + 8);
                v13 = eax11;
                esp14 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp3) - 4 - 4);
                v15 = ecx12;
            } else {
                eax16 = g444b28;
                v13 = eax16;
                esp14 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp3) - 4 - 4);
                v15 = edx4;
            }
            fun_406ba0(v15, v13);
            esp3 = reinterpret_cast<void*>(esp14 - 4 + 4 + 8);
        } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx2 + 8)) > reinterpret_cast<signed char>(0));
        goto addr_406ae8_14;
    }
    addr_406a81_8:
    esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp3) - 4);
    if (!reinterpret_cast<int1_t>(v10 == 0xffffffff)) {
        esi18 = reinterpret_cast<void***>(0x4448e8);
        eax19 = fun_406470(24);
        v20 = eax19;
        esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4 + 4 + 4);
        edi22 = eax19;
        ecx23 = 6;
        while (ecx23) {
            --ecx23;
            *reinterpret_cast<void***>(edi22) = *esi18;
            edi22 = edi22 + 4;
            esi18 = esi18 + 4;
        }
        *reinterpret_cast<void***>(v20) = *reinterpret_cast<void***>(v10 + 4);
        *reinterpret_cast<void***>(v20 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx2 + 4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v10 + 4)));
        *reinterpret_cast<void***>(v20 + 8) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp6->f8) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v20)));
        v24 = *reinterpret_cast<void***>(v10 + 20);
        fun_406b70(v10, v20, v24);
        esp25 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp21) - 4 - 4 - 4 - 4 + 4 + 12);
    } else {
        esi26 = reinterpret_cast<void***>(0x4448e8);
        eax27 = fun_406470(24);
        v20 = eax27;
        esp25 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4 + 4 + 4);
        edi28 = eax27;
        ecx29 = 6;
        while (ecx29) {
            --ecx29;
            *reinterpret_cast<void***>(edi28) = *esi26;
            edi28 = edi28 + 4;
            esi26 = esi26 + 4;
        }
        *reinterpret_cast<void***>(v20 + 4) = *reinterpret_cast<void***>(ebx2 + 4);
        *reinterpret_cast<void***>(v20 + 8) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp6->f8) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v20)));
        eax30 = ebp6->fc;
        *reinterpret_cast<void***>(v20 + 20) = eax30;
        if (!eax30) 
            goto addr_406ac3_23; else 
            goto addr_406ac0_24;
    }
    addr_406b3a_25:
    ecx31 = 16;
    while (ecx31) {
        --ecx31;
    }
    eax32 = *reinterpret_cast<void***>(v20 + 8);
    *reinterpret_cast<void***>(ebx2 + 16) = eax32;
    *reinterpret_cast<void***>(ebx2 + 20) = reinterpret_cast<void**>(0x100);
    fun_4067a0(reinterpret_cast<int32_t>(esp25) - 4 + 28, ebx2);
    goto addr_406b66_2;
    addr_406ac3_23:
    ebp6->fc = v20;
    goto addr_406b3a_25;
    addr_406ac0_24:
    *reinterpret_cast<void***>(eax30 + 16) = v20;
    goto addr_406ac3_23;
    addr_406ae8_14:
    return;
}

void** fun_406d50(void** a1, void** a2) {
    void** eax3;
    void** ecx4;
    void** esi5;

    eax3 = a2;
    if (!eax3) {
        return 0xffffffff;
    }
    ecx4 = a1;
    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax3)) >= reinterpret_cast<signed char>(ecx4)) {
        return 0xffffffff;
    }
    do {
        esi5 = reinterpret_cast<void**>(0x100);
        if (*reinterpret_cast<void***>(eax3 + 20)) {
            esi5 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax3 + 20));
        }
        if (reinterpret_cast<signed char>(reinterpret_cast<unsigned char>(esi5) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax3 + 4))) >= reinterpret_cast<signed char>(ecx4)) 
            break;
        eax3 = *reinterpret_cast<void***>(eax3 + 20);
    } while (*reinterpret_cast<void***>(eax3 + 20));
    goto addr_406d8a_9;
    addr_406d8c_10:
    return eax3;
    addr_406d8a_9:
    eax3 = reinterpret_cast<void**>(0);
    goto addr_406d8c_10;
}

void fun_406b70(void** a1, void** a2, void** a3) {
    *reinterpret_cast<void***>(a2 + 20) = a3;
    *reinterpret_cast<void***>(a2 + 16) = a1;
    if (a1) {
        *reinterpret_cast<void***>(a1 + 20) = a2;
    }
    if (a3) {
        *reinterpret_cast<void***>(a3 + 16) = a2;
    }
    return;
}

void** fun_406d20(void* a1, void* a2);

void fun_406cc0() {
    void*** esi1;
    void** eax2;
    void** edi3;
    void** ebx4;
    int32_t ecx5;
    void** eax6;
    void** eax7;
    int1_t zf8;
    void** eax9;

    esi1 = reinterpret_cast<void***>(0x4448e8);
    eax2 = fun_406470(24);
    edi3 = eax2;
    ebx4 = eax2;
    ecx5 = 6;
    while (ecx5) {
        --ecx5;
        *reinterpret_cast<void***>(edi3) = *esi1;
        edi3 = edi3 + 4;
        esi1 = esi1 + 4;
    }
    eax6 = g444b28;
    *reinterpret_cast<void***>(ebx4 + 20) = eax6;
    eax7 = fun_406d20(0x10000, 0x10000);
    *reinterpret_cast<void***>(ebx4 + 8) = eax7;
    zf8 = g444b28 == 0;
    if (!zf8) {
        eax9 = g444b28;
        *reinterpret_cast<void***>(eax9 + 16) = ebx4;
    }
    g444b28 = ebx4;
    return;
}

void** fun_406d20(void* a1, void* a2) {
    void** eax3;
    void* edi4;

    eax3 = fun_406470(reinterpret_cast<int32_t>(a1) + reinterpret_cast<uint32_t>(a2) + 4);
    edi4 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax3) - reinterpret_cast<unsigned char>(eax3 + 4) % reinterpret_cast<uint32_t>(a2));
    *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edi4) + reinterpret_cast<uint32_t>(a2)) = eax3;
    return reinterpret_cast<uint32_t>(edi4) + reinterpret_cast<uint32_t>(a2) + 4;
}

void fun_406f40(void** a1) {
    void** v2;

    v2 = *reinterpret_cast<void***>(a1 + 0xfffffffc);
    fun_406570(v2);
    return;
}

void*** g445070;

void*** g445074;

void fun_4067e0(struct s34* a1, void*** a2) {
    int1_t less3;
    void*** esi4;
    struct s34* edi5;
    int32_t ecx6;
    void*** ecx7;
    void** esi8;
    struct s34* edx9;
    int32_t ecx10;
    struct s34* edi11;
    void*** esi12;
    struct s34* edi13;
    int32_t ecx14;
    void*** esi15;
    struct s34* edi16;
    int32_t ecx17;

    if (a2) {
        if (reinterpret_cast<int32_t>(a2) < 0 || (less3 = reinterpret_cast<int32_t>(a2) < reinterpret_cast<int32_t>(g445070), !less3)) {
            esi4 = reinterpret_cast<void***>(0x444870);
            edi5 = a1;
            ecx6 = 16;
            while (ecx6) {
                --ecx6;
                edi5->f0 = *esi4;
                edi5 = reinterpret_cast<struct s34*>(reinterpret_cast<uint32_t>(edi5) + 4);
                esi4 = esi4 + 4;
            }
            return;
        } else {
            ecx7 = g445074;
            esi8 = ecx7[reinterpret_cast<int32_t>(a2) * 4];
            if (esi8) {
                edx9 = a1;
                ecx10 = 16;
                edi11 = edx9;
                while (ecx10) {
                    --ecx10;
                    edi11->f0 = *reinterpret_cast<void***>(esi8);
                    edi11 = reinterpret_cast<struct s34*>(reinterpret_cast<uint32_t>(edi11) + 4);
                    esi8 = esi8 + 4;
                }
                edx9->f18 = 0;
                edx9->f1c = 0;
                return;
            } else {
                esi12 = reinterpret_cast<void***>(0x444870);
                edi13 = a1;
                ecx14 = 16;
                while (ecx14) {
                    --ecx14;
                    edi13->f0 = *esi12;
                    edi13 = reinterpret_cast<struct s34*>(reinterpret_cast<uint32_t>(edi13) + 4);
                    esi12 = esi12 + 4;
                }
                return;
            }
        }
    } else {
        esi15 = reinterpret_cast<void***>(0x444870);
        edi16 = a1;
        ecx17 = 16;
        while (ecx17) {
            --ecx17;
            edi16->f0 = *esi15;
            edi16 = reinterpret_cast<struct s34*>(reinterpret_cast<uint32_t>(edi16) + 4);
            esi15 = esi15 + 4;
        }
        return;
    }
}

void*** g445068;

void*** fun_406860(void*** a1, void*** a2) {
    void*** esi3;
    void*** ebx4;
    void*** eax5;
    int1_t less_or_equal6;
    int1_t less_or_equal7;
    void*** eax8;
    void** v9;
    void*** eax10;
    void** v11;
    int1_t less_or_equal12;
    void*** eax13;
    void** v14;
    void*** ecx15;
    int1_t less_or_equal16;
    void*** eax17;
    void*** edi18;
    void** v19;
    void*** ecx20;
    void** v21;
    void** eax22;
    void*** eax23;
    int32_t ecx24;
    void** ebp25;
    void** edi26;
    void** v27;
    void** v28;
    void*** eax29;
    int1_t less30;
    void*** tmp32_31;
    void*** ecx32;
    int1_t less33;

    esi3 = a1;
    ebx4 = a2;
    while (esi3) {
        if (ebx4) 
            goto addr_406931_4;
        eax5 = g445068;
        less_or_equal6 = reinterpret_cast<int32_t>(g445070) <= reinterpret_cast<int32_t>(eax5);
        if (!less_or_equal6) 
            goto addr_4068fb_6;
        fun_406490(0x445068);
    }
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ebx4) < 0) | reinterpret_cast<uint1_t>(ebx4 == 0)) && (less_or_equal7 = reinterpret_cast<int32_t>(g445070) <= reinterpret_cast<int32_t>(ebx4), !less_or_equal7)) {
        eax8 = g445074;
        if (eax8[reinterpret_cast<int32_t>(ebx4) * 4]) {
            v9 = *reinterpret_cast<void***>(eax8[reinterpret_cast<int32_t>(ebx4) * 4]);
            fun_406570(v9);
            eax10 = g445074;
            v11 = eax10[reinterpret_cast<int32_t>(ebx4) * 4];
            fun_406d90(v11);
        }
        less_or_equal12 = reinterpret_cast<int32_t>(g445068) <= reinterpret_cast<int32_t>(ebx4);
        if (!less_or_equal12) {
            g445068 = ebx4;
        }
        eax13 = g445074;
        v14 = eax13[reinterpret_cast<int32_t>(ebx4) * 4];
        fun_406570(v14);
        ecx15 = g445074;
        ecx15[reinterpret_cast<int32_t>(ebx4) * 4] = reinterpret_cast<void**>(0);
    }
    return 0;
    addr_406931_4:
    if (reinterpret_cast<int32_t>(ebx4) < 0 || (less_or_equal16 = reinterpret_cast<int32_t>(g445070) <= reinterpret_cast<int32_t>(ebx4), less_or_equal16)) {
        return 0;
    }
    addr_40693b_16:
    eax17 = g445074;
    edi18 = eax17 + reinterpret_cast<int32_t>(ebx4) * 4;
    if (*edi18) {
        v19 = *reinterpret_cast<void***>(*edi18);
        fun_406570(v19);
        ecx20 = g445074;
        v21 = ecx20[reinterpret_cast<int32_t>(ebx4) * 4];
        fun_406d90(v21);
    } else {
        eax22 = fun_406470(64);
        *edi18 = eax22;
    }
    eax23 = g445074;
    ecx24 = 16;
    ebp25 = eax23[reinterpret_cast<int32_t>(ebx4) * 4];
    edi26 = ebp25;
    v27 = ebp25;
    while (ecx24) {
        --ecx24;
        *reinterpret_cast<void***>(edi26) = *esi3;
        edi26 = edi26 + 4;
        esi3 = esi3 + 4;
    }
    v28 = *reinterpret_cast<void***>(ebp25);
    fun_4065a0(v28, v27);
    fun_406a10(ebp25);
    return ebx4;
    addr_4068fb_6:
    ebx4 = g445068;
    eax29 = ebx4 + 1;
    less30 = reinterpret_cast<int32_t>(eax29) < reinterpret_cast<int32_t>(g445070);
    if (less30) {
        tmp32_31 = g445074 + reinterpret_cast<int32_t>(eax29) * 4;
        ecx32 = tmp32_31;
        do {
            if (!*ecx32) 
                break;
            ecx32 = ecx32 + 4;
            ++eax29;
            less33 = reinterpret_cast<int32_t>(eax29) < reinterpret_cast<int32_t>(g445070);
        } while (less33);
    }
    g445068 = eax29;
    goto addr_40693b_16;
}

struct s41 {
    signed char[4] pad4;
    void* f4;
    void* f8;
    void* fc;
    void* f10;
    void* f14;
    void* f18;
    int32_t f1c;
    int32_t f20;
    int32_t f24;
    int32_t f28;
    int32_t f2c;
    int32_t f30;
    signed char* f34;
    int32_t f38;
};

void* g453044;

void* g41cac0 = reinterpret_cast<void*>(0);

void* g453058;

void* g41cab0 = reinterpret_cast<void*>(0);

void* g453064;

void* g44ce34;

void* g453060;

void* g44ce58;

void fun_456000();

signed char* g44ce24;

int32_t g41cadc = 0;

int32_t g41cae0 = 0;

void fun_407130(int32_t a1, int32_t a2, signed char* a3, int32_t a4);

void* g41cabc = reinterpret_cast<void*>(0);

void* g41cab8 = reinterpret_cast<void*>(0);

void* g41cab4 = reinterpret_cast<void*>(0);

int32_t fun_407f40(void* a1, void* a2, void* a3, void* a4);

void* g41caac = reinterpret_cast<void*>(0);

void* g44ce64;

int32_t g41cac4 = 0;

void* g44ce60;

void* g44ce68;

int32_t g41cac8 = 0;

void* g44ce6c;

int32_t g41cacc = 0;

int32_t g44ce70;

int32_t g41cad0 = 0;

int32_t g44ce74;

int32_t g44ce78;

int32_t g44ce7c;

void fun_456520();

int32_t g41cad4 = 0;

int32_t g41cad8 = 0;

void fun_456640();

void** g44ce3c;

struct s24* g45305c;

void* g44ce30;

void** g44ce38;

struct s42 {
    signed char[16] pad16;
    void* f10;
};

void* g453054;

struct s43 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s44 {
    signed char[8] pad8;
    int32_t f8;
};

void fun_407150(uint32_t a1, uint32_t a2, uint32_t a3, int32_t a4, struct s44* a5);

struct s45 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

void fun_407170(void* a1, uint32_t a2, uint32_t a3, int32_t a4);

void** g44ce40;

struct s46 {
    signed char[16] pad16;
    void* f10;
};

struct s47 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s48 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s49 {
    signed char[16] pad16;
    void* f10;
};

struct s50 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s51 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s52 {
    signed char[16] pad16;
    void* f10;
};

struct s53 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s54 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

void fun_407910(struct s41* a1) {
    void* eax2;
    int1_t less3;
    void* eax4;
    int1_t less_or_equal5;
    void* eax6;
    int1_t less_or_equal7;
    void* eax8;
    int1_t less9;
    signed char* edx10;
    int32_t eax11;
    int32_t v12;
    int32_t ecx13;
    void* ecx14;
    void* edx15;
    void* eax16;
    void* ecx17;
    int32_t eax18;
    void* ecx19;
    void* eax20;
    void* edx21;
    void* ecx22;
    int32_t eax23;
    void* ecx24;
    void* edx25;
    void* eax26;
    int32_t ecx27;
    void* eax28;
    int32_t edx29;
    int32_t eax30;
    int32_t ecx31;
    void* eax32;
    void* ecx33;
    void* edx34;
    void* eax35;
    int32_t ecx36;
    int32_t edx37;
    int32_t eax38;
    int32_t ecx39;
    void* eax40;
    void* ecx41;
    void* edx42;
    void* eax43;
    int32_t ecx44;
    int32_t edx45;
    int32_t eax46;
    int32_t ecx47;
    void** eax48;
    void** esi49;
    void** edi50;
    void* eax51;
    void* tmp32_52;
    void** eax53;
    void** ebp54;
    struct s42* ebp55;
    void* ecx56;
    int1_t less_or_equal57;
    void** ebx58;
    struct s43* ebx59;
    uint32_t edx60;
    int32_t v61;
    uint32_t v62;
    uint32_t v63;
    void* eax64;
    void** edx65;
    struct s45* edx66;
    uint32_t ecx67;
    int32_t v68;
    uint32_t v69;
    uint32_t eax70;
    void* eax71;
    void* tmp32_72;
    struct s24* eax73;
    void* tmp32_74;
    void** eax75;
    void** eax76;
    void** esi77;
    void** ebx78;
    void* edi79;
    void** edx80;
    struct s46* edx81;
    void* ecx82;
    int1_t less_or_equal83;
    void** ebp84;
    struct s47* ebp85;
    uint32_t eax86;
    int32_t v87;
    int32_t eax88;
    uint32_t v89;
    void* eax90;
    void** edx91;
    struct s48* edx92;
    uint32_t ecx93;
    int32_t v94;
    uint32_t v95;
    uint32_t eax96;
    void* eax97;
    void* tmp32_98;
    struct s24* eax99;
    void* tmp32_100;
    void** eax101;
    void* eax102;
    void* ecx103;
    void* edx104;
    void* eax105;
    int32_t ecx106;
    int32_t edx107;
    int32_t eax108;
    int32_t ecx109;
    void* eax110;
    void* ecx111;
    void* edx112;
    void* eax113;
    int32_t ecx114;
    int32_t edx115;
    int32_t eax116;
    int32_t ecx117;
    void** eax118;
    void** esi119;
    void* eax120;
    void* tmp32_121;
    void** eax122;
    void* edi123;
    void** ebp124;
    struct s49* ebp125;
    void* ecx126;
    int1_t less_or_equal127;
    void** ebx128;
    struct s50* ebx129;
    uint32_t edx130;
    int32_t v131;
    uint32_t v132;
    uint32_t v133;
    void* eax134;
    void** edx135;
    struct s51* edx136;
    uint32_t ecx137;
    int32_t v138;
    uint32_t v139;
    uint32_t eax140;
    void* eax141;
    void* tmp32_142;
    struct s24* eax143;
    void* tmp32_144;
    void** eax145;
    void** edi146;
    void** eax147;
    void* esi148;
    void* ebx149;
    void** edx150;
    struct s52* edx151;
    void* ecx152;
    int1_t less_or_equal153;
    void** ebp154;
    struct s53* ebp155;
    uint32_t eax156;
    int32_t v157;
    int32_t eax158;
    uint32_t v159;
    void* eax160;
    void** edx161;
    struct s54* edx162;
    uint32_t ecx163;
    int32_t v164;
    uint32_t v165;
    uint32_t eax166;
    void* eax167;
    void* tmp32_168;
    struct s24* eax169;
    void* tmp32_170;
    void** eax171;

    eax2 = g453044;
    less3 = reinterpret_cast<int32_t>(g41cac0) < reinterpret_cast<int32_t>(eax2);
    if (!less3 && ((eax4 = g453058, less_or_equal5 = reinterpret_cast<int32_t>(g41cab0) <= reinterpret_cast<int32_t>(eax4), less_or_equal5) && ((eax6 = g453064, less_or_equal7 = reinterpret_cast<int32_t>(g44ce34) <= reinterpret_cast<int32_t>(eax6), less_or_equal7) && (eax8 = g453060, less9 = reinterpret_cast<int32_t>(g44ce58) < reinterpret_cast<int32_t>(eax8), !less9)))) {
        fun_456000();
        edx10 = g44ce24;
        eax11 = g41cadc;
        v12 = a1->f38;
        ecx13 = g41cae0;
        fun_407130(ecx13, eax11, edx10, v12);
        ecx14 = g41cac0;
        edx15 = g41cabc;
        eax16 = g41cab8;
        ecx17 = g41cab4;
        eax18 = fun_407f40(ecx17, eax16, edx15, ecx14);
        ecx19 = g41cab8;
        eax20 = g41cab4;
        edx21 = g41cab0;
        ecx22 = g41caac;
        eax23 = fun_407f40(ecx22, edx21, eax20, ecx19);
        ecx24 = g41cab0;
        edx25 = g41cab4;
        eax26 = g41caac;
        g44ce64 = ecx24;
        ecx27 = g41cac4;
        g44ce60 = eax26;
        eax28 = g41cab8;
        g44ce68 = edx25;
        edx29 = g41cac8;
        g44ce6c = eax28;
        eax30 = g41cacc;
        g44ce70 = ecx27;
        ecx31 = g41cad0;
        g44ce74 = edx29;
        g44ce78 = eax30;
        g44ce7c = ecx31;
        if (eax18 <= eax23) {
            fun_456520();
            eax32 = g41caac;
            ecx33 = g41cab0;
            edx34 = g41cabc;
            g44ce60 = eax32;
            eax35 = g41cac0;
            g44ce64 = ecx33;
            ecx36 = g41cac4;
            g44ce68 = edx34;
            edx37 = g41cac8;
            g44ce6c = eax35;
            eax38 = g41cad4;
            g44ce70 = ecx36;
            ecx39 = g41cad8;
            g44ce74 = edx37;
            g44ce78 = eax38;
            g44ce7c = ecx39;
            fun_456640();
            eax40 = g41cab4;
            ecx41 = g41cab8;
            edx42 = g41cabc;
            g44ce60 = eax40;
            eax43 = g41cac0;
            g44ce64 = ecx41;
            ecx44 = g41cacc;
            g44ce68 = edx42;
            edx45 = g41cad0;
            g44ce6c = eax43;
            eax46 = g41cad4;
            g44ce70 = ecx44;
            ecx47 = g41cad8;
            g44ce74 = edx45;
            g44ce78 = eax46;
            g44ce7c = ecx47;
            fun_456520();
            eax48 = g44ce3c;
            esi49 = reinterpret_cast<void**>(0);
            edi50 = reinterpret_cast<void**>(0);
            eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax48)) * reinterpret_cast<uint32_t>(g45305c));
            tmp32_52 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ce30) + reinterpret_cast<uint32_t>(eax51));
            g44ce30 = tmp32_52;
            eax53 = g44ce38;
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax53 + 4)) > reinterpret_cast<signed char>(0)) {
                do {
                    ebp54 = g44ce3c;
                    ebp55 = reinterpret_cast<struct s42*>(reinterpret_cast<unsigned char>(ebp54) + reinterpret_cast<unsigned char>(esi49));
                    ecx56 = ebp55->f10;
                    less_or_equal57 = reinterpret_cast<int32_t>(g453054) <= reinterpret_cast<int32_t>(ecx56);
                    if (less_or_equal57) {
                        ebx58 = g44ce38;
                        ebx59 = reinterpret_cast<struct s43*>(reinterpret_cast<unsigned char>(ebx58) + reinterpret_cast<unsigned char>(esi49));
                        edx60 = ebx59->fc << 24;
                        v61 = reinterpret_cast<int32_t>(ebx59->fc) >> 8;
                        v62 = (ebx59->f8 & 0xffff) + edx60;
                        v63 = ebx59->f10 - reinterpret_cast<uint32_t>(ecx56) - 1;
                        eax64 = g44ce30;
                        fun_407150(reinterpret_cast<uint32_t>(eax64) + reinterpret_cast<uint32_t>(ecx56) + 1, v63, v62, v61, reinterpret_cast<uint32_t>(ebp55) + 8);
                    } else {
                        edx65 = g44ce38;
                        edx66 = reinterpret_cast<struct s45*>(reinterpret_cast<unsigned char>(edx65) + reinterpret_cast<unsigned char>(esi49));
                        ecx67 = edx66->fc << 24;
                        v68 = reinterpret_cast<int32_t>(edx66->fc) >> 8;
                        v69 = (edx66->f8 & 0xffff) + ecx67;
                        eax70 = edx66->f10 - reinterpret_cast<uint32_t>(g453054);
                        eax71 = g453054;
                        tmp32_72 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax71) + reinterpret_cast<uint32_t>(g44ce30));
                        fun_407170(tmp32_72, eax70, v69, v68);
                    }
                    eax73 = g45305c;
                    esi49 = esi49 + 12;
                    ++edi50;
                    tmp32_74 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ce30) + reinterpret_cast<uint32_t>(eax73));
                    g44ce30 = tmp32_74;
                    eax75 = g44ce38;
                } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax75 + 4)) > reinterpret_cast<signed char>(edi50));
            }
            eax76 = g44ce40;
            esi77 = reinterpret_cast<void**>(0);
            ebx78 = reinterpret_cast<void**>(0);
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax76 + 4)) > reinterpret_cast<signed char>(0)) {
                edi79 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi50 + reinterpret_cast<unsigned char>(edi50) * 2) * 4);
                do {
                    edx80 = g44ce3c;
                    edx81 = reinterpret_cast<struct s46*>(reinterpret_cast<unsigned char>(edx80) + reinterpret_cast<uint32_t>(edi79));
                    ecx82 = edx81->f10;
                    less_or_equal83 = reinterpret_cast<int32_t>(g453054) <= reinterpret_cast<int32_t>(ecx82);
                    if (less_or_equal83) {
                        ebp84 = g44ce40;
                        ebp85 = reinterpret_cast<struct s47*>(reinterpret_cast<unsigned char>(ebp84) + reinterpret_cast<unsigned char>(esi77));
                        eax86 = ebp85->fc << 24;
                        v87 = reinterpret_cast<int32_t>(ebp85->fc) >> 8;
                        eax88 = ebp85->f10;
                        v89 = (ebp85->f8 & 0xffff) + eax86;
                        eax90 = g44ce30;
                        fun_407150(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(ecx82) + 1, eax88 - reinterpret_cast<uint32_t>(ecx82) - 1, v89, v87, reinterpret_cast<uint32_t>(edx81) + 8);
                    } else {
                        edx91 = g44ce40;
                        edx92 = reinterpret_cast<struct s48*>(reinterpret_cast<unsigned char>(edx91) + reinterpret_cast<unsigned char>(esi77));
                        ecx93 = edx92->fc << 24;
                        v94 = reinterpret_cast<int32_t>(edx92->fc) >> 8;
                        v95 = (edx92->f8 & 0xffff) + ecx93;
                        eax96 = edx92->f10 - reinterpret_cast<uint32_t>(g453054);
                        eax97 = g453054;
                        tmp32_98 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax97) + reinterpret_cast<uint32_t>(g44ce30));
                        fun_407170(tmp32_98, eax96, v95, v94);
                    }
                    eax99 = g45305c;
                    edi79 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi79) + 12);
                    tmp32_100 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ce30) + reinterpret_cast<uint32_t>(eax99));
                    g44ce30 = tmp32_100;
                    eax101 = g44ce40;
                    esi77 = esi77 + 12;
                    ++ebx78;
                } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax101 + 4)) > reinterpret_cast<signed char>(ebx78));
            }
        } else {
            fun_456640();
            eax102 = g41caac;
            ecx103 = g41cab0;
            edx104 = g41cabc;
            g44ce60 = eax102;
            eax105 = g41cac0;
            g44ce64 = ecx103;
            ecx106 = g41cac4;
            g44ce68 = edx104;
            edx107 = g41cac8;
            g44ce6c = eax105;
            eax108 = g41cad4;
            g44ce70 = ecx106;
            ecx109 = g41cad8;
            g44ce74 = edx107;
            g44ce78 = eax108;
            g44ce7c = ecx109;
            fun_456520();
            eax110 = g41cab4;
            ecx111 = g41cab8;
            edx112 = g41cabc;
            g44ce60 = eax110;
            eax113 = g41cac0;
            g44ce64 = ecx111;
            ecx114 = g41cacc;
            g44ce68 = edx112;
            edx115 = g41cad0;
            g44ce6c = eax113;
            eax116 = g41cad4;
            g44ce70 = ecx114;
            ecx117 = g41cad8;
            g44ce74 = edx115;
            g44ce78 = eax116;
            g44ce7c = ecx117;
            fun_456640();
            eax118 = g44ce38;
            esi119 = reinterpret_cast<void**>(0);
            eax120 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax118)) * reinterpret_cast<uint32_t>(g45305c));
            tmp32_121 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ce30) + reinterpret_cast<uint32_t>(eax120));
            g44ce30 = tmp32_121;
            eax122 = g44ce38;
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax122 + 4)) > reinterpret_cast<signed char>(0)) {
                edi123 = reinterpret_cast<void*>(0);
                do {
                    ebp124 = g44ce38;
                    ebp125 = reinterpret_cast<struct s49*>(reinterpret_cast<unsigned char>(ebp124) + reinterpret_cast<uint32_t>(edi123));
                    ecx126 = ebp125->f10;
                    less_or_equal127 = reinterpret_cast<int32_t>(g453054) <= reinterpret_cast<int32_t>(ecx126);
                    if (less_or_equal127) {
                        ebx128 = g44ce3c;
                        ebx129 = reinterpret_cast<struct s50*>(reinterpret_cast<unsigned char>(ebx128) + reinterpret_cast<uint32_t>(edi123));
                        edx130 = ebx129->fc << 24;
                        v131 = reinterpret_cast<int32_t>(ebx129->fc) >> 8;
                        v132 = (ebx129->f8 & 0xffff) + edx130;
                        v133 = ebx129->f10 - reinterpret_cast<uint32_t>(ecx126) - 1;
                        eax134 = g44ce30;
                        fun_407150(reinterpret_cast<uint32_t>(eax134) + reinterpret_cast<uint32_t>(ecx126) + 1, v133, v132, v131, reinterpret_cast<uint32_t>(ebp125) + 8);
                    } else {
                        edx135 = g44ce3c;
                        edx136 = reinterpret_cast<struct s51*>(reinterpret_cast<unsigned char>(edx135) + reinterpret_cast<uint32_t>(edi123));
                        ecx137 = edx136->fc << 24;
                        v138 = reinterpret_cast<int32_t>(edx136->fc) >> 8;
                        v139 = (edx136->f8 & 0xffff) + ecx137;
                        eax140 = edx136->f10 - reinterpret_cast<uint32_t>(g453054);
                        eax141 = g453054;
                        tmp32_142 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax141) + reinterpret_cast<uint32_t>(g44ce30));
                        fun_407170(tmp32_142, eax140, v139, v138);
                    }
                    eax143 = g45305c;
                    edi123 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi123) + 12);
                    ++esi119;
                    tmp32_144 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ce30) + reinterpret_cast<uint32_t>(eax143));
                    g44ce30 = tmp32_144;
                    eax145 = g44ce38;
                } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax145 + 4)) > reinterpret_cast<signed char>(esi119));
            }
            edi146 = reinterpret_cast<void**>(0);
            eax147 = g44ce40;
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax147 + 4)) > reinterpret_cast<signed char>(0)) {
                esi148 = reinterpret_cast<void*>(0);
                ebx149 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi119 + reinterpret_cast<unsigned char>(esi119) * 2) * 4);
                do {
                    edx150 = g44ce40;
                    edx151 = reinterpret_cast<struct s52*>(reinterpret_cast<unsigned char>(edx150) + reinterpret_cast<uint32_t>(esi148));
                    ecx152 = edx151->f10;
                    less_or_equal153 = reinterpret_cast<int32_t>(g453054) <= reinterpret_cast<int32_t>(ecx152);
                    if (less_or_equal153) {
                        ebp154 = g44ce3c;
                        ebp155 = reinterpret_cast<struct s53*>(reinterpret_cast<unsigned char>(ebp154) + reinterpret_cast<uint32_t>(ebx149));
                        eax156 = ebp155->fc << 24;
                        v157 = reinterpret_cast<int32_t>(ebp155->fc) >> 8;
                        eax158 = ebp155->f10;
                        v159 = (ebp155->f8 & 0xffff) + eax156;
                        eax160 = g44ce30;
                        fun_407150(reinterpret_cast<uint32_t>(eax160) + reinterpret_cast<uint32_t>(ecx152) + 1, eax158 - reinterpret_cast<uint32_t>(ecx152) - 1, v159, v157, reinterpret_cast<uint32_t>(edx151) + 8);
                    } else {
                        edx161 = g44ce3c;
                        edx162 = reinterpret_cast<struct s54*>(reinterpret_cast<unsigned char>(edx161) + reinterpret_cast<uint32_t>(ebx149));
                        ecx163 = edx162->fc << 24;
                        v164 = reinterpret_cast<int32_t>(edx162->fc) >> 8;
                        v165 = (edx162->f8 & 0xffff) + ecx163;
                        eax166 = edx162->f10 - reinterpret_cast<uint32_t>(g453054);
                        eax167 = g453054;
                        tmp32_168 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax167) + reinterpret_cast<uint32_t>(g44ce30));
                        fun_407170(tmp32_168, eax166, v165, v164);
                    }
                    eax169 = g45305c;
                    ebx149 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx149) + 12);
                    tmp32_170 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ce30) + reinterpret_cast<uint32_t>(eax169));
                    g44ce30 = tmp32_170;
                    eax171 = g44ce40;
                    esi148 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi148) + 12);
                    ++edi146;
                } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax171 + 4)) > reinterpret_cast<signed char>(edi146));
                return;
            }
        }
    }
    return;
}

void fun_408fca(uint32_t ecx);

void fun_407150(uint32_t a1, uint32_t a2, uint32_t a3, int32_t a4, struct s44* a5) {
    fun_408fca(a3);
    return;
}

void fun_408fa4(signed char* ecx);

void fun_407130(int32_t a1, int32_t a2, signed char* a3, int32_t a4) {
    fun_408fa4(a3);
    return;
}

int32_t fun_407f40(void* a1, void* a2, void* a3, void* a4) {
    int32_t eax5;

    if (a4 != a2) {
        __asm__("cdq ");
        eax5 = reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(a1) - reinterpret_cast<uint32_t>(a3) << 8) / reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(a2) - reinterpret_cast<uint32_t>(a4));
    } else {
        eax5 = 0x80010000;
        if (reinterpret_cast<int32_t>(a3) >= reinterpret_cast<int32_t>(a1)) {
            return 0x7fff0000;
        }
    }
    return eax5;
}

void fun_40901f(uint32_t ecx);

void fun_407170(void* a1, uint32_t a2, uint32_t a3, int32_t a4) {
    fun_40901f(a3);
    return;
}

void* g44ceb8;

void* g44ced8;

signed char* g44cea8;

void fun_407f80(int32_t a1, int32_t a2, signed char* a3);

int32_t fun_408d70(void* a1, void* a2, void* a3, void* a4);

void* g44cee4;

void* g44cee0;

void* g44cee8;

void* g44ceec;

int32_t g44cef0;

int32_t g44cef4;

int32_t g44cef8;

int32_t g44cefc;

void** g44cec0;

void* g44ceb4;

void** g44cebc;

struct s55 {
    signed char[16] pad16;
    void* f10;
};

struct s56 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s57 {
    signed char[8] pad8;
    int32_t f8;
};

void fun_407fa0(uint32_t a1, uint32_t a2, uint32_t a3, int32_t a4, struct s57* a5);

struct s58 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

void fun_407fc0(void* a1, uint32_t a2, uint32_t a3, int32_t a4);

void** g44cec4;

struct s59 {
    signed char[16] pad16;
    void* f10;
};

struct s60 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s61 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s62 {
    signed char[16] pad16;
    void* f10;
};

struct s63 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s64 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s65 {
    signed char[16] pad16;
    void* f10;
};

struct s66 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s67 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

void fun_408750(struct s37* a1) {
    void* eax2;
    int1_t less3;
    void* eax4;
    int1_t less_or_equal5;
    void* eax6;
    int1_t less_or_equal7;
    void* eax8;
    int1_t less_or_equal9;
    signed char* eax10;
    int32_t ecx11;
    int32_t edx12;
    void* ecx13;
    void* edx14;
    void* eax15;
    void* ecx16;
    int32_t eax17;
    void* ecx18;
    void* eax19;
    void* edx20;
    void* ecx21;
    int32_t eax22;
    void* ecx23;
    void* edx24;
    void* eax25;
    int32_t ecx26;
    void* eax27;
    int32_t edx28;
    int32_t eax29;
    int32_t ecx30;
    void* eax31;
    void* ecx32;
    void* edx33;
    void* eax34;
    int32_t ecx35;
    int32_t edx36;
    int32_t eax37;
    int32_t ecx38;
    void* eax39;
    void* ecx40;
    void* edx41;
    void* eax42;
    int32_t ecx43;
    int32_t edx44;
    int32_t eax45;
    int32_t ecx46;
    void** eax47;
    void** esi48;
    void** edi49;
    void* eax50;
    void* tmp32_51;
    void** eax52;
    void** ebp53;
    struct s55* ebp54;
    void* ecx55;
    int1_t less_or_equal56;
    void** ebx57;
    struct s56* ebx58;
    uint32_t edx59;
    int32_t v60;
    uint32_t v61;
    uint32_t v62;
    void* eax63;
    void** edx64;
    struct s58* edx65;
    uint32_t ecx66;
    int32_t v67;
    uint32_t v68;
    uint32_t eax69;
    void* eax70;
    void* tmp32_71;
    struct s24* eax72;
    void* tmp32_73;
    void** eax74;
    void** eax75;
    void** esi76;
    void** ebx77;
    void* edi78;
    void** edx79;
    struct s59* edx80;
    void* ecx81;
    int1_t less_or_equal82;
    void** ebp83;
    struct s60* ebp84;
    uint32_t eax85;
    int32_t v86;
    int32_t eax87;
    uint32_t v88;
    void* eax89;
    void** edx90;
    struct s61* edx91;
    uint32_t ecx92;
    int32_t v93;
    uint32_t v94;
    uint32_t eax95;
    void* eax96;
    void* tmp32_97;
    struct s24* eax98;
    void* tmp32_99;
    void** eax100;
    void* eax101;
    void* ecx102;
    void* edx103;
    void* eax104;
    int32_t ecx105;
    int32_t edx106;
    int32_t eax107;
    int32_t ecx108;
    void* eax109;
    void* ecx110;
    void* edx111;
    void* eax112;
    int32_t ecx113;
    int32_t edx114;
    int32_t eax115;
    int32_t ecx116;
    void** eax117;
    void** esi118;
    void* eax119;
    void* tmp32_120;
    void** eax121;
    void* edi122;
    void** ebp123;
    struct s62* ebp124;
    void* ecx125;
    int1_t less_or_equal126;
    void** ebx127;
    struct s63* ebx128;
    uint32_t edx129;
    int32_t v130;
    uint32_t v131;
    uint32_t v132;
    void* eax133;
    void** edx134;
    struct s64* edx135;
    uint32_t ecx136;
    int32_t v137;
    uint32_t v138;
    uint32_t eax139;
    void* eax140;
    void* tmp32_141;
    struct s24* eax142;
    void* tmp32_143;
    void** eax144;
    void** edi145;
    void** eax146;
    void* esi147;
    void* ebx148;
    void** edx149;
    struct s65* edx150;
    void* ecx151;
    int1_t less_or_equal152;
    void** ebp153;
    struct s66* ebp154;
    uint32_t eax155;
    int32_t v156;
    int32_t eax157;
    uint32_t v158;
    void* eax159;
    void** ecx160;
    struct s67* ecx161;
    uint32_t edx162;
    int32_t v163;
    uint32_t v164;
    uint32_t eax165;
    void* eax166;
    void* tmp32_167;
    struct s24* eax168;
    void* tmp32_169;
    void** eax170;

    eax2 = g453044;
    less3 = reinterpret_cast<int32_t>(g41cac0) < reinterpret_cast<int32_t>(eax2);
    if (!less3 && ((eax4 = g453058, less_or_equal5 = reinterpret_cast<int32_t>(g41cab0) <= reinterpret_cast<int32_t>(eax4), less_or_equal5) && ((eax6 = g453064, less_or_equal7 = reinterpret_cast<int32_t>(g44ceb8) <= reinterpret_cast<int32_t>(eax6), less_or_equal7) && (eax8 = g44ced8, less_or_equal9 = reinterpret_cast<int32_t>(g453060) <= reinterpret_cast<int32_t>(eax8), less_or_equal9)))) {
        fun_456000();
        eax10 = g44cea8;
        ecx11 = g41cadc;
        edx12 = g41cae0;
        fun_407f80(edx12, ecx11, eax10);
        ecx13 = g41cac0;
        edx14 = g41cabc;
        eax15 = g41cab8;
        ecx16 = g41cab4;
        eax17 = fun_408d70(ecx16, eax15, edx14, ecx13);
        ecx18 = g41cab8;
        eax19 = g41cab4;
        edx20 = g41cab0;
        ecx21 = g41caac;
        eax22 = fun_408d70(ecx21, edx20, eax19, ecx18);
        ecx23 = g41cab0;
        edx24 = g41cab4;
        eax25 = g41caac;
        g44cee4 = ecx23;
        ecx26 = g41cac4;
        g44cee0 = eax25;
        eax27 = g41cab8;
        g44cee8 = edx24;
        edx28 = g41cac8;
        g44ceec = eax27;
        eax29 = g41cacc;
        g44cef0 = ecx26;
        ecx30 = g41cad0;
        g44cef4 = edx28;
        g44cef8 = eax29;
        g44cefc = ecx30;
        if (eax17 <= eax22) {
            fun_456520();
            eax31 = g41caac;
            ecx32 = g41cab0;
            edx33 = g41cabc;
            g44cee0 = eax31;
            eax34 = g41cac0;
            g44cee4 = ecx32;
            ecx35 = g41cac4;
            g44cee8 = edx33;
            edx36 = g41cac8;
            g44ceec = eax34;
            eax37 = g41cad4;
            g44cef0 = ecx35;
            ecx38 = g41cad8;
            g44cef4 = edx36;
            g44cef8 = eax37;
            g44cefc = ecx38;
            fun_456640();
            eax39 = g41cab4;
            ecx40 = g41cab8;
            edx41 = g41cabc;
            g44cee0 = eax39;
            eax42 = g41cac0;
            g44cee4 = ecx40;
            ecx43 = g41cacc;
            g44cee8 = edx41;
            edx44 = g41cad0;
            g44ceec = eax42;
            eax45 = g41cad4;
            g44cef0 = ecx43;
            ecx46 = g41cad8;
            g44cef4 = edx44;
            g44cef8 = eax45;
            g44cefc = ecx46;
            fun_456520();
            eax47 = g44cec0;
            esi48 = reinterpret_cast<void**>(0);
            edi49 = reinterpret_cast<void**>(0);
            eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax47)) * reinterpret_cast<uint32_t>(g45305c));
            tmp32_51 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ceb4) + reinterpret_cast<uint32_t>(eax50));
            g44ceb4 = tmp32_51;
            eax52 = g44cebc;
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax52 + 4)) > reinterpret_cast<signed char>(0)) {
                do {
                    ebp53 = g44cec0;
                    ebp54 = reinterpret_cast<struct s55*>(reinterpret_cast<unsigned char>(ebp53) + reinterpret_cast<unsigned char>(esi48));
                    ecx55 = ebp54->f10;
                    less_or_equal56 = reinterpret_cast<int32_t>(g453054) <= reinterpret_cast<int32_t>(ecx55);
                    if (less_or_equal56) {
                        ebx57 = g44cebc;
                        ebx58 = reinterpret_cast<struct s56*>(reinterpret_cast<unsigned char>(ebx57) + reinterpret_cast<unsigned char>(esi48));
                        edx59 = ebx58->fc << 24;
                        v60 = reinterpret_cast<int32_t>(ebx58->fc) >> 8;
                        v61 = (ebx58->f8 & 0xffff) + edx59;
                        v62 = ebx58->f10 - reinterpret_cast<uint32_t>(ecx55) - 1;
                        eax63 = g44ceb4;
                        fun_407fa0(reinterpret_cast<uint32_t>(eax63) + reinterpret_cast<uint32_t>(ecx55) + 1, v62, v61, v60, reinterpret_cast<uint32_t>(ebp54) + 8);
                    } else {
                        edx64 = g44cebc;
                        edx65 = reinterpret_cast<struct s58*>(reinterpret_cast<unsigned char>(edx64) + reinterpret_cast<unsigned char>(esi48));
                        ecx66 = edx65->fc << 24;
                        v67 = reinterpret_cast<int32_t>(edx65->fc) >> 8;
                        v68 = (edx65->f8 & 0xffff) + ecx66;
                        eax69 = edx65->f10 - reinterpret_cast<uint32_t>(g453054);
                        eax70 = g453054;
                        tmp32_71 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax70) + reinterpret_cast<uint32_t>(g44ceb4));
                        fun_407fc0(tmp32_71, eax69, v68, v67);
                    }
                    eax72 = g45305c;
                    esi48 = esi48 + 12;
                    ++edi49;
                    tmp32_73 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ceb4) + reinterpret_cast<uint32_t>(eax72));
                    g44ceb4 = tmp32_73;
                    eax74 = g44cebc;
                } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax74 + 4)) > reinterpret_cast<signed char>(edi49));
            }
            eax75 = g44cec4;
            esi76 = reinterpret_cast<void**>(0);
            ebx77 = reinterpret_cast<void**>(0);
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax75 + 4)) > reinterpret_cast<signed char>(0)) {
                edi78 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi49 + reinterpret_cast<unsigned char>(edi49) * 2) * 4);
                do {
                    edx79 = g44cec0;
                    edx80 = reinterpret_cast<struct s59*>(reinterpret_cast<unsigned char>(edx79) + reinterpret_cast<uint32_t>(edi78));
                    ecx81 = edx80->f10;
                    less_or_equal82 = reinterpret_cast<int32_t>(g453054) <= reinterpret_cast<int32_t>(ecx81);
                    if (less_or_equal82) {
                        ebp83 = g44cec4;
                        ebp84 = reinterpret_cast<struct s60*>(reinterpret_cast<unsigned char>(ebp83) + reinterpret_cast<unsigned char>(esi76));
                        eax85 = ebp84->fc << 24;
                        v86 = reinterpret_cast<int32_t>(ebp84->fc) >> 8;
                        eax87 = ebp84->f10;
                        v88 = (ebp84->f8 & 0xffff) + eax85;
                        eax89 = g44ceb4;
                        fun_407fa0(reinterpret_cast<uint32_t>(eax89) + reinterpret_cast<uint32_t>(ecx81) + 1, eax87 - reinterpret_cast<uint32_t>(ecx81) - 1, v88, v86, reinterpret_cast<uint32_t>(edx80) + 8);
                    } else {
                        edx90 = g44cec4;
                        edx91 = reinterpret_cast<struct s61*>(reinterpret_cast<unsigned char>(edx90) + reinterpret_cast<unsigned char>(esi76));
                        ecx92 = edx91->fc << 24;
                        v93 = reinterpret_cast<int32_t>(edx91->fc) >> 8;
                        v94 = (edx91->f8 & 0xffff) + ecx92;
                        eax95 = edx91->f10 - reinterpret_cast<uint32_t>(g453054);
                        eax96 = g453054;
                        tmp32_97 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax96) + reinterpret_cast<uint32_t>(g44ceb4));
                        fun_407fc0(tmp32_97, eax95, v94, v93);
                    }
                    eax98 = g45305c;
                    edi78 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi78) + 12);
                    tmp32_99 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ceb4) + reinterpret_cast<uint32_t>(eax98));
                    g44ceb4 = tmp32_99;
                    eax100 = g44cec4;
                    esi76 = esi76 + 12;
                    ++ebx77;
                } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax100 + 4)) > reinterpret_cast<signed char>(ebx77));
            }
        } else {
            fun_456640();
            eax101 = g41caac;
            ecx102 = g41cab0;
            edx103 = g41cabc;
            g44cee0 = eax101;
            eax104 = g41cac0;
            g44cee4 = ecx102;
            ecx105 = g41cac4;
            g44cee8 = edx103;
            edx106 = g41cac8;
            g44ceec = eax104;
            eax107 = g41cad4;
            g44cef0 = ecx105;
            ecx108 = g41cad8;
            g44cef4 = edx106;
            g44cef8 = eax107;
            g44cefc = ecx108;
            fun_456520();
            eax109 = g41cab4;
            ecx110 = g41cab8;
            edx111 = g41cabc;
            g44cee0 = eax109;
            eax112 = g41cac0;
            g44cee4 = ecx110;
            ecx113 = g41cacc;
            g44cee8 = edx111;
            edx114 = g41cad0;
            g44ceec = eax112;
            eax115 = g41cad4;
            g44cef0 = ecx113;
            ecx116 = g41cad8;
            g44cef4 = edx114;
            g44cef8 = eax115;
            g44cefc = ecx116;
            fun_456640();
            eax117 = g44cebc;
            esi118 = reinterpret_cast<void**>(0);
            eax119 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax117)) * reinterpret_cast<uint32_t>(g45305c));
            tmp32_120 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ceb4) + reinterpret_cast<uint32_t>(eax119));
            g44ceb4 = tmp32_120;
            eax121 = g44cebc;
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax121 + 4)) > reinterpret_cast<signed char>(0)) {
                edi122 = reinterpret_cast<void*>(0);
                do {
                    ebp123 = g44cebc;
                    ebp124 = reinterpret_cast<struct s62*>(reinterpret_cast<unsigned char>(ebp123) + reinterpret_cast<uint32_t>(edi122));
                    ecx125 = ebp124->f10;
                    less_or_equal126 = reinterpret_cast<int32_t>(g453054) <= reinterpret_cast<int32_t>(ecx125);
                    if (less_or_equal126) {
                        ebx127 = g44cec0;
                        ebx128 = reinterpret_cast<struct s63*>(reinterpret_cast<unsigned char>(ebx127) + reinterpret_cast<uint32_t>(edi122));
                        edx129 = ebx128->fc << 24;
                        v130 = reinterpret_cast<int32_t>(ebx128->fc) >> 8;
                        v131 = (ebx128->f8 & 0xffff) + edx129;
                        v132 = ebx128->f10 - reinterpret_cast<uint32_t>(ecx125) - 1;
                        eax133 = g44ceb4;
                        fun_407fa0(reinterpret_cast<uint32_t>(eax133) + reinterpret_cast<uint32_t>(ecx125) + 1, v132, v131, v130, reinterpret_cast<uint32_t>(ebp124) + 8);
                    } else {
                        edx134 = g44cec0;
                        edx135 = reinterpret_cast<struct s64*>(reinterpret_cast<unsigned char>(edx134) + reinterpret_cast<uint32_t>(edi122));
                        ecx136 = edx135->fc << 24;
                        v137 = reinterpret_cast<int32_t>(edx135->fc) >> 8;
                        v138 = (edx135->f8 & 0xffff) + ecx136;
                        eax139 = edx135->f10 - reinterpret_cast<uint32_t>(g453054);
                        eax140 = g453054;
                        tmp32_141 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax140) + reinterpret_cast<uint32_t>(g44ceb4));
                        fun_407fc0(tmp32_141, eax139, v138, v137);
                    }
                    eax142 = g45305c;
                    edi122 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi122) + 12);
                    ++esi118;
                    tmp32_143 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ceb4) + reinterpret_cast<uint32_t>(eax142));
                    g44ceb4 = tmp32_143;
                    eax144 = g44cebc;
                } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax144 + 4)) > reinterpret_cast<signed char>(esi118));
            }
            edi145 = reinterpret_cast<void**>(0);
            eax146 = g44cec4;
            if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax146 + 4)) > reinterpret_cast<signed char>(0)) {
                esi147 = reinterpret_cast<void*>(0);
                ebx148 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi118 + reinterpret_cast<unsigned char>(esi118) * 2) * 4);
                do {
                    edx149 = g44cec4;
                    edx150 = reinterpret_cast<struct s65*>(reinterpret_cast<unsigned char>(edx149) + reinterpret_cast<uint32_t>(esi147));
                    ecx151 = edx150->f10;
                    less_or_equal152 = reinterpret_cast<int32_t>(g453054) <= reinterpret_cast<int32_t>(ecx151);
                    if (less_or_equal152) {
                        ebp153 = g44cec0;
                        ebp154 = reinterpret_cast<struct s66*>(reinterpret_cast<unsigned char>(ebp153) + reinterpret_cast<uint32_t>(ebx148));
                        eax155 = ebp154->fc << 24;
                        v156 = reinterpret_cast<int32_t>(ebp154->fc) >> 8;
                        eax157 = ebp154->f10;
                        v158 = (ebp154->f8 & 0xffff) + eax155;
                        eax159 = g44ceb4;
                        fun_407fa0(reinterpret_cast<uint32_t>(eax159) + reinterpret_cast<uint32_t>(ecx151) + 1, eax157 - reinterpret_cast<uint32_t>(ecx151) - 1, v158, v156, reinterpret_cast<uint32_t>(edx150) + 8);
                    } else {
                        ecx160 = g44cec0;
                        ecx161 = reinterpret_cast<struct s67*>(reinterpret_cast<unsigned char>(ecx160) + reinterpret_cast<uint32_t>(ebx148));
                        edx162 = ecx161->fc << 24;
                        v163 = reinterpret_cast<int32_t>(ecx161->fc) >> 8;
                        v164 = (ecx161->f8 & 0xffff) + edx162;
                        eax165 = ecx161->f10 - reinterpret_cast<uint32_t>(g453054);
                        eax166 = g453054;
                        tmp32_167 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax166) + reinterpret_cast<uint32_t>(g44ceb4));
                        fun_407fc0(tmp32_167, eax165, v164, v163);
                    }
                    eax168 = g45305c;
                    ebx148 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx148) + 12);
                    tmp32_169 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ceb4) + reinterpret_cast<uint32_t>(eax168));
                    g44ceb4 = tmp32_169;
                    eax170 = g44cec4;
                    esi147 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi147) + 12);
                    ++edi145;
                } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax170 + 4)) > reinterpret_cast<signed char>(edi145));
                return;
            }
        }
    }
    return;
}

void fun_4090d8(uint32_t ecx);

void fun_407fa0(uint32_t a1, uint32_t a2, uint32_t a3, int32_t a4, struct s57* a5) {
    fun_4090d8(a3);
    return;
}

void fun_4090b8(signed char* ecx);

void fun_407f80(int32_t a1, int32_t a2, signed char* a3) {
    fun_4090b8(a3);
    return;
}

int32_t fun_408d70(void* a1, void* a2, void* a3, void* a4) {
    int32_t eax5;

    if (a4 != a2) {
        __asm__("cdq ");
        eax5 = reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(a1) - reinterpret_cast<uint32_t>(a3) << 8) / reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(a2) - reinterpret_cast<uint32_t>(a4));
    } else {
        eax5 = 0x80010000;
        if (reinterpret_cast<int32_t>(a1) <= reinterpret_cast<int32_t>(a3)) {
            return 0x7fff0000;
        }
    }
    return eax5;
}

void fun_40914e(uint32_t ecx);

void fun_407fc0(void* a1, uint32_t a2, uint32_t a3, int32_t a4) {
    fun_40914e(a3);
    return;
}

struct s68 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    int32_t fc;
    int32_t f10;
    int32_t f14;
    int32_t f18;
    int32_t f1c;
};

struct s69 {
    signed char[4] pad4;
    struct s68* f4;
};

int32_t g41cc68 = 0;

int32_t g41cc6c = 0;

int32_t g41cc70 = 0;

int32_t g41cc74 = 0;

int32_t g41cc78 = 0;

int32_t g41cc7c = 0;

struct s70 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    int32_t fc;
};

struct s71 {
    signed char[8] pad8;
    struct s70* f8;
};

int32_t g41cc48 = 0;

int32_t g41cc4c = 0;

int32_t g41cc54 = 0;

int32_t g41cc50 = 0;

int32_t g41cc5c = 0;

int32_t g41cc64 = 0;

int32_t g41cc58 = 0;

int32_t g41cc60 = 0;

struct s72 {
    signed char[12] pad12;
    int32_t fc;
};

struct s73 {
    signed char[16] pad16;
    int32_t f10;
};

struct s74 {
    signed char[12] pad12;
    int32_t fc;
};

struct s75 {
    signed char[16] pad16;
    int32_t f10;
};

struct s76 {
    signed char[12] pad12;
    int32_t fc;
};

struct s77 {
    signed char[16] pad16;
    int32_t f10;
};

struct s78 {
    signed char[12] pad12;
    int32_t fc;
};

struct s79 {
    signed char[16] pad16;
    int32_t f10;
};

int32_t g41cc84 = 0;

int32_t g41cc88 = 0;

int32_t g41cc8c = 0;

int32_t g41cc90 = 0;

int32_t g41cc94 = 0;

int32_t g41cc98 = 0;

int32_t g41cca0 = 0;

int32_t g41cca8 = 0;

int32_t g41ccb0 = 0;

int32_t g41cc9c = 0;

int32_t g41ccac = 0;

int32_t g41cca4 = 0;

int32_t g41ccb4 = 0;

int32_t g41ccb8 = 0;

void fun_4071f0(struct s41* a1);

struct s24* fun_4091f8() {
    struct s68* ebp1;
    struct s69* esi2;
    struct s70* ecx3;
    struct s71* esi4;
    int32_t eax5;
    int32_t edx6;
    int32_t eax7;
    int32_t edx8;
    int32_t tmp32_9;
    int32_t eax10;
    int32_t edx11;
    int32_t eax12;
    int32_t edx13;
    int32_t tmp32_14;
    int32_t ebx15;
    int32_t eax16;
    int32_t edx17;
    int32_t eax18;
    int32_t edx19;
    int32_t ebx20;
    int32_t eax21;
    int32_t edx22;
    int32_t tmp32_23;
    int32_t tmp32_24;
    int32_t eax25;
    int32_t tmp32_26;
    int32_t eax27;
    int32_t edx28;
    int32_t tmp32_29;
    int32_t tmp32_30;
    int32_t eax31;
    int32_t tmp32_32;
    int32_t eax33;
    struct s72* esi34;
    int32_t eax35;
    struct s73* esi36;
    int32_t eax37;
    struct s74* esi38;
    int32_t eax39;
    struct s75* esi40;
    int32_t eax41;
    struct s76* esi42;
    int32_t eax43;
    struct s77* esi44;
    int32_t eax45;
    struct s78* esi46;
    int32_t eax47;
    struct s79* esi48;
    int32_t eax49;
    int32_t eax50;
    int32_t eax51;
    int32_t eax52;
    int32_t eax53;
    int32_t eax54;
    int32_t eax55;
    int32_t eax56;
    int32_t eax57;
    int32_t eax58;
    int32_t eax59;
    int32_t eax60;
    int32_t eax61;
    int32_t eax62;
    int32_t eax63;
    int32_t eax64;
    int32_t eax65;
    int32_t eax66;
    int32_t eax67;
    int32_t eax68;
    int32_t eax69;
    int32_t eax70;
    int32_t eax71;
    int32_t eax72;

    ebp1 = esi2->f4;
    g41cc68 = ebp1->fc;
    g41cc6c = ebp1->f14 - 16;
    g41cc70 = ebp1->f8;
    g41cc74 = ebp1->f10 - 16;
    g41cc78 = ebp1->f1c;
    g41cc7c = ebp1->f18;
    ecx3 = esi4->f8;
    eax5 = -ebp1->f0 * ecx3->f0;
    edx6 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax5) = *reinterpret_cast<int16_t*>(&edx6);
    __asm__("rol eax, 0x10");
    g41cc48 = eax5;
    eax7 = -ebp1->f4 * ecx3->f8;
    edx8 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax7) = *reinterpret_cast<int16_t*>(&edx8);
    __asm__("rol eax, 0x10");
    tmp32_9 = g41cc48 + eax7;
    g41cc48 = tmp32_9;
    eax10 = -ebp1->f0 * ecx3->f4;
    edx11 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax10) = *reinterpret_cast<int16_t*>(&edx11);
    __asm__("rol eax, 0x10");
    g41cc4c = eax10;
    eax12 = -ebp1->f4 * ecx3->fc;
    edx13 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax12) = *reinterpret_cast<int16_t*>(&edx13);
    __asm__("rol eax, 0x10");
    tmp32_14 = g41cc4c + eax12;
    g41cc4c = tmp32_14;
    ebx15 = ebp1->f10 - 16 - ebp1->f8;
    eax16 = ecx3->f4 * ebx15;
    edx17 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax16) = *reinterpret_cast<int16_t*>(&edx17);
    __asm__("rol eax, 0x10");
    g41cc54 = eax16;
    eax18 = ecx3->f0 * ebx15;
    edx19 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax18) = *reinterpret_cast<int16_t*>(&edx19);
    __asm__("rol eax, 0x10");
    g41cc50 = eax18;
    ebx20 = ebp1->f14 - 16 - ebp1->fc;
    eax21 = ecx3->fc * ebx20;
    edx22 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax21) = *reinterpret_cast<int16_t*>(&edx22);
    __asm__("rol eax, 0x10");
    tmp32_23 = eax21 + g41cc4c;
    g41cc5c = tmp32_23;
    tmp32_24 = tmp32_23 + g41cc54;
    g41cc64 = tmp32_24;
    eax25 = g41cc54;
    tmp32_26 = eax25 + g41cc4c;
    g41cc54 = tmp32_26;
    eax27 = ecx3->f8 * ebx20;
    edx28 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax27) = *reinterpret_cast<int16_t*>(&edx28);
    __asm__("rol eax, 0x10");
    tmp32_29 = eax27 + g41cc48;
    g41cc58 = tmp32_29;
    tmp32_30 = tmp32_29 + g41cc50;
    g41cc60 = tmp32_30;
    eax31 = g41cc50;
    tmp32_32 = eax31 + g41cc48;
    g41cc50 = tmp32_32;
    eax33 = g41cc48;
    g41cc48 = eax33 + esi34->fc;
    eax35 = g41cc4c;
    g41cc4c = eax35 + esi36->f10;
    eax37 = g41cc50;
    g41cc50 = eax37 + esi38->fc;
    eax39 = g41cc54;
    g41cc54 = eax39 + esi40->f10;
    eax41 = g41cc58;
    g41cc58 = eax41 + esi42->fc;
    eax43 = g41cc5c;
    g41cc5c = eax43 + esi44->f10;
    eax45 = g41cc60;
    g41cc60 = eax45 + esi46->fc;
    eax47 = g41cc64;
    g41cc64 = eax47 + esi48->f10;
    eax49 = g41cc48;
    g41cc84 = eax49;
    eax50 = g41cc4c;
    g41cc88 = eax50;
    eax51 = g41cc50;
    g41cc8c = eax51;
    eax52 = g41cc54;
    g41cc90 = eax52;
    eax53 = g41cc58;
    g41cc94 = eax53;
    eax54 = g41cc5c;
    g41cc98 = eax54;
    eax55 = g41cc68;
    g41cca0 = eax55;
    g41cca8 = eax55;
    eax56 = g41cc6c;
    g41ccb0 = eax56;
    eax57 = g41cc70;
    g41cc9c = eax57;
    g41ccac = eax57;
    eax58 = g41cc74;
    g41cca4 = eax58;
    eax59 = g41cc7c;
    g41ccb4 = eax59;
    eax60 = g41cc78;
    g41ccb8 = eax60;
    fun_4071f0(0x41cc80);
    eax61 = g41cc50;
    g41cc84 = eax61;
    eax62 = g41cc54;
    g41cc88 = eax62;
    eax63 = g41cc58;
    g41cc8c = eax63;
    eax64 = g41cc5c;
    g41cc90 = eax64;
    eax65 = g41cc60;
    g41cc94 = eax65;
    eax66 = g41cc64;
    g41cc98 = eax66;
    eax67 = g41cc68;
    g41cca0 = eax67;
    eax68 = g41cc6c;
    g41cca8 = eax68;
    g41ccb0 = eax68;
    eax69 = g41cc74;
    g41cc9c = eax69;
    g41ccac = eax69;
    eax70 = g41cc70;
    g41cca4 = eax70;
    eax71 = g41cc7c;
    g41ccb4 = eax71;
    eax72 = g41cc78;
    g41ccb8 = eax72;
    fun_4071f0(0x41cc80);
    return 0x41cc80;
}

void** fun_411170(int32_t a1);

void** g43aaa4 = reinterpret_cast<void**>(0);

signed char* fun_41230e(int32_t a1, int32_t a2, int32_t a3) {
    int1_t zf4;
    signed char* edi5;
    signed char* ebp6;
    int32_t ecx7;
    uint32_t eax8;
    void** ecx9;
    void** v10;
    void** eax11;
    void*** ebx12;
    signed char* edi13;
    int32_t ecx14;
    void* eax15;
    uint32_t ecx16;
    uint32_t ecx17;
    void*** esi18;
    void** edi19;
    uint32_t ecx20;
    void** eax21;
    int32_t v22;

    if (!zf4) {
        do {
            edi5 = ebp6;
            ecx7 = -1;
            eax8 = eax8 - eax8;
            do {
                if (!ecx7) 
                    break;
                --ecx7;
                ++edi5;
            } while (*edi5 != *reinterpret_cast<signed char*>(&eax8));
            ecx9 = reinterpret_cast<void**>(~ecx7);
            v10 = ecx9;
            if (*ebp6 != 61) {
                eax11 = fun_4111a0(ecx9);
                *ebx12 = eax11;
                if (!eax11) {
                    eax11 = fun_411170(9);
                }
                edi13 = ebp6;
                ecx14 = -1;
                eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11) - reinterpret_cast<unsigned char>(eax11));
                do {
                    if (!ecx14) 
                        break;
                    --ecx14;
                    ++edi13;
                } while (*edi13 != *reinterpret_cast<signed char*>(&eax15));
                ecx16 = reinterpret_cast<uint32_t>(~ecx14);
                eax8 = ecx16;
                ecx17 = ecx16 >> 2;
                esi18 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edi13) - ecx16);
                edi19 = *ebx12;
                ebx12 = ebx12 + 4;
                while (ecx17) {
                    --ecx17;
                    *reinterpret_cast<void***>(edi19) = *esi18;
                    edi19 = edi19 + 4;
                    esi18 = esi18 + 4;
                }
                ecx20 = eax8 & 3;
                while (ecx20) {
                    --ecx20;
                    *reinterpret_cast<void***>(edi19) = *esi18;
                    ++edi19;
                    ++esi18;
                }
            }
            ebp6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebp6) + reinterpret_cast<unsigned char>(v10));
        } while (*ebp6);
    }
    eax21 = g43aaa4;
    fun_411250(eax21);
    g43aaa4 = reinterpret_cast<void**>(0);
    *ebx12 = reinterpret_cast<void**>(0);
    goto v22;
}

signed char* g43a94c = reinterpret_cast<signed char*>(0);

signed char g43a944 = 0;

uint32_t g43a948 = 0;

struct s80 {
    signed char[1] pad1;
    signed char f1;
    signed char f2;
    signed char[1] pad4;
    uint32_t f4;
    unsigned char f6;
    int32_t f8;
};

signed char* g43a910 = reinterpret_cast<signed char*>(0);

void* g41cdf0 = reinterpret_cast<void*>(0);

void fun_410cbe() {
    int32_t edx1;
    int32_t edx2;
    int32_t edx3;
    signed char* ebx4;
    uint32_t ebp5;
    uint32_t ecx6;
    struct s80* esi7;
    uint32_t* v8;
    uint32_t* eax9;
    uint32_t ecx10;
    struct s80* v11;
    uint32_t v12;
    uint32_t edi13;
    uint32_t edi14;
    uint32_t esi15;
    signed char* eax16;
    uint32_t tmp32_17;
    uint1_t cf18;
    uint32_t ecx19;
    uint32_t esi20;
    uint32_t tmp32_21;
    void* eax22;

    edx1 = edx2 - 1;
    if (edx1 >= 0) {
        edx3 = edx1 << 16;
        ebx4 = g43a94c;
        *reinterpret_cast<signed char*>(&edx3) = g43a944;
        ebp5 = g43a948;
        do {
            ecx6 = esi7->f4;
            v8 = eax9;
            ecx10 = ecx6 << 16;
            v11 = esi7;
            *reinterpret_cast<signed char*>(&ecx10) = esi7->f1;
            v12 = edi13;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx10) + 1) = esi7->f2;
            *reinterpret_cast<unsigned char*>(&ebx4) = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi7) + 6);
            edi14 = edi13 + *eax9;
            esi15 = *reinterpret_cast<int32_t*>(&esi7->f6) - *eax9 - 1;
            if (reinterpret_cast<int32_t>(esi15) >= reinterpret_cast<int32_t>(0)) {
                eax16 = g43a910;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx10) + 1);
                *reinterpret_cast<signed char*>(&eax16) = *reinterpret_cast<signed char*>(edi14 + esi15);
                tmp32_17 = ecx10 + ebp5;
                cf18 = reinterpret_cast<uint1_t>(tmp32_17 < ecx10);
                ecx19 = tmp32_17;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax16) + 1) = *ebx4;
                esi20 = esi15 - 1;
                if (reinterpret_cast<int32_t>(esi20) >= reinterpret_cast<int32_t>(0)) {
                    do {
                        *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + *reinterpret_cast<signed char*>(&edx3)) + cf18);
                        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx19) + 1);
                        *reinterpret_cast<signed char*>(&eax16) = *reinterpret_cast<signed char*>(edi14 + esi20);
                        tmp32_21 = ecx19 + ebp5;
                        cf18 = reinterpret_cast<uint1_t>(tmp32_21 < ecx19);
                        ecx19 = tmp32_21;
                        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax16) + 1) = *ebx4;
                        *reinterpret_cast<signed char*>(edi14 + esi20 + 1) = *eax16;
                        --esi20;
                    } while (reinterpret_cast<int32_t>(esi20) >= reinterpret_cast<int32_t>(0));
                }
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx3) + 1) = *eax16;
                *reinterpret_cast<signed char*>(edi14 + esi20 + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx3) + 1);
            }
            eax22 = g41cdf0;
            edi13 = v12 + reinterpret_cast<uint32_t>(eax22);
            esi7 = reinterpret_cast<struct s80*>(reinterpret_cast<int32_t>(v11) + 12);
            eax9 = v8 + 1;
            edx3 = edx3 - 0x10000;
        } while (edx3 >= 0);
    }
    return;
}

uint16_t g4366c8 = 0;

uint16_t g4366ca = 0;

uint32_t g436708 = 0;

uint32_t g4366f8 = 0;

uint32_t g4366fc = 0;

uint32_t g43676c = 0;

uint32_t g43679c = 0;

uint32_t g436718 = 0;

uint32_t g4367c4 = 0;

uint32_t g436758 = 0;

signed char* g436798 = reinterpret_cast<signed char*>(0);

signed char* g41cde8 = reinterpret_cast<signed char*>(0);

signed char* g41cde0 = reinterpret_cast<signed char*>(0);

signed char* g4367c0 = reinterpret_cast<signed char*>(0);

void* g4367c8 = reinterpret_cast<void*>(0);

int32_t g4367b0 = 0;

int32_t g4367b4 = 0;

uint32_t g43677c = 0;

uint32_t g436780 = 0;

uint32_t g436784 = 0;

uint32_t g436788 = 0;

int32_t g4367d4 = 0;

uint32_t g4367b8 = 0;

uint32_t g4367bc = 0;

uint32_t g4367ac = 0;

void* g4367a0 = reinterpret_cast<void*>(0);

uint32_t g41cde4 = 0;

uint32_t g41cdec = 0;

uint32_t g43678c = 0;

signed char* g43675c = reinterpret_cast<signed char*>(0);

signed char* g436794 = reinterpret_cast<signed char*>(0);

void* g41cda4 = reinterpret_cast<void*>(0);

void* g436790 = reinterpret_cast<void*>(0);

uint32_t g436764 = 0;

uint32_t g4366f4 = 0;

uint32_t g4366bc = 0;

void* g436760 = reinterpret_cast<void*>(0);

void* g4366e8 = reinterpret_cast<void*>(0);

void* g4366ec = reinterpret_cast<void*>(0);

uint32_t g4366d0 = 0;

uint32_t g4366f0 = 0;

void fun_40f386();

void fun_40e9cc() {
    uint16_t ax1;
    uint32_t eax2;
    int1_t less_or_equal3;
    uint32_t eax4;
    uint32_t tmp32_5;
    uint32_t eax6;
    uint32_t tmp32_7;
    int1_t zf8;
    signed char* eax9;
    signed char* ebx10;
    int1_t less11;
    int1_t less_or_equal12;
    signed char* ebx13;
    int1_t less14;
    int1_t less_or_equal15;
    signed char* ebx16;
    int1_t zf17;
    signed char* eax18;
    void* eax19;
    signed char* eax20;
    void* eax21;
    int1_t zf22;
    int32_t eax23;
    int32_t ebx24;
    signed char* eax25;
    uint32_t ebx26;
    signed char* ecx27;
    uint32_t edx28;
    uint32_t eax29;
    uint32_t ebx30;
    uint32_t ecx31;
    uint32_t edx32;
    int32_t eax33;
    int32_t eax34;
    uint32_t eax35;
    uint32_t ebx36;
    uint32_t eax37;
    uint32_t ebx38;
    signed char* eax39;
    signed char* ebx40;
    uint32_t eax41;
    signed char* ebx42;
    signed char* ecx43;
    signed char* ecx44;
    signed char* eax45;
    uint32_t eax46;
    signed char* ecx47;
    signed char* eax48;
    signed char* eax49;
    signed char* ebx50;
    signed char* eax51;
    int1_t less52;
    int1_t less53;
    uint32_t eax54;
    uint32_t eax55;
    int1_t less56;
    int1_t less57;
    uint32_t tmp32_58;
    uint32_t tmp32_59;
    uint32_t eax60;
    int1_t less_or_equal61;
    uint32_t eax62;
    uint32_t eax63;
    signed char* eax64;
    uint32_t eax65;
    void* eax66;
    void* tmp32_67;
    int1_t zf68;
    int1_t zf69;
    int1_t zf70;
    uint32_t edx71;
    signed char* esi72;
    void* ecx73;
    void* ecx74;
    void* edi75;
    signed char* eax76;
    void* edi77;
    void* edi78;
    signed char* esi79;
    uint32_t ebx80;
    uint32_t edx81;
    uint32_t ebp82;
    uint32_t edx83;
    void* ebx84;
    uint32_t eax85;
    uint32_t ecx86;
    void* ecx87;
    void* ebx88;
    void* ecx89;
    uint32_t edx90;
    uint32_t ebx91;
    uint32_t ebp92;
    void* ebx93;
    void* eax94;
    void* ecx95;
    void* ebx96;
    void* ecx97;
    void* eax98;
    uint32_t ebx99;
    uint32_t ecx100;
    uint32_t tmp32_101;
    uint32_t ebx102;
    uint32_t tmp32_103;
    uint32_t ecx104;
    uint32_t ecx105;
    uint32_t ebx106;
    uint32_t edx107;
    void* ebx108;
    void* ecx109;
    uint32_t edx110;
    void* eax111;
    uint32_t edx112;
    signed char al113;
    void* ecx114;
    uint32_t edx115;
    void* eax116;
    uint32_t edx117;
    signed char al118;
    void* ecx119;
    uint32_t edx120;
    void* eax121;
    uint32_t edx122;
    signed char al123;
    void* ecx124;
    uint32_t edx125;
    void* eax126;
    uint32_t edx127;
    signed char al128;
    void* ecx129;
    uint32_t edx130;
    void* eax131;
    uint32_t edx132;
    signed char al133;
    void* ecx134;
    uint32_t edx135;
    void* eax136;
    uint32_t edx137;
    signed char al138;
    void* ecx139;
    uint32_t edx140;
    void* eax141;
    uint32_t edx142;
    signed char al143;
    void* ecx144;
    uint32_t edx145;
    void* eax146;
    uint32_t edx147;
    signed char al148;
    uint32_t ebx149;
    uint32_t tmp32_150;
    uint32_t ecx151;
    uint32_t tmp32_152;
    int1_t zf153;
    void* ecx154;
    uint32_t ecx155;
    uint32_t ecx156;
    uint32_t edx157;
    signed char* esi158;
    void* ecx159;
    void* ecx160;
    void* edi161;
    signed char* eax162;
    void* edi163;
    uint32_t eax164;
    uint32_t ecx165;
    void* ecx166;
    void* ebx167;
    void* ecx168;
    uint32_t edx169;
    uint32_t ebx170;
    uint32_t ebp171;
    void* ebx172;
    void* ecx173;
    void* ebx174;
    void* ecx175;
    uint32_t ebx176;
    uint32_t ecx177;
    uint32_t tmp32_178;
    uint32_t ebx179;
    uint32_t tmp32_180;
    uint32_t ecx181;
    uint32_t ecx182;
    uint32_t eax183;
    uint32_t ebx184;
    uint32_t edx185;
    uint32_t edx186;
    void* ebx187;
    uint32_t edx188;
    void* ecx189;
    void* ebx190;
    uint32_t edx191;
    uint32_t eax192;
    void* ecx193;
    uint32_t edx194;
    uint32_t edx195;
    void* ebx196;
    uint32_t edx197;
    void* ecx198;
    void* ebx199;
    uint32_t edx200;
    uint32_t eax201;
    void* ecx202;
    uint32_t edx203;
    uint32_t edx204;
    void* ebx205;
    uint32_t edx206;
    void* ecx207;
    void* ebx208;
    uint32_t edx209;
    uint32_t eax210;
    void* ecx211;
    uint32_t edx212;
    uint32_t edx213;
    void* ebx214;
    uint32_t edx215;
    void* ecx216;
    void* ebx217;
    uint32_t edx218;
    uint32_t eax219;
    void* ecx220;
    uint32_t edx221;
    uint32_t ebx222;
    uint32_t tmp32_223;
    uint32_t ecx224;
    uint32_t tmp32_225;
    int1_t zf226;
    void* ecx227;
    uint32_t ecx228;
    uint32_t ecx229;

    __asm__("wait ");
    __asm__("fninit ");
    __asm__("fnstcw word [0x4366c8]");
    ax1 = g4366c8;
    g4366ca = reinterpret_cast<uint16_t>(ax1 & 0xfcff);
    __asm__("fldcw word [0x4366ca]");
    eax2 = g436708;
    less_or_equal3 = reinterpret_cast<int32_t>(eax2) <= reinterpret_cast<int32_t>(g4366f8);
    if (!less_or_equal3) {
        addr_40ebda_2:
        __asm__("wait ");
        __asm__("fninit ");
        __asm__("fldcw word [0x4366c8]");
        __asm__("wait ");
        return;
    } else {
        while (1) {
            __asm__("fild dword [0x4366fc]");
            __asm__("fmul dword [0x436728]");
            eax4 = g4366fc;
            tmp32_5 = eax4 + g43676c;
            __asm__("fiadd dword [0x436768]");
            g43679c = tmp32_5;
            __asm__("fistp dword [0x436798]");
            __asm__("fild dword [0x436708]");
            __asm__("fmul dword [0x43672c]");
            eax6 = g436708;
            tmp32_7 = eax6 + g436718;
            __asm__("fiadd dword [0x436714]");
            g4367c4 = tmp32_7;
            __asm__("fistp dword [0x4367c0]");
            __asm__("fld dword [0x436700]");
            __asm__("fld st0");
            __asm__("fmul dword [0x436734]");
            __asm__("fadd dword [0x436730]");
            __asm__("fdivp st1, st0");
            zf8 = (g436758 & 0xffffffff) == 0;
            if (!zf8) {
                eax9 = g436798;
                ebx10 = g41cde8;
                less11 = reinterpret_cast<signed char>(eax9) < reinterpret_cast<signed char>(g41cde0);
                if (less11) 
                    goto addr_40eb8a_5;
                less_or_equal12 = reinterpret_cast<signed char>(ebx10) <= reinterpret_cast<signed char>(g4367c0);
                if (less_or_equal12) 
                    goto addr_40eb8a_5;
            } else {
                eax9 = g436798;
                ebx13 = g41cde0;
                less14 = reinterpret_cast<signed char>(eax9) < reinterpret_cast<signed char>(g41cde8);
                if (!less14) 
                    goto addr_40eb8a_5;
                less_or_equal15 = reinterpret_cast<signed char>(ebx13) <= reinterpret_cast<signed char>(g4367c0);
                if (!less_or_equal15) 
                    goto addr_40eb8a_5;
            }
            ebx16 = g4367c0;
            if (!((reinterpret_cast<signed char>(eax9) >> 8) - reinterpret_cast<uint32_t>(reinterpret_cast<signed char>(ebx16) >> 8) & 0xffffffff)) {
                addr_40eb8a_5:
                __asm__("fstp dword [0x4366bc]");
            } else {
                __asm__("fld st0");
                __asm__("fld st0");
                __asm__("fimul dword [0x436740]");
                __asm__("fiadd dword [0x436774]");
                __asm__("fistp dword [0x43677c]");
                __asm__("fimul dword [0x436744]");
                __asm__("fiadd dword [0x436778]");
                __asm__("fistp dword [0x436780]");
                __asm__("fimul dword [0x436750]");
                __asm__("fiadd dword [0x436770]");
                __asm__("fistp dword [0x4367b0]");
                __asm__("fld dword [0x43670c]");
                __asm__("fld st0");
                __asm__("fmul dword [0x43673c]");
                __asm__("fadd dword [0x436738]");
                __asm__("fdivp st1, st0");
                zf17 = (g436758 & 0xffffffff) == 0;
                if (!zf17) {
                    eax18 = g436798;
                    eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax18) - reinterpret_cast<unsigned char>(g4367c0));
                    g4367c8 = eax19;
                } else {
                    eax20 = g4367c0;
                    eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20) - reinterpret_cast<unsigned char>(g436798));
                    g4367c8 = eax21;
                }
                __asm__("fld st0");
                __asm__("fld st0");
                __asm__("fimul dword [0x436748]");
                __asm__("fiadd dword [0x436720]");
                __asm__("fistp dword [0x436784]");
                __asm__("fimul dword [0x43674c]");
                __asm__("fiadd dword [0x436724]");
                __asm__("fistp dword [0x436788]");
                __asm__("fimul dword [0x436754]");
                __asm__("fiadd dword [0x43671c]");
                __asm__("fistp dword [0x4367b4]");
                zf22 = (g436758 & 0xffffffff) == 0;
                if (zf22) {
                    eax23 = g4367b0;
                    ebx24 = g4367b4;
                    g4367b0 = ebx24;
                    g4367b4 = eax23;
                    eax25 = g436798;
                    ebx26 = g43679c;
                    ecx27 = g4367c0;
                    edx28 = g4367c4;
                    g436798 = ecx27;
                    g43679c = edx28;
                    g4367c0 = eax25;
                    g4367c4 = ebx26;
                    eax29 = g43677c;
                    ebx30 = g436780;
                    ecx31 = g436784;
                    edx32 = g436788;
                    g43677c = ecx31;
                    g436780 = edx32;
                    g436784 = eax29;
                    g436788 = ebx30;
                }
                eax33 = g4367b4;
                eax34 = eax33 - g4367b0;
                g4367d4 = eax34;
                __asm__("fld1 ");
                __asm__("fidiv dword [0x4367b0]");
                eax35 = g436784;
                ebx36 = g436788;
                eax37 = eax35 - g43677c;
                ebx38 = ebx36 - g436780;
                g4367b8 = eax37;
                g4367bc = ebx38;
                eax39 = g436798;
                ebx40 = g4367c0;
                eax41 = reinterpret_cast<unsigned char>(eax39) - (reinterpret_cast<unsigned char>(ebx40) & 0xffffff00) - 0x100 + (0x100 - (reinterpret_cast<unsigned char>(ebx40) & 0xff) & 0x100);
                g4367ac = eax41;
                __asm__("fild dword [0x4367b4]");
                __asm__("fimul dword [0x4367c8]");
                __asm__("fmul st0, st1");
                __asm__("fstp dword [0x4367cc]");
                __asm__("fild dword [0x4367d4]");
                __asm__("fchs ");
                __asm__("fmulp st1, st0");
                __asm__("fstp dword [0x4367d0]");
                ebx42 = g4367c0;
                ecx43 = g41cde0;
                if (reinterpret_cast<signed char>(ebx42) < reinterpret_cast<signed char>(ecx43)) {
                    g4367ac = eax41 - ((reinterpret_cast<unsigned char>(ecx43) & 0xffffff00) - (reinterpret_cast<unsigned char>(ebx42) & 0xffffff00));
                    ecx44 = g41cde0;
                    g4367c0 = ecx44;
                }
                __asm__("fild dword [0x4367ac]");
                __asm__("fld st0");
                __asm__("fmul dword [0x4367d0]");
                __asm__("fadd dword [0x4367cc]");
                __asm__("fdivp st1, st0");
                eax45 = g436798;
                eax46 = reinterpret_cast<unsigned char>(eax45) & 0xff;
                g4367ac = eax46;
                ecx47 = g41cde8;
                if (reinterpret_cast<signed char>(eax45) >= reinterpret_cast<signed char>(ecx47)) {
                    g4367ac = eax46 + ((reinterpret_cast<unsigned char>(eax45) & 0xffffff00) - (reinterpret_cast<unsigned char>(ecx47) & 0xffffff00));
                    g436798 = ecx47;
                }
                __asm__("fld st0");
                __asm__("fld st0");
                __asm__("fimul dword [0x4367b8]");
                __asm__("fiadd dword [0x43677c]");
                __asm__("fistp dword [0x436784]");
                __asm__("fimul dword [0x4367bc]");
                __asm__("fiadd dword [0x436780]");
                __asm__("fistp dword [0x436788]");
                __asm__("fimul dword [0x4367d4]");
                __asm__("fiadd dword [0x4367b0]");
                __asm__("fistp dword [0x4367b4]");
                __asm__("fild dword [0x4367ac]");
                __asm__("fld st0");
                __asm__("fmul dword [0x4367d0]");
                __asm__("fadd dword [0x4367cc]");
                __asm__("fdivp st1, st0");
                eax48 = g436798;
                eax49 = reinterpret_cast<signed char*>((reinterpret_cast<unsigned char>(eax48) & 0xffffff00) - 0x100);
                g436798 = eax49;
                ebx50 = g4367c0;
                g4367a0 = reinterpret_cast<void*>((reinterpret_cast<signed char>(eax49) >> 8) - (reinterpret_cast<signed char>(ebx50) >> 8));
                __asm__("fld st0");
                __asm__("fld st0");
                __asm__("fimul dword [0x4367b8]");
                __asm__("fiadd dword [0x43677c]");
                __asm__("fistp dword [0x43677c]");
                __asm__("fimul dword [0x4367bc]");
                __asm__("fiadd dword [0x436780]");
                __asm__("fistp dword [0x436780]");
                __asm__("fimul dword [0x4367d4]");
                __asm__("fiadd dword [0x4367b0]");
                __asm__("fistp dword [0x4367b0]");
                eax51 = g436798;
                less52 = reinterpret_cast<signed char>(eax51) < reinterpret_cast<signed char>(g41cde0);
                if (less52) 
                    goto addr_40eb90_22;
                less53 = reinterpret_cast<signed char>(eax51) < reinterpret_cast<signed char>(g41cde8);
                if (!less53) 
                    goto addr_40eb90_22;
                eax54 = g43679c;
                eax55 = eax54 - 0x100;
                less56 = reinterpret_cast<int32_t>(eax55) < reinterpret_cast<int32_t>(g41cde4);
                if (less56) 
                    goto addr_40eb90_22;
                less57 = reinterpret_cast<int32_t>(eax55) < reinterpret_cast<int32_t>(g41cdec);
                if (less57) 
                    goto addr_40ee65_26;
            }
            addr_40eb90_22:
            tmp32_58 = g4366fc + 0x100;
            g4366fc = tmp32_58;
            tmp32_59 = g436708 + 0x100;
            g436708 = tmp32_59;
            __asm__("fild dword [0x4366fc]");
            __asm__("fmul dword [0x436704]");
            __asm__("fstp dword [0x436700]");
            __asm__("fild dword [0x436708]");
            __asm__("fmul dword [0x436710]");
            __asm__("fstp dword [0x43670c]");
            eax60 = g436708;
            less_or_equal61 = reinterpret_cast<int32_t>(eax60) <= reinterpret_cast<int32_t>(g4366f8);
            if (!less_or_equal61) 
                goto addr_40ebda_2;
            continue;
            addr_40ee65_26:
            g43679c = eax55;
            __asm__("fld1 ");
            __asm__("fidiv dword [0x4367b0]");
            eax62 = g43677c;
            eax63 = eax62 << 16 | g436780;
            g43678c = eax63;
            eax64 = g43675c;
            g436794 = eax64;
            __asm__("fild dword [0x4367b4]");
            __asm__("fimul dword [0x4367a0]");
            __asm__("fmul st0, st1");
            __asm__("fstp dword [0x4367a4]");
            __asm__("fild dword [0x4367b0]");
            __asm__("fisub dword [0x4367b4]");
            __asm__("fmulp st1, st0");
            __asm__("fstp dword [0x4367a8]");
            eax65 = g43679c;
            eax66 = reinterpret_cast<void*>((eax65 >> 8) * reinterpret_cast<uint32_t>(g41cdf0));
            tmp32_67 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax66) + reinterpret_cast<uint32_t>(g41cda4));
            g436790 = tmp32_67;
            zf68 = (g436764 & 1) == 0;
            if (!zf68) {
                __asm__("fild dword [0x436784]");
                __asm__("fild dword [0x43677c]");
                __asm__("fsubp st1, st0");
                __asm__("fistp dword [0x4366f0]");
                __asm__("fild dword [0x436788]");
                __asm__("fild dword [0x436780]");
                __asm__("fsubp st1, st0");
                __asm__("fistp dword [0x4366f4]");
                zf69 = (g4366f4 & 0xffffffff) == 0;
                if (zf69) 
                    goto addr_40f4af_30;
            } else {
                __asm__("fild dword [0x436784]");
                __asm__("fild dword [0x43677c]");
                __asm__("fsubp st1, st0");
                __asm__("fistp dword [0x4366f0]");
                __asm__("fild dword [0x436788]");
                __asm__("fild dword [0x436780]");
                __asm__("fsubp st1, st0");
                __asm__("fistp dword [0x4366f4]");
                zf70 = (g4366f4 & 0xffffffff) == 0;
                if (!zf70) 
                    goto addr_40efbe_33; else 
                    goto addr_40efb4_34;
            }
            addr_40f4b9_35:
            __asm__("fild dword [0x4366f0]");
            __asm__("fild dword [0x4366f4]");
            __asm__("fdivp st1, st0");
            edx71 = g43678c;
            esi72 = g436794;
            ecx73 = g4367a0;
            ecx74 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx73) + 1);
            edi75 = g436790;
            eax76 = g436798;
            edi77 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi75) + (reinterpret_cast<unsigned char>(eax76) >> 8) + 1);
            if (reinterpret_cast<int32_t>(ecx74) < reinterpret_cast<int32_t>(16)) {
                addr_40f89e_36:
                __asm__("fild dword [0x4366f0]");
                __asm__("fmul dword [ebx+ecx*4]");
                __asm__("fild dword [0x4366f4]");
                __asm__("fmul dword [ebx+ecx*4]");
                edi78 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi77) - reinterpret_cast<uint32_t>(ecx74) - 1);
                __asm__("fxch st0, st1");
                __asm__("fistp dword [0x4366bc]");
                esi79 = g436794;
                ebx80 = g4366bc;
                __asm__("fistp dword [0x4366bc]");
                edx81 = g4366bc;
                ebp82 = ebx80 << 16 | edx81 & 0xffff;
                edx83 = g43678c;
                ebx84 = g436760;
            } else {
                __asm__("fstp qword [0x4366d4]");
                __asm__("fild dword [0x4366f4]");
                __asm__("fld dword [0x4367a4]");
                __asm__("fld qword [0x4366d4]");
                __asm__("fld dword [0x4367a8]");
                eax85 = reinterpret_cast<uint32_t>(edi77) & 3;
                g4366bc = eax85;
                __asm__("fild dword [0x4366bc]");
                __asm__("fild dword [0x4366c4]");
                g4366e8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx74) - eax85);
                ecx86 = eax85;
                if (!(ecx86 & 3)) {
                    ecx87 = g4366e8;
                    ebx88 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx87) >> 4);
                    ecx89 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx87) & 15);
                    if (reinterpret_cast<int32_t>(ecx89) <= reinterpret_cast<int32_t>(0)) {
                        ecx89 = reinterpret_cast<void*>(16);
                        ebx88 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx88) - 1);
                    }
                    g4366e8 = ebx88;
                    g4366ec = ecx89;
                    if (reinterpret_cast<int32_t>(ebx88) >= reinterpret_cast<int32_t>(1)) 
                        goto addr_40f612_41; else 
                        goto addr_40f60d_42;
                } else {
                    __asm__("fld st5");
                    __asm__("fld st3");
                    __asm__("fmul st0, st3");
                    __asm__("fadd st0, st6");
                    __asm__("fdivp st1, st0");
                    __asm__("fld st0");
                    __asm__("fmul st0, st5");
                    __asm__("fistp dword [0x4366bc]");
                    edx90 = g4366bc;
                    __asm__("fistp dword [0x4366bc]");
                    ebx91 = g4366bc;
                    ebp92 = edx90 << 16 | ebx91 & 0xffff;
                    edx71 = g43678c;
                    __asm__("fxch st0, st1");
                    __asm__("fadd dword [0x4366e4]");
                    __asm__("fxch st0, st1");
                    __asm__("fld st1");
                    __asm__("fmul st0, st6");
                    __asm__("fld st3");
                    __asm__("fmul st0, st3");
                    __asm__("fadd st0, st6");
                    __asm__("fdivp st1, st0");
                    ebx93 = g436760;
                    do {
                        eax94 = reinterpret_cast<void*>(edx71 >> 24);
                        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax94) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx71) + 1);
                        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax94) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(eax94));
                        *reinterpret_cast<signed char*>(&eax94) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 1);
                        edx71 = edx71 + ebp92;
                        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx93) + reinterpret_cast<uint32_t>(eax94));
                        edi77 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi77) - 1);
                        --ecx86;
                    } while (ecx86);
                    ecx95 = g4366e8;
                    ebx96 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx95) >> 4);
                    ecx97 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx95) & 15);
                    if (reinterpret_cast<int32_t>(ecx97) > reinterpret_cast<int32_t>(0)) 
                        goto addr_40f5c7_46; else 
                        goto addr_40f5c1_47;
                }
            }
            do {
                eax98 = reinterpret_cast<void*>(edx83 >> 24);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax98) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx83) + 1);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax98) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi79) + reinterpret_cast<uint32_t>(eax98));
                *reinterpret_cast<signed char*>(&eax98) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi78) + reinterpret_cast<uint32_t>(ecx74));
                edx83 = edx83 + ebp82;
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi78) + reinterpret_cast<uint32_t>(ecx74)) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx84) + reinterpret_cast<uint32_t>(eax98));
                ecx74 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx74) - 1);
            } while (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ecx74) < reinterpret_cast<int32_t>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(ecx74 == 0)));
            goto addr_40f90e_49;
            addr_40f612_41:
            __asm__("fxch st0, st1");
            __asm__("fadd dword [0x4366e4]");
            __asm__("fxch st0, st1");
            __asm__("fld st1");
            __asm__("fmul st0, st6");
            __asm__("fld st3");
            __asm__("fmul st0, st3");
            __asm__("fadd st0, st6");
            __asm__("fdivp st1, st0");
            __asm__("fld st0");
            __asm__("fmul st0, st5");
            __asm__("fistp dword [0x4366bc]");
            ebx99 = g4366bc;
            __asm__("fistp dword [0x4366bc]");
            ecx100 = g4366bc;
            tmp32_101 = ebx99 + g43677c;
            ebx102 = tmp32_101;
            tmp32_103 = ecx100 + g436780;
            ecx104 = tmp32_103;
            __asm__("fxch st0, st1");
            __asm__("fadd dword [0x4366e4]");
            __asm__("fxch st0, st1");
            do {
                g4366bc = edx71;
                ecx105 = ecx104 & 0xffff;
                g4366d0 = ebx102 << 16 | ecx105;
                ebx106 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ebx102 - (edx71 >> 16)) >> 4) << 16 | reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ecx105 - (edx71 & 0xffff)) >> 4) & 0xffff;
                edx107 = g4366bc;
                *reinterpret_cast<int16_t*>(&edx107) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&edx107) - *reinterpret_cast<int16_t*>(&ebx106));
                ebx108 = g436760;
                __asm__("fld st1");
                __asm__("fld st2");
                __asm__("fxch st0, st1");
                __asm__("fmul st0, st7");
                __asm__("fxch st0, st1");
                __asm__("fmul st0, st4");
                ecx109 = reinterpret_cast<void*>(edx107 >> 24);
                edx110 = edx107 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx109) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx110) + 1);
                eax111 = reinterpret_cast<void*>(edx110 >> 24);
                edx112 = edx110 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx109) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(ecx109));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax111) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx112) + 1);
                *reinterpret_cast<signed char*>(&ecx109) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 1);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax111) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(eax111));
                *reinterpret_cast<signed char*>(&eax111) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 2);
                al113 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(eax111));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(ecx109));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 2) = al113;
                ecx114 = reinterpret_cast<void*>(edx112 >> 24);
                edx115 = edx112 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx114) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx115) + 1);
                eax116 = reinterpret_cast<void*>(edx115 >> 24);
                edx117 = edx115 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx114) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(ecx114));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax116) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx117) + 1);
                *reinterpret_cast<signed char*>(&ecx114) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 3);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax116) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(eax116));
                *reinterpret_cast<signed char*>(&eax116) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 4);
                al118 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(eax116));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 3) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(ecx114));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 4) = al118;
                ecx119 = reinterpret_cast<void*>(edx117 >> 24);
                edx120 = edx117 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx120) + 1);
                __asm__("fadd st0, st6");
                eax121 = reinterpret_cast<void*>(edx120 >> 24);
                edx122 = edx120 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(ecx119));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax121) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx122) + 1);
                *reinterpret_cast<signed char*>(&ecx119) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 5);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax121) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(eax121));
                __asm__("fdivp st1, st0");
                *reinterpret_cast<signed char*>(&eax121) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 6);
                al123 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(eax121));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(ecx119));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 6) = al123;
                ecx124 = reinterpret_cast<void*>(edx122 >> 24);
                edx125 = edx122 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx124) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx125) + 1);
                eax126 = reinterpret_cast<void*>(edx125 >> 24);
                edx127 = edx125 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx124) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(ecx124));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax126) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx127) + 1);
                *reinterpret_cast<signed char*>(&ecx124) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 7);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax126) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(eax126));
                *reinterpret_cast<signed char*>(&eax126) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 8);
                al128 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(eax126));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 7) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(ecx124));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 8) = al128;
                ecx129 = reinterpret_cast<void*>(edx127 >> 24);
                edx130 = edx127 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx129) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx130) + 1);
                eax131 = reinterpret_cast<void*>(edx130 >> 24);
                edx132 = edx130 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx129) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(ecx129));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax131) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx132) + 1);
                *reinterpret_cast<signed char*>(&ecx129) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 9);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax131) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(eax131));
                __asm__("fld st0");
                *reinterpret_cast<signed char*>(&eax131) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 10);
                al133 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(eax131));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 9) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(ecx129));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 10) = al133;
                ecx134 = reinterpret_cast<void*>(edx132 >> 24);
                edx135 = edx132 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx134) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx135) + 1);
                eax136 = reinterpret_cast<void*>(edx135 >> 24);
                edx137 = edx135 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx134) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(ecx134));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax136) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx137) + 1);
                *reinterpret_cast<signed char*>(&ecx134) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 11);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax136) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(eax136));
                __asm__("fmul st0, st5");
                *reinterpret_cast<signed char*>(&eax136) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 12);
                al138 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(eax136));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 11) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(ecx134));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 12) = al138;
                ecx139 = reinterpret_cast<void*>(edx137 >> 24);
                edx140 = edx137 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx139) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx140) + 1);
                eax141 = reinterpret_cast<void*>(edx140 >> 24);
                edx142 = edx140 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx139) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(ecx139));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax141) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx142) + 1);
                *reinterpret_cast<signed char*>(&ecx139) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 13);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax141) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(eax141));
                __asm__("fadd st0, st2");
                __asm__("fxch st0, st1");
                __asm__("fadd st0, st2");
                __asm__("fxch st0, st1");
                *reinterpret_cast<signed char*>(&eax141) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 14);
                al143 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(eax141));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 13) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(ecx139));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 14) = al143;
                __asm__("fstp dword [0x4366bc]");
                __asm__("fxch st0, st2");
                __asm__("fadd dword [0x4366e4]");
                __asm__("fxch st0, st2");
                ecx144 = reinterpret_cast<void*>(edx142 >> 24);
                edx145 = edx142 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx144) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx145) + 1);
                eax146 = reinterpret_cast<void*>(edx145 >> 24);
                edx147 = edx145 + ebx106;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx144) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(ecx144));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax146) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx147) + 1);
                *reinterpret_cast<signed char*>(&ecx144) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 15);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax146) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi72) + reinterpret_cast<uint32_t>(eax146));
                *reinterpret_cast<signed char*>(&eax146) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 16);
                edx71 = g4366d0;
                al148 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(eax146));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 15) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx108) + reinterpret_cast<uint32_t>(ecx144));
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi77) - 16) = al148;
                ebx149 = g4366bc;
                tmp32_150 = ebx149 + g43677c;
                ebx102 = tmp32_150;
                __asm__("fstp dword [0x4366bc]");
                ecx151 = g4366bc;
                edi77 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi77) - 16);
                tmp32_152 = ecx151 + g436780;
                ecx104 = tmp32_152;
                g4366e8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g4366e8) - 1);
                zf153 = g4366e8 == 0;
            } while (!zf153);
            ecx154 = g4366ec;
            if (reinterpret_cast<int32_t>(ecx154) >= reinterpret_cast<int32_t>(17)) {
                addr_40f90e_49:
                __asm__("wait ");
                __asm__("fninit ");
                __asm__("fldcw word [0x4366c8]");
                __asm__("wait ");
                goto addr_40eb90_22;
            } else {
                addr_40f861_53:
                ecx155 = g43678c;
                ecx156 = g43678c;
                g4366f0 = g4366f0 - ((edx71 >> 16) - (ecx155 >> 16));
                g4366f4 = g4366f4 - ((edx71 & 0xffff) - (ecx156 & 0xffff));
                g43678c = edx71;
                ecx74 = g4366ec;
                goto addr_40f89e_36;
            }
            addr_40f60d_42:
            goto addr_40f861_53;
            addr_40f5c7_46:
            g4366e8 = ebx96;
            g4366ec = ecx97;
            if (reinterpret_cast<int32_t>(ebx96) < reinterpret_cast<int32_t>(1)) {
                __asm__("fstp dword [0x4366bc]");
                goto addr_40f861_53;
            }
            addr_40f5c1_47:
            ecx97 = reinterpret_cast<void*>(16);
            ebx96 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx96) - 1);
            goto addr_40f5c7_46;
            addr_40f4af_30:
            g4366f4 = 1;
            goto addr_40f4b9_35;
            addr_40efbe_33:
            __asm__("fild dword [0x4366f0]");
            __asm__("fild dword [0x4366f4]");
            __asm__("fdivp st1, st0");
            edx157 = g43678c;
            esi158 = g436794;
            ecx159 = g4367a0;
            ecx160 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx159) + 1);
            edi161 = g436790;
            eax162 = g436798;
            edi163 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi161) + (reinterpret_cast<unsigned char>(eax162) >> 8) + 1);
            if (reinterpret_cast<int32_t>(ecx160) < reinterpret_cast<int32_t>(16)) 
                break;
            __asm__("fstp qword [0x4366d4]");
            __asm__("fild dword [0x4366f4]");
            __asm__("fld dword [0x4367a4]");
            __asm__("fld qword [0x4366d4]");
            __asm__("fld dword [0x4367a8]");
            eax164 = reinterpret_cast<uint32_t>(edi163) & 3;
            g4366bc = eax164;
            __asm__("fild dword [0x4366bc]");
            __asm__("fild dword [0x4366c4]");
            g4366e8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx160) - eax164);
            ecx165 = eax164;
            if (!(ecx165 & 3)) {
                ecx166 = g4366e8;
                ebx167 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx166) >> 4);
                ecx168 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx166) & 15);
                if (reinterpret_cast<int32_t>(ecx168) <= reinterpret_cast<int32_t>(0)) {
                    ecx168 = reinterpret_cast<void*>(16);
                    ebx167 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx167) - 1);
                }
                g4366e8 = ebx167;
                g4366ec = ecx168;
                if (reinterpret_cast<int32_t>(ebx167) < reinterpret_cast<int32_t>(1)) 
                    goto addr_40f104_59;
                __asm__("fxch st0, st1");
                __asm__("fadd dword [0x4366e4]");
                __asm__("fxch st0, st1");
                __asm__("fld st1");
                __asm__("fmul st0, st6");
                __asm__("fld st3");
                __asm__("fmul st0, st3");
                __asm__("fadd st0, st6");
                __asm__("fdivp st1, st0");
            } else {
                __asm__("fld st5");
                __asm__("fld st3");
                __asm__("fmul st0, st3");
                __asm__("fadd st0, st6");
                __asm__("fdivp st1, st0");
                __asm__("fld st0");
                __asm__("fmul st0, st5");
                __asm__("fistp dword [0x4366bc]");
                edx169 = g4366bc;
                __asm__("fistp dword [0x4366bc]");
                ebx170 = g4366bc;
                __asm__("fxch st0, st1");
                __asm__("fadd dword [0x4366e4]");
                __asm__("fxch st0, st1");
                __asm__("fld st1");
                __asm__("fmul st0, st6");
                __asm__("fld st3");
                __asm__("fmul st0, st3");
                ebp171 = edx169 << 16 | ebx170 & 0xffff;
                edx157 = g43678c;
                __asm__("fadd st0, st6");
                __asm__("fdivp st1, st0");
                do {
                    ebx172 = reinterpret_cast<void*>(edx157 >> 24);
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx172) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx157) + 1);
                    edx157 = edx157 + ebp171;
                    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi163) - 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ebx172));
                    edi163 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi163) - 1);
                    --ecx165;
                } while (ecx165);
                ecx173 = g4366e8;
                ebx174 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx173) >> 4);
                ecx175 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx173) & 15);
                if (reinterpret_cast<int32_t>(ecx175) > reinterpret_cast<int32_t>(0)) 
                    goto addr_40f0be_64; else 
                    goto addr_40f0b8_65;
            }
            addr_40f11f_66:
            __asm__("fld st0");
            __asm__("fmul st0, st5");
            __asm__("fistp dword [0x4366bc]");
            ebx176 = g4366bc;
            __asm__("fistp dword [0x4366bc]");
            ecx177 = g4366bc;
            tmp32_178 = ebx176 + g43677c;
            ebx179 = tmp32_178;
            tmp32_180 = ecx177 + g436780;
            ecx181 = tmp32_180;
            __asm__("fxch st0, st1");
            __asm__("fadd dword [0x4366e4]");
            __asm__("fxch st0, st1");
            do {
                g4366bc = edx157;
                ecx182 = ecx181 & 0xffff;
                g4366d0 = ebx179 << 16 | ecx182;
                eax183 = edx157 >> 16;
                ebx184 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ebx179 - eax183) >> 4) << 16 | reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ecx182 - (edx157 & 0xffff)) >> 4) & 0xffff;
                edx185 = g4366bc;
                *reinterpret_cast<int16_t*>(&edx185) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&edx185) - *reinterpret_cast<int16_t*>(&ebx184));
                edx186 = edx185 + ebx184;
                ebx187 = reinterpret_cast<void*>(edx185 >> 24);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx187) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx186) + 1);
                __asm__("fld st1");
                __asm__("fld st2");
                __asm__("fxch st0, st1");
                __asm__("fmul st0, st7");
                __asm__("fxch st0, st1");
                edx188 = edx186 + ebx184;
                __asm__("fmul st0, st4");
                ecx189 = reinterpret_cast<void*>(edx186 >> 24);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax183) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ebx187));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx189) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx188) + 1);
                __asm__("fadd st0, st6");
                ebx190 = reinterpret_cast<void*>(edx188 >> 24);
                edx191 = edx188 + ebx184;
                *reinterpret_cast<signed char*>(&eax183) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ecx189));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx190) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx191) + 1);
                __asm__("fdivp st1, st0");
                eax192 = eax183 << 16;
                ecx193 = reinterpret_cast<void*>(edx191 >> 24);
                edx194 = edx191 + ebx184;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax192) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ebx190));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx193) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx194) + 1);
                edx195 = edx194 + ebx184;
                ebx196 = reinterpret_cast<void*>(edx194 >> 24);
                *reinterpret_cast<signed char*>(&eax192) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ecx193));
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi163) - 4) = eax192;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx196) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx195) + 1);
                edx197 = edx195 + ebx184;
                ecx198 = reinterpret_cast<void*>(edx195 >> 24);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax192) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ebx196));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx198) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx197) + 1);
                ebx199 = reinterpret_cast<void*>(edx197 >> 24);
                edx200 = edx197 + ebx184;
                *reinterpret_cast<signed char*>(&eax192) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ecx198));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx199) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx200) + 1);
                eax201 = eax192 << 16;
                ecx202 = reinterpret_cast<void*>(edx200 >> 24);
                edx203 = edx200 + ebx184;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax201) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ebx199));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx202) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx203) + 1);
                edx204 = edx203 + ebx184;
                ebx205 = reinterpret_cast<void*>(edx203 >> 24);
                *reinterpret_cast<signed char*>(&eax201) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ecx202));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx205) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx204) + 1);
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi163) - 8) = eax201;
                edx206 = edx204 + ebx184;
                __asm__("fld st0");
                __asm__("fmul st0, st5");
                ecx207 = reinterpret_cast<void*>(edx204 >> 24);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax201) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ebx205));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx207) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx206) + 1);
                __asm__("fadd st0, st2");
                __asm__("fxch st0, st1");
                __asm__("fadd st0, st2");
                __asm__("fxch st0, st1");
                ebx208 = reinterpret_cast<void*>(edx206 >> 24);
                edx209 = edx206 + ebx184;
                *reinterpret_cast<signed char*>(&eax201) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ecx207));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx208) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx209) + 1);
                __asm__("fstp dword [0x4366bc]");
                eax210 = eax201 << 16;
                ecx211 = reinterpret_cast<void*>(edx209 >> 24);
                edx212 = edx209 + ebx184;
                __asm__("fxch st0, st2");
                __asm__("fadd dword [0x4366e4]");
                __asm__("fxch st0, st2");
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax210) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ebx208));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx211) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx212) + 1);
                edx213 = edx212 + ebx184;
                ebx214 = reinterpret_cast<void*>(edx212 >> 24);
                *reinterpret_cast<signed char*>(&eax210) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ecx211));
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi163) - 12) = eax210;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx214) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx213) + 1);
                edx215 = edx213 + ebx184;
                ecx216 = reinterpret_cast<void*>(edx213 >> 24);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax210) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ebx214));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx216) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx215) + 1);
                ebx217 = reinterpret_cast<void*>(edx215 >> 24);
                edx218 = edx215 + ebx184;
                *reinterpret_cast<signed char*>(&eax210) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ecx216));
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx217) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx218) + 1);
                eax219 = eax210 << 16;
                ecx220 = reinterpret_cast<void*>(edx218 >> 24);
                edx221 = edx218 + ebx184;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax219) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ebx217));
                ebx222 = g4366bc;
                tmp32_223 = ebx222 + g43677c;
                ebx179 = tmp32_223;
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx220) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx221) + 1);
                edx157 = g4366d0;
                __asm__("fstp dword [0x4366bc]");
                *reinterpret_cast<signed char*>(&eax219) = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi158) + reinterpret_cast<uint32_t>(ecx220));
                ecx224 = g4366bc;
                tmp32_225 = ecx224 + g436780;
                ecx181 = tmp32_225;
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi163) - 16) = eax219;
                edi163 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi163) - 16);
                g4366e8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g4366e8) - 1);
                zf226 = g4366e8 == 0;
            } while (!zf226);
            ecx227 = g4366ec;
            if (reinterpret_cast<int32_t>(ecx227) < reinterpret_cast<int32_t>(17)) 
                goto addr_40f2da_69;
            __asm__("wait ");
            __asm__("fninit ");
            __asm__("fldcw word [0x4366c8]");
            __asm__("wait ");
            goto addr_40eb90_22;
            addr_40f0be_64:
            g4366e8 = ebx174;
            g4366ec = ecx175;
            if (reinterpret_cast<int32_t>(ebx174) >= reinterpret_cast<int32_t>(1)) 
                goto addr_40f11f_66; else 
                goto addr_40f0cf_71;
            addr_40f0b8_65:
            ecx175 = reinterpret_cast<void*>(16);
            ebx174 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx174) - 1);
            goto addr_40f0be_64;
            addr_40efb4_34:
            g4366f4 = 1;
            goto addr_40efbe_33;
        }
    }
    addr_40f317_72:
    __asm__("fild dword [0x4366f0]");
    __asm__("fmul dword [ebx+ecx*4]");
    __asm__("fild dword [0x4366f4]");
    __asm__("fmul dword [ebx+ecx*4]");
    __asm__("fxch st0, st1");
    __asm__("fistp dword [0x4366bc]");
    __asm__("fistp dword [0x4366bc]");
    goto reinterpret_cast<int32_t>(fun_40f386) + *reinterpret_cast<int32_t*>(0x436828 + reinterpret_cast<uint32_t>(ecx160) * 4);
    addr_40f104_59:
    addr_40f2da_69:
    ecx228 = g43678c;
    ecx229 = g43678c;
    g4366f0 = g4366f0 - ((edx157 >> 16) - (ecx228 >> 16));
    g4366f4 = g4366f4 - ((edx157 & 0xffff) - (ecx229 & 0xffff));
    g43678c = edx157;
    ecx160 = g4366ec;
    goto addr_40f317_72;
    addr_40f0cf_71:
    __asm__("fstp dword [0x4366bc]");
    goto addr_40f2da_69;
}

struct s81 {
    void** f0;
    signed char[3] pad4;
    signed char* f4;
    signed char[3] pad8;
    uint32_t f8;
    signed char* fc;
    signed char[3] pad16;
    signed char* f10;
    signed char[3] pad20;
    signed char* f14;
    signed char f15;
    signed char[2] pad24;
    uint32_t f18;
    signed char* f1c;
    signed char[3] pad32;
    signed char* f20;
    signed char f21;
    signed char* f24;
    signed char f28;
    signed char[3] pad45;
    signed char f2d;
    signed char[22] pad68;
    void* f44;
};

struct s82 {
    uint32_t f0;
    signed char[12] pad16;
    int32_t f10;
};

uint32_t g453500;

uint32_t g453514;

uint32_t g453528;

uint32_t g453504;

uint32_t g453518;

uint32_t g45352c;

int32_t g453508;

int32_t g45351c;

int32_t g453530;

int32_t g45350c;

int32_t g453520;

int32_t g453534;

int32_t g453510;

int32_t g453524;

int32_t g453538;

int32_t g45353c;

int32_t g453540;

int32_t g453544;

int32_t g453548;

int32_t g45354c;

uint32_t g436768 = 0;

int32_t g453550;

int32_t g436770 = 0;

int32_t g436774 = 0;

int32_t g436778 = 0;

void fun_40c9e0(struct s81* a1) {
    struct s82* ecx2;
    int32_t edx3;
    int32_t ebx4;
    int32_t edi5;
    int32_t* esi6;
    int32_t esi7;
    uint32_t* ebx8;
    uint32_t* ebx9;
    int32_t eax10;
    uint32_t* ebp11;
    uint32_t eax12;
    uint32_t eax13;
    uint32_t eax14;
    uint32_t eax15;
    uint32_t eax16;
    uint32_t ecx17;
    uint32_t edx18;
    uint32_t eax19;
    int32_t eax20;
    int32_t ecx21;
    int32_t edx22;

    ecx2 = reinterpret_cast<struct s82*>(&a1->f8);
    edx3 = 1;
    ebx4 = 2;
    edi5 = 1;
    esi6 = &ecx2->f10;
    do {
        if (*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx2) + (edi5 + edi5 * 2) * 4 - 8) > *esi6) {
            edi5 = ebx4;
        }
        if (*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx2) + (edx3 + edx3 * 2) * 4 - 8) < *esi6) {
            edx3 = ebx4;
        }
        esi6 = esi6 + 3;
        ++ebx4;
    } while (ebx4 < 4);
    esi7 = edi5 - edx3;
    if (esi7 < 0) {
        esi7 = edx3 - edi5;
    }
    if (edi5 + edx3 == 3) {
        esi7 = 3;
    }
    ebx8 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx2) + (edi5 + edi5 * 2) * 4);
    ebx9 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx2) + (esi7 + esi7 * 2) * 4);
    g453500 = *(ebx8 - 3);
    g453514 = *(ebx9 - 3);
    eax10 = edx3 + edx3 * 2;
    ebp11 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx2) + eax10 * 4);
    g453528 = *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx2) + eax10 * 4 - 12);
    g453504 = *(ebx8 - 2);
    g453518 = *(ebx9 - 2);
    g45352c = *(ebp11 - 2);
    g453508 = *reinterpret_cast<int32_t*>(ebx8 - 1);
    g45351c = *reinterpret_cast<int32_t*>(ebx9 - 1);
    g453530 = *reinterpret_cast<int32_t*>(ebp11 - 1);
    g45350c = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx2) + edi5 * 8 + 28);
    g453520 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx2) + esi7 * 8 + 28);
    g453534 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx2) + edx3 * 8 + 28);
    g453510 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx2) + edi5 * 8 + 32);
    eax12 = g453500;
    g453524 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx2) + esi7 * 8 + 32);
    g453538 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx2) + edx3 * 8 + 32);
    g45353c = reinterpret_cast<int32_t>(eax12) >> 8;
    eax13 = g453514;
    g453540 = reinterpret_cast<int32_t>(eax13) >> 8;
    eax14 = g453528;
    g453544 = reinterpret_cast<int32_t>(eax14) >> 8;
    eax15 = g453504;
    g453548 = reinterpret_cast<int32_t>(eax15) >> 8;
    eax16 = g453518;
    ecx17 = g453500;
    edx18 = g453504;
    g45354c = reinterpret_cast<int32_t>(eax16) >> 8;
    eax19 = g45352c;
    g436768 = ecx17;
    g453550 = reinterpret_cast<int32_t>(eax19) >> 8;
    g43676c = edx18;
    eax20 = g453508;
    ecx21 = g45350c;
    edx22 = g453510;
    g436770 = eax20;
    g436774 = ecx21;
    g436778 = edx22;
    return;
}

int32_t g436728 = 0;

int32_t g43672c = 0;

int32_t g453554;

int32_t g436740 = 0;

int32_t g436744 = 0;

int32_t g436750 = 0;

int32_t g436748 = 0;

int32_t g43674c = 0;

int32_t g436754 = 0;

int32_t g4534ec;

int32_t g4534f0;

int32_t g4534d8;

uint32_t g4534dc;

int32_t g4534e4;

uint32_t g4534e0;

int32_t g4534e8;

void fun_40c650() {
    uint32_t eax1;
    uint32_t esi2;
    uint32_t esi3;
    uint32_t ecx4;
    uint32_t eax5;
    uint32_t ecx6;
    uint32_t edx7;
    uint32_t eax8;
    uint32_t edx9;
    int32_t eax10;
    int32_t ebx11;
    int32_t ebp12;
    int32_t edi13;
    int32_t eax14;
    int32_t eax15;
    int32_t eax16;
    int32_t eax17;
    int32_t ebx18;
    int32_t eax19;
    int32_t eax20;
    int32_t ebx21;
    int32_t eax22;
    uint32_t edi23;
    int32_t ebx24;
    int32_t eax25;
    uint32_t eax26;
    uint32_t edi27;
    uint32_t edi28;
    uint32_t eax29;
    uint32_t eax30;
    uint32_t eax31;
    uint32_t ebx32;
    uint32_t ebx33;
    uint32_t eax34;
    uint32_t ebx35;
    uint32_t ebx36;
    uint32_t eax37;
    uint32_t eax38;
    uint32_t eax39;
    uint32_t ebp40;
    uint32_t eax41;
    uint32_t ebp42;
    uint32_t eax43;
    uint32_t eax44;
    uint32_t ebp45;
    uint32_t ebp46;
    uint32_t ebp47;
    uint32_t ebx48;
    int1_t zf49;
    uint32_t eax50;
    uint32_t ebx51;
    uint32_t eax52;
    uint32_t ebx53;
    int32_t eax54;
    int32_t ebx55;
    int32_t ebp56;
    int32_t eax57;
    int16_t ax58;
    int16_t fpu_status_word59;
    uint32_t ecx60;
    uint32_t edx61;

    eax1 = g453504;
    g436728 = 0;
    esi2 = g45352c;
    esi3 = esi2 - eax1;
    if (esi3) {
        __asm__("fild dword [esp+0x10]");
        __asm__("fild dword [esp+0x10]");
        __asm__("fdivp st1, st0");
        __asm__("fstp dword [0x436728]");
    }
    ecx4 = g453518;
    eax5 = g453504;
    g43672c = 0;
    ecx6 = ecx4 - eax5;
    if (ecx6) {
        __asm__("fild dword [esp+0x10]");
        __asm__("fild dword [esp+0x10]");
        __asm__("fdivp st1, st0");
        __asm__("fstp dword [0x43672c]");
    }
    edx7 = g45352c;
    eax8 = g453518;
    g453554 = 0;
    edx9 = edx7 - eax8;
    if (edx9) {
        __asm__("fild dword [esp+0x10]");
        __asm__("fild dword [esp+0x10]");
        __asm__("fdivp st1, st0");
        __asm__("fstp dword [0x453554]");
    }
    eax10 = g453534;
    ebx11 = g45350c;
    ebp12 = g453510;
    edi13 = g453508;
    g436740 = eax10 - ebx11;
    eax14 = g453538;
    g436744 = eax14 - ebp12;
    eax15 = g453530;
    g436750 = eax15 - edi13;
    eax16 = g453520;
    g436748 = eax16 - ebx11;
    eax17 = g453524;
    ebx18 = g453520;
    g43674c = eax17 - ebp12;
    eax19 = g45351c;
    g436754 = eax19 - edi13;
    eax20 = g453534;
    ebx21 = g453524;
    g4534ec = eax20 - ebx18;
    eax22 = g453538;
    edi23 = g453528;
    ebx24 = g45351c;
    g4534f0 = eax22 - ebx21;
    eax25 = g453530;
    g4534d8 = eax25 - ebx24;
    eax26 = g453500;
    edi27 = edi23 - eax26;
    if (reinterpret_cast<int32_t>(edi27) < reinterpret_cast<int32_t>(0)) {
        edi28 = g453500;
        eax29 = g453528;
        edi27 = edi28 - eax29;
    }
    eax30 = esi3;
    if (reinterpret_cast<int32_t>(esi3) < reinterpret_cast<int32_t>(0)) {
        eax31 = g453504;
        ebx32 = g45352c;
        eax30 = eax31 - ebx32;
    }
    if (reinterpret_cast<int32_t>(edi27) <= reinterpret_cast<int32_t>(eax30)) {
    }
    ebx33 = g453514;
    eax34 = g453500;
    ebx35 = ebx33 - eax34;
    if (reinterpret_cast<int32_t>(ebx35) < reinterpret_cast<int32_t>(0)) {
        ebx36 = g453500;
        eax37 = g453514;
        ebx35 = ebx36 - eax37;
    }
    eax38 = ecx6;
    if (reinterpret_cast<int32_t>(ecx6) < reinterpret_cast<int32_t>(0)) {
        eax39 = g453504;
        ebp40 = g453518;
        eax38 = eax39 - ebp40;
    }
    if (reinterpret_cast<int32_t>(ebx35) <= reinterpret_cast<int32_t>(eax38)) {
    }
    eax41 = g453528;
    ebp42 = g453514;
    eax43 = eax41 - ebp42;
    if (reinterpret_cast<int32_t>(eax43) < reinterpret_cast<int32_t>(0)) {
        eax44 = g453514;
        ebp45 = g453528;
        eax43 = eax44 - ebp45;
    }
    ebp46 = edx9;
    if (reinterpret_cast<int32_t>(edx9) < reinterpret_cast<int32_t>(0)) {
        ebp47 = g453518;
        ebp46 = ebp47 - g45352c;
    }
    if (reinterpret_cast<int32_t>(eax43) <= reinterpret_cast<int32_t>(ebp46)) {
    }
    __asm__("fild dword [0x453508]");
    __asm__("fild dword [0x453530]");
    __asm__("fild dword [esp+0x10]");
    __asm__("fild dword [esp+0x10]");
    __asm__("fxch st0, st1");
    __asm__("fstp dword [esp+0x14]");
    __asm__("fild dword [0x45351c]");
    __asm__("fxch st0, st1");
    __asm__("fstp dword [esp+0x18]");
    __asm__("fld dword [esp+0x14]");
    __asm__("fdiv st0, st3");
    __asm__("fmul st0, st2");
    __asm__("fild dword [esp+0x10]");
    __asm__("fld dword [esp+0x18]");
    __asm__("fdiv st0, st5");
    __asm__("fmul st0, st3");
    __asm__("fxch st0, st2");
    __asm__("fstp dword [0x436730]");
    __asm__("fst dword [esp+0x1c]");
    __asm__("fdiv st0, st2");
    __asm__("fmul st0, st3");
    __asm__("fxch st0, st1");
    __asm__("fstp dword [0x436738]");
    __asm__("fstp dword [0x453560]");
    __asm__("fild dword [esp+0x10]");
    __asm__("fdiv st0, st3");
    __asm__("fxch st0, st3");
    __asm__("fidivr dword [esp+0x10]");
    __asm__("fxch st0, st3");
    __asm__("fstp dword [0x436734]");
    __asm__("fxch st0, st2");
    __asm__("fstp dword [0x43673c]");
    ebx48 = g453504;
    __asm__("fstp st0");
    __asm__("fidivr dword [esp+0x10]");
    zf49 = g45352c == ebx48;
    __asm__("fstp dword [0x45355c]");
    if (!zf49) {
        __asm__("fild dword [esp+0x10]");
        __asm__("fdivr dword [esp+0x14]");
        __asm__("fstp dword [0x436704]");
    }
    eax50 = g453504;
    ebx51 = g453518;
    if (ebx51 != eax50) {
        __asm__("fild dword [esp+0x10]");
        __asm__("fdivr dword [esp+0x18]");
        __asm__("fstp dword [0x436710]");
    }
    eax52 = g453518;
    ebx53 = g45352c;
    if (ebx53 != eax52) {
        __asm__("fild dword [esp+0x10]");
        __asm__("fdivr dword [esp+0x1c]");
        __asm__("fstp dword [0x453558]");
    }
    eax54 = g45354c;
    ebx55 = g453548;
    ebp56 = g45354c;
    g4534dc = ecx6;
    g4534e4 = eax54 - ebx55;
    __asm__("fld dword [0x43672c]");
    __asm__("fcomp dword [0x436728]");
    eax57 = g453550;
    g4534e0 = edx9;
    g436758 = 0;
    g4534e8 = eax57 - ebp56;
    ax58 = fpu_status_word59;
    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax58) + 1) & 65) {
        g436758 = 1;
    }
    if (!ecx6 && (ecx60 = g453500, edx61 = g453514, g436758 = 0, reinterpret_cast<int32_t>(edx61) < reinterpret_cast<int32_t>(ecx60))) {
        g436758 = 1;
    }
    return;
}

struct s83 {
    signed char[1] pad1;
    signed char f1;
    signed char f2;
    signed char[1] pad4;
    uint32_t f4;
    unsigned char f6;
    int32_t f8;
};

void fun_410d5c() {
    int32_t edx1;
    int32_t edx2;
    int32_t edx3;
    signed char* ebx4;
    uint32_t ebp5;
    uint32_t ecx6;
    struct s83* esi7;
    uint32_t* v8;
    uint32_t* eax9;
    uint32_t ecx10;
    struct s83* v11;
    uint32_t v12;
    uint32_t edi13;
    uint32_t eax14;
    uint32_t edi15;
    uint32_t esi16;
    uint32_t tmp32_17;
    uint32_t ecx18;
    uint32_t tmp32_19;
    uint32_t ecx20;
    uint32_t tmp32_21;
    uint32_t ecx22;
    uint32_t tmp32_23;
    uint32_t esi24;
    uint32_t tmp32_25;
    uint1_t cf26;
    uint32_t ecx27;
    uint32_t tmp32_28;
    void* eax29;

    edx1 = edx2 - 1;
    if (edx1 >= 0) {
        edx3 = edx1 << 16;
        ebx4 = g43a94c;
        *reinterpret_cast<signed char*>(&edx3) = g43a944;
        ebp5 = g43a948;
        do {
            ecx6 = esi7->f4;
            v8 = eax9;
            ecx10 = ecx6 << 16;
            v11 = esi7;
            *reinterpret_cast<signed char*>(&ecx10) = esi7->f1;
            v12 = edi13;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx10) + 1) = esi7->f2;
            *reinterpret_cast<unsigned char*>(&ebx4) = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi7) + 6);
            eax14 = *eax9;
            edi15 = edi13 + eax14;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx10) + 1);
            esi16 = *reinterpret_cast<int32_t*>(&esi7->f6) - eax14 - 4;
            if (reinterpret_cast<int32_t>(esi16) >= reinterpret_cast<int32_t>(0)) {
                do {
                    tmp32_17 = ecx10 + ebp5;
                    ecx18 = tmp32_17;
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax14) + 1) = *ebx4;
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx18) + 1);
                    *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + *reinterpret_cast<signed char*>(&edx3)) + reinterpret_cast<uint1_t>(tmp32_17 < ecx10));
                    tmp32_19 = ecx18 + ebp5;
                    ecx20 = tmp32_19;
                    *reinterpret_cast<signed char*>(&eax14) = *ebx4;
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx20) + 1);
                    *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + *reinterpret_cast<signed char*>(&edx3)) + reinterpret_cast<uint1_t>(tmp32_19 < ecx18));
                    eax14 = eax14 << 16;
                    tmp32_21 = ecx20 + ebp5;
                    ecx22 = tmp32_21;
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax14) + 1) = *ebx4;
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx22) + 1);
                    *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + *reinterpret_cast<signed char*>(&edx3)) + reinterpret_cast<uint1_t>(tmp32_21 < ecx20));
                    tmp32_23 = ecx22 + ebp5;
                    ecx10 = tmp32_23;
                    *reinterpret_cast<signed char*>(&eax14) = *ebx4;
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx10) + 1);
                    *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + *reinterpret_cast<signed char*>(&edx3)) + reinterpret_cast<uint1_t>(tmp32_23 < ecx22));
                    *reinterpret_cast<uint32_t*>(edi15 + esi16) = eax14;
                    esi16 = esi16 - 4;
                } while (reinterpret_cast<int32_t>(esi16) >= reinterpret_cast<int32_t>(0));
            }
            esi24 = esi16 + 3;
            if (reinterpret_cast<int32_t>(esi24) >= reinterpret_cast<int32_t>(0)) {
                tmp32_25 = ecx10 + ebp5;
                cf26 = reinterpret_cast<uint1_t>(tmp32_25 < ecx10);
                ecx27 = tmp32_25;
                do {
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx27) + 1);
                    *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + *reinterpret_cast<signed char*>(&edx3)) + cf26);
                    tmp32_28 = ecx27 + ebp5;
                    cf26 = reinterpret_cast<uint1_t>(tmp32_28 < ecx27);
                    ecx27 = tmp32_28;
                    *reinterpret_cast<signed char*>(edi15 + esi24) = *ebx4;
                    --esi24;
                } while (reinterpret_cast<int32_t>(esi24) >= reinterpret_cast<int32_t>(0));
            }
            eax29 = g41cdf0;
            edi13 = v12 + reinterpret_cast<uint32_t>(eax29);
            eax9 = v8 + 1;
            esi7 = reinterpret_cast<struct s83*>(reinterpret_cast<int32_t>(v11) + 12);
            edx3 = edx3 - 0x10000;
        } while (edx3 >= 0);
    }
    return;
}

struct s84 {
    signed char[4] pad4;
    int32_t f4;
};

struct s85 {
    signed char[4] pad4;
    uint32_t f4;
};

void* g436898 = reinterpret_cast<void*>(0);

void* g436890 = reinterpret_cast<void*>(0);

struct s86 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40fc98() {
    uint32_t ecx1;
    struct s84* edi2;
    struct s85* esi3;
    uint32_t eax4;
    int32_t* edi5;
    uint32_t* esi6;
    int32_t* esi7;
    int32_t* edi8;
    int32_t* esi9;
    void* eax10;
    struct s86* esi11;
    uint32_t* esi12;

    ecx1 = edi2->f4 - esi3->f4;
    if (ecx1 <= 64) {
        eax4 = *edi5 - *esi6;
        if (*edi5 <= *esi7) {
            eax4 = -eax4;
        }
        if (eax4 > 0x10000) {
            if (ecx1 <= 3) {
                ecx1 = 3;
            }
        } else {
            ecx1 = 65;
        }
    }
    g436898 = reinterpret_cast<void*>((*edi8 - *esi9 << 16) / reinterpret_cast<int32_t>(ecx1));
    eax10 = g436898;
    g436890 = reinterpret_cast<void*>((0x100 - (esi11->f4 & 0xff)) * (reinterpret_cast<int32_t>(eax10) >> 8) + (*esi12 << 8));
    return;
}

struct s87 {
    signed char[4] pad4;
    int32_t f4;
};

struct s88 {
    signed char[4] pad4;
    uint32_t f4;
};

void* g43689c = reinterpret_cast<void*>(0);

void* g436894 = reinterpret_cast<void*>(0);

struct s89 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_40fcfe() {
    uint32_t ecx1;
    struct s87* edi2;
    struct s88* esi3;
    uint32_t eax4;
    int32_t* edi5;
    uint32_t* esi6;
    int32_t* esi7;
    int32_t* edi8;
    int32_t* esi9;
    void* eax10;
    struct s89* esi11;
    uint32_t* esi12;

    ecx1 = edi2->f4 - esi3->f4;
    if (ecx1 <= 64) {
        eax4 = *edi5 - *esi6;
        if (*edi5 <= *esi7) {
            eax4 = -eax4;
        }
        if (eax4 > 0x10000) {
            if (ecx1 <= 3) {
                ecx1 = 3;
            }
        } else {
            ecx1 = 65;
        }
    }
    g43689c = reinterpret_cast<void*>((*edi8 - *esi9 << 16) / reinterpret_cast<int32_t>(ecx1));
    eax10 = g43689c;
    g436894 = reinterpret_cast<void*>((0x100 - (esi11->f4 & 0xff)) * (reinterpret_cast<int32_t>(eax10) >> 8) + (*esi12 << 8));
    return;
}

void fun_410fb0(int32_t* a1, int32_t* a2) {
    int32_t* edi3;
    int32_t* esi4;
    int32_t eax5;

    edi3 = a2;
    esi4 = a1;
    if (reinterpret_cast<uint32_t>(edi3) > reinterpret_cast<uint32_t>(esi4)) {
        do {
            eax5 = *esi4;
            if (eax5) {
                eax5();
            }
            ++esi4;
        } while (reinterpret_cast<uint32_t>(edi3) > reinterpret_cast<uint32_t>(esi4));
    }
    return;
}

int32_t g43aab0 = 0;

void fun_412d80();

void fun_412dc0(int32_t a1);

/* (image base) */
int32_t image_base_ = 0x410ee0;

void** fun_411170(int32_t a1) {
    int1_t zf2;
    void** eax3;

    zf2 = g43aab0 == 1;
    if (zf2) {
        fun_412d80();
    }
    fun_412dc0(a1);
    eax3 = reinterpret_cast<void**>(image_base_(0xff));
    return eax3;
}

void** g454580;

void** g454680;

int32_t GetStartupInfoA = 0x5558e;

int32_t GetStdHandle = 0x5570c;

struct s90 {
    void** f0;
    signed char[3] pad4;
    unsigned char f4;
};

struct s91 {
    void** f0;
    signed char[3] pad4;
    unsigned char f4;
};

int32_t GetFileType = 0x556fe;

int32_t SetHandleCount = 0x556ec;

struct s92 {
    int32_t f0;
    unsigned char f4;
};

void fun_412a80() {
    void** eax1;
    void** esi2;
    void** eax3;
    int16_t v4;
    int32_t v5;
    int32_t esi6;
    int32_t ebx7;
    void** esi8;
    struct s90* v9;
    unsigned char* edi10;
    int32_t* ebx11;
    int1_t less12;
    struct s91* tmp32_13;
    uint32_t eax14;
    void** eax15;
    uint32_t eax16;
    uint32_t eax17;
    int32_t v18;
    void** ebp19;
    int32_t v20;
    int32_t eax21;
    struct s92* ecx22;
    void*** ebp23;
    void** eax24;
    void** tmp32_25;
    int1_t less26;

    eax1 = fun_4111a0(0x100);
    esi2 = eax1;
    if (!esi2) {
        fun_411170(27);
    }
    g454580 = esi2;
    g454680 = reinterpret_cast<void**>(32);
    if (reinterpret_cast<unsigned char>(esi2 + 0x100) > reinterpret_cast<unsigned char>(esi2)) {
        do {
            *reinterpret_cast<void***>(esi2 + 4) = reinterpret_cast<void**>(0);
            esi2 = esi2 + 8;
            *reinterpret_cast<void****>(esi2 + 0xfffffff8) = reinterpret_cast<void***>(0xffffffff);
            *reinterpret_cast<signed char*>(esi2 + 0xfffffffd) = 10;
            eax3 = g454580;
        } while (reinterpret_cast<unsigned char>(eax3 + 0x100) > reinterpret_cast<unsigned char>(esi2));
    }
    GetStartupInfoA();
    if (!v4 || !v5) {
        addr_412bcd_7:
        esi6 = 0;
        ebx7 = GetStdHandle;
    } else {
        esi8 = v9->f0;
        edi10 = &v9->f4;
        ebx11 = reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(esi8) + reinterpret_cast<uint32_t>(edi10));
        if (reinterpret_cast<signed char>(esi8) >= reinterpret_cast<signed char>(0x800)) {
            esi8 = reinterpret_cast<void**>(0x800);
        }
        less12 = reinterpret_cast<signed char>(g454680) < reinterpret_cast<signed char>(esi8);
        if (!less12) 
            goto addr_412b83_11; else 
            goto addr_412b26_12;
    }
    do {
        tmp32_13 = reinterpret_cast<struct s91*>(g454580 + esi6 * 8);
        if (!reinterpret_cast<int1_t>(tmp32_13->f0 == 0xffffffff)) {
            tmp32_13->f4 = reinterpret_cast<unsigned char>(tmp32_13->f4 | 0x80);
        } else {
            eax14 = 0xfffffff6;
            tmp32_13->f4 = 0x81;
            if (esi6) {
                eax14 = 12 - reinterpret_cast<uint1_t>(esi6 + 0xffffffff < 1);
            }
            eax15 = reinterpret_cast<void**>(ebx7(eax14));
            if (eax15 == 0xffffffff || (eax16 = reinterpret_cast<uint32_t>(GetFileType(eax15, eax14)), eax16 == 0)) {
                tmp32_13->f4 = reinterpret_cast<unsigned char>(tmp32_13->f4 | 64);
            } else {
                eax17 = eax16 & 0xff;
                tmp32_13->f0 = eax15;
                if (eax17 != 2) {
                    if (eax17 == 3) {
                        tmp32_13->f4 = reinterpret_cast<unsigned char>(tmp32_13->f4 | 8);
                    }
                } else {
                    tmp32_13->f4 = reinterpret_cast<unsigned char>(tmp32_13->f4 | 64);
                }
            }
        }
        ++esi6;
    } while (esi6 < 3);
    SetHandleCount();
    goto v18;
    addr_412b83_11:
    ebp19 = reinterpret_cast<void**>(0);
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi8) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(esi8 == 0))) {
        do {
            if (*ebx11 != -1 && (*edi10 & 1 && (*edi10 & 8 || (v20 = *ebx11, eax21 = reinterpret_cast<int32_t>(GetFileType(v20)), !!eax21)))) {
                ecx22 = reinterpret_cast<struct s92*>(*reinterpret_cast<int32_t**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(ebp19) & 0xffffffe7) >> 3) + 0x454580) + (reinterpret_cast<unsigned char>(ebp19) & 31) * 2);
                ecx22->f0 = *ebx11;
                ecx22->f4 = *edi10;
            }
            ++ebp19;
            ++edi10;
            ++ebx11;
        } while (reinterpret_cast<signed char>(ebp19) < reinterpret_cast<signed char>(esi8));
        goto addr_412bcd_7;
    }
    addr_412b26_12:
    ebp23 = reinterpret_cast<void***>(0x454584);
    do {
        eax24 = fun_4111a0(0x100);
        if (!eax24) 
            break;
        *ebp23 = eax24;
        tmp32_25 = g454680 + 32;
        g454680 = tmp32_25;
        if (reinterpret_cast<unsigned char>(eax24 + 0x100) > reinterpret_cast<unsigned char>(eax24)) {
            do {
                *reinterpret_cast<void***>(eax24 + 4) = reinterpret_cast<void**>(0);
                eax24 = eax24 + 8;
                *reinterpret_cast<void****>(eax24 + 0xfffffff8) = reinterpret_cast<void***>(0xffffffff);
                *reinterpret_cast<signed char*>(eax24 + 0xfffffffd) = 10;
            } while (reinterpret_cast<unsigned char>(*ebp23 + 0x100) > reinterpret_cast<unsigned char>(eax24));
        }
        ebp23 = ebp23 + 4;
        less26 = reinterpret_cast<signed char>(g454680) < reinterpret_cast<signed char>(esi8);
    } while (less26);
    goto addr_412b7b_33;
    esi8 = g454680;
    goto addr_412b83_11;
    addr_412b7b_33:
    goto addr_412b83_11;
}

int32_t fun_4127b0(void** a1);

int32_t fun_412a70() {
    int32_t eax1;

    eax1 = fun_4127b0(0xfd);
    return eax1;
}

int32_t GetEnvironmentStringsW = 0x5569a;

void*** g43ab88 = reinterpret_cast<void***>(0);

int32_t GetEnvironmentStrings = 0x55668;

int32_t FreeEnvironmentStringsA = 0x55638;

int32_t WideCharToMultiByte = 0x556b4;

int32_t FreeEnvironmentStringsW = 0x55680;

void** fun_412620() {
    void*** ebx1;
    void*** edi2;
    int32_t esi3;
    int1_t zf4;
    void*** eax5;
    void*** eax6;
    int1_t zf7;
    int1_t zf8;
    void*** eax9;
    void*** ebp10;
    void** ebp11;
    void** eax12;
    void** v13;
    void** edi14;
    void*** esi15;
    uint32_t ecx16;
    uint32_t ecx17;
    void*** eax18;
    void*** esi19;
    void** eax20;
    void** eax21;
    int32_t eax22;

    ebx1 = reinterpret_cast<void***>(0);
    edi2 = reinterpret_cast<void***>(0);
    esi3 = GetEnvironmentStringsW;
    zf4 = g43ab88 == 0;
    if (zf4) {
        eax5 = reinterpret_cast<void***>(esi3());
        edi2 = eax5;
        if (!eax5) {
            eax6 = reinterpret_cast<void***>(GetEnvironmentStrings());
            ebx1 = eax6;
            if (!ebx1) {
                return 0;
            } else {
                g43ab88 = reinterpret_cast<void***>(2);
            }
        } else {
            g43ab88 = reinterpret_cast<void***>(1);
        }
    }
    zf7 = reinterpret_cast<int1_t>(g43ab88 == 1);
    if (!zf7) {
        zf8 = reinterpret_cast<int1_t>(g43ab88 == 2);
        if (!zf8) {
            return 0;
        } else {
            if (ebx1 || (eax9 = reinterpret_cast<void***>(GetEnvironmentStrings()), ebx1 = eax9, !!ebx1)) {
                ebp10 = ebx1;
                if (*ebx1) {
                    addr_412748_12:
                    ++ebp10;
                    if (*ebp10) 
                        goto addr_412748_12;
                    ++ebp10;
                    if (*ebp10) 
                        goto addr_412748_12;
                }
                ebp11 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp10) - reinterpret_cast<uint32_t>(ebx1) + 1);
                eax12 = fun_4111a0(ebp11);
                v13 = eax12;
                if (eax12) {
                    edi14 = v13;
                    esi15 = ebx1;
                    ecx16 = reinterpret_cast<unsigned char>(ebp11) >> 2;
                    while (ecx16) {
                        --ecx16;
                        *reinterpret_cast<void***>(edi14) = *esi15;
                        edi14 = edi14 + 4;
                        esi15 = esi15 + 4;
                    }
                    ecx17 = reinterpret_cast<unsigned char>(ebp11) & 3;
                    while (ecx17) {
                        --ecx17;
                        *reinterpret_cast<void***>(edi14) = *esi15;
                        ++edi14;
                        ++esi15;
                    }
                    FreeEnvironmentStringsA();
                    goto v13;
                } else {
                    FreeEnvironmentStringsA();
                    goto v13;
                }
            } else {
                return 0;
            }
        }
    } else {
        if (edi2 || (eax18 = reinterpret_cast<void***>(esi3()), edi2 = eax18, !!edi2)) {
            esi19 = edi2;
            if (*edi2) {
                addr_41269a_26:
                esi19 = esi19 + 2;
                if (*esi19) 
                    goto addr_41269a_26;
                esi19 = esi19 + 2;
                if (*esi19) 
                    goto addr_41269a_26;
            }
            eax20 = reinterpret_cast<void**>(WideCharToMultiByte());
            if (!eax20 || (eax21 = fun_4111a0(eax20), eax21 == 0)) {
                FreeEnvironmentStringsW();
                goto 0;
            } else {
                eax22 = reinterpret_cast<int32_t>(WideCharToMultiByte());
                if (!eax22) {
                    fun_411250(eax21);
                }
                FreeEnvironmentStringsW();
                goto eax21;
            }
        } else {
            return 0;
        }
    }
}

int32_t fun_412270(signed char a1, uint32_t a2, uint32_t a3);

int32_t fun_412250(int32_t a1) {
    int32_t v2;
    int32_t eax3;

    v2 = a1;
    eax3 = fun_412270(*reinterpret_cast<signed char*>(&v2), 0, 4);
    return eax3;
}

int32_t g43aab4 = 2;

int32_t g43ae48 = 0;

void fun_412d80() {
    int32_t eax1;
    int1_t zf2;
    int32_t eax3;

    eax1 = g43aab0;
    if (eax1 == 1 || !eax1 && (zf2 = g43aab4 == 1, zf2)) {
        fun_412dc0(0xfc);
        eax3 = g43ae48;
        if (eax3) {
            eax3();
        }
        fun_412dc0(0xff);
    }
    return;
}

int32_t WriteFile = 0x55746;

int32_t GetModuleFileNameA = 0x55622;

unsigned char* fun_416300(unsigned char* a1, unsigned char* a2, uint32_t a3);

void fun_416260(void* a1, int32_t a2, int32_t a3);

void fun_412dc0(int32_t a1) {
    int32_t ecx2;
    int32_t* eax3;
    int32_t edx4;
    void* esp5;
    int32_t ebx6;
    int1_t zf7;
    int1_t zf8;
    int1_t zf9;
    int1_t zf10;
    void** eax11;
    void** esi12;
    int32_t v13;
    void** eax14;
    signed char* edx15;
    void* eax16;
    signed char* edi17;
    void* v18;
    int32_t ecx19;
    int32_t eax20;
    int32_t ebp21;
    void* eax22;
    void* esp23;
    int32_t ecx24;
    unsigned char* ebp25;
    int32_t ecx26;
    unsigned char* eax27;
    signed char v28;
    int32_t ecx29;
    void* eax30;
    void* esp31;
    signed char v32;
    int32_t ecx33;
    unsigned char* edi34;
    int32_t ecx35;
    void* eax36;
    uint32_t edx37;
    int32_t ecx38;
    void* eax39;
    signed char v40;
    uint32_t ecx41;
    uint32_t ecx42;
    signed char* edi43;
    int32_t ecx44;
    void* eax45;
    uint32_t edx46;
    int32_t ecx47;
    void* eax48;
    signed char v49;
    uint32_t ecx50;
    uint32_t ecx51;
    signed char* edi52;
    int32_t ecx53;
    void* eax54;
    uint32_t edx55;
    int32_t ecx56;
    void* eax57;
    signed char v58;
    uint32_t ecx59;
    uint32_t ecx60;
    void* esp61;
    int32_t v62;

    ecx2 = 0;
    eax3 = reinterpret_cast<int32_t*>(0x43adb8);
    edx4 = a1;
    esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x1a8 - 4 - 4 - 4 - 4);
    do {
        if (*eax3 == edx4) 
            break;
        eax3 = eax3 + 2;
        ++ecx2;
    } while (reinterpret_cast<uint32_t>(eax3) < 0x43ae48);
    ebx6 = ecx2 * 8;
    if (*reinterpret_cast<int32_t*>(ecx2 * 8 + 0x43adb8) == edx4) {
        zf7 = g43aab0 == 1;
        if (zf7 || (zf8 = g43aab0 == 0, zf8) && (zf9 = g43aab4 == 1, zf9)) {
            zf10 = g454580 == 0;
            if (zf10 || (eax11 = g454580, esi12 = *reinterpret_cast<void***>(eax11 + 16), reinterpret_cast<int1_t>(esi12 == 0xffffffff))) {
                v13 = 0xf4;
                eax14 = reinterpret_cast<void**>(GetStdHandle(0xf4));
                esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) - 4 - 4 + 4);
                esi12 = eax14;
            }
            edx15 = *reinterpret_cast<signed char**>(ebx6 + 0x43adbc);
            v13 = 0;
            eax16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) - 4 + 20);
            edi17 = edx15;
            v18 = eax16;
            ecx19 = -1;
            eax20 = reinterpret_cast<int32_t>(eax16) - reinterpret_cast<int32_t>(eax16);
            do {
                if (!ecx19) 
                    break;
                --ecx19;
                ++edi17;
                ++esi12;
            } while (*edi17 != *reinterpret_cast<signed char*>(&eax20));
            WriteFile(esi12, edx15, ~ecx19 - 1, v18, v13);
        } else {
            if (edx4 != 0xfc) {
                ebp21 = GetModuleFileNameA;
                eax22 = reinterpret_cast<void*>(ebp21());
                esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) - 4 - 4 - 4 - 4 + 4);
                if (!eax22) {
                    ecx24 = 5;
                    while (ecx24) {
                        --ecx24;
                    }
                }
                ebp25 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp23) + 0xb4);
                ecx26 = -1;
                eax27 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax22) - reinterpret_cast<int32_t>(eax22));
                do {
                    if (!ecx26) 
                        break;
                    --ecx26;
                } while (v28 != *reinterpret_cast<signed char*>(&eax27));
                if (reinterpret_cast<uint32_t>(~ecx26) > 60) {
                    ecx29 = -1;
                    eax30 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax27) - reinterpret_cast<uint32_t>(eax27));
                    esp31 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) - 4);
                    do {
                        if (!ecx29) 
                            break;
                        --ecx29;
                    } while (v32 != *reinterpret_cast<signed char*>(&eax30));
                    ebp25 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp31) + ~ecx29 + 0x7c);
                    eax27 = fun_416300(ebp25, "...", 3);
                    esp23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp31) - 4 - 4 - 4 + 4 + 12);
                }
                ecx33 = 6;
                while (ecx33) {
                    --ecx33;
                }
                edi34 = ebp25;
                ecx35 = -1;
                eax36 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax27) - reinterpret_cast<uint32_t>(eax27));
                do {
                    if (!ecx35) 
                        break;
                    --ecx35;
                    ++edi34;
                } while (*edi34 != *reinterpret_cast<unsigned char*>(&eax36));
                edx37 = reinterpret_cast<uint32_t>(~ecx35);
                ecx38 = -1;
                eax39 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax36) - reinterpret_cast<uint32_t>(eax36));
                do {
                    if (!ecx38) 
                        break;
                    --ecx38;
                } while (v40 != *reinterpret_cast<signed char*>(&eax39));
                ecx41 = edx37 >> 2;
                while (ecx41) {
                    --ecx41;
                }
                ecx42 = edx37 & 3;
                while (ecx42) {
                    --ecx42;
                }
                edi43 = "\n\n";
                ecx44 = -1;
                eax45 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax39) - reinterpret_cast<uint32_t>(eax39));
                do {
                    if (!ecx44) 
                        break;
                    --ecx44;
                    ++edi43;
                } while (*edi43 != *reinterpret_cast<signed char*>(&eax45));
                edx46 = reinterpret_cast<uint32_t>(~ecx44);
                ecx47 = -1;
                eax48 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax45) - reinterpret_cast<uint32_t>(eax45));
                do {
                    if (!ecx47) 
                        break;
                    --ecx47;
                } while (v49 != *reinterpret_cast<signed char*>(&eax48));
                ecx50 = edx46 >> 2;
                while (ecx50) {
                    --ecx50;
                }
                ecx51 = edx46 & 3;
                while (ecx51) {
                    --ecx51;
                }
                edi52 = *reinterpret_cast<signed char**>(ebx6 + 0x43adbc);
                ecx53 = -1;
                eax54 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax48) - reinterpret_cast<uint32_t>(eax48));
                do {
                    if (!ecx53) 
                        break;
                    --ecx53;
                    ++edi52;
                } while (*edi52 != *reinterpret_cast<signed char*>(&eax54));
                edx55 = reinterpret_cast<uint32_t>(~ecx53);
                ecx56 = -1;
                eax57 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax54) - reinterpret_cast<uint32_t>(eax54));
                do {
                    if (!ecx56) 
                        break;
                    --ecx56;
                } while (v58 != *reinterpret_cast<signed char*>(&eax57));
                ecx59 = edx55 >> 2;
                while (ecx59) {
                    --ecx59;
                }
                ecx60 = edx55 & 3;
                esp61 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp23) - 4 - 4);
                while (ecx60) {
                    --ecx60;
                }
                fun_416260(reinterpret_cast<int32_t>(esp61) + 28, "Microsoft Visual C++ Runtime Library", 0x12010);
                goto v62;
            }
        }
    }
    return;
}

void** g43b66c = reinterpret_cast<void**>(0xe0);

void** fun_413350(void* a1);

int32_t HeapAlloc = 0x555c0;

void** fun_411210(void** a1) {
    void** esi2;
    int1_t below_or_equal3;
    void** eax4;
    int32_t eax5;

    esi2 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(a1 + 15) & 0xfffffff0);
    below_or_equal3 = reinterpret_cast<unsigned char>(esi2) <= reinterpret_cast<unsigned char>(g43b66c);
    if (!below_or_equal3 || (eax4 = fun_413350(reinterpret_cast<unsigned char>(esi2) >> 4), !eax4)) {
        eax5 = g454574;
        HeapAlloc(eax5, 0, esi2);
    }
    goto __return_address();
}

int32_t g452864;

int32_t fun_412fc0(void** a1) {
    int32_t ecx2;
    int32_t eax3;

    ecx2 = g452864;
    if (!ecx2 || (eax3 = reinterpret_cast<int32_t>(ecx2(a1)), eax3 == 0)) {
        return 0;
    } else {
        return 1;
    }
}

struct s94 {
    signed char* f0;
    uint32_t f4;
    signed char f8;
    signed char[239] pad248;
    signed char ff8;
    signed char[7] pad256;
    void** f100;
};

struct s93 {
    struct s93* f0;
    struct s93* f4;
    void* f8;
    void* fc;
    signed char f10;
    signed char f11;
    signed char[1021] pad1039;
    signed char f40f;
    signed char[1024] pad2064;
    struct s94* f810;
};

/* (image base) */
struct s93* image_base_ = reinterpret_cast<struct s93*>(0x43ae50);

struct s95 {
    signed char* f0;
    void* f4;
    signed char f8;
    signed char[239] pad248;
    signed char ff8;
};

void** fun_4135d0(struct s95* a1, void* a2, void* a3);

int32_t VirtualAlloc = 0x55752;

struct s96 {
    signed char* f0;
    signed char[4] pad8;
    signed char f8;
};

struct s97 {
    signed char[16] pad16;
    signed char f10;
    signed char[1023] pad1040;
    signed char f410;
};

struct s98 {
    signed char* f0;
    uint32_t f4;
    signed char f8;
};

struct s93* fun_412ff0();

void** fun_413350(void* a1) {
    void* ebx2;
    int32_t v3;
    int32_t ebp4;
    struct s93* edi5;
    void* esi6;
    void* ebp7;
    void* eax8;
    void* ecx9;
    struct s95* v10;
    void** eax11;
    void* ebp12;
    void* esi13;
    void* eax14;
    void* ecx15;
    struct s95* v16;
    void** eax17;
    int1_t zf18;
    struct s93* esi19;
    void* edx20;
    void* ecx21;
    void* edi22;
    signed char** eax23;
    void* ecx24;
    struct s96* ebp25;
    struct s97* edx26;
    void* ecx27;
    struct s98* eax28;
    struct s93* eax29;
    struct s94* edx30;

    ebx2 = a1;
    v3 = ebp4;
    edi5 = image_base_;
    do {
        if (edi5->f810) {
            esi6 = edi5->f8;
            if (reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0x400)) {
                ebp7 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi6) << 12);
                do {
                    eax8 = reinterpret_cast<void*>(0);
                    *reinterpret_cast<signed char*>(&eax8) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(esi6) + 16);
                    if (reinterpret_cast<uint32_t>(eax8) >= reinterpret_cast<uint32_t>(ebx2) && (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(esi6) + 16) != -1 && (ecx9 = reinterpret_cast<void*>(0), *reinterpret_cast<signed char*>(&ecx9) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(esi6) + 0x410), reinterpret_cast<uint32_t>(ecx9) > reinterpret_cast<uint32_t>(ebx2)))) {
                        v10 = reinterpret_cast<struct s95*>(reinterpret_cast<uint32_t>(edi5->f810) + reinterpret_cast<uint32_t>(ebp7));
                        eax11 = fun_4135d0(v10, eax8, ebx2);
                        if (eax11) 
                            goto addr_413490_7;
                        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(esi6) + 0x410) = *reinterpret_cast<signed char*>(&ebx2);
                    }
                    ebp7 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp7) + 0x1000);
                    esi6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi6) + 1);
                } while (reinterpret_cast<int32_t>(ebp7) < reinterpret_cast<int32_t>(0x400000));
            }
            ebp12 = reinterpret_cast<void*>(0);
            esi13 = reinterpret_cast<void*>(0);
            if (reinterpret_cast<int32_t>(edi5->f8) > reinterpret_cast<int32_t>(0)) {
                do {
                    eax14 = reinterpret_cast<void*>(0);
                    *reinterpret_cast<signed char*>(&eax14) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(esi13) + 16);
                    if (reinterpret_cast<uint32_t>(eax14) >= reinterpret_cast<uint32_t>(ebx2) && (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(esi13) + 16) != -1 && (ecx15 = reinterpret_cast<void*>(0), *reinterpret_cast<signed char*>(&ecx15) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(esi13) + 0x410), reinterpret_cast<uint32_t>(ecx15) > reinterpret_cast<uint32_t>(ebx2)))) {
                        v16 = reinterpret_cast<struct s95*>(reinterpret_cast<uint32_t>(edi5->f810) + reinterpret_cast<uint32_t>(ebp12));
                        eax17 = fun_4135d0(v16, eax14, ebx2);
                        if (eax17) 
                            goto addr_4134a2_13;
                        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(esi13) + 0x410) = *reinterpret_cast<signed char*>(&ebx2);
                    }
                    ebp12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp12) + 0x1000);
                    esi13 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi13) + 1);
                } while (reinterpret_cast<int32_t>(edi5->f8) > reinterpret_cast<int32_t>(esi13));
            }
        }
        edi5 = edi5->f0;
        zf18 = image_base_ == edi5;
    } while (!zf18);
    esi19 = reinterpret_cast<struct s93*>(0x43ae50);
    do {
        if (!esi19->f810) 
            continue;
        if (!reinterpret_cast<int1_t>(esi19->fc == 0xffffffff)) 
            break;
        esi19 = esi19->f0;
    } while (!reinterpret_cast<int1_t>(esi19 == 0x43ae50));
    goto addr_413450_21;
    edx20 = esi19->fc;
    ecx21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx20) + 16);
    if (reinterpret_cast<int32_t>(ecx21) >= reinterpret_cast<int32_t>(0x400)) {
        ecx21 = reinterpret_cast<void*>(0x400);
    }
    edi22 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx20) + 1);
    if (reinterpret_cast<int32_t>(ecx21) > reinterpret_cast<int32_t>(edi22)) {
        do {
            if (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi19) + reinterpret_cast<uint32_t>(edi22) + 16) != -1) 
                break;
            edi22 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi22) + 1);
        } while (reinterpret_cast<int32_t>(ecx21) > reinterpret_cast<int32_t>(edi22));
    }
    eax23 = reinterpret_cast<signed char**>(VirtualAlloc());
    if (!reinterpret_cast<int1_t>(eax23 == (reinterpret_cast<uint32_t>(edx20) << 12) + reinterpret_cast<uint32_t>(esi19->f810))) {
        goto v3;
    } else {
        ecx24 = esi19->fc;
        ebp25 = reinterpret_cast<struct s96*>((reinterpret_cast<uint32_t>(ecx24) << 12) + reinterpret_cast<uint32_t>(esi19->f810));
        if (reinterpret_cast<int32_t>(ecx24) < reinterpret_cast<int32_t>(edi22)) {
            do {
                ecx24 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx24) + 1);
                ebp25->f0 = &ebp25->f8;
                ebp25 = reinterpret_cast<struct s96*>(reinterpret_cast<uint32_t>(ebp25) + 0x1000);
                edx26 = reinterpret_cast<struct s97*>(reinterpret_cast<uint32_t>(esi19) + reinterpret_cast<uint32_t>(ecx24) - 1);
                *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebp25) + 0xfffff004) = 0xf0;
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebp25) + 0xfffff0f8) = -1;
                edx26->f10 = -16;
                edx26->f410 = -15;
            } while (reinterpret_cast<int32_t>(ecx24) < reinterpret_cast<int32_t>(edi22));
        }
        image_base_ = esi19;
        if (reinterpret_cast<int32_t>(edi22) < reinterpret_cast<int32_t>(0x400)) {
            do {
                if (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi19) + reinterpret_cast<uint32_t>(edi22) + 16) == -1) 
                    break;
                edi22 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi22) + 1);
            } while (reinterpret_cast<int32_t>(edi22) < reinterpret_cast<int32_t>(0x400));
        }
        ecx27 = esi19->fc;
        esi19->fc = reinterpret_cast<void*>(0xffffffff);
        if (reinterpret_cast<int32_t>(edi22) < reinterpret_cast<int32_t>(0x400)) {
            esi19->fc = edi22;
        }
        eax28 = reinterpret_cast<struct s98*>(reinterpret_cast<uint32_t>(esi19->f810) + (reinterpret_cast<uint32_t>(ecx27) << 12));
        eax28->f8 = *reinterpret_cast<signed char*>(&ebx2);
        esi19->f8 = ecx27;
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi19) + reinterpret_cast<uint32_t>(ecx27) + 16) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi19) + reinterpret_cast<uint32_t>(ecx27) + 16) - *reinterpret_cast<signed char*>(&ebx2));
        eax28->f0 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebx2) + reinterpret_cast<uint32_t>(eax28) + 8);
        eax28->f4 = eax28->f4 - reinterpret_cast<uint32_t>(ebx2);
        goto v3;
    }
    addr_413450_21:
    eax29 = fun_412ff0();
    if (!eax29) {
        return 0;
    } else {
        edx30 = eax29->f810;
        edx30->f8 = *reinterpret_cast<signed char*>(&ebx2);
        image_base_ = eax29;
        edx30->f0 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebx2) + reinterpret_cast<uint32_t>(edx30) + 8);
        edx30->f4 = 0xf0 - reinterpret_cast<uint32_t>(ebx2);
        eax29->f10 = reinterpret_cast<signed char>(eax29->f10 - *reinterpret_cast<signed char*>(&ebx2));
        return &eax29->f810->f100;
    }
    addr_4134a2_13:
    image_base_ = edi5;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(esi13) + 16) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(esi13) + 16) - *reinterpret_cast<signed char*>(&ebx2));
    edi5->f8 = esi13;
    return eax17;
    addr_413490_7:
    image_base_ = edi5;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(esi6) + 16) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(esi6) + 16) - *reinterpret_cast<signed char*>(&ebx2));
    edi5->f8 = esi6;
    return eax11;
}

signed char* fun_4132a0(void** a1, struct s16** a2, uint32_t* a3) {
    struct s16* ecx4;
    void** edx5;
    uint32_t ecx6;

    ecx4 = reinterpret_cast<struct s16*>(0x43ae50);
    edx5 = a1;
    do {
        if (!ecx4->f810) 
            continue;
        if (reinterpret_cast<unsigned char>(ecx4->f810) >= reinterpret_cast<unsigned char>(edx5)) 
            continue;
        if (reinterpret_cast<unsigned char>(ecx4->f810 + 0x400000) > reinterpret_cast<unsigned char>(edx5)) 
            break;
        ecx4 = ecx4->f0;
    } while (!reinterpret_cast<int1_t>(ecx4 == 0x43ae50));
    goto addr_4132ca_6;
    *a2 = ecx4;
    ecx6 = reinterpret_cast<unsigned char>(edx5) & 0xfffff000;
    *a3 = ecx6;
    return (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(edx5) - ecx6 - 0x100) >> 4) + ecx6 + 8;
    addr_4132ca_6:
    return 0;
}

struct s99 {
    signed char[16] pad16;
    signed char f10;
    signed char[1023] pad1040;
    signed char f410;
};

int32_t g43b668 = 0;

void fun_4131c0(int32_t a1);

void fun_413300(struct s17* a1, int32_t a2, signed char* a3) {
    struct s99* ecx4;
    int1_t zf5;

    ecx4 = reinterpret_cast<struct s99*>((a2 - a1->f810 >> 12) + reinterpret_cast<int32_t>(a1));
    ecx4->f10 = reinterpret_cast<signed char>(ecx4->f10 + *a3);
    *a3 = 0;
    ecx4->f410 = -15;
    if (ecx4->f10 == -16 && (++g43b668, zf5 = g43b668 == 32, zf5)) {
        fun_4131c0(16);
    }
    return;
}

void* fun_4141b0(void** a1, void** a2, void* a3);

int32_t fun_4138b0(void** a1) {
    int32_t edi2;
    void** ecx3;
    void** eax4;
    void* ebx5;
    void** v6;
    void* eax7;
    void** eax8;

    edi2 = 0;
    ecx3 = *reinterpret_cast<void***>(a1 + 12);
    if ((*reinterpret_cast<unsigned char*>(&ecx3) & 3) == 2 && (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 12)) & 0x108 && (eax4 = *reinterpret_cast<void***>(a1 + 8), ebx5 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1)) - reinterpret_cast<unsigned char>(eax4)), !(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ebx5) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(ebx5 == 0))))) {
        v6 = *reinterpret_cast<void***>(a1 + 16);
        eax7 = fun_4141b0(v6, eax4, ebx5);
        if (eax7 != ebx5) {
            *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 12)) | 32);
            edi2 = -1;
        } else {
            eax8 = *reinterpret_cast<void***>(a1 + 12);
            if (*reinterpret_cast<unsigned char*>(&eax8) & 0x80) {
                *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax8) & 0xfffffffd);
            }
        }
    }
    *reinterpret_cast<void***>(a1) = *reinterpret_cast<void***>(a1 + 8);
    *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(0);
    return edi2;
}

void fun_413820(void** a1) {
    void** eax2;
    void** v3;

    eax2 = *reinterpret_cast<void***>(a1 + 12);
    if (*reinterpret_cast<unsigned char*>(&eax2) & 0x83 && *reinterpret_cast<unsigned char*>(&eax2) & 8) {
        v3 = *reinterpret_cast<void***>(a1 + 8);
        fun_411250(v3);
        *reinterpret_cast<void***>(a1) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 12)) & 0xfffffbf7);
        *reinterpret_cast<void***>(a1 + 8) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(0);
    }
    return;
}

int32_t g43aa58 = 0;

uint32_t g43aa5c = 0;

int32_t fun_416600(void** a1);

int32_t CloseHandle = 0x55762;

int32_t GetLastError = 0x555d8;

int32_t fun_416570(void** a1);

void fun_4144a0(uint32_t a1);

int32_t fun_413750(void** a1) {
    int1_t below_or_equal2;
    void** ebx3;
    uint32_t esi4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int32_t eax8;
    uint32_t ebp9;
    uint32_t eax10;

    below_or_equal2 = reinterpret_cast<unsigned char>(g454680) <= reinterpret_cast<unsigned char>(a1);
    if (below_or_equal2 || (ebx3 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a1) & 0xffffffe7) >> 3) + 0x454580), esi4 = (reinterpret_cast<unsigned char>(a1) & 31) * 8, (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*ebx3) + esi4 + 4) & 1) == 0)) {
        g43aa58 = 9;
        g43aa5c = 0;
        return -1;
    } else {
        if ((a1 == 1 || reinterpret_cast<int1_t>(a1 == 2)) && (eax5 = fun_416600(2), eax6 = fun_416600(1), eax5 == eax6) || (eax7 = fun_416600(a1), eax8 = reinterpret_cast<int32_t>(CloseHandle(eax7)), !!eax8)) {
            ebp9 = 0;
        } else {
            eax10 = reinterpret_cast<uint32_t>(GetLastError(eax7));
            ebp9 = eax10;
        }
        fun_416570(a1);
        if (!ebp9) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(*ebx3) + esi4 + 4) = 0;
            return 0;
        } else {
            fun_4144a0(ebp9);
            return -1;
        }
    }
}

void** fun_4143e0(void** a1, void** a2, int32_t a3, void* a4, void* a5, uint32_t a6, void* a7, void** a8);

void** fun_411570(void** a1) {
    void* v2;
    void* ebx3;
    uint32_t v4;
    uint32_t esi5;
    void** esi6;
    void* v7;
    void* edi8;
    void* v9;
    void* ebp10;
    int1_t less11;
    void** v12;
    void** v13;
    void** eax14;
    void** edi15;
    void** eax16;
    void** v17;
    void** edx18;
    void** ecx19;
    void** eax20;
    void** ebx21;
    void** v22;
    void** ebp23;
    void* eax24;
    void** edx25;
    void** eax26;
    void** eax27;
    void** eax28;
    void** ecx29;

    v2 = ebx3;
    v4 = esi5;
    esi6 = a1;
    v7 = edi8;
    v9 = ebp10;
    less11 = reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi6 + 4)) < reinterpret_cast<signed char>(0);
    v12 = *reinterpret_cast<void***>(esi6 + 16);
    if (less11) {
        *reinterpret_cast<void***>(esi6 + 4) = reinterpret_cast<void**>(0);
    }
    eax14 = fun_4143e0(v12, 0, 1, v9, v7, v4, v2, v13);
    edi15 = eax14;
    if (reinterpret_cast<signed char>(edi15) < reinterpret_cast<signed char>(0)) {
        return 0xffffffff;
    }
    eax16 = *reinterpret_cast<void***>(esi6 + 12);
    v17 = eax16;
    if (!(reinterpret_cast<unsigned char>(eax16) & 0x108)) {
        return reinterpret_cast<unsigned char>(edi15) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 4));
    }
    edx18 = *reinterpret_cast<void***>(esi6);
    ecx19 = *reinterpret_cast<void***>(esi6 + 8);
    eax20 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx18) - reinterpret_cast<unsigned char>(ecx19));
    ebx21 = eax20;
    v22 = eax20;
    if (!(*reinterpret_cast<unsigned char*>(&v17) & 3)) {
        if (!(*reinterpret_cast<unsigned char*>(&v17) & 0x80)) {
            g43aa58 = 22;
            return 0xffffffff;
        }
    } else {
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(v12) & 0xffffffe7) >> 3) + 0x454580)) + (reinterpret_cast<unsigned char>(v12) & 31) * 8 + 4) & 0x80 && reinterpret_cast<unsigned char>(ecx19) < reinterpret_cast<unsigned char>(edx18)) {
            do {
                if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ecx19) == 10)) {
                    ++ebx21;
                }
                ++ecx19;
            } while (reinterpret_cast<unsigned char>(ecx19) < reinterpret_cast<unsigned char>(edx18));
        }
    }
    if (!edi15) {
        return ebx21;
    }
    if (*reinterpret_cast<unsigned char*>(&v17) & 1) 
        goto addr_41165a_17;
    addr_411714_18:
    return reinterpret_cast<unsigned char>(ebx21) + reinterpret_cast<unsigned char>(edi15);
    addr_41165a_17:
    if (!*reinterpret_cast<void***>(esi6 + 4)) {
        return edi15;
    }
    ebp23 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v22) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 4)));
    eax24 = reinterpret_cast<void*>((reinterpret_cast<unsigned char>(v12) & 31) << 3);
    edx25 = *reinterpret_cast<void***>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(v12) & 0xffffffe7) >> 3) + 0x454580);
    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(edx25) + reinterpret_cast<uint32_t>(eax24) + 4) & 0x80) 
        goto addr_4116a2_21;
    addr_411712_22:
    edi15 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi15) - reinterpret_cast<unsigned char>(ebp23));
    goto addr_411714_18;
    addr_4116a2_21:
    eax26 = fun_4143e0(v12, 0, 2, v9, v7, v4, v2, (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(v12) & 0xffffffe7) >> 3) + 0x454580);
    if (eax26 != edi15) {
        fun_4143e0(v12, edi15, 0, v9, v7, v4, v2, (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(v12) & 0xffffffe7) >> 3) + 0x454580);
        if (reinterpret_cast<unsigned char>(ebp23) > reinterpret_cast<unsigned char>(0x200) || ((eax27 = *reinterpret_cast<void***>(esi6 + 12), (*reinterpret_cast<unsigned char*>(&eax27) & 8) == 0) || (ebp23 = reinterpret_cast<void**>(0x200), !!(*reinterpret_cast<unsigned char*>(&eax27 + 1) & 4)))) {
            ebp23 = *reinterpret_cast<void***>(esi6 + 24);
        }
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(v12) & 0xffffffe7) >> 3) + 0x454580)) + reinterpret_cast<uint32_t>(eax24) + 4) & 4)) 
            goto addr_411712_22;
    } else {
        eax28 = *reinterpret_cast<void***>(esi6 + 8);
        ecx29 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax28) + reinterpret_cast<unsigned char>(ebp23));
        if (reinterpret_cast<unsigned char>(ecx29) > reinterpret_cast<unsigned char>(eax28)) {
            do {
                if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax28) == 10)) {
                    ++ebp23;
                }
                ++eax28;
            } while (reinterpret_cast<unsigned char>(ecx29) > reinterpret_cast<unsigned char>(eax28));
        }
        if (!(*reinterpret_cast<unsigned char*>(esi6 + 13) & 32)) 
            goto addr_411712_22; else 
            goto addr_4116d2_31;
    }
    addr_411711_32:
    ++ebp23;
    goto addr_411712_22;
    addr_4116d2_31:
    goto addr_411711_32;
}

int32_t SetFilePointer = 0x5577c;

void** fun_4143e0(void** a1, void** a2, int32_t a3, void* a4, void* a5, uint32_t a6, void* a7, void** a8) {
    int1_t below_or_equal9;
    void** edi10;
    uint32_t esi11;
    int32_t eax12;
    int32_t eax13;
    uint32_t eax14;

    below_or_equal9 = reinterpret_cast<unsigned char>(g454680) <= reinterpret_cast<unsigned char>(a1);
    if (below_or_equal9 || (edi10 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a1) & 0xffffffe7) >> 3) + 0x454580), esi11 = (reinterpret_cast<unsigned char>(a1) & 31) * 8, (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*edi10) + esi11 + 4) & 1) == 0)) {
        g43aa58 = 9;
        g43aa5c = 0;
        return 0xffffffff;
    } else {
        eax12 = fun_416600(a1);
        if (eax12 != -1) {
            eax13 = reinterpret_cast<int32_t>(SetFilePointer());
            eax14 = 0;
            if (eax13 == -1) {
                eax14 = reinterpret_cast<uint32_t>(GetLastError());
            }
            if (!eax14) {
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*edi10) + esi11 + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*edi10) + esi11 + 4) & 0xfd);
                goto a3;
            } else {
                fun_4144a0(eax14);
                goto a3;
            }
        } else {
            g43aa58 = 9;
            return 0xffffffff;
        }
    }
}

/* (image base) */
int16_t* image_base_ = reinterpret_cast<int16_t*>(0x43bb9a);

uint32_t fun_4158a0(uint32_t a1, uint32_t a2) {
    uint32_t ecx3;
    void* esp4;
    int32_t ebx5;
    int16_t* eax6;
    int32_t eax7;
    int32_t eax8;
    int16_t* edx9;
    uint32_t eax10;

    ecx3 = a1;
    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4);
    if (ecx3 + 1 > 0x100) {
        ebx5 = 0;
        *reinterpret_cast<signed char*>(&ebx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx3) + 1);
        eax6 = image_base_;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax6 + ebx5) + 1) & 0x80)) {
            eax7 = 1;
        } else {
            eax7 = 2;
        }
        eax8 = fun_4183d0(1, reinterpret_cast<int32_t>(esp4) - 4 - 4 - 4 - 4 + 24, eax7, reinterpret_cast<int32_t>(esp4) + 6, 0, 0);
        if (eax8) {
            return 0;
        } else {
            return 0;
        }
    } else {
        edx9 = image_base_;
        eax10 = 0;
        *reinterpret_cast<int16_t*>(&eax10) = edx9[ecx3];
        return eax10 & a2;
    }
}

struct s100 {
    uint32_t f0;
    uint32_t f4;
};

struct s101 {
    int16_t f0;
    int32_t f2;
    int32_t f6;
    uint16_t fa;
};

uint32_t fun_418970(struct s101* a1, signed char** a2, signed char* a3, int32_t a4, uint32_t a5, uint32_t a6, int32_t a7);

struct s102 {
    signed char[2] pad2;
    uint32_t f2;
    uint32_t f6;
    int16_t fa;
};

int32_t fun_415e90(struct s102* a1, struct s100* a2);

int32_t fun_415ed0(struct s100* a1, signed char* a2) {
    signed char** esp3;
    void* esp4;
    int32_t eax5;

    esp3 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 16);
    esp4 = reinterpret_cast<void*>(esp3 - 1);
    fun_418970(reinterpret_cast<int32_t>(esp4) + 8, esp3, a2, 0, 0, 0, 0);
    eax5 = fun_415e90(reinterpret_cast<int32_t>(esp4) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 32, a1);
    return eax5;
}

struct s103 {
    signed char f0;
    signed char f1;
};

struct s104 {
    int32_t f0;
    void* f4;
    signed char[4] pad12;
    signed char* fc;
};

void fun_415f50(struct s103* a1, void* a2, struct s104* a3) {
    struct s104* ecx4;
    struct s103* edx5;
    void* eax6;
    signed char* edi7;
    signed char* ebp8;
    signed char* esi9;
    int32_t ecx10;
    void* eax11;
    uint32_t ecx12;
    uint32_t eax13;
    uint32_t ecx14;
    signed char* esi15;
    struct s103* edi16;
    uint32_t ecx17;

    ecx4 = a3;
    edx5 = a1;
    eax6 = a2;
    edi7 = &edx5->f1;
    ebp8 = ecx4->fc;
    esi9 = edi7;
    edx5->f0 = 48;
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(eax6 == 0))) {
        do {
            if (!*ebp8) {
                *esi9 = 48;
            } else {
                ++ebp8;
                *esi9 = *ebp8;
            }
            ++esi9;
            eax6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax6) - 1);
        } while (eax6);
    }
    *esi9 = 0;
    if (reinterpret_cast<int32_t>(eax6) >= reinterpret_cast<int32_t>(0) && *ebp8 >= 53) {
        --esi9;
        if (*esi9 == 57) {
            do {
                *esi9 = 48;
                --esi9;
            } while (*esi9 == 57);
        }
        *esi9 = reinterpret_cast<signed char>(*esi9 + 1);
    }
    if (edx5->f0 != 49) {
        ecx10 = -1;
        eax11 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax6) - reinterpret_cast<uint32_t>(eax6));
        do {
            if (!ecx10) 
                break;
            --ecx10;
            ++edi7;
        } while (*edi7 != *reinterpret_cast<signed char*>(&eax11));
        ecx12 = reinterpret_cast<uint32_t>(~ecx10);
        eax13 = ecx12;
        ecx14 = ecx12 >> 2;
        esi15 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi7) - ecx12);
        edi16 = edx5;
        while (ecx14) {
            --ecx14;
            edi16->f0 = *esi15;
            edi16 = edi16 + 2;
            esi15 = esi15 + 4;
        }
        ecx17 = eax13 & 3;
        while (ecx17) {
            --ecx17;
            edi16->f0 = *esi15;
            edi16 = reinterpret_cast<struct s103*>(&edi16->f1);
            ++esi15;
        }
        return;
    } else {
        ecx4->f4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx4->f4) + 1);
        return;
    }
}

struct s105 {
    signed char f0;
    signed char[1] pad2;
    signed char f2;
};

struct s105* fun_416110(struct s105* a1, struct s105* a2, void* a3);

struct s105* fun_411fa0(struct s105* a1, void* a2) {
    void* esi3;
    struct s105* edx4;
    int32_t ecx5;
    struct s105* edi6;
    int32_t eax7;
    int32_t eax8;
    int32_t eax9;
    struct s105* eax10;

    esi3 = a2;
    if (esi3) {
        edx4 = a1;
        ecx5 = -1;
        edi6 = edx4;
        eax7 = eax8 - eax9;
        do {
            if (!ecx5) 
                break;
            --ecx5;
            edi6 = reinterpret_cast<struct s105*>(&edi6->pad2);
            esi3 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi3) + 1);
        } while (edi6->f0 != *reinterpret_cast<signed char*>(&eax7));
        eax10 = fun_416110(reinterpret_cast<uint32_t>(edx4) + reinterpret_cast<uint32_t>(esi3), edx4, ~ecx5);
    }
    return eax10;
}

struct s106 {
    struct s105* f0;
    int32_t f4;
};

unsigned char g43aad8 = 0;

struct s104* fun_415fe0(struct s105* a1, int32_t a2);

struct s104* g45275c;

void* g43aadc = reinterpret_cast<void*>(0);

struct s107 {
    signed char f0;
    signed char f1;
};

signed char g43bb84 = 46;

struct s105* fun_411d20(struct s106* a1, struct s105* a2, void* a3) {
    int1_t zf4;
    struct s105* edx5;
    int32_t v6;
    struct s104* eax7;
    void* ebp8;
    struct s104* esi9;
    struct s105* ebx10;
    void* v11;
    uint32_t eax12;
    uint32_t eax13;
    int1_t zf14;
    struct s107* tmp32_15;
    struct s105* edi16;
    struct s105* edi17;
    struct s105* edi18;
    signed char al19;
    int1_t zf20;
    void* esi21;
    uint32_t ecx22;
    uint32_t ecx23;

    zf4 = g43aad8 == 0;
    if (zf4) {
        edx5 = a1->f0;
        v6 = a1->f4;
        eax7 = fun_415fe0(edx5, v6);
        ebp8 = a3;
        esi9 = eax7;
        ebx10 = a2;
        v11 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9->f4) + reinterpret_cast<uint32_t>(ebp8));
        eax12 = esi9->f0 - 45;
        fun_415f50(-(eax12 - (eax12 + reinterpret_cast<uint1_t>(eax12 < eax12 + reinterpret_cast<uint1_t>(eax12 < 1)))) + reinterpret_cast<uint32_t>(ebx10), v11, esi9);
    } else {
        esi9 = g45275c;
        ebx10 = a2;
        ebp8 = a3;
        eax13 = esi9->f0 - 45;
        zf14 = g43aadc == ebp8;
        if (zf14) {
            tmp32_15 = reinterpret_cast<struct s107*>(-(eax13 - (eax13 + reinterpret_cast<uint1_t>(eax13 < eax13 + reinterpret_cast<uint1_t>(eax13 < 1)))) + reinterpret_cast<uint32_t>(ebx10) + reinterpret_cast<uint32_t>(g43aadc));
            tmp32_15->f0 = 48;
            tmp32_15->f1 = 0;
        }
    }
    edi16 = ebx10;
    if (esi9->f0 == 45) {
        edi16 = reinterpret_cast<struct s105*>(&ebx10->pad2);
        ebx10->f0 = 45;
    }
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi9->f4) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi9->f4 == 0))) {
        edi17 = reinterpret_cast<struct s105*>(reinterpret_cast<uint32_t>(edi16) + reinterpret_cast<uint32_t>(esi9->f4));
    } else {
        edi17 = reinterpret_cast<struct s105*>(&edi16->pad2);
        fun_411fa0(edi16, 1);
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi17) + 0xffffffff) = 48;
    }
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ebp8) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(ebp8 == 0)) && (edi18 = reinterpret_cast<struct s105*>(&edi17->pad2), fun_411fa0(edi17, 1), al19 = g43bb84, *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi18) + 0xffffffff) = al19, reinterpret_cast<int32_t>(esi9->f4) < reinterpret_cast<int32_t>(0))) {
        zf20 = g43aad8 == 0;
        if (zf20) {
            esi21 = reinterpret_cast<void*>(-reinterpret_cast<uint32_t>(esi9->f4));
            if (reinterpret_cast<int32_t>(esi21) >= reinterpret_cast<int32_t>(ebp8)) {
                esi21 = ebp8;
            }
        } else {
            esi21 = reinterpret_cast<void*>(-reinterpret_cast<uint32_t>(esi9->f4));
        }
        fun_411fa0(edi18, esi21);
        ecx22 = reinterpret_cast<uint32_t>(esi21) >> 2;
        while (ecx22) {
            --ecx22;
            edi18->f0 = reinterpret_cast<signed char>(0x30303030);
            edi18 = reinterpret_cast<struct s105*>(reinterpret_cast<uint32_t>(edi18) + 4);
            esi21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi21) + 4);
        }
        ecx23 = reinterpret_cast<uint32_t>(esi21) & 3;
        while (ecx23) {
            --ecx23;
            edi18->f0 = 48;
            edi18 = reinterpret_cast<struct s105*>(&edi18->pad2);
        }
    }
    return ebx10;
}

struct s108 {
    int32_t f0;
    signed char f1;
    int16_t f2;
    signed char f3;
};

struct s109 {
    int32_t f0;
    signed char f1;
    int16_t f2;
    signed char f3;
};

struct s105* fun_416110(struct s105* a1, struct s105* a2, void* a3) {
    struct s105* esi4;
    struct s105* edi5;
    void* ecx6;
    uint32_t edx7;
    void* eax8;
    uint32_t ecx9;
    uint32_t eax10;
    uint32_t ecx11;
    uint32_t edx12;
    uint32_t ecx13;
    void* esi14;
    void* edi15;
    signed char* esi16;
    signed char* edi17;
    uint32_t edx18;
    int32_t edx19;
    void* eax20;
    uint32_t ecx21;
    uint32_t eax22;
    struct s108* esi23;
    struct s109* edi24;
    uint32_t ecx25;
    uint32_t edx26;
    uint32_t ecx27;

    esi4 = a2;
    edi5 = a1;
    ecx6 = a3;
    if (reinterpret_cast<uint32_t>(edi5) <= reinterpret_cast<uint32_t>(esi4) || reinterpret_cast<uint32_t>(edi5) >= reinterpret_cast<uint32_t>(esi4) + reinterpret_cast<uint32_t>(ecx6)) {
        if (reinterpret_cast<uint32_t>(edi5) & 3) {
            if (reinterpret_cast<uint32_t>(ecx6) <= 12) {
                while (ecx6) {
                    ecx6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx6) - 1);
                    edi5->f0 = esi4->f0;
                    edi5 = reinterpret_cast<struct s105*>(&edi5->pad2);
                    esi4 = reinterpret_cast<struct s105*>(&esi4->pad2);
                }
                return a1;
            }
            edx7 = -reinterpret_cast<uint32_t>(edi5) & 3;
            eax8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx6) - edx7);
            ecx9 = edx7;
            while (ecx9) {
                --ecx9;
                edi5->f0 = esi4->f0;
                edi5 = reinterpret_cast<struct s105*>(&edi5->pad2);
                esi4 = reinterpret_cast<struct s105*>(&esi4->pad2);
            }
            eax10 = reinterpret_cast<uint32_t>(eax8) & 3;
            ecx11 = reinterpret_cast<uint32_t>(eax8) >> 2;
            while (ecx11) {
                --ecx11;
                edi5->f0 = esi4->f0;
                edi5 = reinterpret_cast<struct s105*>(reinterpret_cast<uint32_t>(edi5) + 4);
                esi4 = reinterpret_cast<struct s105*>(reinterpret_cast<uint32_t>(esi4) + 4);
            }
            goto *reinterpret_cast<int32_t*>(eax10 * 4 + 0x416148);
        } else {
            edx12 = reinterpret_cast<uint32_t>(ecx6) & 3;
            ecx13 = reinterpret_cast<uint32_t>(ecx6) >> 2;
            while (ecx13) {
                --ecx13;
                edi5->f0 = esi4->f0;
                edi5 = reinterpret_cast<struct s105*>(reinterpret_cast<uint32_t>(edi5) + 4);
                esi4 = reinterpret_cast<struct s105*>(reinterpret_cast<uint32_t>(esi4) + 4);
            }
            goto *reinterpret_cast<int32_t*>(edx12 * 4 + 0x416148);
        }
    } else {
        esi14 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi4) + reinterpret_cast<uint32_t>(ecx6));
        edi15 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi5) + reinterpret_cast<uint32_t>(ecx6));
        if (reinterpret_cast<uint32_t>(edi15) & 3) {
            esi16 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi14) - 1);
            edi17 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi15) - 1);
            if (reinterpret_cast<uint32_t>(ecx6) <= 12) {
                while (ecx6) {
                    ecx6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx6) - 1);
                    *edi17 = *esi16;
                    --edi17;
                    --esi16;
                }
                return a1;
            }
            edx18 = reinterpret_cast<uint32_t>(-edx19) & 3;
            eax20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx6) - edx18);
            ecx21 = edx18;
            while (ecx21) {
                --ecx21;
                *edi17 = *esi16;
                --edi17;
                --esi16;
            }
            eax22 = reinterpret_cast<uint32_t>(eax20) & 3;
            esi23 = reinterpret_cast<struct s108*>(esi16 - 3);
            edi24 = reinterpret_cast<struct s109*>(edi17 - 3);
            ecx25 = reinterpret_cast<uint32_t>(eax20) >> 2;
            while (ecx25) {
                --ecx25;
                edi24->f0 = esi23->f0;
                edi24 = reinterpret_cast<struct s109*>(reinterpret_cast<uint32_t>(edi24) - 4);
                esi23 = reinterpret_cast<struct s108*>(reinterpret_cast<uint32_t>(esi23) - 4);
            }
            goto *reinterpret_cast<int32_t*>(eax22 * 4 + 0x4161e0);
        } else {
            edx26 = reinterpret_cast<uint32_t>(ecx6) & 3;
            esi23 = reinterpret_cast<struct s108*>(reinterpret_cast<uint32_t>(esi14) - 4);
            edi24 = reinterpret_cast<struct s109*>(reinterpret_cast<uint32_t>(edi15) - 4);
            ecx27 = reinterpret_cast<uint32_t>(ecx6) >> 2;
            while (ecx27) {
                --ecx27;
                edi24->f0 = esi23->f0;
                edi24 = reinterpret_cast<struct s109*>(reinterpret_cast<uint32_t>(edi24) - 4);
                esi23 = reinterpret_cast<struct s108*>(reinterpret_cast<uint32_t>(esi23) - 4);
            }
            goto *reinterpret_cast<int32_t*>(edx26 * 4 + 0x4161e0);
        }
    }
    addr_416180_36:
    return a1;
    edi5->f0 = esi4->f0;
    goto addr_416180_36;
    edi5->f0 = esi4->f0;
    return a1;
    edi5->f0 = esi4->f0;
    edi5->f2 = esi4->f2;
    return a1;
    addr_41621e_40:
    return a1;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi24) + 3) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi23) + 3);
    goto addr_41621e_40;
    *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(edi24) + 2) = *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esi23) + 2);
    return a1;
    *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(edi24) + 2) = *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esi23) + 2);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi24) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi23) + 1);
    return a1;
}

struct s110 {
    signed char[4] pad4;
    int32_t f4;
    int32_t* f8;
    int32_t fc;
};

struct s112 {
    signed char[12] pad12;
    int32_t fc;
};

struct s111 {
    struct s111* f0;
    int32_t f4;
    int32_t f8;
    struct s112* fc;
};

struct s111* g0;

void fun_4120a2(int32_t ecx, int32_t a2);

void fun_41200e(struct s110* a1, int32_t a2) {
    struct s111* v3;
    int32_t* ebx4;
    int32_t esi5;
    int32_t ecx6;

    v3 = g0;
    g0 = reinterpret_cast<struct s111*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 - 4 - 4);
    while ((ebx4 = a1->f8, a1->fc != -1) && a1->fc != a2) {
        esi5 = a1->fc + a1->fc * 2;
        ecx6 = ebx4[esi5];
        a1->fc = ecx6;
        if (!(ebx4 + esi5)[1]) {
            fun_4120a2(ecx6, 0x101);
            (ebx4 + esi5)[2]();
        }
    }
    g0 = v3;
    return;
}

int32_t g43aaec = 0;

struct s113 {
    signed char[8] pad8;
    int32_t f8;
};

int32_t g43aae8 = 0;

int32_t g43aaf0 = 0;

void fun_4120a2(int32_t ecx, int32_t a2) {
    struct s113* ebp3;
    int32_t eax4;
    int32_t ebp5;

    g43aaec = ebp3->f8;
    g43aae8 = eax4;
    g43aaf0 = ebp5;
    return;
}

void fun_412440(void*** a1, void** a2, void** a3, int32_t* a4, int32_t* a5) {
    int32_t* ecx6;
    void*** esi7;
    void** eax8;
    void** edx9;
    int32_t edx10;
    void** dl11;
    int32_t ebx12;
    uint32_t edi13;
    void** edx14;
    int32_t ebx15;
    uint32_t ebp16;
    void*** edx17;
    uint32_t ebp18;
    uint32_t edx19;
    int32_t ebx20;
    int32_t ebx21;

    ecx6 = a5;
    esi7 = a1;
    eax8 = a3;
    *ecx6 = 0;
    *a4 = 1;
    if (a2) {
        edx9 = a2;
        a2 = a2 + 4;
        *reinterpret_cast<void***>(edx9) = eax8;
    }
    if (*esi7 == 34) {
        ++esi7;
        if (*esi7 != 34) {
            do {
                if (!*esi7) 
                    break;
                edx10 = 0;
                *reinterpret_cast<void***>(&edx10) = *esi7;
                if (*reinterpret_cast<unsigned char*>(edx10 + 0x43ab91) & 4 && (*ecx6 = *ecx6 + 1, !!eax8)) {
                    ++esi7;
                    *reinterpret_cast<void***>(eax8) = *esi7;
                    ++eax8;
                }
                *ecx6 = *ecx6 + 1;
                if (eax8) {
                    *reinterpret_cast<void***>(eax8) = *esi7;
                    ++eax8;
                }
                ++esi7;
            } while (!reinterpret_cast<int1_t>(*esi7 == 34));
        }
        *ecx6 = *ecx6 + 1;
        if (eax8) {
            *reinterpret_cast<void***>(eax8) = reinterpret_cast<void**>(0);
            ++eax8;
        }
        if (reinterpret_cast<int1_t>(*esi7 == 34)) {
            ++esi7;
        }
    } else {
        do {
            *ecx6 = *ecx6 + 1;
            if (eax8) {
                *reinterpret_cast<void***>(eax8) = *esi7;
                ++eax8;
            }
            dl11 = *esi7;
            ++esi7;
            ebx12 = 0;
            *reinterpret_cast<void***>(&ebx12) = dl11;
            if (*reinterpret_cast<unsigned char*>(ebx12 + 0x43ab91) & 4) {
                *ecx6 = *ecx6 + 1;
                if (eax8) {
                    *reinterpret_cast<void***>(eax8) = *esi7;
                    ++eax8;
                }
                ++esi7;
            }
            if (dl11 == 32) 
                break;
            if (!dl11) 
                goto addr_4124b0_23;
        } while (!reinterpret_cast<int1_t>(dl11 == 9));
        if (dl11) {
            if (eax8) {
                *reinterpret_cast<void***>(eax8 + 0xffffffff) = reinterpret_cast<void**>(0);
            }
        } else {
            addr_4124b0_23:
            --esi7;
        }
    }
    edi13 = 0;
    while (*esi7) {
        while (*esi7 == 32 || reinterpret_cast<int1_t>(*esi7 == 9)) {
            ++esi7;
        }
        if (!*esi7) 
            break;
        if (a2) {
            edx14 = a2;
            a2 = a2 + 4;
            *reinterpret_cast<void***>(edx14) = eax8;
        }
        *a4 = *a4 + 1;
        while (1) {
            ebx15 = 1;
            ebp16 = 0;
            if (reinterpret_cast<int1_t>(*esi7 == 92)) {
                do {
                    ++esi7;
                    ++ebp16;
                } while (*esi7 == 92);
            }
            if (reinterpret_cast<int1_t>(*esi7 == 34)) {
                if (!(ebp16 & 1)) {
                    if (!edi13 || (edx17 = esi7 + 1, !reinterpret_cast<int1_t>(*edx17 == 34))) {
                        ebx15 = 0;
                    } else {
                        esi7 = edx17;
                    }
                    edi13 = -(edi13 - (edi13 + reinterpret_cast<uint1_t>(edi13 < edi13 + reinterpret_cast<uint1_t>(edi13 < 1))));
                }
                ebp16 = ebp16 >> 1;
            }
            ebp18 = ebp16 - 1;
            if (ebp16) {
                do {
                    if (eax8) {
                        *reinterpret_cast<void***>(eax8) = reinterpret_cast<void**>(92);
                        ++eax8;
                    }
                    edx19 = ebp18;
                    *ecx6 = *ecx6 + 1;
                    --ebp18;
                } while (edx19);
            }
            if (!*esi7) 
                break;
            if (edi13) 
                goto addr_4125a6_51;
            if (*esi7 == 32) 
                break;
            if (*esi7 == 9) 
                break;
            addr_4125a6_51:
            if (ebx15) {
                if (!eax8) {
                    ebx20 = 0;
                    *reinterpret_cast<void***>(&ebx20) = *esi7;
                    if (*reinterpret_cast<unsigned char*>(ebx20 + 0x43ab91) & 4) {
                        ++esi7;
                        *ecx6 = *ecx6 + 1;
                    }
                    *ecx6 = *ecx6 + 1;
                } else {
                    ebx21 = 0;
                    *reinterpret_cast<void***>(&ebx21) = *esi7;
                    if (*reinterpret_cast<unsigned char*>(ebx21 + 0x43ab91) & 4) {
                        *reinterpret_cast<void***>(eax8) = *esi7;
                        ++esi7;
                        ++eax8;
                        *ecx6 = *ecx6 + 1;
                    }
                    ++eax8;
                    ++esi7;
                    *reinterpret_cast<void***>(eax8 + 0xffffffff) = *esi7;
                    *ecx6 = *ecx6 + 1;
                    continue;
                }
            }
            ++esi7;
        }
        if (eax8) {
            *reinterpret_cast<void***>(eax8) = reinterpret_cast<void**>(0);
            ++eax8;
        }
        *ecx6 = *ecx6 + 1;
    }
    if (a2) {
        *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
    }
    *a4 = *a4 + 1;
    return;
}

void** g43aca0 = reinterpret_cast<void**>(0);

void** g43ac94 = reinterpret_cast<void**>(0);

void** g43ac98 = reinterpret_cast<void**>(0);

void** g43aca4 = reinterpret_cast<void**>(0);

void** g43aca8 = reinterpret_cast<void**>(0);

void fun_412a40() {
    void*** edi1;
    int32_t ecx2;

    edi1 = reinterpret_cast<void***>(0x43ab90);
    ecx2 = 64;
    while (ecx2) {
        --ecx2;
        *edi1 = reinterpret_cast<void**>(0);
        edi1 = edi1 + 4;
    }
    *edi1 = reinterpret_cast<void**>(0);
    g43aca0 = reinterpret_cast<void**>(0);
    g43ac94 = reinterpret_cast<void**>(0);
    g43ac98 = reinterpret_cast<void**>(0);
    g43aca4 = reinterpret_cast<void**>(0);
    g43aca8 = reinterpret_cast<void**>(0);
    return;
}

void fun_412a2c();

void** fun_4129e0(void** a1) {
    uint32_t eax2;
    int32_t ecx3;

    eax2 = reinterpret_cast<uint32_t>(a1 - 0x3a4);
    if (eax2 > 18) 
        goto addr_4129fd_2;
    ecx3 = 0;
    *reinterpret_cast<signed char*>(&ecx3) = *reinterpret_cast<signed char*>(eax2 + reinterpret_cast<int32_t>(fun_412a2c));
    switch (ecx3) {
    case 0:
        return 0x411;
    case 1:
        return 0x804;
    case 2:
        return 0x412;
    case 3:
        return 0x404;
        addr_4129fd_2:
    case 4:
        return 0;
    }
}

void fun_41a370();

void fun_411fcc(struct s110* a1) {
    fun_41a370();
    goto a1->f4;
}

unsigned char* fun_416300(unsigned char* a1, unsigned char* a2, uint32_t a3) {
    uint32_t ecx4;
    uint32_t ebx5;
    unsigned char* esi6;
    unsigned char* edi7;
    uint32_t ecx8;
    unsigned char eax9;
    uint32_t ecx10;
    unsigned char edx11;

    ecx4 = a3;
    if (!ecx4) {
        addr_416383_2:
        return a1;
    } else {
        ebx5 = ecx4;
        esi6 = a2;
        edi7 = a1;
        if (!(reinterpret_cast<uint32_t>(esi6) & 3)) {
            ecx8 = ecx4 >> 2;
            if (!ecx8) {
                goto addr_416345_6;
            }
        }
        do {
            eax9 = *esi6;
            ++esi6;
            *edi7 = eax9;
            ++edi7;
            --ecx4;
            if (!ecx4) 
                goto addr_416352_8;
            if (!eax9) 
                break;
        } while (reinterpret_cast<uint32_t>(esi6) & 3);
        goto addr_416339_11;
    }
    if (reinterpret_cast<uint32_t>(edi7) & 3) {
        do {
            *edi7 = eax9;
            ++edi7;
            --ecx4;
            if (!ecx4) 
                goto addr_4163f6_14;
        } while (reinterpret_cast<uint32_t>(edi7) & 3);
    }
    ebx5 = ecx4;
    ecx10 = ecx4 >> 2;
    if (ecx10) 
        goto addr_4163e7_17; else 
        goto addr_41637b_18;
    addr_416339_11:
    ebx5 = ecx4;
    ecx8 = ecx4 >> 2;
    if (ecx8) {
        do {
            edx11 = *esi6;
            esi6 = esi6 + 4;
            if ((*esi6 ^ 0xffffffff ^ 0x7efefeff + *esi6) & 0x81010100) {
                if (!*reinterpret_cast<signed char*>(&edx11)) 
                    break;
                if (!*reinterpret_cast<signed char*>(&edx11 + 1)) 
                    goto addr_4163d1_22;
                if (!(edx11 & 0xff0000)) 
                    goto addr_4163c7_24;
                if (!(edx11 & 0xff000000)) 
                    goto addr_4163c3_26;
            }
            *edi7 = edx11;
            edi7 = edi7 + 4;
            --ecx8;
        } while (ecx8);
        goto addr_416340_28;
    } else {
        addr_416340_28:
        ebx5 = ebx5 & 3;
        if (!ebx5) {
            addr_416352_8:
            return a1;
        } else {
            do {
                addr_416345_6:
                eax9 = *esi6;
                ++esi6;
                *edi7 = eax9;
                ++edi7;
                if (!eax9) 
                    goto addr_41637e_29;
                --ebx5;
            } while (ebx5);
            goto addr_416352_8;
        }
    }
    *edi7 = reinterpret_cast<unsigned char>(0);
    addr_4163df_32:
    edi7 = edi7 + 4;
    eax9 = reinterpret_cast<unsigned char>(0);
    ecx10 = ecx8 - 1;
    if (!ecx10) {
        addr_4163f1_33:
        ebx5 = ebx5 & 3;
        if (ebx5) {
            do {
                addr_41637b_18:
                *edi7 = eax9;
                ++edi7;
                addr_41637e_29:
                --ebx5;
            } while (ebx5);
        } else {
            addr_4163f6_14:
            return a1;
        }
    } else {
        addr_4163e7_17:
        eax9 = reinterpret_cast<unsigned char>(0);
        goto addr_4163e9_34;
    }
    goto addr_416383_2;
    do {
        addr_4163e9_34:
        *edi7 = reinterpret_cast<unsigned char>(0);
        edi7 = edi7 + 4;
        --ecx10;
    } while (ecx10);
    goto addr_4163f1_33;
    addr_4163d1_22:
    *edi7 = reinterpret_cast<unsigned char>(edx11 & 0xff);
    goto addr_4163df_32;
    addr_4163c7_24:
    *edi7 = reinterpret_cast<unsigned char>(edx11 & 0xffff);
    goto addr_4163df_32;
    addr_4163c3_26:
    *edi7 = edx11;
    goto addr_4163df_32;
}

int32_t g43bdec = 0;

int32_t LoadLibraryA = 0x5578e;

int32_t GetProcAddress = 0x555e8;

int32_t g43bdf0 = 0;

int32_t g43bdf4 = 0;

void fun_416260(void* a1, int32_t a2, int32_t a3) {
    int32_t esi4;
    int1_t zf5;
    int32_t eax6;
    int32_t ebx7;
    int32_t eax8;
    int32_t ebx9;
    int32_t eax10;
    int32_t eax11;
    int32_t eax12;
    int32_t eax13;
    int1_t zf14;

    esi4 = 0;
    zf5 = g43bdec == 0;
    if (zf5) {
        eax6 = reinterpret_cast<int32_t>(LoadLibraryA());
        if (!eax6 || (ebx7 = GetProcAddress, eax8 = reinterpret_cast<int32_t>(ebx7(eax6, "MessageBoxA")), g43bdec = eax8, eax8 == 0)) {
            goto ebx9;
        } else {
            eax10 = reinterpret_cast<int32_t>(ebx7(eax6, "GetActiveWindow", eax6, "MessageBoxA"));
            g43bdf0 = eax10;
            eax11 = reinterpret_cast<int32_t>(ebx7(eax6, "GetLastActivePopup", eax6, "GetActiveWindow", eax6, "MessageBoxA"));
            g43bdf4 = eax11;
        }
    }
    eax12 = g43bdf0;
    if (eax12) {
        eax13 = reinterpret_cast<int32_t>(eax12());
        esi4 = eax13;
    }
    if (esi4 && (zf14 = g43bdf4 == 0, !zf14)) {
        g43bdf4(esi4);
    }
    g43bdec();
    goto a3;
}

int32_t VirtualFree = 0x55738;

int32_t g43b660 = 0;

void fun_413160(struct s93* a1) {
    int1_t zf2;
    struct s93* eax3;
    struct s93* ecx4;

    VirtualFree();
    zf2 = image_base_ == a1;
    if (zf2) {
        image_base_ = a1->f4;
    }
    if (a1 == 0x43ae50) {
        g43b660 = 0;
        goto 0;
    } else {
        eax3 = a1->f0;
        ecx4 = a1->f4;
        ecx4->f0 = eax3;
        a1->f0->f4 = a1->f4;
        HeapFree();
        goto 0;
    }
}

/* (image base) */
struct s93* image_base_ = reinterpret_cast<struct s93*>(0x43ae50);

void fun_4131c0(int32_t a1) {
    int32_t v2;
    int32_t ebx3;
    struct s93* esi4;
    int1_t zf5;
    void* ebp6;
    signed char* ebx7;
    uint32_t edi8;
    struct s94* eax9;
    int32_t eax10;
    struct s93* eax11;
    int32_t edx12;
    signed char* ecx13;

    v2 = ebx3;
    esi4 = image_base_;
    while (1) {
        if (!esi4->f810) {
            addr_41327c_3:
            zf5 = esi4 == image_base_;
            if (zf5) 
                break;
            if (a1 > 0) 
                continue; else 
                break;
        } else {
            ebp6 = reinterpret_cast<void*>(0x3ff);
            ebx7 = &esi4->f40f;
            edi8 = 0x3ff000;
            do {
                if (*ebx7 == -16 && (eax9 = esi4->f810, eax10 = reinterpret_cast<int32_t>(VirtualFree(reinterpret_cast<uint32_t>(eax9) + edi8, 0x1000, 0x4000)), !!eax10)) {
                    *ebx7 = -1;
                    --g43b668;
                    if (esi4->fc == 0xffffffff || reinterpret_cast<int32_t>(ebp6) < reinterpret_cast<int32_t>(esi4->fc)) {
                        esi4->fc = ebp6;
                    }
                    --v2;
                    if (!v2) 
                        break;
                }
                edi8 = edi8 - 0x1000;
                ebp6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp6) - 1);
                --ebx7;
            } while (reinterpret_cast<int32_t>(edi8) >= reinterpret_cast<int32_t>(0));
            eax11 = esi4;
            esi4 = esi4->f4;
            if (1) 
                goto addr_41327c_3;
            if (eax11->f10 != -1) 
                goto addr_41327c_3;
        }
        edx12 = 1;
        ecx13 = &eax11->f11;
        do {
            if (*ecx13 != -1) 
                break;
            ++edx12;
            ++ecx13;
        } while (edx12 < 0x400);
        if (edx12 != 0x400) 
            goto addr_41327c_3;
        fun_413160(eax11);
        goto addr_41327c_3;
    }
    return;
}

void** fun_4135d0(struct s95* a1, void* a2, void* a3) {
    struct s95* eax4;
    void* edx5;
    void* ecx6;
    signed char* edi7;
    signed char* ebp8;
    signed char* ecx9;
    void* esi10;
    signed char* ebp11;
    void* ebx12;
    signed char* ecx13;
    void* ebx14;
    signed char* esi15;
    void* ebx16;
    signed char* ecx17;
    void* ebx18;
    signed char* esi19;

    eax4 = a1;
    edx5 = a3;
    ecx6 = eax4->f4;
    edi7 = eax4->f0;
    ebp8 = edi7;
    if (reinterpret_cast<uint32_t>(edx5) <= reinterpret_cast<uint32_t>(ecx6)) {
        *edi7 = *reinterpret_cast<signed char*>(&edx5);
        if (reinterpret_cast<uint32_t>(edx5) + reinterpret_cast<uint32_t>(edi7) >= reinterpret_cast<uint32_t>(&eax4->ff8)) {
            eax4->f4 = reinterpret_cast<void*>(0);
            eax4->f0 = &eax4->f8;
        } else {
            eax4->f0 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax4->f0) + reinterpret_cast<uint32_t>(edx5));
            eax4->f4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax4->f4) - reinterpret_cast<uint32_t>(edx5));
        }
        return (reinterpret_cast<uint32_t>(edi7) - reinterpret_cast<uint32_t>(eax4) << 4) + reinterpret_cast<uint32_t>(eax4) + 0x80;
    }
    ecx9 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx6) + reinterpret_cast<uint32_t>(edi7));
    if (*ecx9) {
        ebp8 = ecx9;
    }
    esi10 = a2;
    if (reinterpret_cast<uint32_t>(edx5) + reinterpret_cast<uint32_t>(ebp8) < reinterpret_cast<uint32_t>(&eax4->ff8)) 
        goto addr_413638_9;
    addr_4136be_10:
    ebp11 = &eax4->f8;
    if (reinterpret_cast<uint32_t>(edi7) <= reinterpret_cast<uint32_t>(&eax4->f8)) {
        addr_413708_11:
        return 0;
    } else {
        do {
            if (reinterpret_cast<uint32_t>(edx5) + reinterpret_cast<uint32_t>(ebp11) > reinterpret_cast<uint32_t>(eax4) + 0xf7) 
                goto addr_413708_11;
            if (*ebp11) {
                ebx12 = reinterpret_cast<void*>(0);
                *reinterpret_cast<signed char*>(&ebx12) = *ebp11;
                ebp11 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebp11) + reinterpret_cast<uint32_t>(ebx12));
            } else {
                ecx13 = ebp11 + 1;
                ebx14 = reinterpret_cast<void*>(1);
                if (!*ecx13) {
                    do {
                        ++ecx13;
                        ebx14 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx14) + 1);
                    } while (!*ecx13);
                }
                if (reinterpret_cast<uint32_t>(ebx14) >= reinterpret_cast<uint32_t>(edx5)) 
                    break;
                esi10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi10) - reinterpret_cast<uint32_t>(ebx14));
                if (reinterpret_cast<uint32_t>(edx5) > reinterpret_cast<uint32_t>(esi10)) 
                    goto addr_41370f_19;
                ebp11 = ecx13;
            }
        } while (reinterpret_cast<uint32_t>(edi7) > reinterpret_cast<uint32_t>(ebp11));
        goto addr_413708_11;
    }
    esi15 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx5) + reinterpret_cast<uint32_t>(ebp11));
    if (reinterpret_cast<uint32_t>(esi15) >= reinterpret_cast<uint32_t>(&eax4->ff8)) {
        eax4->f4 = reinterpret_cast<void*>(0);
        eax4->f0 = &eax4->f8;
    } else {
        eax4->f0 = esi15;
        eax4->f4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx14) - reinterpret_cast<uint32_t>(edx5));
    }
    *ebp11 = *reinterpret_cast<signed char*>(&edx5);
    return (reinterpret_cast<uint32_t>(ebp11) - reinterpret_cast<uint32_t>(eax4) << 4) + reinterpret_cast<uint32_t>(eax4) + 0x80;
    addr_41370f_19:
    return 0;
    do {
        addr_413638_9:
        if (*ebp8) {
            ebx16 = reinterpret_cast<void*>(0);
            *reinterpret_cast<signed char*>(&ebx16) = *ebp8;
            ebp8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebp8) + reinterpret_cast<uint32_t>(ebx16));
        } else {
            ecx17 = ebp8 + 1;
            ebx18 = reinterpret_cast<void*>(1);
            if (!*ecx17) {
                do {
                    ++ecx17;
                    ebx18 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx18) + 1);
                } while (!*ecx17);
            }
            if (reinterpret_cast<uint32_t>(ebx18) >= reinterpret_cast<uint32_t>(edx5)) 
                goto addr_413688_30;
            if (edi7 != ebp8) {
                esi10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi10) - reinterpret_cast<uint32_t>(ebx18));
                if (reinterpret_cast<uint32_t>(edx5) > reinterpret_cast<uint32_t>(esi10)) 
                    goto addr_413681_33;
                ebp8 = ecx17;
            } else {
                ebp8 = ecx17;
                eax4->f4 = ebx18;
            }
        }
    } while (reinterpret_cast<uint32_t>(edx5) + reinterpret_cast<uint32_t>(ebp8) < reinterpret_cast<uint32_t>(&eax4->ff8));
    goto addr_4136be_10;
    addr_413688_30:
    esi19 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx5) + reinterpret_cast<uint32_t>(ebp8));
    if (reinterpret_cast<uint32_t>(esi19) >= reinterpret_cast<uint32_t>(&eax4->ff8)) {
        eax4->f4 = reinterpret_cast<void*>(0);
        eax4->f0 = &eax4->f8;
    } else {
        eax4->f0 = esi19;
        eax4->f4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx18) - reinterpret_cast<uint32_t>(edx5));
    }
    *ebp8 = *reinterpret_cast<signed char*>(&edx5);
    return (reinterpret_cast<uint32_t>(ebp8) - reinterpret_cast<uint32_t>(eax4) << 4) + reinterpret_cast<uint32_t>(eax4) + 0x80;
    addr_413681_33:
    return 0;
}

/* (image base) */
int32_t image_base_ = 0x43ae50;

struct s114 {
    signed char[16] pad16;
    signed char f10;
    signed char[1023] pad1040;
    signed char f410;
};

struct s93* fun_412ff0() {
    int1_t zf1;
    struct s93* eax2;
    struct s93* esi3;
    int32_t edi4;
    int32_t edi5;
    struct s94* eax6;
    struct s94* ebx7;
    int32_t eax8;
    struct s93* eax9;
    int1_t zf10;
    int1_t zf11;
    void* ebp12;
    struct s114* edi13;
    struct s94* edi14;
    int32_t ecx15;
    int32_t eax16;
    int32_t ebp17;

    zf1 = g43b660 == 0;
    if (!zf1) {
        eax2 = reinterpret_cast<struct s93*>(HeapAlloc());
        esi3 = eax2;
        if (!esi3) {
            goto edi4;
        }
    } else {
        esi3 = reinterpret_cast<struct s93*>(0x43ae50);
    }
    edi5 = VirtualAlloc;
    eax6 = reinterpret_cast<struct s94*>(edi5());
    ebx7 = eax6;
    if (ebx7) {
        eax8 = reinterpret_cast<int32_t>(edi5());
        if (!eax8) {
            VirtualFree(ebx7, 0, 0x8000);
        } else {
            if (!reinterpret_cast<int1_t>(esi3 == 0x43ae50)) {
                esi3->f0 = reinterpret_cast<struct s93*>(0x43ae50);
                eax9 = image_base_;
                esi3->f4 = eax9;
                image_base_ = esi3;
                esi3->f4->f0 = esi3;
            } else {
                zf10 = image_base_ == 0;
                if (zf10) {
                    image_base_ = 0x43ae50;
                }
                zf11 = image_base_ == 0;
                if (zf11) {
                    image_base_ = reinterpret_cast<struct s93*>(0x43ae50);
                }
            }
            ebp12 = reinterpret_cast<void*>(0);
            esi3->f810 = ebx7;
            esi3->f8 = reinterpret_cast<void*>(0);
            esi3->fc = reinterpret_cast<void*>(16);
            do {
                edi13 = reinterpret_cast<struct s114*>(reinterpret_cast<uint32_t>(esi3) + reinterpret_cast<uint32_t>(ebp12));
                if (reinterpret_cast<int32_t>(ebp12) >= reinterpret_cast<int32_t>(16)) {
                    edi13->f10 = -1;
                } else {
                    edi13->f10 = -16;
                }
                ebp12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp12) + 1);
                edi13->f410 = -15;
            } while (reinterpret_cast<int32_t>(ebp12) < reinterpret_cast<int32_t>(0x400));
            edi14 = ebx7;
            ecx15 = 0x4000;
            while (ecx15) {
                --ecx15;
                edi14->f0 = reinterpret_cast<signed char*>(0);
                edi14 = reinterpret_cast<struct s94*>(&edi14->f4);
                esi3 = reinterpret_cast<struct s93*>(&esi3->f4);
            }
            if (reinterpret_cast<uint32_t>(esi3->f810) + 0x10000 > reinterpret_cast<uint32_t>(ebx7)) {
                do {
                    ebx7->f0 = &ebx7->f8;
                    ebx7->f4 = 0xf0;
                    ebx7->ff8 = -1;
                    ebx7 = reinterpret_cast<struct s94*>(reinterpret_cast<uint32_t>(ebx7) + 0x1000);
                } while (reinterpret_cast<uint32_t>(esi3->f810) + 0x10000 > reinterpret_cast<uint32_t>(ebx7));
            }
            goto 0;
        }
    }
    if (esi3 != 0x43ae50) {
        eax16 = g454574;
        HeapFree(eax16, 0, esi3);
    }
    goto ebp17;
}

struct s115 {
    int32_t f0;
    unsigned char f4;
};

int32_t fun_416600(void** a1) {
    int1_t cf2;
    struct s115* eax3;

    cf2 = reinterpret_cast<unsigned char>(a1) < reinterpret_cast<unsigned char>(g454680);
    if (!cf2 || (eax3 = reinterpret_cast<struct s115*>(*reinterpret_cast<int32_t**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a1) & 0xffffffe7) >> 3) + 0x454580) + (reinterpret_cast<unsigned char>(a1) & 31) * 2), (eax3->f4 & 1) == 0)) {
        g43aa58 = 9;
        g43aa5c = 0;
        return -1;
    } else {
        return eax3->f0;
    }
}

void fun_4144a0(uint32_t a1) {
    uint32_t edx2;
    int32_t eax3;
    uint32_t* ecx4;

    edx2 = a1;
    eax3 = 0;
    ecx4 = reinterpret_cast<uint32_t*>(0x43b670);
    g43aa5c = edx2;
    do {
        if (*ecx4 == edx2) 
            break;
        ecx4 = ecx4 + 2;
        ++eax3;
    } while (reinterpret_cast<uint32_t>(ecx4) < 0x43b7d8);
    goto addr_4144c1_4;
    g43aa58 = *reinterpret_cast<int32_t*>(eax3 * 8 + 0x43b674);
    return;
    addr_4144c1_4:
    if (edx2 < 19 || edx2 > 36) {
        if (edx2 < 0xbc || edx2 > 0xca) {
            g43aa58 = 22;
            return;
        } else {
            g43aa58 = 8;
            return;
        }
    } else {
        g43aa58 = 13;
        return;
    }
}

void** g454570;

void** g453564;

void** fun_413860(void** a1);

void** fun_413930(int32_t a1) {
    void** ebx2;
    void** edi3;
    void** v4;
    int1_t less_or_equal5;
    int32_t esi6;
    void* ebp7;
    void** eax8;
    void** eax9;
    void** v10;
    void** eax11;
    void** v12;
    void** eax13;
    int1_t less14;
    void** eax15;

    ebx2 = reinterpret_cast<void**>(0);
    edi3 = reinterpret_cast<void**>(0);
    v4 = reinterpret_cast<void**>(0);
    less_or_equal5 = reinterpret_cast<signed char>(g454570) <= reinterpret_cast<signed char>(0);
    if (less_or_equal5) {
        esi6 = a1;
    } else {
        ebp7 = reinterpret_cast<void*>(0);
        esi6 = a1;
        do {
            eax8 = g453564;
            if (*reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax8) + reinterpret_cast<uint32_t>(ebp7)) && (eax9 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax8) + reinterpret_cast<uint32_t>(ebp7)) + 12), !!(*reinterpret_cast<unsigned char*>(&eax9) & 0x83))) {
                if (esi6 != 1) {
                    if (!esi6 && (*reinterpret_cast<unsigned char*>(&eax9) & 2 && (v10 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax8) + reinterpret_cast<uint32_t>(ebp7)), eax11 = fun_413860(v10), reinterpret_cast<int1_t>(eax11 == 0xffffffff)))) {
                        v4 = reinterpret_cast<void**>(0xffffffff);
                    }
                } else {
                    v12 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax8) + reinterpret_cast<uint32_t>(ebp7));
                    eax13 = fun_413860(v12);
                    if (eax13 != 0xffffffff) {
                        ++ebx2;
                    }
                }
            }
            ebp7 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp7) + 4);
            ++edi3;
            less14 = reinterpret_cast<signed char>(edi3) < reinterpret_cast<signed char>(g454570);
        } while (less14);
    }
    eax15 = ebx2;
    if (esi6 != 1) {
        eax15 = v4;
    }
    return eax15;
}

int32_t FlushFileBuffers = 0x557ae;

uint32_t fun_416650(void** a1) {
    int1_t below_or_equal2;
    uint32_t eax3;
    int32_t eax4;
    int32_t eax5;

    below_or_equal2 = reinterpret_cast<unsigned char>(g454680) <= reinterpret_cast<unsigned char>(a1);
    if (below_or_equal2 || !(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a1) & 0xffffffe7) >> 3) + 0x454580)) + (reinterpret_cast<unsigned char>(a1) & 31) * 8 + 4) & 1)) {
        g43aa58 = 9;
        eax3 = 0xffffffff;
    } else {
        eax4 = fun_416600(a1);
        eax5 = reinterpret_cast<int32_t>(FlushFileBuffers());
        eax3 = 0;
        if (!eax5) {
            eax3 = reinterpret_cast<uint32_t>(GetLastError());
        }
        if (eax3) {
            g43aa58 = 9;
            g43aa5c = eax3;
            goto eax4;
        }
    }
    return eax3;
}

struct s116 {
    int32_t f0;
    unsigned char f4;
};

void* fun_4141b0(void** a1, void** a2, void* a3) {
    int1_t below_or_equal4;
    void** esp5;
    void* v6;
    void* ebp7;
    int32_t** v8;
    uint32_t eax9;
    int32_t* ebx10;
    uint32_t v11;
    unsigned char al12;
    void* esi13;
    void* ebp14;
    void* edi15;
    uint32_t esi16;
    void* ebx17;
    void** v18;
    struct s116* ecx19;
    void* v20;
    void* v21;
    int32_t ecx22;
    void** v23;
    int32_t v24;
    int32_t eax25;
    void** ebx26;
    void* edi27;
    void* esp28;
    void* edi29;
    int32_t eax30;

    below_or_equal4 = reinterpret_cast<unsigned char>(g454680) <= reinterpret_cast<unsigned char>(a1);
    esp5 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x418 - 4 - 4 - 4 - 4);
    v6 = ebp7;
    if (below_or_equal4 || (v8 = reinterpret_cast<int32_t**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a1) & 0xffffffe7) >> 3) + 0x454580), eax9 = (reinterpret_cast<unsigned char>(a1) & 31) << 3, ebx10 = *v8, v11 = eax9, al12 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx10) + eax9 + 4), (al12 & 1) == 0)) {
        g43aa58 = 9;
        g43aa5c = 0;
        return 0xffffffff;
    }
    esi13 = reinterpret_cast<void*>(0);
    ebp14 = a3;
    if (!ebp14) {
        return 0;
    }
    if (al12 & 32) {
        fun_4143e0(a1, 0, 2, v6, edi15, esi16, ebx17, v18);
        esp5 = esp5 - 1 - 1 - 1 - 1 + 1 + 3;
    }
    ecx19 = reinterpret_cast<struct s116*>(v11 + reinterpret_cast<int32_t>(*v8));
    if (ecx19->f4 & 0x80) 
        goto addr_41423e_8;
    v20 = reinterpret_cast<void*>(esp5 + 5);
    v21 = ebp14;
    ecx22 = ecx19->f0;
    v23 = a2;
    v24 = ecx22;
    eax25 = reinterpret_cast<int32_t>(WriteFile(v24, v23, v21, v20, 0));
    if (!eax25) {
        addr_4142f5_10:
        GetLastError(v24, v23, v21, v20, 0);
    }
    addr_4142ff_12:
    if (0) {
        return -static_cast<uint32_t>(esi13);
    } else {
        if (1) {
            if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*v8) + v11 + 4) & 64) || !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a2) == 26)) {
                g43aa58 = 28;
                g43aa5c = 0;
                return 0xffffffff;
            } else {
                return 0;
            }
        } else {
            if (1) {
                fun_4144a0(0);
                return 0xffffffff;
            } else {
                g43aa58 = 9;
                g43aa5c = 0;
                return 0xffffffff;
            }
        }
    }
    addr_41423e_8:
    ebx26 = a2;
    do {
        if (reinterpret_cast<unsigned char>(ebx26) - reinterpret_cast<unsigned char>(a2) >= reinterpret_cast<uint32_t>(ebp14)) 
            goto addr_4142ff_12;
        edi27 = reinterpret_cast<void*>(esp5 + 9);
        do {
            if (reinterpret_cast<unsigned char>(ebx26) - reinterpret_cast<unsigned char>(a2) >= reinterpret_cast<uint32_t>(ebp14)) 
                break;
            ++ebx26;
            if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebx26) == 10)) {
                esi13 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi13) + 1);
                edi27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi27) + 1);
            }
            edi27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi27) + 1);
        } while (reinterpret_cast<int32_t>(edi27) - reinterpret_cast<int32_t>(esp5 + 9) < 0x400);
        esp28 = reinterpret_cast<void*>(esp5 - 1);
        edi29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi27) - reinterpret_cast<uint32_t>(esp5 + 9));
        v20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp28) + 24);
        v21 = edi29;
        v23 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp28) + 40);
        v24 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*v8) + v11);
        eax30 = reinterpret_cast<int32_t>(WriteFile(v24, v23, v21, v20, 0));
        esp5 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp28) - 4 - 4 - 4 - 4 - 4 + 4);
        if (!eax30) 
            goto addr_4142f5_10;
    } while (reinterpret_cast<int32_t>(v6) >= reinterpret_cast<int32_t>(edi29));
    goto addr_4142ff_12;
}

void** fun_413860(void** a1) {
    int32_t eax2;
    void** v3;
    uint32_t eax4;
    void** eax5;

    if (a1) {
        eax2 = fun_4138b0(a1);
        if (!eax2) {
            if (!(*reinterpret_cast<unsigned char*>(a1 + 13) & 64)) {
                return 0;
            } else {
                v3 = *reinterpret_cast<void***>(a1 + 16);
                eax4 = fun_416650(v3);
                return 1 - reinterpret_cast<uint1_t>(eax4 < 1);
            }
        } else {
            return 0xffffffff;
        }
    } else {
        eax5 = fun_413930(0);
        return eax5;
    }
}

int32_t g43ba68 = 0;

void fun_4166c0(void** a1) {
    void** eax2;

    ++g43ba68;
    eax2 = fun_4111a0(0x1000);
    *reinterpret_cast<void***>(a1 + 8) = eax2;
    if (!eax2) {
        *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 12)) | 4);
        *reinterpret_cast<void***>(a1 + 8) = a1 + 20;
        *reinterpret_cast<void***>(a1 + 24) = reinterpret_cast<void**>(2);
    } else {
        *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 12)) | 8);
        *reinterpret_cast<void***>(a1 + 24) = reinterpret_cast<void**>(0x1000);
    }
    *reinterpret_cast<void***>(a1) = *reinterpret_cast<void***>(a1 + 8);
    *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(0);
    return;
}

void* fun_416710(void** a1, void* a2, void** a3, int32_t a4);

void* fun_416800(void** a1) {
    void** esi2;
    int1_t less3;
    void** v4;
    void* eax5;
    void* v6;
    uint1_t less7;
    int32_t edx8;
    void** v9;
    void** edx10;
    int32_t edx11;
    void** edx12;
    void** ecx13;
    void** eax14;
    void* ebx15;
    void* v16;
    void** edi17;
    void** ebp18;
    uint32_t ebx19;
    void* eax20;
    void** eax21;
    void** eax22;
    void** ecx23;

    esi2 = a1;
    less3 = reinterpret_cast<signed char>(*reinterpret_cast<void***>(esi2 + 4)) < reinterpret_cast<signed char>(0);
    v4 = *reinterpret_cast<void***>(esi2 + 16);
    if (less3) {
        *reinterpret_cast<void***>(esi2 + 4) = reinterpret_cast<void**>(0);
    }
    eax5 = fun_416710(v4, 0, 0, 1);
    v6 = eax5;
    less7 = reinterpret_cast<uint1_t>(edx8 < 0);
    v9 = edx10;
    if (reinterpret_cast<uint1_t>(less7 | reinterpret_cast<uint1_t>(edx11 == 0)) && (less7 || reinterpret_cast<uint32_t>(v6) < 0)) {
        return 0xffffffff;
    }
    edx12 = *reinterpret_cast<void***>(esi2 + 12);
    if (!(reinterpret_cast<unsigned char>(edx12) & 0x108)) {
        __asm__("cdq ");
        return reinterpret_cast<uint32_t>(v6) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2 + 4));
    }
    ecx13 = *reinterpret_cast<void***>(esi2);
    eax14 = *reinterpret_cast<void***>(esi2 + 8);
    ebx15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx13) - reinterpret_cast<unsigned char>(eax14));
    v16 = ebx15;
    if (!(*reinterpret_cast<unsigned char*>(&edx12) & 3)) {
        if (!(*reinterpret_cast<unsigned char*>(&edx12) & 0x80)) {
            g43aa58 = 22;
            return 0xffffffff;
        }
    } else {
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(v4) & 0xffffffe7) >> 3) + 0x454580)) + (reinterpret_cast<unsigned char>(v4) & 31) * 8 + 4) & 0x80 && reinterpret_cast<unsigned char>(eax14) < reinterpret_cast<unsigned char>(ecx13)) {
            do {
                if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax14) == 10)) {
                    v16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v16) + 1);
                }
                ++eax14;
            } while (reinterpret_cast<unsigned char>(eax14) < reinterpret_cast<unsigned char>(ecx13));
        }
    }
    if (!v9 && !v6) {
        return v16;
    }
    if (*reinterpret_cast<unsigned char*>(&edx12) & 1) 
        goto addr_416902_17;
    addr_4169c6_18:
    return reinterpret_cast<uint32_t>(v16) + reinterpret_cast<uint32_t>(v6);
    addr_416902_17:
    if (*reinterpret_cast<void***>(esi2 + 4)) {
        edi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2 + 4)) + reinterpret_cast<uint32_t>(ebx15));
        ebp18 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(v4) & 0xffffffe7) >> 3) + 0x454580);
        ebx19 = (reinterpret_cast<unsigned char>(v4) & 31) * 8;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*ebp18) + ebx19 + 4) & 0x80)) {
            addr_4169bd_20:
            v6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v6) - reinterpret_cast<unsigned char>(edi17));
            goto addr_4169c6_18;
        } else {
            eax20 = fun_416710(v4, 0, 0, 2);
            if (edx12 != v9 || eax20 != v6) {
                fun_416710(v4, v6, v9, 0);
                if (reinterpret_cast<unsigned char>(edi17) > reinterpret_cast<unsigned char>(0x200) || ((eax21 = *reinterpret_cast<void***>(esi2 + 12), (*reinterpret_cast<unsigned char*>(&eax21) & 8) == 0) || (edi17 = reinterpret_cast<void**>(0x200), !!(*reinterpret_cast<unsigned char*>(&eax21 + 1) & 4)))) {
                    edi17 = *reinterpret_cast<void***>(esi2 + 24);
                }
                if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*ebp18) + ebx19 + 4) & 4)) 
                    goto addr_4169bd_20;
            } else {
                eax22 = *reinterpret_cast<void***>(esi2 + 8);
                ecx23 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax22) + reinterpret_cast<unsigned char>(edi17));
                if (reinterpret_cast<unsigned char>(ecx23) > reinterpret_cast<unsigned char>(eax22)) {
                    do {
                        if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax22) == 10)) {
                            ++edi17;
                        }
                        ++eax22;
                    } while (reinterpret_cast<unsigned char>(ecx23) > reinterpret_cast<unsigned char>(eax22));
                }
                if (!(*reinterpret_cast<unsigned char*>(esi2 + 13) & 32)) 
                    goto addr_4169bd_20; else 
                    goto addr_41697b_30;
            }
        }
    } else {
        v16 = reinterpret_cast<void*>(0);
        goto addr_4169c6_18;
    }
    addr_4169bc_32:
    ++edi17;
    goto addr_4169bd_20;
    addr_41697b_30:
    goto addr_4169bc_32;
}

int32_t g43bfb0 = 0;

void fun_416dc4();

int32_t g43aa60 = 0;

void** fun_416400();

int32_t CreateFileA = 0x557c2;

int32_t fun_4164c0(void** a1, void* a2);

void** fun_413ab0(void** a1, void** a2, void** a3);

int32_t fun_419460(void* ecx, void** a2, void** a3);

void** fun_4169e0(void* a1, uint32_t a2, int32_t a3, uint32_t a4) {
    unsigned char bl5;
    int1_t zf6;
    uint32_t eax7;
    uint32_t v8;
    uint32_t eax9;
    int32_t ecx10;
    void* v11;
    uint32_t eax12;
    int32_t eax13;
    void** eax14;
    void* esp15;
    void** v16;
    int32_t ebp17;
    void* eax18;
    int32_t eax19;
    unsigned char bl20;
    void** ebp21;
    void* edx22;
    uint32_t eax23;
    unsigned char al24;
    void** eax25;
    void** eax26;
    int32_t eax27;
    void** eax28;
    int32_t ebx29;
    int1_t zf30;
    uint32_t eax31;
    int32_t esi32;
    uint32_t eax33;
    int32_t v34;

    if (!(a2 & 0x80)) {
        bl5 = 0;
    } else {
        bl5 = 16;
    }
    if (!(a2 & 0x8000) && (a2 & 0x4000 || (zf6 = g43bfb0 == 0x8000, !zf6))) {
        bl5 = reinterpret_cast<unsigned char>(bl5 | 0x80);
    }
    eax7 = a2 & 3;
    if (!eax7) {
        v8 = 0x80000000;
    } else {
        if (eax7 == 1) {
            v8 = 0x40000000;
        } else {
            if (eax7 == 2) {
                v8 = 0xc0000000;
            } else {
                g43aa58 = 22;
                g43aa5c = 0;
                return 0xffffffff;
            }
        }
    }
    eax9 = reinterpret_cast<uint32_t>(a3 - 16);
    if (eax9 > 48) 
        goto addr_416a9b_14;
    ecx10 = 0;
    *reinterpret_cast<signed char*>(&ecx10) = *reinterpret_cast<signed char*>(eax9 + reinterpret_cast<int32_t>(fun_416dc4));
    switch (ecx10) {
    case 0:
        v11 = reinterpret_cast<void*>(0);
        break;
    case 1:
        v11 = reinterpret_cast<void*>(1);
        break;
    case 2:
        v11 = reinterpret_cast<void*>(2);
        break;
    case 3:
        v11 = reinterpret_cast<void*>(3);
        break;
        addr_416a9b_14:
    case 4:
        g43aa58 = 22;
        g43aa5c = 0;
        return 0xffffffff;
    }
    eax12 = a2 & 0x700;
    if (reinterpret_cast<int32_t>(eax12) > reinterpret_cast<int32_t>(0x100)) {
        if (reinterpret_cast<int32_t>(eax12) > reinterpret_cast<int32_t>(0x300)) {
            if (reinterpret_cast<int32_t>(eax12) > reinterpret_cast<int32_t>(0x500)) {
                if (eax12 != 0x600) {
                    if (eax12 == 0x700) {
                        addr_416b73_26:
                    } else {
                        addr_416b2a_27:
                        g43aa58 = 22;
                        g43aa5c = 0;
                        return 0xffffffff;
                    }
                }
            } else {
                if (eax12 == 0x500) 
                    goto addr_416b73_26;
                if (eax12 == 0x400) 
                    goto addr_416b4b_30; else 
                    goto addr_416b1a_31;
            }
        } else {
            if (eax12 != 0x300) {
                if (eax12 != 0x200) {
                    goto addr_416b2a_27;
                }
            }
        }
    } else {
        if (eax12 != 0x100) {
            if (eax12) {
                goto addr_416b2a_27;
            }
        }
    }
    addr_416b7b_40:
    if (a2 & 0x100 && (eax13 = g43aa60, !(0x80 & (reinterpret_cast<uint32_t>(~eax13) & a4)))) {
    }
    if (a2 & 64) {
        v8 = v8 | 0x10000;
    }
    if (a2 & 0x1000) {
    }
    if (!(a2 & 32)) {
        if (a2 & 16) {
        }
    }
    eax14 = fun_416400();
    if (!reinterpret_cast<int1_t>(eax14 == 0xffffffff)) {
        esp15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 28 - 4 - 4 - 4 - 4 - 4 + 4 - 4);
        v16 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp15) + 36);
        ebp17 = CreateFileA;
        eax18 = reinterpret_cast<void*>(ebp17());
        if (!reinterpret_cast<int1_t>(eax18 == 0xffffffff)) {
            eax19 = reinterpret_cast<int32_t>(GetFileType());
            if (eax19) {
                if (eax19 != 2) {
                    if (eax19 == 3) {
                        bl5 = reinterpret_cast<unsigned char>(bl5 | 8);
                    }
                } else {
                    bl5 = reinterpret_cast<unsigned char>(bl5 | 64);
                }
                bl20 = reinterpret_cast<unsigned char>(bl5 | 1);
                fun_4164c0(eax14, eax18);
                ebp21 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax14) & 0xffffffe7) >> 3) + 0x454580);
                edx22 = *ebp21;
                eax23 = (reinterpret_cast<unsigned char>(eax14) & 31) << 3;
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx22) + eax23 + 4) = bl20;
                al24 = reinterpret_cast<unsigned char>(bl20 & 72);
                if (!al24 && (bl20 & 0x80 && a2 & 2)) {
                    eax25 = fun_4143e0(eax14, 0xff, 2, eax18, a1, v8, v11, v16);
                    if (!reinterpret_cast<int1_t>(eax25 == 0xffffffff)) {
                        *reinterpret_cast<signed char*>(&v16 + 3) = 0;
                        eax26 = fun_413ab0(eax14, reinterpret_cast<int32_t>(esp15) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 - 4 - 4 + 4 + 12 + 19, 1);
                        if (eax26 || (1 || (eax27 = fun_419460(a1, eax14, eax25), eax27 != -1))) {
                            eax28 = fun_4143e0(eax14, 0, 0, eax18, a1, v8, v11, v16);
                            if (reinterpret_cast<int1_t>(eax28 == 0xffffffff)) {
                                fun_413750(eax14);
                                goto ebx29;
                            }
                        } else {
                            fun_413750(eax14);
                            goto ebx29;
                        }
                    } else {
                        zf30 = g43aa5c == 0x83;
                        if (!zf30) {
                            fun_413750(eax14);
                            goto ebx29;
                        }
                    }
                }
                if (!al24 && a2 & 8) {
                    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*ebp21) + eax23 + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*ebp21) + eax23 + 4) | 32);
                }
                goto ebx29;
            } else {
                CloseHandle();
                eax31 = reinterpret_cast<uint32_t>(GetLastError());
                fun_4144a0(eax31);
                goto esi32;
            }
        } else {
            eax33 = reinterpret_cast<uint32_t>(GetLastError());
            fun_4144a0(eax33);
            goto v34;
        }
    } else {
        g43aa58 = 24;
        g43aa5c = 0;
        return 0xffffffff;
    }
    addr_416b4b_30:
    goto addr_416b7b_40;
    addr_416b1a_31:
    goto addr_416b2a_27;
}

uint32_t fun_416e00(void** a1) {
    int1_t cf2;
    uint32_t eax3;

    cf2 = reinterpret_cast<unsigned char>(a1) < reinterpret_cast<unsigned char>(g454680);
    if (cf2) {
        eax3 = 0;
        *reinterpret_cast<signed char*>(&eax3) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a1) & 0xffffffe7) >> 3) + 0x454580)) + (reinterpret_cast<unsigned char>(a1) & 31) * 8 + 4);
        return eax3 & 64;
    } else {
        return 0;
    }
}

void** fun_4117e0(void** a1, int32_t a2) {
    void** esi3;
    int32_t ebx4;
    void** edx5;
    int1_t cf6;
    void** eax7;
    int32_t eax8;
    void** eax9;
    void** edi10;
    uint32_t ecx11;
    uint32_t ecx12;
    int1_t zf13;
    int32_t eax14;

    esi3 = reinterpret_cast<void**>(a2 * reinterpret_cast<unsigned char>(a1));
    if (reinterpret_cast<unsigned char>(esi3) <= reinterpret_cast<unsigned char>(0xffffffe0)) {
        if (!esi3) {
            esi3 = reinterpret_cast<void**>(16);
        } else {
            esi3 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esi3 + 15) & 0xfffffff0);
        }
    }
    ebx4 = HeapAlloc;
    do {
        edx5 = reinterpret_cast<void**>(0);
        if (reinterpret_cast<unsigned char>(esi3) <= reinterpret_cast<unsigned char>(0xffffffe0)) {
            cf6 = reinterpret_cast<unsigned char>(g43b66c) < reinterpret_cast<unsigned char>(esi3);
            if (cf6) {
                addr_41183d_8:
                if (edx5) 
                    break; else 
                    goto addr_411841_9;
            } else {
                eax7 = fun_413350(reinterpret_cast<unsigned char>(esi3) >> 4);
                edx5 = eax7;
                if (!edx5) {
                    addr_411841_9:
                    eax8 = g454574;
                    eax9 = reinterpret_cast<void**>(ebx4(eax8, 8, esi3));
                    edx5 = eax9;
                } else {
                    edi10 = edx5;
                    ecx11 = reinterpret_cast<unsigned char>(esi3) >> 2;
                    while (ecx11) {
                        --ecx11;
                        *reinterpret_cast<void***>(edi10) = reinterpret_cast<void**>(0);
                        edi10 = edi10 + 4;
                        esi3 = esi3 + 4;
                    }
                    ecx12 = reinterpret_cast<unsigned char>(esi3) & 3;
                    while (ecx12) {
                        --ecx12;
                        *reinterpret_cast<void***>(edi10) = reinterpret_cast<void**>(0);
                        ++edi10;
                        ++esi3;
                    }
                    goto addr_41183d_8;
                }
            }
        }
        if (edx5) 
            break;
        zf13 = g43ae4c == 0;
        if (zf13) 
            break;
        eax14 = fun_412fc0(esi3);
    } while (eax14);
    goto addr_411868_20;
    return edx5;
    addr_411868_20:
    return 0;
}

void** fun_415240(int32_t* a1) {
    int32_t ecx2;

    ecx2 = *a1 + 4;
    *a1 = ecx2;
    return *reinterpret_cast<void***>(ecx2 - 4);
}

uint32_t fun_414060(void** a1, void** a2);

void fun_415170(void** a1, void** a2, int32_t* a3) {
    void** eax4;
    uint32_t eax5;

    eax4 = *reinterpret_cast<void***>(a2 + 4) - 1;
    *reinterpret_cast<void***>(a2 + 4) = eax4;
    if (reinterpret_cast<signed char>(eax4) < reinterpret_cast<signed char>(0)) {
        eax5 = fun_414060(a1, a2);
    } else {
        *reinterpret_cast<void***>(*reinterpret_cast<void***>(a2)) = a1;
        eax5 = 0;
        *reinterpret_cast<void***>(&eax5) = *reinterpret_cast<void***>(*reinterpret_cast<void***>(a2));
        *reinterpret_cast<void***>(a2) = *reinterpret_cast<void***>(a2) + 1;
    }
    if (eax5 != 0xffffffff) {
        *a3 = *a3 + 1;
        return;
    } else {
        *a3 = -1;
        return;
    }
}

int32_t* fun_415270(int32_t* a1) {
    int32_t* eax2;
    int32_t ecx3;

    eax2 = a1;
    ecx3 = *eax2 + 4;
    *eax2 = ecx3;
    *reinterpret_cast<void***>(&eax2) = *reinterpret_cast<void***>(ecx3 - 4);
    return eax2;
}

int32_t g43bdd8 = 0;

void** fun_416eb0(signed char* a1, uint16_t a2) {
    int1_t zf3;
    void** eax4;
    int32_t eax5;

    if (a1) {
        zf3 = g43bdd8 == 0;
        if (!zf3) {
            eax4 = g43bde8;
            eax5 = reinterpret_cast<int32_t>(WideCharToMultiByte());
            if (!eax5 || eax4) {
                g43aa58 = 42;
            }
            goto 0x220;
        } else {
            if (a2 <= 0xff) {
                *a1 = *reinterpret_cast<signed char*>(&a2);
                return 1;
            } else {
                g43aa58 = 42;
                return 0xffffffff;
            }
        }
    } else {
        return 0;
    }
}

void** fun_415250(int32_t* a1) {
    int32_t ecx2;

    ecx2 = *a1 + 8;
    *a1 = ecx2;
    return *reinterpret_cast<void***>(ecx2 - 8);
}

uint32_t fun_416fc0(void** a1, void** a2, void** a3, void** a4) {
    void** ecx5;
    void** ebx6;
    void** eax7;
    uint32_t eax8;
    void** eax9;
    void** tmp32_10;
    uint32_t eax11;

    if (a4) {
        ecx5 = a4;
        ebx6 = a3;
        eax7 = a1;
        do {
            ecx5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx5) >> 1);
            __asm__("rcr ebx, 1");
            __asm__("rcr eax, 1");
        } while (ecx5);
        eax8 = reinterpret_cast<unsigned char>(eax7) / reinterpret_cast<unsigned char>(ebx6);
        eax9 = reinterpret_cast<void**>(eax8 * reinterpret_cast<unsigned char>(a3));
        tmp32_10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(__intrinsic()) + eax8 * reinterpret_cast<unsigned char>(a4));
        if (reinterpret_cast<unsigned char>(tmp32_10) < reinterpret_cast<unsigned char>(__intrinsic())) 
            goto addr_41701a_5;
        if (reinterpret_cast<unsigned char>(tmp32_10) > reinterpret_cast<unsigned char>(a2)) 
            goto addr_41701a_5;
        if (reinterpret_cast<unsigned char>(tmp32_10) < reinterpret_cast<unsigned char>(a2)) 
            goto addr_417022_8;
        if (reinterpret_cast<unsigned char>(eax9) <= reinterpret_cast<unsigned char>(a1)) 
            goto addr_417022_8;
    } else {
        eax11 = reinterpret_cast<unsigned char>(a1) % reinterpret_cast<unsigned char>(a3);
        goto addr_417031_11;
    }
    addr_41701a_5:
    eax9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax9) - reinterpret_cast<unsigned char>(a3));
    addr_417022_8:
    eax11 = -(reinterpret_cast<unsigned char>(eax9) - reinterpret_cast<unsigned char>(a1));
    addr_417031_11:
    return eax11;
}

void** fun_416f50(void** a1, void** a2, void** a3, void** a4) {
    void** ecx5;
    void** ebx6;
    void** eax7;
    void** eax8;
    void** esi9;
    void** tmp32_10;
    void** eax11;

    if (a4) {
        ecx5 = a4;
        ebx6 = a3;
        eax7 = a1;
        do {
            ecx5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx5) >> 1);
            __asm__("rcr ebx, 1");
            __asm__("rcr eax, 1");
        } while (ecx5);
        eax8 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax7) / reinterpret_cast<unsigned char>(ebx6));
        esi9 = eax8;
        tmp32_10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(__intrinsic()) + reinterpret_cast<unsigned char>(eax8) * reinterpret_cast<unsigned char>(a4));
        if (reinterpret_cast<unsigned char>(tmp32_10) < reinterpret_cast<unsigned char>(__intrinsic())) 
            goto addr_416fae_5;
        if (reinterpret_cast<unsigned char>(tmp32_10) > reinterpret_cast<unsigned char>(a2)) 
            goto addr_416fae_5;
        if (reinterpret_cast<unsigned char>(tmp32_10) < reinterpret_cast<unsigned char>(a2)) 
            goto addr_416faf_8;
        if (reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(a3) * reinterpret_cast<unsigned char>(esi9)) <= reinterpret_cast<unsigned char>(a1)) 
            goto addr_416faf_8;
    } else {
        eax11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a1) / reinterpret_cast<unsigned char>(a3));
        goto addr_416fb3_11;
    }
    addr_416fae_5:
    --esi9;
    addr_416faf_8:
    eax11 = esi9;
    addr_416fb3_11:
    return eax11;
}

void fun_4151c0(void** a1, void** a2, void** a3, int32_t* a4) {
    void** esi5;
    void** edi6;
    void** ebx7;
    int32_t* ebp8;
    void** eax9;

    esi5 = a1;
    edi6 = a2;
    ebx7 = a3;
    ebp8 = a4;
    do {
        eax9 = edi6;
        --edi6;
        if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax9) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax9 == 0)) 
            break;
        fun_415170(esi5, ebx7, ebp8);
    } while (*ebp8 != -1);
    return;
}

void fun_415200(void** a1, void** a2, void** a3, int32_t* a4) {
    void** esi5;
    void** edi6;
    void** ebx7;
    int32_t* ebp8;
    void** eax9;
    void** eax10;
    void** v11;

    esi5 = a1;
    edi6 = a2;
    ebx7 = a3;
    ebp8 = a4;
    do {
        eax9 = edi6;
        --edi6;
        if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax9) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax9 == 0)) 
            break;
        eax10 = esi5;
        ++esi5;
        v11 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax10))));
        fun_415170(v11, ebx7, ebp8);
    } while (*ebp8 != -1);
    return;
}

int32_t fun_4153de(int32_t a1) {
    int32_t ebp2;
    int16_t fpu_status_word3;
    int32_t ebp4;
    int32_t ebp5;
    int16_t fpu_status_word6;
    int32_t ebp7;
    int32_t ebp8;
    signed char ch9;
    int32_t ebp10;
    int16_t fpu_status_word11;
    int32_t ebp12;
    int16_t fpu_status_word13;
    int32_t eax14;

    __asm__("fld st0");
    __asm__("fabs ");
    __asm__("fld tword [0x43ba9e]");
    __asm__("fcompp ");
    __asm__("wait ");
    *reinterpret_cast<int16_t*>(ebp2 - 0xa0) = fpu_status_word3;
    __asm__("wait ");
    if (*reinterpret_cast<unsigned char*>(ebp4 - 0x9f) & 65) {
        __asm__("ftst ");
        __asm__("wait ");
        *reinterpret_cast<int16_t*>(ebp5 - 0xa0) = fpu_status_word6;
        __asm__("wait ");
        if (*reinterpret_cast<unsigned char*>(ebp7 - 0x9f) & 1) {
            *reinterpret_cast<signed char*>(ebp8 - 0x90) = 4;
            __asm__("fstp st0");
            __asm__("fldz ");
            goto a1;
        } else {
            __asm__("fstp st0");
            __asm__("fld tword [0x43ba80]");
            if (ch9) {
                __asm__("fchs ");
            }
            goto a1;
        }
    } else {
        __asm__("fld st0");
        __asm__("frndint ");
        __asm__("ftst ");
        __asm__("wait ");
        *reinterpret_cast<int16_t*>(ebp10 - 0xa0) = fpu_status_word11;
        __asm__("wait ");
        __asm__("fxch st0, st1");
        __asm__("fsub st0, st1");
        __asm__("ftst ");
        __asm__("wait ");
        *reinterpret_cast<int16_t*>(ebp12 - 0xa0) = fpu_status_word13;
        __asm__("fabs ");
        __asm__("f2xm1 ");
        return eax14;
    }
}

int32_t fun_415421(int32_t a1) {
    int16_t ax2;
    int16_t fpu_status_word3;
    int32_t eax4;
    int16_t ax5;
    int16_t fpu_status_word6;

    __asm__("fld st0");
    __asm__("frndint ");
    __asm__("fcomp st0, st1");
    __asm__("wait ");
    ax2 = fpu_status_word3;
    if (!*reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&ax2) + 1)) {
        eax4 = 0;
    } else {
        __asm__("fld st0");
        __asm__("fmul qword [0x43bab2]");
        __asm__("fld st0");
        __asm__("frndint ");
        __asm__("fcompp ");
        __asm__("wait ");
        ax5 = fpu_status_word6;
        if (*reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&ax5) + 1)) {
            eax4 = 2;
        } else {
            eax4 = 1;
        }
    }
    return eax4;
}

struct s117 {
    signed char[14] pad14;
    signed char fe;
};

void fun_4170e7() {
    struct s117* edx1;
    int16_t bx2;
    int16_t bx3;
    int32_t ebp4;
    int32_t ebp5;
    int32_t ebp6;
    int32_t edx7;
    int32_t ebp8;
    int16_t fpu_status_word9;
    int32_t ebp10;
    signed char cl11;
    int32_t ebp12;
    int32_t ebp13;
    int16_t fpu_status_word14;
    int32_t edx15;
    int32_t ebp16;

    if (edx1->fe != 5) {
        bx2 = 0x133f;
    } else {
        bx3 = *reinterpret_cast<int16_t*>(ebp4 - 0xa4);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&bx2) + 1) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&bx3) + 1) | 2) & 0xfe);
        *reinterpret_cast<signed char*>(&bx2) = 63;
    }
    *reinterpret_cast<int16_t*>(ebp5 - 0xa2) = bx2;
    __asm__("fldcw word [ebp+0xffffff5e]");
    __asm__("fxam ");
    *reinterpret_cast<int32_t*>(ebp6 - 0x94) = edx7;
    __asm__("wait ");
    *reinterpret_cast<int16_t*>(ebp8 - 0xa0) = fpu_status_word9;
    *reinterpret_cast<signed char*>(ebp10 - 0x90) = 0;
    __asm__("fxch st0, st1");
    cl11 = *reinterpret_cast<signed char*>(ebp12 - 0x9f);
    __asm__("fxam ");
    __asm__("wait ");
    *reinterpret_cast<int16_t*>(ebp13 - 0xa0) = fpu_status_word14;
    __asm__("fxch st0, st1");
    __asm__("rol ch, 1");
    __asm__("xlatb ");
    __asm__("rol cl, 1");
    __asm__("xlatb ");
    goto *reinterpret_cast<int32_t*>(edx15 + reinterpret_cast<signed char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(cl11 << 1) >> 1) & 15) | reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp16 - 0x9f) << 1) >> 1) & 15) << 1) << 1)) + 16);
}

int32_t g43aa44 = 0;

uint16_t g452876;

struct s118 {
    signed char[12] pad12;
    signed char fc;
};

signed char g452878;

struct s119 {
    signed char[14] pad14;
    signed char fe;
};

struct s120 {
    int32_t f0;
    signed char[4] pad8;
    int32_t f8;
    signed char[12] pad24;
    uint32_t f18;
};

void fun_4182b0(uint32_t a1, struct s120* a2, int16_t* a3);

struct s121 {
    int32_t f0;
    int32_t f4;
};

struct s122 {
    signed char[8] pad8;
    int32_t f8;
};

struct s123 {
    int32_t f0;
    int32_t f4;
};

struct s124 {
    int32_t f0;
    int32_t f4;
};

struct s125 {
    signed char[16] pad16;
    int32_t f10;
};

struct s126 {
    int32_t f0;
    int32_t f4;
};

void fun_415545() {
    int1_t zf1;
    int32_t ebp2;
    int32_t ebp3;
    uint16_t fpu_status_word4;
    int32_t ebp5;
    uint16_t ax6;
    uint16_t ax7;
    int32_t ebp8;
    int16_t ax9;
    int16_t fpu_status_word10;
    int32_t ebp11;
    int16_t ax12;
    int16_t fpu_status_word13;
    int32_t ebp14;
    struct s118* ebx15;
    int32_t ebp16;
    int32_t ebp17;
    int1_t zf18;
    uint32_t v19;
    int32_t ebp20;
    int32_t ebp21;
    int32_t ebp22;
    struct s121* esi23;
    struct s122* ebp24;
    struct s123* edi25;
    int32_t ebp26;
    struct s124* esi27;
    struct s125* ebp28;
    struct s126* edi29;
    int32_t ebp30;

    zf1 = g43aa44 == 0;
    if (!zf1) 
        goto addr_41559a_2;
    __asm__("fst qword [0x452870]");
    if (!*reinterpret_cast<signed char*>(ebp2 - 0x90)) {
        addr_415578_4:
        if (*reinterpret_cast<uint16_t*>(ebp3 - 0xa4) & 32 || !(fpu_status_word4 & 32)) {
            addr_41559a_2:
            __asm__("fldcw word [ebp+0xffffff5c]");
            __asm__("wait ");
            return;
        } else {
            *reinterpret_cast<int32_t*>(ebp5 - 0x8e) = 8;
        }
    } else {
        if (*reinterpret_cast<signed char*>(ebp2 - 0x90) == -1 || *reinterpret_cast<signed char*>(ebp2 - 0x90) == -2) {
            ax6 = g452876;
            ax7 = reinterpret_cast<uint16_t>(ax6 & 0x7ff0);
            if (!ax7) {
                *reinterpret_cast<int32_t*>(ebp8 - 0x8e) = 4;
                __asm__("fld qword [0x41b6b8]");
                __asm__("fxch st0, st1");
                __asm__("fscale ");
                __asm__("fstp st1");
                __asm__("fld st0");
                __asm__("fabs ");
                __asm__("fcomp qword [0x41b6a8]");
                __asm__("wait ");
                ax9 = fpu_status_word10;
                if (*reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&ax9) + 1)) {
                    __asm__("fmul qword [0x41b6c8]");
                }
            } else {
                if (ax7 == 0x7ff0) {
                    *reinterpret_cast<int32_t*>(ebp11 - 0x8e) = 3;
                    __asm__("fld qword [0x41b6b0]");
                    __asm__("fxch st0, st1");
                    __asm__("fscale ");
                    __asm__("fstp st1");
                    __asm__("fld st0");
                    __asm__("fabs ");
                    __asm__("fcomp qword [0x41b6a0]");
                    __asm__("wait ");
                    ax12 = fpu_status_word13;
                    if (!(*reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&ax12) + 1) | *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&ax12) + 1))) {
                        __asm__("fmul qword [0x41b6c0]");
                    }
                } else {
                    goto addr_415578_4;
                }
            }
        } else {
            if (!*reinterpret_cast<signed char*>(ebp2 - 0x90)) 
                goto addr_41559a_2;
            *reinterpret_cast<int32_t*>(ebp14 - 0x8e) = *reinterpret_cast<signed char*>(ebp2 - 0x90);
        }
    }
    ebx15 = reinterpret_cast<struct s118*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp16 - 0x94)) + 1);
    *reinterpret_cast<struct s118**>(ebp17 - 0x8a) = ebx15;
    zf18 = g452878 == 0;
    if (!zf18) {
        addr_415645_17:
        __asm__("fstp qword [ebp-0x76]");
        v19 = reinterpret_cast<uint32_t>(static_cast<int32_t>((*reinterpret_cast<struct s119**>(ebp20 - 0x94))->fe));
        fun_4182b0(v19, ebp21 - 0x8e, ebp22 - 0xa4);
        __asm__("fld qword [ebp-0x76]");
        goto addr_41559a_2;
    } else {
        esi23 = reinterpret_cast<struct s121*>(&ebp24->f8);
        edi25 = reinterpret_cast<struct s123*>(ebp26 - 0x86);
        edi25->f0 = esi23->f0;
        edi25->f4 = esi23->f4;
        if (ebx15->fc == 1) 
            goto addr_415645_17;
    }
    esi27 = reinterpret_cast<struct s124*>(&ebp28->f10);
    edi29 = reinterpret_cast<struct s126*>(ebp30 - 0x7e);
    edi29->f0 = esi27->f0;
    edi29->f4 = esi27->f4;
    goto addr_415645_17;
}

struct s127 {
    signed char[14] pad14;
    signed char fe;
};

void fun_417080() {
    struct s127* edx1;
    int16_t bx2;
    int16_t bx3;
    int32_t ebp4;
    int32_t ebp5;
    int32_t ebp6;
    int32_t edx7;
    int32_t ebp8;
    int16_t fpu_status_word9;
    int32_t ebp10;
    int32_t edx11;
    int32_t ebp12;

    if (edx1->fe != 5) {
        bx2 = 0x133f;
    } else {
        bx3 = *reinterpret_cast<int16_t*>(ebp4 - 0xa4);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&bx2) + 1) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&bx3) + 1) | 2) & 0xfe);
        *reinterpret_cast<signed char*>(&bx2) = 63;
    }
    *reinterpret_cast<int16_t*>(ebp5 - 0xa2) = bx2;
    __asm__("fldcw word [ebp+0xffffff5e]");
    __asm__("fxam ");
    *reinterpret_cast<int32_t*>(ebp6 - 0x94) = edx7;
    __asm__("wait ");
    *reinterpret_cast<int16_t*>(ebp8 - 0xa0) = fpu_status_word9;
    *reinterpret_cast<signed char*>(ebp10 - 0x90) = 0;
    __asm__("wait ");
    __asm__("rol cl, 1");
    __asm__("xlatb ");
    goto *reinterpret_cast<int32_t*>(edx11 + reinterpret_cast<signed char>(reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp12 - 0x9f) << 1) >> 1) & 15) + 16);
}

struct s128 {
    uint32_t f0;
    uint32_t f4;
};

int32_t fun_419bb0(uint32_t a1, struct s128* a2, uint32_t a3);

struct s129 {
    uint32_t f0;
    uint32_t f4;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
    int32_t f14;
    signed char[8] pad32;
    uint32_t f20;
    signed char[28] pad64;
    uint32_t f40;
    uint32_t f44;
    signed char[8] pad80;
    uint32_t f50;
};

struct s130 {
    int32_t f0;
    int32_t f4;
};

void fun_419840(struct s129* a1, uint32_t* a2, uint32_t a3, uint32_t a4, struct s130* a5, struct s128* a6);

int32_t fun_419ef0(int16_t a1, int16_t a2);

int32_t g43c0b8 = 0x2694;

int32_t fun_419ea0(struct s120* a1);

void fun_419e70(int32_t a1);

void fun_4182b0(uint32_t a1, struct s120* a2, int16_t* a3) {
    uint32_t ecx4;
    uint32_t edi5;
    struct s128* ebx6;
    int32_t eax7;
    struct s128** esp8;
    uint32_t v9;
    int32_t eax10;
    int1_t zf11;
    int32_t v12;

    ecx4 = 0;
    *reinterpret_cast<int16_t*>(&ecx4) = *a3;
    switch (a2->f0 - 1) {
        addr_4182f8_3:
    default:
        edi5 = 0;
        break;
    case 0:
    case 4:
        edi5 = 8;
        break;
    case 1:
        edi5 = 4;
        break;
    case 2:
        edi5 = 17;
        break;
    case 3:
        edi5 = 18;
        break;
    case 6:
        a2->f0 = 1;
        goto addr_4182f8_3;
    case 7:
        edi5 = 16;
    }
    if (edi5 && (ebx6 = reinterpret_cast<struct s128*>(&a2->f18), eax7 = fun_419bb0(edi5, ebx6, ecx4), !eax7)) {
        if (a1 == 16 || (a1 == 22 || a1 == 29)) {
        }
        esp8 = reinterpret_cast<struct s128**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 92 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 12 - 4);
        fun_419840(esp8 + 5, esp8 - 1 - 1 - 1 + 7, edi5, a1, &a2->f8, ebx6);
    }
    v9 = ecx4;
    fun_419ef0(*reinterpret_cast<int16_t*>(&v9), -1);
    eax10 = 0;
    if (a2->f0 != 8 && (zf11 = g43c0b8 == 0, zf11)) {
        eax10 = fun_419ea0(a2);
    }
    if (!eax10) {
        v12 = a2->f0;
        fun_419e70(v12);
    }
    return;
}

struct s131 {
    uint32_t f0;
    uint32_t f4;
    uint32_t f8;
    unsigned char f9;
    int16_t fa;
};

uint32_t fun_418760(uint32_t a1, uint32_t a2, struct s131* a3) {
    uint32_t eax4;
    uint32_t esi5;

    eax4 = 0;
    esi5 = a1 + a2;
    if (a1 > esi5 || a2 > esi5) {
        eax4 = 1;
    }
    a3->f0 = esi5;
    return eax4;
}

int32_t fun_415a30(uint32_t* a1, uint32_t a2) {
    uint32_t edx3;
    uint32_t edx4;
    int32_t edi5;
    uint32_t eax6;
    int32_t edi7;
    uint32_t* eax8;

    __asm__("cdq ");
    edx3 = edx4 & 31;
    edi5 = reinterpret_cast<int32_t>(a2 + edx3) >> 5;
    __asm__("cdq ");
    eax6 = ((a2 ^ edx3) - edx3 & 31 ^ edx3) - edx3;
    if (a1[edi5] & reinterpret_cast<uint32_t>(~(-1 << reinterpret_cast<unsigned char>(31 - *reinterpret_cast<signed char*>(&eax6))))) {
        return 0;
    }
    edi7 = edi5 + 1;
    if (edi7 >= 3) {
        addr_415a85_4:
        return 1;
    } else {
        eax8 = a1 + edi7;
        do {
            if (*eax8) 
                break;
            ++eax8;
            ++edi7;
        } while (edi7 < 3);
        goto addr_415a85_4;
    }
    return 0;
}

uint32_t fun_415aa0(uint32_t* a1, uint32_t a2) {
    uint32_t edx3;
    uint32_t edx4;
    int32_t esi5;
    uint32_t eax6;
    struct s131* eax7;
    uint32_t ecx8;
    uint32_t eax9;
    int32_t esi10;
    struct s131* edi11;
    struct s131* v12;
    uint32_t eax13;

    __asm__("cdq ");
    edx3 = edx4 & 31;
    esi5 = reinterpret_cast<int32_t>(a2 + edx3) >> 5;
    __asm__("cdq ");
    eax6 = ((a2 ^ edx3) - edx3 & 31 ^ edx3) - edx3;
    eax7 = reinterpret_cast<struct s131*>(a1 + esi5);
    ecx8 = eax7->f0;
    eax9 = fun_418760(ecx8, 1 << reinterpret_cast<unsigned char>(31 - *reinterpret_cast<signed char*>(&eax6)), eax7);
    esi10 = esi5 - 1;
    if (esi10 >= 0) {
        edi11 = reinterpret_cast<struct s131*>(a1 + esi10);
        do {
            if (!eax9) 
                break;
            v12 = edi11;
            eax13 = edi11->f0;
            edi11 = reinterpret_cast<struct s131*>(reinterpret_cast<int32_t>(edi11) - 4);
            eax9 = fun_418760(eax13, 1, v12);
            --esi10;
        } while (esi10 >= 0);
    }
    return eax9;
}

int32_t fun_415bf0(int32_t* a1) {
    int32_t eax2;
    int32_t* ecx3;

    eax2 = 0;
    ecx3 = a1;
    do {
        if (*ecx3) 
            break;
        ++ecx3;
        ++eax2;
    } while (eax2 < 3);
    goto addr_415c04_4;
    return 0;
    addr_415c04_4:
    return 1;
}

struct s132 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
};

void fun_415be0(struct s132* a1) {
    a1->f0 = 0;
    a1->f4 = 0;
    a1->f8 = 0;
    return;
}

void fun_415bc0(int32_t* a1, int32_t* a2) {
    int32_t* eax3;
    int32_t* ecx4;
    int32_t edx5;

    eax3 = a2;
    ecx4 = a1;
    edx5 = 3;
    do {
        ++eax3;
        *ecx4 = *eax3;
        ++ecx4;
        --edx5;
    } while (edx5);
    return;
}

struct s133 {
    uint32_t f0;
    signed char[4] pad8;
    int32_t f8;
};

void fun_415c10(struct s133* a1, unsigned char a2) {
    uint32_t edx3;
    uint32_t edx4;
    int32_t v5;
    uint32_t eax6;
    struct s133* esi7;
    struct s133* ebx8;
    int32_t ebp9;
    uint32_t v10;
    unsigned char v11;
    uint32_t edx12;
    uint32_t edi13;
    uint32_t edi14;
    uint32_t edi15;
    int32_t ecx16;
    int32_t* esi17;
    int32_t* edx18;

    __asm__("cdq ");
    edx3 = edx4 & 31;
    v5 = reinterpret_cast<int32_t>(a2 + edx3) >> 5;
    __asm__("cdq ");
    eax6 = ((a2 ^ edx3) - edx3 & 31 ^ edx3) - edx3;
    esi7 = a1;
    ebx8 = esi7;
    ebp9 = 3;
    v10 = reinterpret_cast<uint32_t>(~(-1 << *reinterpret_cast<unsigned char*>(&eax6)));
    v11 = reinterpret_cast<unsigned char>(32 - *reinterpret_cast<unsigned char*>(&eax6));
    edx12 = 0;
    do {
        edi13 = ebx8->f0;
        ebx8 = reinterpret_cast<struct s133*>(&ebx8->pad8);
        edi14 = edi13 >> *reinterpret_cast<unsigned char*>(&eax6);
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebx8) - 4) = edi14;
        edi15 = edi14 | edx12;
        edx12 = (edi13 & v10) << v11;
        --ebp9;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebx8) - 4) = edi15;
    } while (ebp9);
    ecx16 = 2;
    esi17 = &esi7->f8;
    edx18 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi7) - (v5 << 2) + 8);
    do {
        if (v5 > ecx16) {
            *esi17 = 0;
        } else {
            *esi17 = *edx18;
        }
        --edx18;
        --esi17;
        --ecx16;
    } while (ecx16 >= 0);
    return;
}

uint32_t fun_415b10(uint32_t* a1, uint32_t a2) {
    uint32_t v3;
    uint32_t edx4;
    uint32_t edx5;
    int32_t esi6;
    uint32_t ebx7;
    uint32_t* v8;
    int32_t eax9;
    uint32_t eax10;
    int32_t esi11;
    int32_t ecx12;
    uint32_t* edi13;

    v3 = 0;
    __asm__("cdq ");
    edx4 = edx5 & 31;
    esi6 = reinterpret_cast<int32_t>(a2 + edx4) >> 5;
    __asm__("cdq ");
    ebx7 = 31 - (((a2 ^ edx4) - edx4 & 31 ^ edx4) - edx4);
    v8 = a1 + esi6;
    if (*v8 & 1 << *reinterpret_cast<unsigned char*>(&ebx7) && (eax9 = fun_415a30(a1, a2 + 1), !eax9)) {
        eax10 = fun_415aa0(a1, a2 - 1);
        v3 = eax10;
    }
    esi11 = esi6 + 1;
    *v8 = *v8 & 0xffffffff << *reinterpret_cast<unsigned char*>(&ebx7);
    if (esi11 < 3) {
        ecx12 = 3 - esi11;
        edi13 = a1 + esi11;
        while (ecx12) {
            --ecx12;
            *edi13 = 0;
            ++edi13;
        }
    }
    return v3;
}

void* fun_416710(void** a1, void* a2, void** a3, int32_t a4) {
    int1_t below_or_equal5;
    void** edi6;
    uint32_t esi7;
    int32_t eax8;
    int32_t eax9;
    uint32_t eax10;
    int32_t edi11;

    below_or_equal5 = reinterpret_cast<unsigned char>(g454680) <= reinterpret_cast<unsigned char>(a1);
    if (below_or_equal5 || (edi6 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a1) & 0xffffffe7) >> 3) + 0x454580), esi7 = (reinterpret_cast<unsigned char>(a1) & 31) * 8, (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*edi6) + esi7 + 4) & 1) == 0)) {
        g43aa58 = 9;
        g43aa5c = 0;
        return 0xffffffff;
    } else {
        eax8 = fun_416600(a1);
        if (eax8 != -1) {
            eax9 = reinterpret_cast<int32_t>(SetFilePointer());
            if (eax9 != -1 || (eax10 = reinterpret_cast<uint32_t>(GetLastError()), eax10 == 0)) {
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*edi6) + esi7 + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*edi6) + esi7 + 4) & 0xfd);
                goto edi11;
            } else {
                fun_4144a0(eax10);
                goto edi11;
            }
        } else {
            g43aa58 = 9;
            return 0xffffffff;
        }
    }
}

void fun_41a340(void* ecx, void** a2);

int32_t SetEndOfFile = 0x55814;

uint32_t fun_41a2c0(void** a1, uint32_t a2);

int32_t fun_419460(void* ecx, void** a2, void** a3) {
    void* v4;
    void* ebx5;
    uint32_t v6;
    uint32_t esi7;
    void* v8;
    void* edi9;
    void** esi10;
    void** v11;
    void* v12;
    void* ebp13;
    int1_t below_or_equal14;
    int32_t v15;
    void** eax16;
    void** v17;
    void** eax18;
    int32_t v19;
    void* ebp20;
    void** v21;
    uint1_t less22;
    int32_t eax23;
    uint32_t eax24;
    uint32_t eax25;
    int32_t v26;
    int32_t ecx27;
    void* esp28;
    uint32_t eax29;
    void* esp30;
    uint32_t edi31;
    void* eax32;
    void** esp33;
    void* eax34;
    int1_t zf35;

    fun_41a340(ecx, __return_address());
    v4 = ebx5;
    v6 = esi7;
    v8 = edi9;
    esi10 = v11;
    v12 = ebp13;
    below_or_equal14 = reinterpret_cast<unsigned char>(g454680) <= reinterpret_cast<unsigned char>(esi10);
    if (below_or_equal14 || !(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(esi10) & 0xffffffe7) >> 3) + 0x454580)) + (reinterpret_cast<unsigned char>(esi10) & 31) * 8 + 4) & 1)) {
        g43aa58 = 9;
        goto v15;
    }
    eax16 = fun_4143e0(esi10, 0, 1, v12, v8, v6, v4, __return_address());
    v17 = eax16;
    if (eax16 == 0xffffffff || (eax18 = fun_4143e0(esi10, 0, 2, v12, v8, v6, v4, v17), eax18 == 0xffffffff)) {
        goto v19;
    }
    ebp20 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v21) - reinterpret_cast<unsigned char>(eax18));
    less22 = reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ebp20) < reinterpret_cast<int32_t>(0));
    if (!(less22 | reinterpret_cast<uint1_t>(ebp20 == 0))) 
        goto addr_4194de_6;
    if (less22 && (fun_4143e0(esi10, v21, 0, v12, v8, v6, v4, v17), eax23 = fun_416600(esi10), eax24 = reinterpret_cast<uint32_t>(SetEndOfFile(eax23)), -static_cast<uint32_t>(reinterpret_cast<uint1_t>(0 < static_cast<uint32_t>(reinterpret_cast<uint1_t>(eax24 < 1)))) == 0xffffffff)) {
        g43aa58 = 13;
        eax25 = reinterpret_cast<uint32_t>(GetLastError(eax23));
        g43aa5c = eax25;
    }
    addr_419580_9:
    fun_4143e0(esi10, v17, 0, v12, v8, v6, v4, v17);
    goto v26;
    addr_4194de_6:
    ecx27 = 0x400;
    esp28 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 12 - 4 - 4 - 4 - 4 + 4 + 12 - 4);
    while (ecx27) {
        --ecx27;
        esi10 = esi10 + 4;
    }
    eax29 = fun_41a2c0(esi10, 0x8000);
    esp30 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp28) - 4 - 4 + 4 + 8);
    edi31 = eax29;
    do {
        eax32 = reinterpret_cast<void*>(0x1000);
        if (reinterpret_cast<int32_t>(ebp20) < reinterpret_cast<int32_t>(0x1000)) {
            eax32 = ebp20;
        }
        esp33 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp30) - 4);
        eax34 = fun_4141b0(esi10, esp33 + 6, eax32);
        esp30 = reinterpret_cast<void*>(esp33 - 1 - 1 - 1 + 1 + 3);
        if (eax34 == 0xffffffff) 
            break;
        ebp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp20) - reinterpret_cast<uint32_t>(eax34));
    } while (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ebp20) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(ebp20 == 0)));
    goto addr_419520_17;
    zf35 = g43aa5c == 5;
    if (zf35) {
        g43aa58 = 13;
    }
    addr_419537_21:
    fun_41a2c0(esi10, edi31);
    goto addr_419580_9;
    addr_419520_17:
    goto addr_419537_21;
}

int32_t fun_4112a0(void** a1) {
    int32_t edi2;
    void** eax3;
    int32_t eax4;
    void** v5;
    int32_t eax6;
    void** v7;

    edi2 = -1;
    eax3 = *reinterpret_cast<void***>(a1 + 12);
    if (!(*reinterpret_cast<unsigned char*>(&eax3) & 64)) {
        if (*reinterpret_cast<unsigned char*>(&eax3) & 0x83) {
            eax4 = fun_4138b0(a1);
            edi2 = eax4;
            fun_413820(a1);
            v5 = *reinterpret_cast<void***>(a1 + 16);
            eax6 = fun_413750(v5);
            if (eax6 >= 0) {
                if (*reinterpret_cast<void***>(a1 + 28)) {
                    v7 = *reinterpret_cast<void***>(a1 + 28);
                    fun_411250(v7);
                    *reinterpret_cast<void***>(a1 + 28) = reinterpret_cast<void**>(0);
                }
            } else {
                edi2 = -1;
            }
        }
        *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(0);
        return edi2;
    } else {
        *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(0);
        return -1;
    }
}

unsigned char fun_419790(uint32_t a1, uint32_t a2);

void fun_419770(uint32_t a1, uint32_t a2);

int32_t fun_4174a0(uint32_t a1, uint32_t a2) {
    unsigned char al3;
    int16_t ax4;
    int16_t fpu_status_word5;
    uint32_t v6;
    uint32_t v7;
    int16_t ax8;
    int16_t fpu_status_word9;

    al3 = fun_419790(a1, a2);
    if (!(al3 & 0x90)) {
        fun_419770(a1, a2);
        __asm__("fcomp qword [esp+0x14]");
        ax4 = fpu_status_word5;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax4) + 1) & 64)) {
            return 0;
        } else {
            __asm__("fld qword [esp+0xc]");
            __asm__("fmul qword [0x41b720]");
            __asm__("fstp qword [esp+0x0]");
            fun_419770(v6, v7);
            __asm__("fcomp qword [esp+0x8]");
            ax8 = fpu_status_word9;
            if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax8) + 1) & 64)) {
                return 1;
            } else {
                return 2;
            }
        }
    } else {
        return 0;
    }
}

void fun_419770(uint32_t a1, uint32_t a2) {
    __asm__("fld qword [esp+0xc]");
    __asm__("frndint ");
    __asm__("fstp qword [esp+0x0]");
    __asm__("fld qword [esp+0x0]");
    return;
}

uint32_t fun_417520(uint32_t a1, uint32_t a2, uint32_t a3);

uint32_t fun_417ad6() {
    uint32_t v1;
    uint32_t v2;
    uint32_t v3;
    uint32_t eax4;

    __asm__("fstp tword [esp]");
    __asm__("fstp tword [esp+0xc]");
    eax4 = fun_417520(v1, v2, v3);
    return eax4;
}

uint32_t fun_417ae9() {
    uint32_t v1;
    uint32_t v2;
    uint32_t v3;
    uint32_t eax4;

    __asm__("fstp tword [esp+0xc]");
    __asm__("fstp tword [esp]");
    eax4 = fun_417520(v1, v2, v3);
    return eax4;
}

uint32_t fun_417d26(int32_t ecx) {
    uint32_t v2;
    uint32_t eax3;
    uint32_t eax4;
    uint32_t v5;
    uint32_t v6;
    uint32_t eax7;
    uint32_t v8;
    int32_t v9;
    int32_t v10;
    uint32_t v11;
    uint32_t v12;
    uint32_t edx13;
    uint32_t ecx14;
    uint32_t v15;
    uint32_t v16;
    uint32_t eax17;
    uint32_t v18;
    int16_t fpu_status_word19;
    uint32_t v20;
    uint32_t v21;
    uint32_t v22;
    uint32_t edx23;
    uint32_t edx24;

    v2 = eax3;
    eax4 = v5 ^ 0x700;
    if (eax4 & 0x700 || (!*reinterpret_cast<signed char*>((eax4 >> 11 & 15) + 0x43be5c) || ((v6 & 0x7fff0000) == 0x7fff0000 || ((eax7 = v8 & 0x7fff0000, eax7 == 0) || (eax7 == 0x7fff0000 || (v9 + v9 || v10 + v10)))))) {
        addr_417ec0_2:
        __asm__("fld tword [esp+0x10]");
        __asm__("fld tword [esp+0x28]");
        __asm__("fprem ");
    } else {
        if ((v11 & 0x7fff) > (v12 & 0x7fff) + 63) {
            if (!(edx13 & 2)) {
                __asm__("fld tword [esp+0x10]");
                __asm__("fstp tword [esp+0x1c]");
            }
            __asm__("fnstcw word [esp+0x34]");
            __asm__("fldcw word [esp+0x38]");
            ecx14 = ((v15 & 0x7fff) - (v16 & 0x7fff) & 63 | 32) + 1;
            eax17 = v18 & 0x8000;
            __asm__("fld tword [esp+0x10]");
            __asm__("fabs ");
            __asm__("fld tword [esp+0x28]");
            __asm__("fabs ");
            do {
                __asm__("fcom st0, st1");
                *reinterpret_cast<int16_t*>(&eax17) = fpu_status_word19;
                eax17 = eax17 & 0x100;
                if (!eax17) {
                    __asm__("fsub st0, st1");
                }
                __asm__("fxch st0, st1");
                __asm__("fmul qword [0x43be8c]");
                __asm__("fxch st0, st1");
                --ecx14;
            } while (ecx14);
            __asm__("fstp tword [esp+0x28]");
            __asm__("fstp st0");
            __asm__("fld tword [esp+0x1c]");
            __asm__("fld tword [0x43be94]");
            __asm__("fprem ");
            __asm__("fstp st0");
            __asm__("fld tword [esp+0x28]");
            __asm__("fldcw word [esp+0x34]");
            if (v20 & 0x8000) {
                __asm__("fchs ");
            }
        } else {
            while (reinterpret_cast<int32_t>((v21 & 0x7fff) - ((v22 & 0x7fff) + 10)) >= reinterpret_cast<int32_t>(0)) {
                __asm__("fld tword [esp+0x28]");
                __asm__("fld tword [esp+0x10]");
                v22 = v22;
                __asm__("fxch st0, st1");
                __asm__("fprem ");
                __asm__("fstp tword [esp+0x28]");
                __asm__("fstp st0");
            }
            goto addr_417ec0_2;
        }
    }
    if (edx23 & 3) {
        if (edx24 & 1) {
            __asm__("fnstcw word [esp+0x34]");
            __asm__("fldcw word [esp+0x38]");
            __asm__("fmul qword [0x43be7c]");
            __asm__("fldcw word [esp+0x34]");
        }
        __asm__("fxch st0, st1");
        __asm__("fstp st0");
        __asm__("fld tword [esp+0x1c]");
        __asm__("fxch st0, st1");
        __asm__("fnstenv [esp]");
        __asm__("fldenv [esp]");
    }
    return v2;
}

uint32_t fun_417fde(int32_t ecx) {
    uint32_t v2;
    uint32_t eax3;
    uint32_t eax4;
    uint32_t v5;
    uint32_t v6;
    uint32_t eax7;
    uint32_t v8;
    int32_t v9;
    int32_t v10;
    uint32_t eax11;
    uint32_t v12;
    uint32_t ebx13;
    uint32_t v14;
    uint32_t ecx15;
    uint32_t v16;
    uint32_t v17;
    uint32_t eax18;
    uint32_t v19;
    int16_t fpu_status_word20;
    uint32_t v21;
    uint32_t v22;
    uint32_t v23;
    uint32_t edx24;
    uint32_t edx25;

    v2 = eax3;
    eax4 = v5 ^ 0x700;
    if (eax4 & 0x700 || (!*reinterpret_cast<signed char*>((eax4 >> 11 & 15) + 0x43be5c) || ((v6 & 0x7fff0000) == 0x7fff0000 || ((eax7 = v8 & 0x7fff0000, eax7 == 0) || (eax7 == 0x7fff0000 || (v9 + v9 || v10 + v10)))))) {
        addr_418178_2:
        __asm__("fld tword [esp+0x10]");
        __asm__("fld tword [esp+0x28]");
        __asm__("fprem1 ");
    } else {
        eax11 = (v12 & 0x7fff) + 63;
        ebx13 = v14 & 0x7fff;
        if (ebx13 > eax11) {
            if (!(ebx13 - eax11 & 2)) {
                __asm__("fld tword [esp+0x10]");
                __asm__("fstp tword [esp+0x1c]");
            }
            __asm__("fnstcw word [esp+0x34]");
            __asm__("fldcw word [esp+0x38]");
            ecx15 = ((v16 & 0x7fff) - (v17 & 0x7fff) & 63 | 32) + 1;
            eax18 = v19 & 0x8000;
            __asm__("fld tword [esp+0x10]");
            __asm__("fabs ");
            __asm__("fld tword [esp+0x28]");
            __asm__("fabs ");
            do {
                __asm__("fcom st0, st1");
                *reinterpret_cast<int16_t*>(&eax18) = fpu_status_word20;
                eax18 = eax18 & 0x100;
                if (!eax18) {
                    __asm__("fsub st0, st1");
                }
                __asm__("fxch st0, st1");
                __asm__("fmul qword [0x43be8c]");
                __asm__("fxch st0, st1");
                --ecx15;
            } while (ecx15);
            __asm__("fstp tword [esp+0x28]");
            __asm__("fstp st0");
            __asm__("fld tword [esp+0x1c]");
            __asm__("fld tword [0x43be94]");
            __asm__("fprem1 ");
            __asm__("fstp st0");
            __asm__("fld tword [esp+0x28]");
            __asm__("fldcw word [esp+0x34]");
            if (v21 & 0x8000) {
                __asm__("fchs ");
            }
        } else {
            while (reinterpret_cast<int32_t>((v22 & 0x7fff) - ((v23 & 0x7fff) + 10)) >= reinterpret_cast<int32_t>(0)) {
                __asm__("fld tword [esp+0x28]");
                __asm__("fld tword [esp+0x10]");
                v23 = v23;
                __asm__("fxch st0, st1");
                __asm__("fprem ");
                __asm__("fstp tword [esp+0x28]");
                __asm__("fstp st0");
            }
            goto addr_418178_2;
        }
    }
    if (edx24 & 3) {
        if (edx25 & 1) {
            __asm__("fnstcw word [esp+0x34]");
            __asm__("fldcw word [esp+0x38]");
            __asm__("fmul qword [0x43be7c]");
            __asm__("fldcw word [esp+0x34]");
        }
        __asm__("fxch st0, st1");
        __asm__("fstp st0");
        __asm__("fld tword [esp+0x1c]");
        __asm__("fxch st0, st1");
        __asm__("fnstenv [esp]");
        __asm__("fldenv [esp]");
    }
    return v2;
}

void fun_419680(uint32_t a1, uint32_t a2, int32_t* a3);

uint32_t fun_419f30(int32_t a1);

uint32_t g43bfbc = 0x7ff00000;

uint32_t g43bfb8 = 0;

uint32_t g43bfcc = 0x7fefffff;

uint32_t g43bfc8 = 0xffffffff;

int32_t fun_419bb0(uint32_t a1, struct s128* a2, uint32_t a3) {
    uint32_t esi4;
    uint32_t edi5;
    uint32_t ebp6;
    struct s128* ebx7;
    uint32_t eax8;
    uint32_t ecx9;
    uint32_t edx10;
    int32_t ecx11;
    int32_t v12;
    int32_t edx13;
    int16_t ax14;
    int16_t fpu_status_word15;
    uint32_t v16;
    uint16_t v17;
    int32_t eax18;
    uint32_t v19;
    int16_t fpu_status_word20;
    uint32_t ecx21;
    int16_t fpu_status_word22;
    uint32_t ecx23;
    int16_t fpu_status_word24;
    uint32_t ecx25;
    int16_t fpu_status_word26;
    uint32_t ecx27;

    esi4 = a1;
    edi5 = esi4 & 31;
    if (!(esi4 & 8) || !(*reinterpret_cast<unsigned char*>(&a3) & 1)) {
        if (!(esi4 & 4) || !(*reinterpret_cast<unsigned char*>(&a3) & 4)) {
            if (!(esi4 & 1) || !(*reinterpret_cast<unsigned char*>(&a3) & 8)) {
                if (esi4 & 2 && *reinterpret_cast<unsigned char*>(&a3) & 16) {
                    ebp6 = 0;
                    if (esi4 & 16) {
                        ebp6 = 1;
                    }
                    ebx7 = a2;
                    eax8 = ebx7->f4 & 0x7fffffff | ebx7->f0;
                    if (!eax8) {
                        ebp6 = 1;
                    } else {
                        ecx9 = ebx7->f4;
                        edx10 = ebx7->f0;
                        fun_419680(edx10, ecx9, reinterpret_cast<int32_t>(__zero_stack_offset()) - 12 - 4 - 4 - 4 - 4 + 24);
                        __asm__("fstp qword [esp+0x1c]");
                        ecx11 = v12 - 0x600;
                        if (ecx11 >= 0xfffffbce) {
                            __asm__("fldz ");
                            __asm__("fcomp qword [esp+0x10]");
                            edx13 = 1;
                            ax14 = fpu_status_word15;
                            if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax14) + 1) & 65) {
                                edx13 = 0;
                            }
                            *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v16) + 2) = reinterpret_cast<uint16_t>(v17 & 15);
                            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&v16) + 2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&v16) + 2) | 16);
                            if (ecx11 < 0xfffffc03) {
                                eax18 = 0xfffffc03 - ecx11;
                                do {
                                    if (v19 & 1 && !ebp6) {
                                        ebp6 = 1;
                                    }
                                    v19 = v19 >> 1;
                                    if (v16 & 1) {
                                        v19 = v19 | 0x80000000;
                                    }
                                    v16 = v16 >> 1;
                                    --eax18;
                                } while (eax18);
                            }
                            if (edx13) {
                                __asm__("fld qword [esp+0x10]");
                                __asm__("fchs ");
                                __asm__("fstp qword [esp+0x10]");
                            }
                        } else {
                            ebp6 = 1;
                            v19 = 0;
                            v16 = 0;
                        }
                        eax8 = v16;
                        ebx7->f4 = eax8;
                        ebx7->f0 = v19;
                    }
                    if (ebp6) {
                        eax8 = fun_419f30(16);
                    }
                    edi5 = edi5 & 0xfffffffd;
                }
            } else {
                fun_419f30(8);
                eax8 = a3 & 0xc00;
                if (eax8 > 0x400) {
                    if (eax8 == 0x800) {
                        __asm__("fldz ");
                        __asm__("fcomp qword [ebx]");
                        *reinterpret_cast<int16_t*>(&eax8) = fpu_status_word20;
                        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax8) + 1) & 1)) {
                            __asm__("fld qword [0x43bfc8]");
                            __asm__("fchs ");
                            edi5 = edi5 & 0xfffffffe;
                            __asm__("fstp qword [ebx]");
                        } else {
                            eax8 = g43bfbc;
                            edi5 = edi5 & 0xfffffffe;
                            a2->f4 = eax8;
                            ecx21 = g43bfb8;
                            a2->f0 = ecx21;
                        }
                    } else {
                        if (eax8 == 0xc00) {
                            __asm__("fldz ");
                            __asm__("fcomp qword [ebx]");
                            *reinterpret_cast<int16_t*>(&eax8) = fpu_status_word22;
                            if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax8) + 1) & 1)) {
                                __asm__("fld qword [0x43bfc8]");
                                __asm__("fchs ");
                                edi5 = edi5 & 0xfffffffe;
                                __asm__("fstp qword [ebx]");
                            } else {
                                eax8 = g43bfcc;
                                edi5 = edi5 & 0xfffffffe;
                                a2->f4 = eax8;
                                ecx23 = g43bfc8;
                                a2->f0 = ecx23;
                            }
                        } else {
                            edi5 = edi5 & 0xfffffffe;
                        }
                    }
                } else {
                    if (eax8 == 0x400) {
                        __asm__("fldz ");
                        __asm__("fcomp qword [ebx]");
                        *reinterpret_cast<int16_t*>(&eax8) = fpu_status_word24;
                        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax8) + 1) & 1)) {
                            __asm__("fld qword [0x43bfb8]");
                            __asm__("fchs ");
                            edi5 = edi5 & 0xfffffffe;
                            __asm__("fstp qword [ebx]");
                        } else {
                            eax8 = g43bfcc;
                            edi5 = edi5 & 0xfffffffe;
                            a2->f4 = eax8;
                            ecx25 = g43bfc8;
                            a2->f0 = ecx25;
                        }
                    } else {
                        if (!eax8) {
                            __asm__("fldz ");
                            __asm__("fcomp qword [ebx]");
                            *reinterpret_cast<int16_t*>(&eax8) = fpu_status_word26;
                            if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax8) + 1) & 1)) {
                                __asm__("fld qword [0x43bfb8]");
                                __asm__("fchs ");
                                edi5 = edi5 & 0xfffffffe;
                                __asm__("fstp qword [ebx]");
                            } else {
                                eax8 = g43bfbc;
                                edi5 = edi5 & 0xfffffffe;
                                a2->f4 = eax8;
                                ecx27 = g43bfb8;
                                a2->f0 = ecx27;
                            }
                        } else {
                            edi5 = edi5 & 0xfffffffe;
                        }
                    }
                }
            }
        } else {
            edi5 = edi5 & 0xfffffffb;
            eax8 = fun_419f30(4);
        }
    } else {
        edi5 = edi5 & 0xfffffff7;
        eax8 = fun_419f30(1);
    }
    if (esi4 & 16 && *reinterpret_cast<unsigned char*>(&a3) & 32) {
        edi5 = edi5 & 0xffffffef;
        eax8 = fun_419f30(32);
    }
    return -(eax8 - (eax8 + reinterpret_cast<uint1_t>(eax8 < eax8 + reinterpret_cast<uint1_t>(edi5 < 1))));
}

int32_t fun_419ea0(struct s120* a1) {
    return 0;
}

void fun_419e70(int32_t a1) {
    if (a1 == 1) {
        g43aa58 = 33;
        return;
    } else {
        if (a1 >= 2) {
            if (a1 <= 3) {
                g43aa58 = 34;
            } else {
                return;
            }
        }
        return;
    }
}

int32_t fun_418730(signed char* a1, int32_t a2) {
    signed char* ecx3;
    signed char* esi4;
    int32_t eax5;
    int32_t edx6;
    int32_t edi7;

    ecx3 = a1;
    esi4 = ecx3;
    eax5 = a2;
    edx6 = eax5 - 1;
    if (eax5) {
        do {
            if (!*esi4) 
                goto addr_418755_3;
            ++esi4;
            edi7 = edx6;
            --edx6;
        } while (edi7);
    }
    if (*esi4) {
        addr_418759_6:
        return eax5;
    } else {
        addr_418755_3:
        eax5 = reinterpret_cast<int32_t>(esi4) - reinterpret_cast<int32_t>(ecx3);
        goto addr_418759_6;
    }
}

uint32_t fun_418800(struct s131* a1) {
    uint32_t ecx2;
    uint32_t edi3;
    uint32_t eax4;

    ecx2 = a1->f4;
    edi3 = (a1->f0 & 0x80000000) >> 31;
    a1->f0 = a1->f0 + a1->f0;
    a1->f4 = ecx2 * 2 | edi3;
    eax4 = a1->f8 + a1->f8 | (ecx2 & 0x80000000) >> 31;
    a1->f8 = eax4;
    return eax4;
}

struct s134 {
    uint32_t f0;
    uint32_t f4;
    uint32_t f8;
};

uint32_t fun_418790(struct s131* a1, struct s134* a2) {
    uint32_t v3;
    uint32_t v4;
    uint32_t eax5;
    struct s131* eax6;
    uint32_t v7;
    uint32_t eax8;
    struct s131* eax9;
    uint32_t ecx10;
    uint32_t v11;
    uint32_t eax12;
    uint32_t ecx13;
    uint32_t v14;
    uint32_t eax15;

    v3 = a2->f0;
    v4 = a1->f0;
    eax5 = fun_418760(v4, v3, a1);
    if (eax5 && (eax6 = reinterpret_cast<struct s131*>(&a1->f4), v7 = eax6->f0, eax8 = fun_418760(v7, 1, eax6), !!eax8)) {
        a1->f8 = a1->f8 + 1;
    }
    eax9 = reinterpret_cast<struct s131*>(&a1->f4);
    ecx10 = a2->f4;
    v11 = eax9->f0;
    eax12 = fun_418760(v11, ecx10, eax9);
    if (eax12) {
        a1->f8 = a1->f8 + 1;
    }
    ecx13 = a1->f8;
    v14 = a2->f8;
    eax15 = fun_418760(ecx13, v14, &a1->f8);
    return eax15;
}

uint32_t fun_418880(void* a1, uint32_t a2, struct s131* a3) {
    struct s131* esi4;
    int16_t di5;
    void* esp6;
    uint32_t ebx7;
    void* esp8;
    void* esp9;
    uint32_t eax10;
    uint32_t eax11;
    uint32_t ecx12;
    uint32_t edx13;

    esi4 = a3;
    di5 = 0x404e;
    esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 12 - 4 - 4 - 4 - 4);
    ebx7 = a2;
    esi4->f0 = 0;
    esi4->f4 = 0;
    esi4->f8 = 0;
    if (ebx7) {
        do {
            fun_418800(esi4);
            --ebx7;
            fun_418800(esi4);
            esp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp6) - 4 - 4 + 4 + 4 - 4 - 4 + 4);
            fun_418790(esi4, reinterpret_cast<int32_t>(esp8) + 20);
            fun_418800(esi4);
            esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp8) + 4 - 4 - 4 - 4 + 4 + 8 - 4 - 4 + 4);
            eax10 = fun_418790(esi4, reinterpret_cast<int32_t>(esp9) + 20);
            esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) + 4 - 4 - 4 - 4 + 4 + 8);
        } while (ebx7);
    }
    if (!esi4->f8) {
        do {
            di5 = reinterpret_cast<int16_t>(di5 - 16);
            eax11 = esi4->f0;
            ecx12 = esi4->f4 >> 16;
            edx13 = esi4->f4 << 16;
            esi4->f8 = ecx12;
            eax10 = eax11 << 16;
            esi4->f4 = edx13 | eax11 >> 16;
            esi4->f0 = eax10;
        } while (!ecx12);
    }
    if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi4) + 9) & 0x80)) {
        do {
            di5 = reinterpret_cast<int16_t>(di5 - 1);
            eax10 = fun_418800(esi4);
        } while (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi4) + 9) & 0x80));
    }
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esi4) + 10) = di5;
    return eax10;
}

struct s135 {
    uint16_t f0;
    uint16_t f2;
    uint16_t f4;
    uint16_t f6;
    uint16_t f8;
    uint16_t fa;
};

struct s136 {
    uint16_t f0;
    signed char[2] pad4;
    uint16_t f4;
    signed char[2] pad8;
    uint32_t f8;
    uint16_t fa;
};

struct s137 {
    uint32_t f0;
    uint32_t f4;
    uint32_t f8;
};

void fun_418840(struct s137* a1);

void fun_419f90(struct s135* a1, struct s136* a2) {
    struct s135* esi3;
    uint16_t cx4;
    void* esp5;
    struct s136* edx6;
    uint16_t dx7;
    uint96_t v8;
    int32_t ecx9;
    uint16_t v10;
    uint32_t eax11;
    uint16_t v12;
    int32_t v13;
    int32_t v14;
    int32_t ebx15;
    int32_t edi16;
    int32_t eax17;
    int32_t v18;
    struct s131* ebp19;
    int32_t ecx20;
    int32_t eax21;
    uint32_t eax22;
    uint16_t v23;
    uint16_t ebx24;
    uint16_t di25;

    esi3 = a1;
    cx4 = esi3->fa;
    esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 28 - 4 - 4 - 4 - 4);
    edx6 = a2;
    dx7 = *reinterpret_cast<uint16_t*>(reinterpret_cast<uint32_t>(edx6) + 10);
    *reinterpret_cast<uint16_t*>(&v8) = reinterpret_cast<uint16_t>(0);
    *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v8) + 4) = reinterpret_cast<uint16_t>(0);
    *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v8) + 8) = reinterpret_cast<uint16_t>(0);
    *reinterpret_cast<uint16_t*>(&ecx9) = reinterpret_cast<uint16_t>(cx4 & 0x7fff);
    *reinterpret_cast<uint16_t*>(&edx6) = reinterpret_cast<uint16_t>(dx7 & 0x7fff);
    v10 = reinterpret_cast<uint16_t>(reinterpret_cast<uint16_t>(dx7 ^ cx4) & 0x8000);
    eax11 = ecx9 + reinterpret_cast<uint32_t>(edx6);
    v12 = *reinterpret_cast<uint16_t*>(&eax11);
    if (*reinterpret_cast<uint16_t*>(&ecx9) >= 0x7fff || (*reinterpret_cast<uint16_t*>(&edx6) >= 0x7fff || *reinterpret_cast<uint16_t*>(&eax11) > 0xbffd)) {
        esi3->f4 = reinterpret_cast<uint16_t>(0);
        esi3->f0 = reinterpret_cast<uint16_t>(0);
        esi3->f8 = reinterpret_cast<uint16_t>((eax11 - (eax11 + reinterpret_cast<uint1_t>(eax11 < eax11 + reinterpret_cast<uint1_t>(v10 < 1))) & 0x80000000) - 0x8000);
        return;
    }
    if (*reinterpret_cast<uint16_t*>(&eax11) <= 0x3fbf) {
        esi3->f8 = reinterpret_cast<uint16_t>(0);
        esi3->f4 = reinterpret_cast<uint16_t>(0);
        esi3->f0 = reinterpret_cast<uint16_t>(0);
        return;
    }
    if (!*reinterpret_cast<uint16_t*>(&ecx9) && ((v12 = reinterpret_cast<uint16_t>(v12 + 1), !(esi3->f8 & 0x7fffffff)) && (!esi3->f4 && !esi3->f0))) {
        esi3->fa = 0;
        return;
    }
    if (!*reinterpret_cast<uint16_t*>(&edx6) && ((v12 = reinterpret_cast<uint16_t>(v12 + 1), !(a2->f8 & 0x7fffffff)) && (!a2->f4 && !a2->f0))) {
        esi3->f8 = reinterpret_cast<uint16_t>(0);
        esi3->f4 = reinterpret_cast<uint16_t>(0);
        esi3->f0 = reinterpret_cast<uint16_t>(0);
        return;
    }
    v13 = 0;
    v14 = 0;
    do {
        ebx15 = 8;
        edi16 = v14 + v14;
        eax17 = 5 - v14;
        v18 = eax17;
        if (!(reinterpret_cast<uint1_t>(eax17 < 0) | reinterpret_cast<uint1_t>(eax17 == 0))) {
            ebp19 = reinterpret_cast<struct s131*>(reinterpret_cast<int32_t>(esp5) + v13 + 20);
            do {
                ecx20 = 0;
                *reinterpret_cast<int16_t*>(&ecx20) = *reinterpret_cast<int16_t*>(ebx15 + reinterpret_cast<uint32_t>(a2));
                eax21 = 0;
                *reinterpret_cast<int16_t*>(&eax21) = *reinterpret_cast<int16_t*>(edi16 + reinterpret_cast<int32_t>(esi3));
                eax22 = fun_418760(0, ecx20 * eax21, ebp19);
                esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) - 4 - 4 - 4 - 4 + 4 + 12);
                if (eax22) {
                    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp5) + v13 + 24) = 1;
                }
                edi16 = edi16 + 2;
                ebx15 = ebx15 - 2;
                --v18;
            } while (v18);
        }
        v13 = v13 + 2;
        ++v14;
    } while (v14 < 5);
    v23 = reinterpret_cast<uint16_t>(v12 - 0x3ffe);
    if (reinterpret_cast<int16_t>(v23) > reinterpret_cast<int16_t>(0)) 
        goto addr_41a0f1_17;
    addr_41a11e_18:
    v23 = reinterpret_cast<uint16_t>(v23 - 1);
    if (reinterpret_cast<int16_t>(v23) >= reinterpret_cast<int16_t>(0)) {
        ebx24 = reinterpret_cast<uint16_t>(0);
    } else {
        ebx24 = reinterpret_cast<uint16_t>(0);
        di25 = -v23;
        v23 = reinterpret_cast<uint16_t>(v23 + di25);
        do {
            if (!1) {
                ebx24 = reinterpret_cast<uint16_t>(ebx24 + 1);
            }
            fun_418840(reinterpret_cast<int32_t>(esp5) + 20);
            esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) - 4 - 4 + 4 + 4);
            di25 = reinterpret_cast<uint16_t>(di25 - 1);
        } while (di25);
    }
    if (ebx24) {
        *reinterpret_cast<unsigned char*>(&v8) = 1;
    }
    addr_41a163_27:
    if (*reinterpret_cast<uint16_t*>(&v8) > 0x8000) {
        if (1) {
            *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v8) + 2) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v8) + 2) + 1;
        } else {
            *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v8) + 2) = 0;
            if (1) {
                *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v8) + 6) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v8) + 6) + 1;
            } else {
                *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v8) + 6) = 0;
                if (*reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v8) + 10) != 0xffff) {
                    *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v8) + 10) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v8) + 10) + 1);
                } else {
                    *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v8) + 10) = 0x8000;
                    v23 = reinterpret_cast<uint16_t>(v23 + 1);
                }
            }
        }
    }
    if (v23 < 0x7fff) {
        esi3->f0 = *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v8) + 2);
        esi3->f2 = *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v8) + 4);
        esi3->fa = reinterpret_cast<uint16_t>(v23 | v10);
        esi3->f6 = *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v8) + 8);
        return;
    } else {
        esi3->f4 = reinterpret_cast<uint16_t>(0);
        esi3->f0 = reinterpret_cast<uint16_t>(0);
        esi3->f8 = reinterpret_cast<uint16_t>((0x8000 - (0x8000 + reinterpret_cast<uint1_t>(0x8000 < 0x8000 + reinterpret_cast<uint1_t>(v10 < 1))) & 0x80000000) - 0x8000);
        return;
    }
    addr_41a0f1_17:
    do {
        if (0) 
            break;
        fun_418800(reinterpret_cast<int32_t>(esp5) + 20);
        v23 = reinterpret_cast<uint16_t>(v23 - 1);
        esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) - 4 - 4 + 4 + 4);
    } while (reinterpret_cast<int16_t>(v23) > reinterpret_cast<int16_t>(0));
    if (reinterpret_cast<int16_t>(v23) > reinterpret_cast<int16_t>(0)) 
        goto addr_41a163_27; else 
        goto addr_41a11e_18;
}

void fun_418840(struct s137* a1) {
    uint32_t eax2;
    uint32_t edx3;

    eax2 = a1->f4;
    edx3 = (a1->f8 & 1) << 31;
    a1->f8 = a1->f8 >> 1;
    a1->f4 = eax2 >> 1 | edx3;
    a1->f0 = a1->f0 >> 1 | (eax2 & 1) << 31;
    return;
}

uint32_t fun_41a2c0(void** a1, uint32_t a2) {
    int1_t below_or_equal3;
    unsigned char* ecx4;
    uint32_t ebx5;
    unsigned char dl6;

    below_or_equal3 = reinterpret_cast<unsigned char>(g454680) <= reinterpret_cast<unsigned char>(a1);
    if (below_or_equal3 || (ecx4 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a1) & 0xffffffe7) >> 3) + 0x454580)) + (reinterpret_cast<unsigned char>(a1) & 31) * 8 + 4), (*ecx4 & 1) == 0)) {
        g43aa58 = 9;
        return 0xffffffff;
    } else {
        ebx5 = 0;
        *reinterpret_cast<unsigned char*>(&ebx5) = reinterpret_cast<unsigned char>(*ecx4 & 0x80);
        if (a2 != 0x8000) {
            if (a2 != 0x4000) {
                g43aa58 = 22;
                return 0xffffffff;
            } else {
                dl6 = reinterpret_cast<unsigned char>(*ecx4 | 0x80);
            }
        } else {
            dl6 = reinterpret_cast<unsigned char>(*ecx4 & 0x7f);
        }
        *ecx4 = dl6;
        return (a2 - (a2 + reinterpret_cast<uint1_t>(a2 < a2 + reinterpret_cast<uint1_t>(ebx5 < 1))) & 0x4000) + 0x4000;
    }
}

int32_t fun_419610(uint32_t a1, uint32_t a2) {
    uint16_t ax3;

    if (a2 != 0x7ff00000 || a1) {
        if (a2 != 0xfff00000 || a1) {
            ax3 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&a2) + 2) & 0x7ff8);
            if (ax3 != 0x7ff8) {
                if (ax3 != 0x7ff0 || !(a2 & 0x7ffff) && !a1) {
                    return 0;
                } else {
                    return 4;
                }
            } else {
                return 3;
            }
        } else {
            return 2;
        }
    } else {
        return 1;
    }
}

uint32_t fun_419f30(int32_t a1) {
    int32_t ecx2;
    uint32_t eax3;
    int16_t fpu_status_word4;

    ecx2 = a1;
    if (*reinterpret_cast<unsigned char*>(&ecx2) & 1) {
        __asm__("fld tword [0x43c0c0]");
        __asm__("fistp dword [esp+0x0]");
        __asm__("wait ");
    }
    if (*reinterpret_cast<unsigned char*>(&ecx2) & 8) {
        __asm__("wait ");
        __asm__("fld tword [0x43c0c0]");
        __asm__("fstp qword [esp+0x4]");
        __asm__("wait ");
        __asm__("wait ");
        *reinterpret_cast<int16_t*>(&eax3) = fpu_status_word4;
    }
    if (*reinterpret_cast<unsigned char*>(&ecx2) & 16) {
        __asm__("fld tword [0x43c0d0]");
        __asm__("fstp qword [esp+0x4]");
        __asm__("wait ");
    }
    if (*reinterpret_cast<unsigned char*>(&ecx2) & 4) {
        __asm__("fldz ");
        __asm__("fld1 ");
        __asm__("fdivrp st1, st0");
        __asm__("fstp st0");
        __asm__("wait ");
    }
    if (*reinterpret_cast<unsigned char*>(&ecx2) & 32) {
        __asm__("fldlpi ");
        __asm__("fstp qword [esp+0x4]");
        __asm__("wait ");
    }
    return eax3;
}

int32_t fun_4195d0(uint32_t a1, uint32_t a2, int32_t a3);

void fun_419680(uint32_t a1, uint32_t a2, int32_t* a3) {
    uint16_t si4;
    int32_t esi5;
    int16_t ax6;
    int16_t fpu_status_word7;
    int32_t eax8;

    if (a2 & 0x7fffffff | a1) {
        si4 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&a2) + 2) & 0x7ff0);
        if (si4 || !(a2 & 0xfffff) && !a1) {
            esi5 = reinterpret_cast<int16_t>(si4 >> 4) - 0x3fe;
            fun_4195d0(a1, a2, 0);
            __asm__("fstp qword [esp+0x14]");
        } else {
            __asm__("fldz ");
            __asm__("fcomp qword [esp+0x14]");
            esi5 = 0xfffffc03;
            ax6 = fpu_status_word7;
            eax8 = 1;
            if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax6) + 1) & 65) {
                eax8 = 0;
            }
            if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&a2) + 2) & 16)) {
                do {
                    a2 = a2 << 1;
                    if (a1 & 0x80000000) {
                        a2 = a2 | 1;
                    }
                    --esi5;
                    a1 = a1 << 1;
                } while (!(*reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&a2) + 2) & 16));
            }
            *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&a2) + 2) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&a2) + 2) & 0xffef);
            if (eax8) {
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&a2) + 3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&a2) + 3) | 0x80);
            }
            fun_4195d0(a1, a2, 0);
            __asm__("fstp qword [esp+0x14]");
        }
    } else {
        esi5 = 0;
    }
    __asm__("fld qword [esp+0x8]");
    *a3 = esi5;
    return;
}

int32_t g43bb80 = 1;

int32_t fun_418500(int32_t a1, int32_t a2, signed char* a3, int32_t a4, void* a5, int32_t a6, void** a7);

uint32_t fun_415940(uint32_t a1, uint32_t a2) {
    int1_t zf3;
    void* esp4;
    uint32_t ebx5;
    int1_t less_or_equal6;
    int16_t* ecx7;
    uint32_t eax8;
    uint32_t eax9;
    int32_t edx10;
    int16_t* eax11;
    int32_t eax12;
    int32_t edx13;
    int32_t eax14;
    uint32_t eax15;
    uint32_t ecx16;
    signed char v17;
    signed char v18;
    uint32_t eax19;
    signed char v20;

    zf3 = g43bdd8 == 0;
    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4);
    ebx5 = a1;
    if (!zf3) {
        if (reinterpret_cast<int32_t>(ebx5) < reinterpret_cast<int32_t>(0x100)) {
            less_or_equal6 = g43bb80 <= 1;
            if (less_or_equal6) {
                ecx7 = image_base_;
                eax8 = 0;
                *reinterpret_cast<int16_t*>(&eax8) = ecx7[ebx5];
                eax9 = eax8 & 1;
            } else {
                eax9 = fun_4158a0(ebx5, 1);
                esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) - 4 - 4 - 4 + 4 + 8);
            }
            if (!eax9) {
                return ebx5;
            }
        }
        edx10 = 0;
        *reinterpret_cast<signed char*>(&edx10) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx5) + 1);
        eax11 = image_base_;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax11 + edx10) + 1) & 0x80)) {
            eax12 = 1;
        } else {
            eax12 = 2;
        }
        edx13 = g43bdd8;
        eax14 = fun_418500(edx13, 0x100, reinterpret_cast<int32_t>(esp4) - 4 - 4 - 4 - 4 + 24, eax12, reinterpret_cast<int32_t>(esp4) + 4, 3, 0);
        if (eax14) {
            if (eax14 != 1) {
                eax15 = 0;
                ecx16 = 0;
                *reinterpret_cast<signed char*>(&eax15) = v17;
                *reinterpret_cast<signed char*>(&ecx16) = v18;
                return eax15 << 8 | ecx16;
            } else {
                eax19 = 0;
                *reinterpret_cast<signed char*>(&eax19) = v20;
                return eax19;
            }
        } else {
            return ebx5;
        }
    } else {
        if (reinterpret_cast<int32_t>(ebx5) >= reinterpret_cast<int32_t>(65) && reinterpret_cast<int32_t>(ebx5) <= reinterpret_cast<int32_t>(90)) {
            ebx5 = ebx5 + 32;
        }
        return ebx5;
    }
}

int32_t fun_404500(void* a1) {
    void** eax2;

    eax2 = fun_4114b0(a1, "r");
    if (eax2) {
        fun_4112a0(eax2);
        return 1;
    } else {
        return 0x7ef;
    }
}

void** fun_404490(void** a1);

void** fun_4044d0(void* a1) {
    void** eax2;
    void** eax3;

    eax2 = fun_4114b0(a1, "r");
    eax3 = fun_404490(eax2);
    fun_4112a0(eax2);
    return eax3;
}

int32_t fun_403bf0();

int32_t fun_4012a0() {
    int1_t zf1;
    struct s6* eax2;
    struct s6* ebx3;
    void* eax4;
    void** ecx5;
    void* eax6;
    int1_t less_or_equal7;
    int32_t eax8;
    int32_t eax9;
    int32_t eax10;
    void** ecx11;
    int16_t* edx12;
    void* eax13;
    void** tmp32_14;
    uint32_t v15;
    void** ecx16;
    struct s7* v17;
    struct s7* edx18;
    uint32_t ecx19;
    uint32_t v20;
    void** ecx21;
    struct s6* eax22;

    zf1 = g41c030 == 1;
    if (zf1 && (eax2 = fun_403910(), ebx3 = eax2, !!ebx3)) {
        do {
            eax4 = g43c3fc;
            ecx5 = g43c3cc;
            eax6 = fun_401080(ecx5, ecx5, eax4);
            less_or_equal7 = reinterpret_cast<int32_t>(g43c3fc) <= reinterpret_cast<int32_t>(eax6);
            if (!less_or_equal7) {
                ++g41c520;
                eax8 = g41c520;
                if (*reinterpret_cast<int32_t*>(eax8 * 4 + 0x41c200) == -1) {
                    g41c520 = 9;
                }
                eax9 = g41c520;
                eax10 = *reinterpret_cast<int32_t*>(eax9 * 4 + 0x41c200) << 2;
                ecx11 = *reinterpret_cast<void***>(eax10 + 0x43c3a0);
                edx12 = *reinterpret_cast<int16_t**>(eax10 + 0x43c3d8);
                fun_401000(edx12, ecx11);
                eax13 = g43c3fc;
                tmp32_14 = g43c3cc + reinterpret_cast<uint32_t>(eax6) * 2;
                fun_401080(ecx11, tmp32_14, reinterpret_cast<uint32_t>(eax13) - reinterpret_cast<uint32_t>(eax6));
            }
            v15 = ebx3->f8;
            ecx16 = g43c3cc;
            v17 = ebx3->f0;
            fun_4013c0(v17, ecx16, v15, 0);
            edx18 = ebx3->f4;
            if (edx18 && (ecx19 = ebx3->fc, !!ecx19)) {
                v20 = ebx3->f8;
                ecx21 = g43c3cc;
                fun_4013c0(edx18, ecx21, ecx19, v20);
            }
            fun_403bf0();
            eax22 = fun_403910();
            ebx3 = eax22;
        } while (ebx3);
    }
    return 1;
}

int32_t fun_403bf0() {
    int1_t zf1;
    int1_t zf2;
    struct s2** ecx3;
    struct s2** v4;
    struct s2* eax5;
    void* eax6;
    void* eax7;
    void* tmp32_8;
    void* ecx9;
    int1_t less_or_equal10;
    void* eax11;
    int1_t less_or_equal12;
    struct s3** ecx13;
    struct s3** v14;
    struct s3* eax15;
    void* eax16;
    void* eax17;
    void* tmp32_18;
    void* ecx19;
    int1_t less_or_equal20;
    void* eax21;
    int1_t less_or_equal22;

    zf1 = reinterpret_cast<int1_t>(g41c848 == 1);
    if (zf1) {
        zf2 = g43c7d8 == 1;
        if (!zf2) {
            ecx3 = g4530a0;
            v4 = ecx3;
            eax5 = *ecx3;
            eax5->f4c();
            eax6 = g45308c;
            eax7 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax6) * g43c7f0);
            tmp32_8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43c7e0) + reinterpret_cast<uint32_t>(eax7));
            g43c7e0 = tmp32_8;
            ecx9 = g43c7e0;
            less_or_equal10 = reinterpret_cast<int32_t>(g43c7f4) <= reinterpret_cast<int32_t>(ecx9);
            if (less_or_equal10) {
                do {
                    eax11 = g43c7f4;
                    g43c7e0 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43c7e0) - reinterpret_cast<uint32_t>(eax11));
                    less_or_equal12 = reinterpret_cast<int32_t>(eax11) <= reinterpret_cast<int32_t>(g43c7e0);
                } while (less_or_equal12);
            }
            goto v4;
        } else {
            ecx13 = g4530c0;
            v14 = ecx13;
            eax15 = *ecx13;
            eax15->f4c();
            eax16 = g45308c;
            eax17 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax16) * g43c7f0);
            tmp32_18 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43c7e0) + reinterpret_cast<uint32_t>(eax17));
            g43c7e0 = tmp32_18;
            ecx19 = g43c7e0;
            less_or_equal20 = reinterpret_cast<int32_t>(g43c7f4) <= reinterpret_cast<int32_t>(ecx19);
            if (less_or_equal20) {
                do {
                    eax21 = g43c7f4;
                    g43c7e0 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43c7e0) - reinterpret_cast<uint32_t>(eax21));
                    less_or_equal22 = reinterpret_cast<int32_t>(eax21) <= reinterpret_cast<int32_t>(g43c7e0);
                } while (less_or_equal22);
            }
            goto v14;
        }
    } else {
        return 0;
    }
}

int32_t fun_403cb0() {
    int1_t zf1;
    int1_t zf2;
    int1_t zf3;
    struct s2** eax4;
    struct s2* eax5;
    int1_t zf6;
    struct s3** eax7;
    struct s3* esi8;
    struct s2** eax9;
    struct s2* esi10;

    zf1 = reinterpret_cast<int1_t>(g41c848 == 1);
    if (zf1) {
        g41c848 = reinterpret_cast<struct s2**>(0);
        zf2 = g453070 == 0;
        if (!zf2) {
            zf3 = g4530a0 == 0;
            if (!zf3) {
                eax4 = g4530a0;
                eax5 = *eax4;
                eax5->f8(eax4);
                g4530a0 = reinterpret_cast<struct s2**>(0);
            }
            zf6 = g4530c0 == 0;
            if (!zf6) {
                eax7 = g4530c0;
                esi8 = *eax7;
                esi8->f8(eax7);
                g4530c0 = reinterpret_cast<struct s3**>(0);
            }
            eax9 = g453070;
            esi10 = *eax9;
            esi10->f8(eax9);
            g453070 = reinterpret_cast<struct s2**>(0);
        }
        return 0;
    } else {
        return 0;
    }
}

void** g43c40c;

void fun_401c00(void** a1) {
    void** eax2;
    int1_t less3;

    eax2 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)));
    less3 = reinterpret_cast<signed char>(g43c40c) < reinterpret_cast<signed char>(eax2);
    if (less3) {
        g43c40c = eax2;
    }
    return;
}

void** g43c460;

void fun_401be0(void** a1) {
    void*** eax2;
    void** eax3;
    int1_t less_or_equal4;

    eax2 = reinterpret_cast<void***>(*reinterpret_cast<void***>(a1 + 4) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) * 2);
    eax3 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax2) + reinterpret_cast<uint32_t>(eax2));
    less_or_equal4 = reinterpret_cast<signed char>(eax3) <= reinterpret_cast<signed char>(g43c460);
    if (!less_or_equal4) {
        g43c460 = eax3;
    }
    return;
}

void* g452a10;

void** g43c410;

struct s138 {
    signed char[2] pad2;
    void** f2;
};

int32_t fun_401d20(void** a1, int32_t* a2, int32_t* a3) {
    void*** esi4;
    void* ecx5;
    uint32_t eax6;
    uint32_t edx7;
    uint32_t edi8;
    void** eax9;
    void* ebx10;
    int32_t* ecx11;
    int32_t* edx12;
    void** ebp13;
    void* esi14;
    void** ebp15;
    void* esi16;
    struct s138* esi17;
    int32_t eax18;
    void** ebp19;
    int32_t eax20;
    void** ebp21;
    int32_t eax22;
    void** ebp23;
    int32_t eax24;
    void** ebp25;
    int32_t eax26;
    void** ebp27;
    int32_t eax28;
    void** ebp29;

    esi4 = reinterpret_cast<void***>(a1 + 8);
    __asm__("cdq ");
    ecx5 = g452a10;
    eax6 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) + (edx7 & 15)) >> 4);
    edi8 = eax6;
    eax9 = fun_403630(ecx5, eax6 << 5);
    g43c410 = eax9;
    if (eax9) {
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edi8) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(edi8 == 0))) {
            ebx10 = reinterpret_cast<void*>(0);
            ecx11 = a2;
            edx12 = a3;
            do {
                ebp13 = g43c410;
                esi14 = reinterpret_cast<void*>(esi4 + 2 + 2);
                ebx10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx10) + 32);
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebp13) + reinterpret_cast<uint32_t>(ebx10) - 32) = static_cast<int32_t>(*reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esi14) + 0xfffffffc)) << 8;
                ebp15 = g43c410;
                esi16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi14) + 2 + 2 + 2);
                esi17 = reinterpret_cast<struct s138*>(reinterpret_cast<uint32_t>(esi16) + 2 + 2);
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebp15) + reinterpret_cast<uint32_t>(ebx10) - 28) = static_cast<int32_t>(*reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esi16) + 0xfffffff8)) << 8;
                eax18 = 0;
                ebp19 = g43c410;
                *reinterpret_cast<int16_t*>(&eax18) = *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esi17) + 0xfffffff6);
                esi4 = &esi17->f2;
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebp19) + reinterpret_cast<uint32_t>(ebx10) - 24) = eax18 << 8;
                eax20 = 0;
                *reinterpret_cast<int16_t*>(&eax20) = *reinterpret_cast<int16_t*>(esi4 + 0xfffffff6);
                ebp21 = g43c410;
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebp21) + reinterpret_cast<uint32_t>(ebx10) - 20) = eax20 << 8;
                eax22 = 0;
                *reinterpret_cast<int16_t*>(&eax22) = *reinterpret_cast<int16_t*>(esi4 + 0xfffffff8);
                ebp23 = g43c410;
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebp23) + reinterpret_cast<uint32_t>(ebx10) - 16) = eax22 << 8;
                eax24 = 0;
                *reinterpret_cast<int16_t*>(&eax24) = *reinterpret_cast<int16_t*>(esi4 + 0xfffffffa);
                ebp25 = g43c410;
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebp25) + reinterpret_cast<uint32_t>(ebx10) - 12) = eax24 << 8;
                eax26 = 0;
                *reinterpret_cast<int16_t*>(&eax26) = *reinterpret_cast<int16_t*>(esi4 + 0xfffffffc);
                ebp27 = g43c410;
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebp27) + reinterpret_cast<uint32_t>(ebx10) - 8) = ecx11[eax26];
                eax28 = 0;
                *reinterpret_cast<int16_t*>(&eax28) = *reinterpret_cast<int16_t*>(esi4 + 0xfffffffe);
                ebp29 = g43c410;
                --edi8;
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebp29) + reinterpret_cast<uint32_t>(ebx10) - 4) = edx12[eax28];
            } while (edi8);
        }
        return 0;
    } else {
        return -1;
    }
}

void** g43c408;

void fun_401b60(void** a1) {
    void** esi2;
    void* edi3;
    void*** edx4;
    void*** v5;
    int32_t eax6;
    int32_t v7;
    void** ebx8;
    void** ebx9;
    void** ebx10;
    void* eax11;

    esi2 = a1;
    if (*reinterpret_cast<void***>(esi2) != 0x7878696c) {
        edi3 = reinterpret_cast<void*>(0);
        edx4 = v5;
        eax6 = v7;
        do {
            if (*reinterpret_cast<void***>(esi2) == 0x3030696c) {
                ebx8 = g43c408;
                *reinterpret_cast<void****>(reinterpret_cast<unsigned char>(ebx8) + reinterpret_cast<uint32_t>(edi3)) = reinterpret_cast<void***>(esi2 + 8);
                edi3 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi3) + 12);
                ebx9 = g43c408;
                *reinterpret_cast<void****>(reinterpret_cast<unsigned char>(ebx9) + reinterpret_cast<uint32_t>(edi3) - 8) = edx4;
                ebx10 = g43c408;
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx10) + reinterpret_cast<uint32_t>(edi3) - 4) = eax6;
            } else {
                if (*reinterpret_cast<void***>(esi2) == 0x3130696c) {
                    __asm__("cdq ");
                    eax11 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2 + 4)) + (reinterpret_cast<uint32_t>(edx4) & 3));
                    edx4 = reinterpret_cast<void***>(esi2 + 8);
                    eax6 = reinterpret_cast<int32_t>(eax11) >> 2;
                }
            }
            esi2 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi2) + reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(esi2 + 4) + 8));
        } while (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi2) == 0x7878696c));
    }
    return;
}

void** fun_4037d0(void* a1, void** a2) {
    void** eax3;
    void** v4;
    void** edi5;
    uint32_t ecx6;
    uint32_t ecx7;

    eax3 = fun_403630(a1, a2);
    v4 = eax3;
    if (eax3) {
        edi5 = v4;
        ecx6 = reinterpret_cast<unsigned char>(a2) >> 2;
        while (ecx6) {
            --ecx6;
            *reinterpret_cast<void***>(edi5) = reinterpret_cast<void**>(0);
            edi5 = edi5 + 4;
        }
        ecx7 = reinterpret_cast<unsigned char>(a2) & 3;
        while (ecx7) {
            --ecx7;
            *reinterpret_cast<void***>(edi5) = reinterpret_cast<void**>(0);
            ++edi5;
        }
    }
    return v4;
}

void** g43c414;

void** g43c464;

void** g43c418;

int32_t fun_401c20(void** a1, int32_t* a2);

int32_t fun_4019d0(void** a1, int32_t* a2, uint32_t* a3) {
    int32_t esi4;
    void* eax5;
    uint32_t* ecx6;
    uint32_t* eax7;
    uint32_t edx8;
    void** edi9;
    void** ebp10;
    void** eax11;
    void* eax12;
    void** eax13;
    void** eax14;
    void* ecx15;
    void** eax16;
    void** eax17;
    void* ecx18;
    void** eax19;
    void* ecx20;
    void** eax21;
    int32_t* ebx22;

    esi4 = 0;
    eax5 = fun_4035a0("Script Player");
    g452a10 = eax5;
    if (reinterpret_cast<int1_t>(eax5 == 0xffffffff)) {
        return -1;
    }
    ecx6 = a3;
    if (*ecx6) {
        eax7 = reinterpret_cast<uint32_t*>(0x43c420);
        do {
            if (reinterpret_cast<uint32_t>(eax7) >= 0x43c460) 
                break;
            edx8 = *ecx6;
            ++ecx6;
            *eax7 = edx8;
            ++eax7;
        } while (*ecx6);
    }
    edi9 = a1;
    ebp10 = edi9;
    if (*reinterpret_cast<void***>(edi9) != 0x7878696c) 
        goto addr_401a29_8;
    addr_401aa5_9:
    eax11 = g43c460;
    __asm__("cdq ");
    eax12 = g452a10;
    eax13 = fun_403630(eax12, reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax11) + (edx8 & 3)) >> 2);
    g43c414 = eax13;
    if (eax13) {
        eax14 = g43c460;
        ecx15 = g452a10;
        eax16 = fun_403630(ecx15, eax14);
        g43c464 = eax16;
        if (eax16) {
            eax17 = g43c40c;
            ecx18 = g452a10;
            eax19 = fun_403630(ecx18, eax17);
            g43c418 = eax19;
            if (eax19) {
                ecx20 = g452a10;
                eax21 = fun_403630(ecx20, esi4 + esi4 * 2 << 2);
                g43c408 = eax21;
                if (eax21) {
                    fun_401b60(edi9);
                    return esi4;
                } else {
                    return -1;
                }
            } else {
                return -1;
            }
        } else {
            return -1;
        }
    } else {
        return -1;
    }
    addr_401a29_8:
    ebx22 = a2;
    do {
        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebp10)) > reinterpret_cast<signed char>(0x3130696c)) {
            if (*reinterpret_cast<void***>(ebp10) == 0x3230696c) {
                fun_401c20(ebp10, ebx22);
            } else {
                if (*reinterpret_cast<void***>(ebp10) != 0x3330696c) 
                    break;
                fun_401d20(ebp10, ebx22, 0x43c420);
            }
        } else {
            if (*reinterpret_cast<void***>(ebp10) == 0x3130696c) {
                fun_401c00(ebp10);
            } else {
                if (*reinterpret_cast<void***>(ebp10) != 0x3030696c) 
                    goto addr_401a40_26;
                ++esi4;
                fun_401be0(ebp10);
            }
        }
        ebp10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp10) + reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ebp10 + 4) + 8));
    } while (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebp10) == 0x7878696c));
    goto addr_401aa5_9;
    return -1;
    addr_401a40_26:
    return -1;
}

int32_t g43aaa0 = 0;

int32_t GetCurrentProcess = 0x55566;

int32_t TerminateProcess = 0x55552;

int32_t g43aa9c = 0;

signed char g43aa98 = 0;

int32_t* g45468c;

void* g454688;

int32_t ExitProcess = 0x55544;

void fun_410f00(int32_t a1, int32_t a2, int32_t a3) {
    int1_t zf4;
    int32_t esi5;
    int32_t eax6;
    int32_t ebx7;
    int1_t zf8;
    void* edi9;
    int32_t* edi10;
    int1_t cf11;
    int32_t eax12;
    int1_t cf13;

    zf4 = g43aaa0 == 1;
    esi5 = a1;
    if (zf4) {
        eax6 = reinterpret_cast<int32_t>(GetCurrentProcess(esi5));
        TerminateProcess(eax6, esi5);
    }
    g43aa9c = 1;
    ebx7 = a3;
    g43aa98 = *reinterpret_cast<signed char*>(&ebx7);
    if (!a2) {
        zf8 = g45468c == 0;
        if (!zf8 && (edi9 = g454688, edi10 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi9) - 4), cf11 = reinterpret_cast<uint32_t>(edi10) < reinterpret_cast<uint32_t>(g45468c), !cf11)) {
            do {
                eax12 = *edi10;
                if (eax12) {
                    eax12();
                }
                --edi10;
                cf13 = reinterpret_cast<uint32_t>(edi10) < reinterpret_cast<uint32_t>(g45468c);
            } while (!cf13);
        }
        fun_410fb0(0x41c014, 0x41c01c);
    }
    fun_410fb0(0x41c020, 0x41c024);
    if (!ebx7) {
        g43aaa0 = 1;
        ExitProcess(esi5);
    }
    return;
}

void** fun_411480(void* a1, struct s0* a2, int32_t a3);

void** fun_4114b0(void* a1, struct s0* a2) {
    void** eax3;

    eax3 = fun_411480(a1, a2, 64);
    return eax3;
}

struct s140 {
    signed char[2] pad2;
    int16_t f2;
};

struct s139 {
    void** f0;
    signed char[3] pad4;
    struct s140* f4;
    int32_t f8;
};

struct s141 {
    int16_t f0;
    signed char[4203474] pad4203476;
    signed char f4023d4;
};

void fun_4023d4();

struct s142 {
    signed char[1] pad1;
    void** f1;
    void** f2;
};

struct s143 {
    signed char[4] pad4;
    void** f4;
};

struct s144 {
    signed char[4] pad4;
    void** f4;
};

void** g43c41c;

void** fun_401e30(void* a1, int32_t a2) {
    void** esi3;
    struct s139* tmp32_4;
    void** eax5;
    struct s140* edx6;
    int32_t edi7;
    int16_t* edx8;
    void** esi9;
    void* ecx10;
    void* ecx11;
    int32_t ecx12;
    void** esi13;
    void** edi14;
    void** eax15;
    void** ecx16;
    uint32_t edx17;
    struct s141* ebp18;
    int32_t ebx19;
    uint32_t ebp20;
    struct s142* eax21;
    void** tmp32_22;
    void** ebx23;
    void* ebp24;
    void* ebp25;
    void* ebp26;
    void** ebp27;
    int32_t ebx28;
    void** ebp29;
    uint32_t ebp30;
    struct s142* eax31;
    void** tmp32_32;
    void** ebx33;
    uint32_t ebx34;
    void** ebp35;
    int32_t ebx36;
    void** ebp37;
    void** ebp38;
    int32_t ebx39;
    struct s143* edi40;
    void** ebp41;
    void** ebp42;
    int32_t ebx43;
    void** ebp44;
    void*** ebx45;
    void** ebp46;
    int32_t ebx47;
    struct s144* edi48;
    void** ebp49;
    void** ebp50;
    int32_t ebx51;
    void** ebp52;
    void** ebp53;
    int32_t ebx54;
    void** ebp55;
    void*** ebx56;
    void** ebp57;
    int32_t ebx58;
    void** edi59;
    void** ebp60;
    void** ebp61;
    int32_t ebx62;
    void** ebp63;
    void** ebp64;
    int32_t ebx65;
    void** ebp66;
    int32_t ebx67;
    void* ebx68;
    void** ebp69;
    void** ebp70;
    void** ebp71;
    int32_t ebx72;
    void** edi73;
    void** ebp74;
    void** ebp75;
    int32_t ebx76;
    void** ebp77;
    void** ebp78;
    int32_t ebx79;
    void** ebp80;
    int32_t ebx81;
    void* ebx82;
    void** ebp83;
    void** ebp84;
    int32_t ebx85;
    void** ebp86;
    int32_t ebx87;
    void** edi88;
    void** ebp89;
    void** ebp90;
    int32_t ebx91;
    void** ebp92;
    void** ebp93;
    int32_t ebx94;
    void** ebp95;
    void*** ebx96;
    int32_t ebx97;

    esi3 = g43c418;
    tmp32_4 = reinterpret_cast<struct s139*>((reinterpret_cast<uint32_t>(a1) + reinterpret_cast<uint32_t>(a1) * 2 << 2) + reinterpret_cast<unsigned char>(g43c408));
    eax5 = tmp32_4->f0;
    edx6 = tmp32_4->f4;
    edi7 = tmp32_4->f8;
    if (a2) {
        if (a2 == 1 && !(reinterpret_cast<uint1_t>(edi7 < 0) | reinterpret_cast<uint1_t>(edi7 == 0))) {
            do {
                edx8 = &edx6->f2;
                esi9 = esi3 + 4;
                *reinterpret_cast<void***>(esi9 + 0xfffffffc) = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(static_cast<int32_t>(*(edx8 - 1))) << 5);
                ecx10 = reinterpret_cast<void*>(static_cast<int32_t>(*edx8));
                edx6 = reinterpret_cast<struct s140*>(edx8 + 1);
                esi3 = esi9 + 4;
                ecx11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx10) + (reinterpret_cast<int32_t>(ecx10) + reinterpret_cast<int32_t>(ecx10) * 8) * 2);
                --edi7;
                *reinterpret_cast<void***>(esi3 + 0xfffffffc) = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx11) + reinterpret_cast<uint32_t>(ecx11));
            } while (edi7);
        }
    } else {
        ecx12 = edi7 * 2;
        if (!(reinterpret_cast<uint1_t>(ecx12 < 0) | reinterpret_cast<uint1_t>(ecx12 == 0))) {
            do {
                edx6 = reinterpret_cast<struct s140*>(&edx6->f2);
                esi3 = esi3 + 4;
                --ecx12;
                *reinterpret_cast<void***>(esi3 + 0xfffffffc) = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(edx6) - 2))) << 4);
            } while (ecx12);
        }
    }
    esi13 = g43c414;
    edi14 = g43c464;
    if (*reinterpret_cast<void***>(eax5) == 0xff) {
        addr_40239d_8:
        *reinterpret_cast<void***>(esi13) = reinterpret_cast<void**>(0);
        eax15 = g43c414;
        return eax15;
    } else {
        do {
            ecx16 = reinterpret_cast<void**>(0);
            edx17 = 0;
            eax5 = eax5 + 1 + 1;
            *reinterpret_cast<signed char*>(&ecx16) = *reinterpret_cast<signed char*>(eax5 + 0xfffffffe);
            *reinterpret_cast<void***>(&edx17) = *reinterpret_cast<void***>(eax5 + 0xffffffff);
            ebp18 = reinterpret_cast<struct s141*>(ecx16 + 0xfffffff9);
            if (reinterpret_cast<uint32_t>(ebp18) > 12) 
                break;
            ebx19 = 0;
            *reinterpret_cast<signed char*>(&ebx19) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebp18) + reinterpret_cast<int32_t>(fun_4023d4));
            switch (ebx19) {
            case 0:
                if (a2) {
                    if (a2 == 1 && !(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edx17) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(edx17 == 0))) {
                        do {
                            *reinterpret_cast<void***>(esi13) = edi14;
                            esi13 = esi13 + 4;
                            *reinterpret_cast<void***>(edi14) = ecx16;
                            ebp20 = 0;
                            eax21 = reinterpret_cast<struct s142*>(reinterpret_cast<uint32_t>(eax5 + 2) + 2 + 2);
                            edi14 = edi14 + 36;
                            eax5 = reinterpret_cast<void**>(&eax21->f2);
                            tmp32_22 = reinterpret_cast<void**>((static_cast<int32_t>(*reinterpret_cast<int16_t*>(&(eax21 + 0xfffffffe)->pad1)) << 5) + reinterpret_cast<unsigned char>(g43c410));
                            *reinterpret_cast<void***>(edi14 + 0xffffffe0) = tmp32_22;
                            ebx23 = edi14 + 0xfffffff0;
                            *reinterpret_cast<void***>(edi14 + 0xffffffe4) = ebx23;
                            *reinterpret_cast<int16_t*>(&ebp20) = *reinterpret_cast<int16_t*>(eax5 + 0xfffffffa);
                            *reinterpret_cast<void***>(ebx23) = reinterpret_cast<void**>(ebp20 << 9);
                            ebp24 = reinterpret_cast<void*>(0);
                            *reinterpret_cast<void****>(edi14 + 0xfffffff4) = reinterpret_cast<void***>(0);
                            *reinterpret_cast<void****>(edi14 + 0xfffffff8) = reinterpret_cast<void***>(0);
                            *reinterpret_cast<void***>(&ebp24) = *reinterpret_cast<void***>(eax5 + 0xfffffffc);
                            ebp25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp24) + (reinterpret_cast<uint32_t>(ebp24) + reinterpret_cast<uint32_t>(ebp24) * 4) * 8);
                            ebp26 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp25) + reinterpret_cast<uint32_t>(ebp25) * 2);
                            --edx17;
                            *reinterpret_cast<void***>(edi14 + 0xfffffffc) = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp26) + reinterpret_cast<uint32_t>(ebp26) * 4 - reinterpret_cast<uint32_t>(ebp24));
                            ebp27 = g43c418;
                            ebx28 = *reinterpret_cast<signed char*>(eax5 + 0xfffffffe);
                            *reinterpret_cast<void***>(edi14 + 0xffffffe8) = *reinterpret_cast<void***>(ebp27 + ebx28 * 8);
                            ebp29 = g43c418;
                            *reinterpret_cast<void***>(edi14 + 0xffffffec) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp29 + ebx28 * 8) + 4);
                        } while (edx17);
                        break;
                    }
                } else {
                    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edx17) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(edx17 == 0))) {
                        do {
                            *reinterpret_cast<void***>(esi13) = edi14;
                            esi13 = esi13 + 4;
                            *reinterpret_cast<void***>(edi14) = ecx16;
                            ebp30 = 0;
                            eax31 = reinterpret_cast<struct s142*>(reinterpret_cast<uint32_t>(eax5 + 2) + 2 + 2);
                            edi14 = edi14 + 36;
                            eax5 = reinterpret_cast<void**>(&eax31->f2);
                            tmp32_32 = reinterpret_cast<void**>((static_cast<int32_t>(*reinterpret_cast<int16_t*>(&(eax31 + 0xfffffffe)->pad1)) << 5) + reinterpret_cast<unsigned char>(g43c410));
                            *reinterpret_cast<void***>(edi14 + 0xffffffe0) = tmp32_32;
                            ebx33 = edi14 + 0xfffffff0;
                            *reinterpret_cast<void***>(edi14 + 0xffffffe4) = ebx33;
                            *reinterpret_cast<int16_t*>(&ebp30) = *reinterpret_cast<int16_t*>(eax5 + 0xfffffffa);
                            *reinterpret_cast<void***>(ebx33) = reinterpret_cast<void**>(ebp30 << 8);
                            ebx34 = 0;
                            *reinterpret_cast<void****>(edi14 + 0xfffffff4) = reinterpret_cast<void***>(0);
                            *reinterpret_cast<void****>(edi14 + 0xfffffff8) = reinterpret_cast<void***>(0);
                            *reinterpret_cast<void***>(&ebx34) = *reinterpret_cast<void***>(eax5 + 0xfffffffc);
                            --edx17;
                            *reinterpret_cast<void***>(edi14 + 0xfffffffc) = reinterpret_cast<void**>(ebx34 << 8);
                            ebp35 = g43c418;
                            ebx36 = *reinterpret_cast<signed char*>(eax5 + 0xfffffffe);
                            *reinterpret_cast<void***>(edi14 + 0xffffffe8) = *reinterpret_cast<void***>(ebp35 + ebx36 * 8);
                            ebp37 = g43c418;
                            *reinterpret_cast<void***>(edi14 + 0xffffffec) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp37 + ebx36 * 8) + 4);
                        } while (edx17);
                        break;
                    }
                }
            case 1:
                if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edx17) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(edx17 == 0))) {
                    do {
                        *reinterpret_cast<void***>(esi13) = edi14;
                        esi13 = esi13 + 4;
                        *reinterpret_cast<void***>(edi14) = ecx16;
                        ebp38 = g43c418;
                        eax5 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax5 + 2) + 2 + 1);
                        ebx39 = *reinterpret_cast<int16_t*>(eax5 + 0xfffffffb);
                        edi40 = reinterpret_cast<struct s143*>(reinterpret_cast<uint32_t>(edi14 + 4 + 4 + 8) + 4 + 8 + 4);
                        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edi40) + 0xffffffe4) = *reinterpret_cast<void***>(ebp38 + ebx39 * 8);
                        edi14 = reinterpret_cast<void**>(&edi40->f4);
                        ebp41 = g43c418;
                        *reinterpret_cast<void***>(edi14 + 0xffffffe4) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp41 + ebx39 * 8) + 4);
                        ebp42 = g43c418;
                        ebx43 = *reinterpret_cast<signed char*>(eax5 + 0xfffffffd);
                        *reinterpret_cast<void***>(edi14 + 0xffffffec) = *reinterpret_cast<void***>(ebp42 + ebx43 * 8);
                        ebp44 = g43c418;
                        *reinterpret_cast<void***>(edi14 + 0xfffffff0) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp44 + ebx43 * 8) + 4);
                        ebx45 = reinterpret_cast<void***>(0);
                        *reinterpret_cast<void***>(&ebx45) = *reinterpret_cast<void***>(eax5 + 0xffffffff);
                        --edx17;
                        *reinterpret_cast<void****>(edi14 + 0xfffffff8) = ebx45;
                        *reinterpret_cast<void***>(edi14 + 0xfffffffc) = reinterpret_cast<void**>(0);
                    } while (edx17);
                    break;
                }
            case 2:
                if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edx17) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(edx17 == 0))) {
                    eax5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax5) - edx17 + edx17 * 8);
                    break;
                }
            case 3:
                if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edx17) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(edx17 == 0))) {
                    do {
                        *reinterpret_cast<void***>(esi13) = edi14;
                        esi13 = esi13 + 4;
                        *reinterpret_cast<void***>(edi14) = ecx16;
                        ebp46 = g43c418;
                        eax5 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax5 + 2) + 2 + 2 + 1);
                        ebx47 = *reinterpret_cast<int16_t*>(eax5 + 0xfffffff9);
                        edi48 = reinterpret_cast<struct s144*>(reinterpret_cast<uint32_t>(edi14 + 4 + 4 + 8) + 4 + 8 + 4 + 8 + 4);
                        *reinterpret_cast<void***>(&(edi48 + 0xfffffff8)->pad4) = *reinterpret_cast<void***>(ebp46 + ebx47 * 8);
                        edi14 = reinterpret_cast<void**>(&edi48->f4);
                        ebp49 = g43c418;
                        *reinterpret_cast<int32_t*>(edi14 + 0xffffffd8) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebp49 + ebx47 * 8) + 4);
                        ebp50 = g43c418;
                        ebx51 = *reinterpret_cast<int16_t*>(eax5 + 0xfffffffb);
                        *reinterpret_cast<void***>(edi14 + 0xffffffe0) = *reinterpret_cast<void***>(ebp50 + ebx51 * 8);
                        ebp52 = g43c418;
                        *reinterpret_cast<void***>(edi14 + 0xffffffe4) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp52 + ebx51 * 8) + 4);
                        ebp53 = g43c418;
                        ebx54 = *reinterpret_cast<signed char*>(eax5 + 0xfffffffd);
                        *reinterpret_cast<void***>(edi14 + 0xffffffec) = *reinterpret_cast<void***>(ebp53 + ebx54 * 8);
                        ebp55 = g43c418;
                        *reinterpret_cast<void***>(edi14 + 0xfffffff0) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp55 + ebx54 * 8) + 4);
                        ebx56 = reinterpret_cast<void***>(0);
                        *reinterpret_cast<void***>(&ebx56) = *reinterpret_cast<void***>(eax5 + 0xffffffff);
                        --edx17;
                        *reinterpret_cast<void****>(edi14 + 0xfffffff8) = ebx56;
                        *reinterpret_cast<void***>(edi14 + 0xfffffffc) = reinterpret_cast<void**>(0);
                    } while (edx17);
                    break;
                }
            case 4:
                if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edx17) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(edx17 == 0))) {
                    do {
                        *reinterpret_cast<void***>(esi13) = edi14;
                        esi13 = esi13 + 4;
                        *reinterpret_cast<void***>(edi14) = ecx16;
                        ebp57 = g43c418;
                        eax5 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax5 + 2) + 2 + 2 + 2);
                        ebx58 = reinterpret_cast<int16_t>(*reinterpret_cast<void****>(eax5 + 0xfffffff8));
                        edi59 = edi14 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 4;
                        *reinterpret_cast<void***>(edi59 + 0xffffffe4) = *reinterpret_cast<void***>(ebp57 + ebx58 * 8);
                        edi14 = edi59 + 4;
                        ebp60 = g43c418;
                        *reinterpret_cast<void***>(edi14 + 0xffffffe4) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp60 + ebx58 * 8) + 4);
                        ebp61 = g43c418;
                        ebx62 = *reinterpret_cast<int16_t*>(eax5 + 0xfffffffa);
                        *reinterpret_cast<void***>(edi14 + 0xffffffe8) = *reinterpret_cast<void***>(ebp61 + ebx62 * 8);
                        ebp63 = g43c418;
                        *reinterpret_cast<void***>(edi14 + 0xffffffec) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp63 + ebx62 * 8) + 4);
                        ebp64 = g43c418;
                        ebx65 = reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax5 + 0xfffffffc));
                        *reinterpret_cast<void***>(edi14 + 0xfffffff0) = *reinterpret_cast<void***>(ebp64 + ebx65 * 8);
                        ebp66 = g43c418;
                        *reinterpret_cast<void****>(edi14 + 0xfffffff4) = *reinterpret_cast<void****>(reinterpret_cast<uint32_t>(ebp66 + ebx65 * 8) + 4);
                        ebx67 = *reinterpret_cast<signed char*>(eax5 + 0xfffffffe);
                        ebx68 = reinterpret_cast<void*>((ebx67 * 8 - ebx67) * 4);
                        ebp69 = g43c41c;
                        --edx17;
                        *reinterpret_cast<void****>(edi14 + 0xfffffff8) = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(ebp69) + reinterpret_cast<uint32_t>(ebx68));
                        ebp70 = g43c41c;
                        *reinterpret_cast<void***>(edi14 + 0xfffffffc) = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(ebp70) + reinterpret_cast<uint32_t>(ebx68) + 24);
                    } while (edx17);
                    break;
                }
            case 5:
                if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edx17) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(edx17 == 0))) {
                    do {
                        *reinterpret_cast<void***>(esi13) = edi14;
                        esi13 = esi13 + 4;
                        *reinterpret_cast<void***>(edi14) = ecx16;
                        ebp71 = g43c418;
                        eax5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax5 + 2) + 2 + 2 + 2) + 1);
                        ebx72 = *reinterpret_cast<int16_t*>(eax5 + 0xfffffff7);
                        edi73 = edi14 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 4;
                        *reinterpret_cast<void***>(edi73 + 0xffffffe0) = *reinterpret_cast<void***>(ebp71 + ebx72 * 8);
                        edi14 = edi73 + 4;
                        ebp74 = g43c418;
                        *reinterpret_cast<void***>(edi14 + 0xffffffe0) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp74 + ebx72 * 8) + 4);
                        ebp75 = g43c418;
                        ebx76 = *reinterpret_cast<int16_t*>(eax5 + 0xfffffff9);
                        *reinterpret_cast<void***>(edi14 + 0xffffffe4) = *reinterpret_cast<void***>(ebp75 + ebx76 * 8);
                        ebp77 = g43c418;
                        *reinterpret_cast<void***>(edi14 + 0xffffffe8) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp77 + ebx76 * 8) + 4);
                        ebp78 = g43c418;
                        ebx79 = *reinterpret_cast<int16_t*>(eax5 + 0xfffffffb);
                        *reinterpret_cast<void***>(edi14 + 0xffffffec) = *reinterpret_cast<void***>(ebp78 + ebx79 * 8);
                        ebp80 = g43c418;
                        *reinterpret_cast<void***>(edi14 + 0xfffffff0) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp80 + ebx79 * 8) + 4);
                        ebx81 = *reinterpret_cast<signed char*>(eax5 + 0xfffffffd);
                        ebx82 = reinterpret_cast<void*>((ebx81 * 8 - ebx81) * 4);
                        ebp83 = g43c41c;
                        *reinterpret_cast<void****>(edi14 + 0xfffffff4) = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(ebp83) + reinterpret_cast<uint32_t>(ebx82));
                        ebp84 = g43c41c;
                        *reinterpret_cast<void****>(edi14 + 0xfffffff8) = *reinterpret_cast<void****>(reinterpret_cast<unsigned char>(ebp84) + reinterpret_cast<uint32_t>(ebx82) + 24);
                        ebx85 = 0;
                        *reinterpret_cast<void***>(&ebx85) = *reinterpret_cast<void***>(eax5 + 0xffffffff);
                        --edx17;
                        *reinterpret_cast<void***>(edi14 + 0xfffffffc) = *reinterpret_cast<void***>(ebx85 * 4 + 0x43c420);
                    } while (edx17);
                    break;
                }
            case 6:
                if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edx17) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(edx17 == 0))) {
                    do {
                        *reinterpret_cast<void***>(esi13) = edi14;
                        esi13 = esi13 + 4;
                        *reinterpret_cast<void***>(edi14) = ecx16;
                        ebp86 = g43c418;
                        eax5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax5 + 2) + 2 + 2 + 1) + 1);
                        ebx87 = reinterpret_cast<int16_t>(*reinterpret_cast<void****>(eax5 + 0xfffffff8));
                        edi88 = edi14 + 4 + 4 + 4 + 4 + 4 + 4 + 4 + 4;
                        *reinterpret_cast<void***>(edi88 + 0xffffffe4) = *reinterpret_cast<void***>(ebp86 + ebx87 * 8);
                        edi14 = edi88 + 4;
                        ebp89 = g43c418;
                        *reinterpret_cast<void***>(edi14 + 0xffffffe4) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp89 + ebx87 * 8) + 4);
                        ebp90 = g43c418;
                        ebx91 = *reinterpret_cast<int16_t*>(eax5 + 0xfffffffa);
                        *reinterpret_cast<void***>(edi14 + 0xffffffe8) = *reinterpret_cast<void***>(ebp90 + ebx91 * 8);
                        ebp92 = g43c418;
                        *reinterpret_cast<void***>(edi14 + 0xffffffec) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp92 + ebx91 * 8) + 4);
                        ebp93 = g43c418;
                        ebx94 = reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax5 + 0xfffffffc));
                        *reinterpret_cast<void***>(edi14 + 0xfffffff0) = *reinterpret_cast<void***>(ebp93 + ebx94 * 8);
                        ebp95 = g43c418;
                        *reinterpret_cast<void****>(edi14 + 0xfffffff4) = *reinterpret_cast<void****>(reinterpret_cast<uint32_t>(ebp95 + ebx94 * 8) + 4);
                        ebx96 = reinterpret_cast<void***>(0);
                        *reinterpret_cast<signed char*>(&ebx96) = *reinterpret_cast<signed char*>(eax5 + 0xfffffffe);
                        *reinterpret_cast<void****>(edi14 + 0xfffffff8) = ebx96;
                        ebx97 = 0;
                        *reinterpret_cast<void***>(&ebx97) = *reinterpret_cast<void***>(eax5 + 0xffffffff);
                        --edx17;
                        *reinterpret_cast<void***>(edi14 + 0xfffffffc) = *reinterpret_cast<void***>(ebx97 * 4 + 0x43c420);
                    } while (edx17);
                }
            case 7:
                goto 0x4023ad;
            }
        } while (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(eax5) == 0xff));
        goto addr_40239d_8;
    }
    return 0;
}

void** fun_40a519();

void** fun_402e10(int32_t a1) {
    void** eax2;

    eax2 = fun_40a519();
    return eax2;
}

int32_t g41cdf4 = 0;

int32_t fun_40a4a0() {
    int32_t eax1;
    int32_t ebx2;
    void* eax3;
    int32_t ebx4;
    uint32_t* edi5;
    int32_t ebx6;
    uint32_t eax7;
    int32_t* edi8;
    uint32_t* edi9;
    uint32_t ebx10;
    int16_t cx11;

    __asm__("pushad ");
    if (eax1 > 0x578 || ebx2 > 0x258) {
        __asm__("popad ");
        return -1;
    } else {
        g41cdf0 = eax3;
        g41cdf4 = ebx4;
        __asm__("pushad ");
        edi5 = reinterpret_cast<uint32_t*>(0x41d75c);
        ebx6 = 1;
        do {
            eax7 = 0x10000 / reinterpret_cast<uint32_t>(ebx6) - 1;
            *edi5 = eax7;
            ++edi5;
            ++ebx6;
        } while (ebx6 != 0x3a9b);
        __asm__("popad ");
        edi8 = reinterpret_cast<int32_t*>(0x42c21c);
        while (*edi8) {
            *edi8();
            eax7 = eax7;
            ++edi8;
        }
        edi9 = reinterpret_cast<uint32_t*>(0x41cdf8);
        ebx10 = 0;
        cx11 = 0x258;
        do {
            *edi9 = ebx10;
            ++edi9;
            ebx10 = ebx10 + eax7;
            cx11 = reinterpret_cast<int16_t>(cx11 - 1);
        } while (cx11);
        __asm__("popad ");
        return 0;
    }
}

int32_t fun_404c30();

int32_t fun_403570();

int32_t fun_404b40();

void fun_4046e0();

void fun_406310();

int32_t fun_4045e0(int32_t a1);

int32_t fun_404b00() {
    fun_404c30();
    fun_403570();
    fun_404b40();
    fun_4046e0();
    fun_406310();
    fun_4045e0(0);
    return 1;
}

int32_t g43c7b0;

int32_t fun_403510() {
    int32_t eax1;
    int32_t eax2;

    fun_4045e0(0);
    eax1 = fun_404640(__return_address());
    if (!eax1 || (eax2 = fun_4046f0(__return_address()), eax2 == 0)) {
        return 0;
    } else {
        g43c7b0 = 1;
        return 1;
    }
}

int32_t g41c828 = 0;

int32_t g41c82c = 0;

int32_t timeEndPeriod = 0x5550c;

int32_t fun_4032a0(void* a1, int32_t a2) {
    int32_t ecx3;
    int1_t zf4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int32_t eax8;

    ecx3 = g41c7a8;
    if (ecx3 || (zf4 = g41c828 == 0, !zf4)) {
        eax5 = g41c82c;
        if (ecx3 != 1 || eax5) {
            if (ecx3 == 2 && !eax5) {
                eax6 = fun_4034d0();
                g41c7b0 = eax6;
                fun_402520();
                fun_404b30();
                timeEndPeriod();
                g41c82c = 1;
                goto 1;
            }
        } else {
            eax7 = fun_4034d0();
            g41c7b0 = eax7;
            fun_402410();
            return 1;
        }
    } else {
        g41c828 = 1;
        eax8 = fun_4034d0();
        g41c7b0 = eax8;
        fun_4023f0();
        g41c7a8 = 1;
    }
    return 1;
}

void fun_404910();

void fun_402e30() {
    int32_t eax1;
    int32_t eax2;
    int32_t eax3;
    int32_t eax4;
    int32_t eax5;
    int1_t zf6;
    void** eax7;
    int32_t eax8;
    int1_t zf9;
    void** eax10;

    fun_404910();
    eax1 = fun_404a90(28);
    if (eax1 == 1 || ((eax2 = fun_404a90(57), eax2 == 1) || (eax3 = fun_404a90(1), eax3 == 1))) {
        eax4 = g41c548;
        if (eax4 == 1) {
            ++eax4;
        }
        g41c548 = eax4;
        if (eax4 == 3) {
            g41c548 = eax4 + 1;
        }
    }
    eax5 = fun_404a90(74);
    if (eax5 == 1 && (zf6 = g41c560 == 0, !zf6)) {
        fun_402f70(0);
        eax7 = g4528b4;
        fun_4030c0(eax7 + 8, 0, 0x3ff00000);
    }
    eax8 = fun_404a90(78);
    if (eax8 == 1 && (zf9 = g41c560 == 1, !zf9)) {
        fun_402f70(1);
        eax10 = g4528b4;
        fun_4030c0(eax10 + 8, 0, 0x3ff00000);
    }
    return;
}

int32_t fun_4013a0() {
    g41c030 = 1;
    fun_403cb0();
    g41c030 = 0;
    return 1;
}

int32_t g41c910 = 0;

int32_t fun_404b90() {
    int1_t zf1;
    int32_t esi2;
    int32_t v3;
    int32_t esi4;
    int32_t v5;

    zf1 = g41c910 == 0;
    if (!zf1) {
        esi2 = 0;
        g41c910 = 0;
        do {
            if (*reinterpret_cast<int32_t*>(esi2 + 0x43e0c0) == 1 && *reinterpret_cast<int32_t*>(esi2 + 0x43e700) == 0x10000) {
                *reinterpret_cast<int32_t*>(esi2 + 0x43e0c0) = 0;
                v3 = *reinterpret_cast<int32_t*>(esi2 + 0x43d8f0);
                *reinterpret_cast<int32_t*>(esi2 + 0x43e3e0)(v3);
            }
            esi2 = esi2 + 4;
        } while (esi2 < 0x320);
        esi4 = 0;
        do {
            if (*reinterpret_cast<int32_t*>(esi4 + 0x43e0c0) == 1 && *reinterpret_cast<int32_t*>(esi4 + 0x43e700) == 0x20000) {
                *reinterpret_cast<int32_t*>(esi4 + 0x43e0c0) = 0;
                v5 = *reinterpret_cast<int32_t*>(esi4 + 0x43d8f0);
                *reinterpret_cast<int32_t*>(esi4 + 0x43e3e0)(v5);
            }
            esi4 = esi4 + 4;
        } while (esi4 < 0x320);
        return 1;
    } else {
        return 1;
    }
}

int32_t fun_4038e0() {
    void* esi1;

    esi1 = reinterpret_cast<void*>(0);
    do {
        if (*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi1) * 4 + 0x4530d0)) {
            fun_403820(esi1);
        }
        esi1 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi1) + 1);
    } while (reinterpret_cast<int32_t>(esi1) < reinterpret_cast<int32_t>(0x100));
    return 1;
}

int16_t g43ea20;

int32_t fun_404b40() {
    int1_t zf1;
    int32_t* edi2;
    int32_t eax3;
    int32_t ecx4;
    int32_t ecx5;

    zf1 = g41c910 == 1;
    if (!zf1) {
        edi2 = reinterpret_cast<int32_t*>(0x43e0c0);
        eax3 = 0;
        g41c910 = 1;
        ecx4 = 0xc8;
        while (ecx4) {
            --ecx4;
            *edi2 = 0;
            ++edi2;
        }
        do {
            ecx5 = eax3 + 1;
            ++eax3;
            *reinterpret_cast<int16_t*>(eax3 * 2 + 0x43dc0e) = *reinterpret_cast<int16_t*>(&ecx5);
        } while (eax3 < 0xc8);
        g43ea20 = 0;
        return 1;
    } else {
        return 1;
    }
}

void** fun_4111c0(void** a1, int32_t a2) {
    void** esi3;
    int32_t edi4;
    void** eax5;
    int32_t eax6;

    esi3 = a1;
    if (reinterpret_cast<unsigned char>(esi3) > reinterpret_cast<unsigned char>(0xffffffe0)) {
        return 0;
    }
    if (!esi3) {
        esi3 = reinterpret_cast<void**>(1);
    }
    edi4 = a2;
    do {
        eax5 = reinterpret_cast<void**>(0);
        if (reinterpret_cast<unsigned char>(esi3) <= reinterpret_cast<unsigned char>(0xffffffe0)) {
            eax5 = fun_411210(esi3);
        }
        if (eax5) 
            break;
        if (!edi4) 
            break;
        eax6 = fun_412fc0(esi3);
    } while (eax6);
    goto addr_411205_11;
    addr_411207_12:
    return eax5;
    addr_411205_11:
    eax5 = reinterpret_cast<void**>(0);
    goto addr_411207_12;
}

int32_t fun_413d20(void** a1, void* a2, void** a3, int32_t a4);

int32_t fun_411460(void** a1, struct s1* a2) {
    void* ecx3;
    void** v4;
    int32_t eax5;

    ecx3 = a2->f0;
    v4 = a2->f4;
    eax5 = fun_413d20(a1, ecx3, v4, 0);
    return eax5;
}

int32_t fun_4139c0(void** a1);

void** fun_411310(void** a1, uint32_t a2, void** a3, void** a4) {
    void** v5;
    void** eax6;
    void** ebx7;
    void** v8;
    void** ebp9;
    void** v10;
    int32_t eax11;
    void** ecx12;
    void** ecx13;
    void** eax14;
    void** eax15;
    void** edx16;
    void** eax17;
    uint32_t ecx18;
    void** edi19;
    void** esi20;
    uint32_t ecx21;

    v5 = a1;
    eax6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a3) * a2);
    ebx7 = eax6;
    v8 = eax6;
    if (!eax6) {
        return 0;
    }
    ebp9 = a4;
    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp9 + 12)) & 0x10c)) {
        v10 = reinterpret_cast<void**>(0x1000);
    } else {
        v10 = *reinterpret_cast<void***>(ebp9 + 24);
    }
    if (v8) 
        goto addr_411365_7;
    addr_411408_8:
    return a3;
    do {
        addr_411365_7:
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp9 + 12)) & 0x10c) || !*reinterpret_cast<void***>(ebp9 + 4)) {
            if (reinterpret_cast<unsigned char>(ebx7) < reinterpret_cast<unsigned char>(v10)) {
                eax11 = fun_4139c0(ebp9);
                if (eax11 == -1) 
                    break;
                ecx12 = v5;
                --ebx7;
                ++v5;
                *reinterpret_cast<void***>(ecx12) = *reinterpret_cast<void***>(&eax11);
                v10 = *reinterpret_cast<void***>(ebp9 + 24);
            } else {
                ecx13 = ebx7;
                if (v10) {
                    ecx13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx7) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx7) % reinterpret_cast<unsigned char>(v10)));
                }
                eax14 = *reinterpret_cast<void***>(ebp9 + 16);
                eax15 = fun_413ab0(eax14, v5, ecx13);
                if (!eax15) 
                    goto addr_411414_15;
                if (eax15 == 0xffffffff) 
                    goto addr_41142c_17;
                ebx7 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx7) - reinterpret_cast<unsigned char>(eax15));
                v5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v5) + reinterpret_cast<unsigned char>(eax15));
            }
        } else {
            edx16 = ebx7;
            if (reinterpret_cast<unsigned char>(ebx7) >= reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp9 + 4))) {
                edx16 = *reinterpret_cast<void***>(ebp9 + 4);
            }
            eax17 = edx16;
            ecx18 = reinterpret_cast<unsigned char>(edx16) >> 2;
            edi19 = v5;
            esi20 = *reinterpret_cast<void***>(ebp9);
            ebx7 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx7) - reinterpret_cast<unsigned char>(edx16));
            while (ecx18) {
                --ecx18;
                *reinterpret_cast<void***>(edi19) = *reinterpret_cast<void***>(esi20);
                edi19 = edi19 + 4;
                esi20 = esi20 + 4;
            }
            ecx21 = reinterpret_cast<unsigned char>(eax17) & 3;
            while (ecx21) {
                --ecx21;
                *reinterpret_cast<void***>(edi19) = *reinterpret_cast<void***>(esi20);
                ++edi19;
                ++esi20;
            }
            *reinterpret_cast<void***>(ebp9 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp9 + 4)) - reinterpret_cast<unsigned char>(edx16));
            *reinterpret_cast<void***>(ebp9) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp9)) + reinterpret_cast<unsigned char>(edx16));
            v5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v5) + reinterpret_cast<unsigned char>(edx16));
        }
    } while (ebx7);
    goto addr_411408_8;
    return (reinterpret_cast<unsigned char>(v8) - reinterpret_cast<unsigned char>(ebx7)) / a2;
    addr_411414_15:
    *reinterpret_cast<void***>(ebp9 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp9 + 12)) | 16);
    return (reinterpret_cast<unsigned char>(v8) - reinterpret_cast<unsigned char>(ebx7)) / a2;
    addr_41142c_17:
    *reinterpret_cast<void***>(ebp9 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp9 + 12)) | 32);
    return (reinterpret_cast<unsigned char>(v8) - reinterpret_cast<unsigned char>(ebx7)) / a2;
}

int32_t g44ceb0;

int32_t g41ca58 = 0;

void fun_407fe0() {
    int1_t zf1;
    void** eax2;
    void** eax3;
    void** eax4;

    g44ceb0 = 0;
    zf1 = g41ca58 == 0;
    if (zf1) {
        eax2 = fun_4111a0(0x20d8);
        g44cebc = eax2;
        eax3 = fun_4111a0(0x20d8);
        g44cec0 = eax3;
        eax4 = fun_4111a0(0x20d8);
        g44cec4 = eax4;
        g41ca58 = 1;
    }
    return;
}

int32_t g44ce2c;

int32_t g41ca54 = 0;

void fun_407190() {
    int1_t zf1;
    void** eax2;
    void** eax3;
    void** eax4;

    g44ce2c = 0;
    zf1 = g41ca54 == 0;
    if (zf1) {
        eax2 = fun_4111a0(0x20d8);
        g44ce38 = eax2;
        eax3 = fun_4111a0(0x20d8);
        g44ce3c = eax3;
        eax4 = fun_4111a0(0x20d8);
        g44ce40 = eax4;
        g41ca54 = 1;
    }
    return;
}

struct s31** g44cdf8;

int32_t fun_406fc0() {
    int32_t* ecx1;
    int32_t** eax2;

    ecx1 = reinterpret_cast<int32_t*>(0x447038);
    eax2 = reinterpret_cast<int32_t**>(0x4450b8);
    g44cdf8 = reinterpret_cast<struct s31**>(0x446ff8);
    do {
        *eax2 = ecx1;
        ++eax2;
        *ecx1 = 0;
        ecx1 = ecx1 + 3;
    } while (reinterpret_cast<uint32_t>(eax2) < 0x446ff8);
    fun_4067e0(0x446ff8, 0);
    return 1;
}

struct s145 {
    signed char f0;
    signed char f1;
};

struct s146 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
    void** f8;
    signed char[3] pad12;
    uint32_t fc;
    void** f10;
    signed char[7] pad24;
    int32_t f18;
};

int32_t fun_4145e0(struct s146* a1);

int32_t fun_4147c0(void** a1, struct s145* a2, void* a3);

int32_t fun_414680(int32_t a1, void** a2);

int32_t fun_4117a0(struct s145* a1, int32_t a2) {
    int32_t eax3;
    int32_t eax4;

    eax3 = fun_4145e0(0x43b808);
    eax4 = fun_4147c0(0x43b808, a1, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 + 4 + 4 + 16);
    fun_414680(eax3, 0x43b808);
    return eax4;
}

struct s147 {
    signed char[12] pad12;
    int32_t fc;
};

struct s148 {
    int32_t f0;
    int32_t f4;
};

struct s149 {
    signed char[4] pad4;
    struct s148* f4;
};

int32_t g41ca74 = 0;

int32_t g41ca78 = 0;

int32_t g41ca6c = 0;

struct s150 {
    signed char[8] pad8;
    int32_t f8;
};

int32_t g41ca70 = 0;

struct s151 {
    signed char[12] pad12;
    int32_t fc;
};

struct s152 {
    signed char[8] pad8;
    struct s24* f8;
};

signed char* g41ca5c = reinterpret_cast<signed char*>(0);

void* g41ca60 = reinterpret_cast<void*>(0);

void* g41ca64 = reinterpret_cast<void*>(0);

struct s154 {
    int32_t f0;
    int32_t f4;
};

struct s153 {
    signed char[4] pad4;
    struct s154* f4;
};

void* g45304c;

void* g453048;

void* g453050;

struct s155 {
    signed char[8] pad8;
    struct s24* f8;
};

void* g453068;

struct s24* fun_408dc9() {
    struct s147* esi1;
    struct s148* ebx2;
    struct s149* esi3;
    struct s150* esi4;
    struct s151* esi5;
    struct s24* eax6;
    struct s24* eax7;
    struct s152* esi8;
    void* ebx9;
    void* ebx10;
    struct s153* esi11;
    void* ecx12;
    int1_t less13;
    void* tmp32_14;
    int1_t less_or_equal15;
    signed char* tmp32_16;
    void* tmp32_17;
    int1_t less_or_equal18;
    void* edx19;
    int1_t less_or_equal20;
    int1_t less21;
    void* tmp32_22;
    int1_t less_or_equal23;
    signed char* tmp32_24;
    void* tmp32_25;
    int1_t less_or_equal26;
    void* edx27;
    int1_t less_or_equal28;
    void* ecx29;
    struct s155* esi30;
    signed char* tmp32_31;
    signed char* edi32;
    signed char* ebx33;
    void* ebp34;
    signed char* esi35;
    void* ecx36;
    signed char* edx37;
    void* ecx38;
    void* ecx39;
    signed char ah40;
    void* ecx41;

    __asm__("pushad ");
    if (esi1->fc) {
        ebx2 = esi3->f4;
        g41ca74 = ebx2->f0;
        g41ca78 = ebx2->f4;
        g41ca6c = esi4->f8;
        g41ca70 = esi5->fc;
        eax6 = fun_4091f8();
        __asm__("popad ");
        return eax6;
    }
    eax7 = esi8->f8;
    ebx9 = *reinterpret_cast<void**>(&eax7->f9);
    *reinterpret_cast<signed char*>(&ebx9) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax7) + 9);
    g41ca5c = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx9) + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax7) + 24)));
    g41ca60 = reinterpret_cast<void*>((*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax7) + 16) >> 8) - reinterpret_cast<uint32_t>(eax7->f8 >> 8));
    g41ca64 = reinterpret_cast<void*>((*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax7) + 20) >> 8) - reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(&eax7->f9)) >> 8));
    ebx10 = reinterpret_cast<void*>(esi11->f4->f0 - eax7->f0 >> 8);
    ecx12 = reinterpret_cast<void*>(esi11->f4->f4 - eax7->f4 >> 8);
    less13 = reinterpret_cast<int32_t>(ecx12) < reinterpret_cast<int32_t>(g45304c);
    if (less13) {
        tmp32_14 = reinterpret_cast<void*>(-reinterpret_cast<uint32_t>(ecx12) + reinterpret_cast<uint32_t>(g45304c));
        less_or_equal15 = reinterpret_cast<int32_t>(g41ca64) <= reinterpret_cast<int32_t>(tmp32_14);
        g41ca64 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g41ca64) - reinterpret_cast<uint32_t>(tmp32_14));
        if (less_or_equal15) 
            goto addr_408f7c_5;
        tmp32_16 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(g41ca5c) + (reinterpret_cast<uint32_t>(tmp32_14) << 8));
        g41ca5c = tmp32_16;
        ecx12 = g45304c;
    }
    tmp32_17 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx12) + reinterpret_cast<uint32_t>(g41ca64));
    less_or_equal18 = reinterpret_cast<int32_t>(tmp32_17) <= reinterpret_cast<int32_t>(g453048);
    edx19 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(tmp32_17) - reinterpret_cast<uint32_t>(g453048));
    if (less_or_equal18) 
        goto addr_408e92_8;
    less_or_equal20 = reinterpret_cast<int32_t>(g41ca64) <= reinterpret_cast<int32_t>(edx19);
    g41ca64 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g41ca64) - reinterpret_cast<uint32_t>(edx19));
    if (less_or_equal20) 
        goto addr_408f7c_5;
    addr_408e92_8:
    less21 = reinterpret_cast<int32_t>(ebx10) < reinterpret_cast<int32_t>(g453054);
    if (less21) {
        tmp32_22 = reinterpret_cast<void*>(-reinterpret_cast<uint32_t>(ebx10) + reinterpret_cast<uint32_t>(g453054));
        less_or_equal23 = reinterpret_cast<int32_t>(g41ca60) <= reinterpret_cast<int32_t>(tmp32_22);
        g41ca60 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g41ca60) - reinterpret_cast<uint32_t>(tmp32_22));
        if (less_or_equal23) {
            addr_408f7c_5:
            __asm__("popad ");
            return eax7;
        } else {
            tmp32_24 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(g41ca5c) + reinterpret_cast<uint32_t>(tmp32_22));
            g41ca5c = tmp32_24;
            ebx10 = g453054;
        }
    }
    tmp32_25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx10) + reinterpret_cast<uint32_t>(g41ca60));
    less_or_equal26 = reinterpret_cast<int32_t>(tmp32_25) <= reinterpret_cast<int32_t>(g453050);
    edx27 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(tmp32_25) - reinterpret_cast<uint32_t>(g453050));
    if (less_or_equal26 || (less_or_equal28 = reinterpret_cast<int32_t>(g41ca60) <= reinterpret_cast<int32_t>(edx27), g41ca60 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g41ca60) - reinterpret_cast<uint32_t>(edx27)), !less_or_equal28)) {
        ecx29 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx12) * reinterpret_cast<uint32_t>(g45305c));
        eax7 = esi30->f8;
        tmp32_31 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebx10) + reinterpret_cast<uint32_t>(ecx29) + reinterpret_cast<uint32_t>(g453068));
        edi32 = tmp32_31;
        ebx33 = *reinterpret_cast<signed char**>(reinterpret_cast<uint32_t>(eax7) + 28);
        ebp34 = g41ca64;
        esi35 = g41ca5c;
        ecx36 = g41ca60;
        edx37 = ebx33;
        while (1) {
            ecx38 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx36) - 6);
            if (reinterpret_cast<int32_t>(ecx36) < reinterpret_cast<int32_t>(6)) {
                ecx39 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx38) + 4);
                if (reinterpret_cast<int32_t>(ecx39) < reinterpret_cast<int32_t>(0)) {
                    if (reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(ecx39) + 1) < reinterpret_cast<int32_t>(0)) {
                        addr_408f66_17:
                        eax7 = g45305c;
                        esi35 = esi35 + 0x100;
                        edi32 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(eax7));
                        ebp34 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp34) - 1);
                        ecx36 = g41ca60;
                        if (ebp34) 
                            continue; else 
                            goto addr_408f7c_5;
                    } else {
                        *reinterpret_cast<signed char*>(&edx37) = *edi32;
                        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx37) + 1) = *esi35;
                        ah40 = *edx37;
                    }
                } else {
                    *reinterpret_cast<signed char*>(&ebx33) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(ecx39) + 1);
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx37) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi35) + reinterpret_cast<uint32_t>(ecx39));
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx33) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi35) + reinterpret_cast<uint32_t>(ecx39) + 1);
                    *reinterpret_cast<signed char*>(&edx37) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(ecx39));
                    ecx38 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx39) - 4);
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax7) + 1) = *ebx33;
                    goto addr_408f4a_20;
                }
            } else {
                *reinterpret_cast<signed char*>(&ebx33) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(ecx38) + 5);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx37) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi35) + reinterpret_cast<uint32_t>(ecx38) + 4);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx33) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi35) + reinterpret_cast<uint32_t>(ecx38) + 5);
                *reinterpret_cast<signed char*>(&edx37) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(ecx38) + 4);
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax7) + 1) = *ebx33;
                do {
                    *reinterpret_cast<signed char*>(&ebx33) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(ecx38) + 3);
                    *reinterpret_cast<signed char*>(&eax7) = *edx37;
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx33) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi35) + reinterpret_cast<uint32_t>(ecx38) + 3);
                    *reinterpret_cast<signed char*>(&edx37) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(ecx38) + 2);
                    eax7 = reinterpret_cast<struct s24*>(reinterpret_cast<uint32_t>(eax7) << 16);
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx37) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi35) + reinterpret_cast<uint32_t>(ecx38) + 2);
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax7) + 1) = *ebx33;
                    *reinterpret_cast<signed char*>(&ebx33) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(ecx38) + 1);
                    *reinterpret_cast<signed char*>(&eax7) = *edx37;
                    *reinterpret_cast<signed char*>(&edx37) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(ecx38));
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx33) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi35) + reinterpret_cast<uint32_t>(ecx38) + 1);
                    *reinterpret_cast<struct s24**>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(ecx38) + 2) = eax7;
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx37) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi35) + reinterpret_cast<uint32_t>(ecx38));
                    ecx38 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx38) - 4);
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax7) + 1) = *ebx33;
                } while (reinterpret_cast<int32_t>(ecx38) >= reinterpret_cast<int32_t>(0));
                goto addr_408f4a_20;
            }
            addr_408f64_23:
            *edi32 = ah40;
            goto addr_408f66_17;
            addr_408f4a_20:
            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(ecx38) + 5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax7) + 1);
            ecx41 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx38) + 3);
            ah40 = *edx37;
            if (reinterpret_cast<int32_t>(ecx41) >= reinterpret_cast<int32_t>(0)) {
                do {
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx37) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi35) + reinterpret_cast<uint32_t>(ecx41));
                    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(ecx41) + 1) = ah40;
                    *reinterpret_cast<signed char*>(&edx37) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi32) + reinterpret_cast<uint32_t>(ecx41));
                    ecx41 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx41) - 1);
                    ah40 = *edx37;
                } while (reinterpret_cast<int32_t>(ecx41) >= reinterpret_cast<int32_t>(0));
                goto addr_408f64_23;
            }
        }
    }
}

void* g44ce8c;

void* g44ce88;

void* g44ce90;

void* g44ce94;

int32_t g44ce98;

int32_t g44ce9c;

int32_t g44cea0;

int32_t g44cea4;

void fun_456180();

void fun_4561c0();

struct s156 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s157 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s158 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s159 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

void fun_408040(struct s37* a1) {
    void* edx2;
    void* ebx3;
    int1_t less4;
    void* eax5;
    void* edx6;
    void* eax7;
    int1_t less_or_equal8;
    void* eax9;
    int1_t less_or_equal10;
    void* eax11;
    int1_t less_or_equal12;
    void* edx13;
    int32_t ebx14;
    void* ebp15;
    void* edx16;
    int32_t eax17;
    int32_t eax18;
    int32_t ebx19;
    void* eax20;
    int1_t less_or_equal21;
    void* eax22;
    int1_t less23;
    void* edx24;
    int32_t ebx25;
    void* ebp26;
    void* edx27;
    int32_t eax28;
    int32_t eax29;
    int32_t ebx30;
    void* edx31;
    int32_t ebx32;
    void* ebp33;
    void* edx34;
    int32_t eax35;
    int32_t eax36;
    int32_t ebx37;
    void* eax38;
    int1_t less39;
    void* eax40;
    int1_t less_or_equal41;
    void* eax42;
    int1_t less_or_equal43;
    void* eax44;
    int1_t less_or_equal45;
    signed char* eax46;
    int32_t ecx47;
    int32_t edx48;
    void* ecx49;
    void* edx50;
    void* eax51;
    void* ecx52;
    int32_t eax53;
    void* ecx54;
    void* eax55;
    void* edx56;
    void* ecx57;
    int32_t eax58;
    void* ecx59;
    void* edx60;
    void* eax61;
    int32_t ecx62;
    void* eax63;
    int32_t edx64;
    int32_t eax65;
    int32_t ecx66;
    void* eax67;
    void* ecx68;
    void* edx69;
    void* eax70;
    int32_t ecx71;
    int32_t edx72;
    int32_t eax73;
    int32_t ecx74;
    void* eax75;
    void* ecx76;
    void* edx77;
    void* eax78;
    int32_t ecx79;
    int32_t edx80;
    int32_t eax81;
    int32_t ecx82;
    void** eax83;
    void** esi84;
    void** edi85;
    void* eax86;
    void* tmp32_87;
    void** eax88;
    void** ebp89;
    void** ebx90;
    struct s156* ebx91;
    struct s57* ebp92;
    uint32_t edx93;
    int32_t ecx94;
    uint32_t v95;
    uint32_t v96;
    void* eax97;
    struct s24* ecx98;
    void** eax99;
    void* tmp32_100;
    void** eax101;
    void** esi102;
    void** ebx103;
    void* edi104;
    void** edx105;
    void** ebp106;
    struct s157* ebp107;
    struct s57* edx108;
    uint32_t eax109;
    int32_t ecx110;
    int32_t eax111;
    uint32_t v112;
    void* eax113;
    struct s24* ecx114;
    void** eax115;
    void* tmp32_116;
    void* eax117;
    void* ecx118;
    void* edx119;
    void* eax120;
    int32_t ecx121;
    int32_t edx122;
    int32_t eax123;
    int32_t ecx124;
    void* eax125;
    void* ecx126;
    void* edx127;
    void* eax128;
    int32_t ecx129;
    int32_t edx130;
    int32_t eax131;
    int32_t ecx132;
    void** eax133;
    void** esi134;
    void* eax135;
    void* tmp32_136;
    void** eax137;
    void* edi138;
    void** ebp139;
    void** ebx140;
    struct s158* ebx141;
    struct s57* ebp142;
    uint32_t edx143;
    int32_t ecx144;
    uint32_t v145;
    uint32_t v146;
    void* eax147;
    struct s24* ecx148;
    void** eax149;
    void* tmp32_150;
    void** edi151;
    void** eax152;
    void* esi153;
    void* ebx154;
    void** edx155;
    void** ebp156;
    struct s159* ebp157;
    struct s57* edx158;
    uint32_t eax159;
    int32_t ecx160;
    int32_t eax161;
    uint32_t v162;
    void* eax163;
    struct s24* ecx164;
    void** eax165;
    void* tmp32_166;

    g41caac = a1->f4;
    g41cab0 = a1->f8;
    g41cab4 = a1->fc;
    g41cab8 = a1->f10;
    g41cabc = a1->f14;
    g41cac0 = a1->f18;
    g41cac4 = a1->f1c;
    g41cac8 = a1->f20;
    g41cacc = a1->f24;
    g41cad0 = a1->f28;
    g41cad4 = a1->f2c;
    edx2 = g453068;
    g41cad8 = a1->f30;
    ebx3 = g41caac;
    less4 = reinterpret_cast<int32_t>(g41cab4) < reinterpret_cast<int32_t>(ebx3);
    g44cea8 = a1->f34;
    g44ceb4 = edx2;
    if (!less4) {
        eax5 = g41cab4;
        edx6 = g41caac;
        g44ced8 = eax5;
    } else {
        edx6 = g41cab4;
        g44ced8 = ebx3;
    }
    eax7 = g44ced8;
    g44ceb8 = edx6;
    less_or_equal8 = reinterpret_cast<int32_t>(g41cabc) <= reinterpret_cast<int32_t>(eax7);
    eax9 = g41cabc;
    if (less_or_equal8) {
        less_or_equal10 = reinterpret_cast<int32_t>(g44ceb8) <= reinterpret_cast<int32_t>(eax9);
        if (!less_or_equal10) {
            g44ceb8 = eax9;
        }
    } else {
        g44ced8 = eax9;
    }
    eax11 = g41cac0;
    less_or_equal12 = reinterpret_cast<int32_t>(g41cab0) <= reinterpret_cast<int32_t>(eax11);
    if (!less_or_equal12) {
        edx13 = g41cab0;
        ebx14 = g41cad8;
        ebp15 = g41cabc;
        g41cac0 = edx13;
        edx16 = g41caac;
        g41cab0 = eax11;
        eax17 = g41cac8;
        g41cabc = edx16;
        g41cad8 = eax17;
        g41cac8 = ebx14;
        eax18 = g41cad4;
        ebx19 = g41cac4;
        g41caac = ebp15;
        g41cad4 = ebx19;
        g41cac4 = eax18;
    }
    eax20 = g41cab8;
    less_or_equal21 = reinterpret_cast<int32_t>(g41cab0) <= reinterpret_cast<int32_t>(eax20);
    if (less_or_equal21) {
        eax22 = g41cab8;
        less23 = reinterpret_cast<int32_t>(g41cac0) < reinterpret_cast<int32_t>(eax22);
        if (less23) {
            edx24 = g41cac0;
            ebx25 = g41cad0;
            ebp26 = g41cab4;
            g41cab8 = edx24;
            edx27 = g41cabc;
            g41cac0 = eax22;
            eax28 = g41cad8;
            g41cab4 = edx27;
            g41cad0 = eax28;
            g41cad8 = ebx25;
            eax29 = g41cacc;
            ebx30 = g41cad4;
            g41cabc = ebp26;
            g41cacc = ebx30;
            g41cad4 = eax29;
        }
    } else {
        edx31 = g41cab0;
        ebx32 = g41cad0;
        ebp33 = g41cab4;
        g41cab8 = edx31;
        edx34 = g41caac;
        g41cab0 = eax20;
        eax35 = g41cac8;
        g41cab4 = edx34;
        g41cad0 = eax35;
        g41cac8 = ebx32;
        eax36 = g41cacc;
        ebx37 = g41cac4;
        g41caac = ebp33;
        g41cacc = ebx37;
        g41cac4 = eax36;
    }
    eax38 = g453044;
    less39 = reinterpret_cast<int32_t>(g41cab0) < reinterpret_cast<int32_t>(eax38);
    if (!less39) {
        eax40 = g453058;
        less_or_equal41 = reinterpret_cast<int32_t>(g41cac0) <= reinterpret_cast<int32_t>(eax40);
        if (less_or_equal41) {
            eax42 = g453064;
            less_or_equal43 = reinterpret_cast<int32_t>(g44ced8) <= reinterpret_cast<int32_t>(eax42);
            if (less_or_equal43) {
                eax44 = g44ceb8;
                less_or_equal45 = reinterpret_cast<int32_t>(g453060) <= reinterpret_cast<int32_t>(eax44);
                if (less_or_equal45) {
                    fun_456000();
                    eax46 = g44cea8;
                    ecx47 = g41cadc;
                    edx48 = g41cae0;
                    fun_407f80(edx48, ecx47, eax46);
                    ecx49 = g41cac0;
                    edx50 = g41cabc;
                    eax51 = g41cab0;
                    ecx52 = g41caac;
                    eax53 = fun_408d70(ecx52, eax51, edx50, ecx49);
                    ecx54 = g41cab8;
                    eax55 = g41cab4;
                    edx56 = g41cab0;
                    ecx57 = g41caac;
                    eax58 = fun_408d70(ecx57, edx56, eax55, ecx54);
                    ecx59 = g41cab0;
                    edx60 = g41cab4;
                    eax61 = g41caac;
                    g44ce8c = ecx59;
                    ecx62 = g41cac4;
                    g44ce88 = eax61;
                    eax63 = g41cab8;
                    g44ce90 = edx60;
                    edx64 = g41cac8;
                    g44ce94 = eax63;
                    eax65 = g41cacc;
                    g44ce98 = ecx62;
                    ecx66 = g41cad0;
                    g44ce9c = edx64;
                    g44cea0 = eax65;
                    g44cea4 = ecx66;
                    if (eax53 <= eax58) {
                        fun_456180();
                        eax67 = g41caac;
                        ecx68 = g41cab0;
                        edx69 = g41cabc;
                        g44ce88 = eax67;
                        eax70 = g41cac0;
                        g44ce8c = ecx68;
                        ecx71 = g41cac4;
                        g44ce90 = edx69;
                        edx72 = g41cac8;
                        g44ce94 = eax70;
                        eax73 = g41cad4;
                        g44ce98 = ecx71;
                        ecx74 = g41cad8;
                        g44ce9c = edx72;
                        g44cea0 = eax73;
                        g44cea4 = ecx74;
                        fun_4561c0();
                        eax75 = g41cab4;
                        ecx76 = g41cab8;
                        edx77 = g41cabc;
                        g44ce88 = eax75;
                        eax78 = g41cac0;
                        g44ce8c = ecx76;
                        ecx79 = g41cacc;
                        g44ce90 = edx77;
                        edx80 = g41cad0;
                        g44ce94 = eax78;
                        eax81 = g41cad4;
                        g44ce98 = ecx79;
                        ecx82 = g41cad8;
                        g44ce9c = edx80;
                        g44cea0 = eax81;
                        g44cea4 = ecx82;
                        fun_456180();
                        eax83 = g44cec0;
                        esi84 = reinterpret_cast<void**>(0);
                        edi85 = reinterpret_cast<void**>(0);
                        eax86 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax83)) * reinterpret_cast<uint32_t>(g45305c));
                        tmp32_87 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ceb4) + reinterpret_cast<uint32_t>(eax86));
                        g44ceb4 = tmp32_87;
                        eax88 = g44cebc;
                        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax88 + 4)) > reinterpret_cast<signed char>(0)) {
                            do {
                                ebp89 = g44cec0;
                                ebx90 = g44cebc;
                                ebx91 = reinterpret_cast<struct s156*>(reinterpret_cast<unsigned char>(ebx90) + reinterpret_cast<unsigned char>(esi84));
                                ebp92 = reinterpret_cast<struct s57*>(reinterpret_cast<unsigned char>(ebp89) + reinterpret_cast<unsigned char>(esi84) + 8);
                                esi84 = esi84 + 12;
                                edx93 = ebx91->fc;
                                ecx94 = ebp92->f8;
                                ++edi85;
                                v95 = (ebx91->f8 & 0xffff) + (edx93 << 24);
                                v96 = reinterpret_cast<uint32_t>(ebx91->f10 - ecx94 - 1);
                                eax97 = g44ceb4;
                                fun_407fa0(reinterpret_cast<uint32_t>(eax97) + ecx94 + 1, v96, v95, reinterpret_cast<int32_t>(edx93) >> 8, ebp92);
                                ecx98 = g45305c;
                                eax99 = g44cebc;
                                tmp32_100 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ceb4) + reinterpret_cast<uint32_t>(ecx98));
                                g44ceb4 = tmp32_100;
                            } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax99 + 4)) > reinterpret_cast<signed char>(edi85));
                        }
                        eax101 = g44cec4;
                        esi102 = reinterpret_cast<void**>(0);
                        ebx103 = reinterpret_cast<void**>(0);
                        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax101 + 4)) > reinterpret_cast<signed char>(0)) {
                            edi104 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi85 + reinterpret_cast<unsigned char>(edi85) * 2) * 4);
                            do {
                                edx105 = g44cec0;
                                ebp106 = g44cec4;
                                ebp107 = reinterpret_cast<struct s157*>(reinterpret_cast<unsigned char>(ebp106) + reinterpret_cast<unsigned char>(esi102));
                                edx108 = reinterpret_cast<struct s57*>(reinterpret_cast<unsigned char>(edx105) + reinterpret_cast<uint32_t>(edi104) + 8);
                                edi104 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi104) + 12);
                                eax109 = ebp107->fc;
                                ecx110 = edx108->f8;
                                esi102 = esi102 + 12;
                                ++ebx103;
                                eax111 = ebp107->f10;
                                v112 = (ebp107->f8 & 0xffff) + (eax109 << 24);
                                eax113 = g44ceb4;
                                fun_407fa0(reinterpret_cast<uint32_t>(eax113) + ecx110 + 1, eax111 - ecx110 - 1, v112, reinterpret_cast<int32_t>(eax109) >> 8, edx108);
                                ecx114 = g45305c;
                                eax115 = g44cec4;
                                tmp32_116 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ceb4) + reinterpret_cast<uint32_t>(ecx114));
                                g44ceb4 = tmp32_116;
                            } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax115 + 4)) > reinterpret_cast<signed char>(ebx103));
                        }
                    } else {
                        fun_4561c0();
                        eax117 = g41caac;
                        ecx118 = g41cab0;
                        edx119 = g41cabc;
                        g44ce88 = eax117;
                        eax120 = g41cac0;
                        g44ce8c = ecx118;
                        ecx121 = g41cac4;
                        g44ce90 = edx119;
                        edx122 = g41cac8;
                        g44ce94 = eax120;
                        eax123 = g41cad4;
                        g44ce98 = ecx121;
                        ecx124 = g41cad8;
                        g44ce9c = edx122;
                        g44cea0 = eax123;
                        g44cea4 = ecx124;
                        fun_456180();
                        eax125 = g41cab4;
                        ecx126 = g41cab8;
                        edx127 = g41cabc;
                        g44ce88 = eax125;
                        eax128 = g41cac0;
                        g44ce8c = ecx126;
                        ecx129 = g41cacc;
                        g44ce90 = edx127;
                        edx130 = g41cad0;
                        g44ce94 = eax128;
                        eax131 = g41cad4;
                        g44ce98 = ecx129;
                        ecx132 = g41cad8;
                        g44ce9c = edx130;
                        g44cea0 = eax131;
                        g44cea4 = ecx132;
                        fun_4561c0();
                        eax133 = g44cebc;
                        esi134 = reinterpret_cast<void**>(0);
                        eax135 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax133)) * reinterpret_cast<uint32_t>(g45305c));
                        tmp32_136 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ceb4) + reinterpret_cast<uint32_t>(eax135));
                        g44ceb4 = tmp32_136;
                        eax137 = g44cebc;
                        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax137 + 4)) > reinterpret_cast<signed char>(0)) {
                            edi138 = reinterpret_cast<void*>(0);
                            do {
                                ebp139 = g44cebc;
                                ebx140 = g44cec0;
                                ebx141 = reinterpret_cast<struct s158*>(reinterpret_cast<unsigned char>(ebx140) + reinterpret_cast<uint32_t>(edi138));
                                ebp142 = reinterpret_cast<struct s57*>(reinterpret_cast<unsigned char>(ebp139) + reinterpret_cast<uint32_t>(edi138) + 8);
                                edi138 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi138) + 12);
                                edx143 = ebx141->fc;
                                ecx144 = ebp142->f8;
                                ++esi134;
                                v145 = (ebx141->f8 & 0xffff) + (edx143 << 24);
                                v146 = reinterpret_cast<uint32_t>(ebx141->f10 - ecx144 - 1);
                                eax147 = g44ceb4;
                                fun_407fa0(reinterpret_cast<uint32_t>(eax147) + ecx144 + 1, v146, v145, reinterpret_cast<int32_t>(edx143) >> 8, ebp142);
                                ecx148 = g45305c;
                                eax149 = g44cebc;
                                tmp32_150 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ceb4) + reinterpret_cast<uint32_t>(ecx148));
                                g44ceb4 = tmp32_150;
                            } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax149 + 4)) > reinterpret_cast<signed char>(esi134));
                        }
                        edi151 = reinterpret_cast<void**>(0);
                        eax152 = g44cec4;
                        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax152 + 4)) > reinterpret_cast<signed char>(0)) {
                            esi153 = reinterpret_cast<void*>(0);
                            ebx154 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi134 + reinterpret_cast<unsigned char>(esi134) * 2) * 4);
                            do {
                                edx155 = g44cec4;
                                ebp156 = g44cec0;
                                ebp157 = reinterpret_cast<struct s159*>(reinterpret_cast<unsigned char>(ebp156) + reinterpret_cast<uint32_t>(ebx154));
                                edx158 = reinterpret_cast<struct s57*>(reinterpret_cast<unsigned char>(edx155) + reinterpret_cast<uint32_t>(esi153) + 8);
                                ebx154 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx154) + 12);
                                eax159 = ebp157->fc;
                                ecx160 = edx158->f8;
                                esi153 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi153) + 12);
                                ++edi151;
                                eax161 = ebp157->f10;
                                v162 = (ebp157->f8 & 0xffff) + (eax159 << 24);
                                eax163 = g44ceb4;
                                fun_407fa0(reinterpret_cast<uint32_t>(eax163) + ecx160 + 1, eax161 - ecx160 - 1, v162, reinterpret_cast<int32_t>(eax159) >> 8, edx158);
                                ecx164 = g45305c;
                                eax165 = g44cec4;
                                tmp32_166 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ceb4) + reinterpret_cast<uint32_t>(ecx164));
                                g44ceb4 = tmp32_166;
                            } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax165 + 4)) > reinterpret_cast<signed char>(edi151));
                            return;
                        }
                    }
                    return;
                } else {
                    fun_408750(a1);
                    return;
                }
            } else {
                fun_408750(a1);
                return;
            }
        } else {
            fun_408750(a1);
            return;
        }
    } else {
        fun_408750(a1);
        return;
    }
}

int32_t DirectDrawCreate = 0x5549a;

int32_t fun_409470() {
    goto DirectDrawCreate;
}

int32_t g43c8e8;

struct s160 {
    signed char[44] pad44;
    int32_t f2c;
    int32_t f30;
    signed char[44] pad96;
    int32_t f60;
    signed char[8] pad108;
    int32_t f6c;
    int32_t f70;
    signed char[8] pad124;
    int32_t f7c;
};

struct s160** g43c914;

int32_t g43c8ec;

struct s161 {
    signed char[96] pad96;
    int32_t f60;
    signed char[8] pad108;
    int32_t f6c;
};

struct s162 {
    signed char[96] pad96;
    int32_t f60;
    signed char[8] pad108;
    int32_t f6c;
};

int32_t fun_406250() {
    int32_t edi1;
    int1_t zf2;
    struct s160** eax3;
    struct s160* ebx4;
    int32_t eax5;
    struct s160** eax6;
    struct s160* ebx7;
    struct s161*** esi8;
    struct s161** eax9;
    struct s161* eax10;
    int32_t eax11;
    struct s161** eax12;
    struct s161* eax13;
    struct s162*** esi14;
    struct s162** eax15;
    struct s162* eax16;
    int32_t eax17;
    struct s162** eax18;
    struct s162* eax19;
    int32_t eax20;

    edi1 = 0;
    zf2 = g43c8e8 == 1;
    if (zf2 && (eax3 = g43c914, ebx4 = *eax3, eax5 = reinterpret_cast<int32_t>(ebx4->f60(eax3)), eax5 == 0x887601c2)) {
        eax6 = g43c914;
        edi1 = 1;
        ebx7 = *eax6;
        ebx7->f6c(eax6, eax3);
        g43c8ec = 1;
    }
    esi8 = reinterpret_cast<struct s161***>(0x43c824);
    do {
        if (*reinterpret_cast<int32_t*>(esi8 - 11) == 1 && (eax9 = *esi8, eax10 = *eax9, eax11 = reinterpret_cast<int32_t>(eax10->f60(eax9)), eax11 == 0x887601c2)) {
            eax12 = *esi8;
            ++edi1;
            eax13 = *eax12;
            eax13->f6c(eax12, eax9);
            *reinterpret_cast<int32_t*>(esi8 - 10) = 1;
        }
        esi8 = esi8 + 12;
    } while (reinterpret_cast<uint32_t>(esi8) < 0x43c914);
    esi14 = reinterpret_cast<struct s162***>(0x43c944);
    do {
        if (*reinterpret_cast<int32_t*>(esi14 - 11) == 1 && (eax15 = *esi14, eax16 = *eax15, eax17 = reinterpret_cast<int32_t>(eax16->f60(eax15)), eax17 == 0x887601c2)) {
            eax18 = *esi14;
            ++edi1;
            eax19 = *eax18;
            eax19->f6c(eax18, eax15);
            *reinterpret_cast<int32_t*>(esi14 - 10) = 1;
        }
        esi14 = esi14 + 12;
    } while (reinterpret_cast<uint32_t>(esi14) < 0x43cd04);
    eax20 = 0;
    if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(edi1 < 0) | reinterpret_cast<uint1_t>(edi1 == 0))) {
        eax20 = 1;
    }
    return eax20;
}

int32_t fun_404530(struct s160** a1, int32_t a2, int32_t a3, int32_t a4) {
    int32_t* eax5;
    int32_t* eax6;
    int32_t* eax7;

    eax5 = reinterpret_cast<int32_t*>(0x43c8e8);
    do {
        *eax5 = 0;
        eax5 = eax5 + 12;
        *(eax5 - 11) = 0;
        *(eax5 - 10) = 0;
        *(eax5 - 9) = 0;
        *(eax5 - 8) = 0;
        *(eax5 - 7) = 0;
        *(eax5 - 6) = 0;
        *(eax5 - 5) = 0;
        *(eax5 - 4) = 0;
        *(eax5 - 3) = 0;
        *(eax5 - 2) = 0;
        *(eax5 - 1) = 0;
    } while (reinterpret_cast<uint32_t>(eax5) < 0x43c918);
    eax6 = reinterpret_cast<int32_t*>(0x43c7f8);
    do {
        *eax6 = 0;
        eax6 = eax6 + 12;
        *(eax6 - 11) = 0;
        *(eax6 - 10) = 0;
        *(eax6 - 9) = 0;
        *(eax6 - 8) = 0;
        *(eax6 - 7) = 0;
        *(eax6 - 6) = 0;
        *(eax6 - 5) = 0;
        *(eax6 - 4) = 0;
        *(eax6 - 3) = 0;
        *(eax6 - 2) = 1;
        *(eax6 - 1) = 0;
    } while (reinterpret_cast<uint32_t>(eax6) < 0x43c8e8);
    eax7 = reinterpret_cast<int32_t*>(0x43c918);
    do {
        *eax7 = 0;
        eax7 = eax7 + 12;
        *(eax7 - 11) = 0;
        *(eax7 - 10) = 0;
        *(eax7 - 9) = 0;
        *(eax7 - 8) = 0;
        *(eax7 - 7) = 0;
        *(eax7 - 6) = 0;
        *(eax7 - 5) = 0;
        *(eax7 - 4) = 0;
        *(eax7 - 3) = 0;
        *(eax7 - 2) = 2;
        *(eax7 - 1) = 0;
    } while (reinterpret_cast<uint32_t>(eax7) < 0x43ccd8);
    return 1;
}

void fun_406ba0(void** a1, void** a2) {
    void** ebx3;
    void** v4;
    void** eax5;
    void** ebp6;
    void*** esi7;
    void** eax8;
    void** v9;
    void** edi10;
    int32_t ecx11;
    void** v12;
    void*** esi13;
    void** eax14;
    void** edi15;
    int32_t ecx16;
    void** eax17;
    void** eax18;
    void*** ecx19;

    ebx3 = a2;
    while (1) {
        if (ebx3) {
            do {
                v4 = *reinterpret_cast<void***>(ebx3 + 12);
                eax5 = fun_406d50(a1, v4);
                ebp6 = eax5;
                if (ebp6) 
                    goto addr_406bdc_4;
                ebx3 = *reinterpret_cast<void***>(ebx3 + 20);
            } while (ebx3);
            fun_406cc0();
            ebx3 = g444b28;
        } else {
            fun_406cc0();
            ebx3 = g444b28;
        }
    }
    addr_406bdc_4:
    if (!reinterpret_cast<int1_t>(ebp6 == 0xffffffff)) {
        esi7 = reinterpret_cast<void***>(0x4448e8);
        eax8 = fun_406470(24);
        v9 = eax8;
        edi10 = eax8;
        ecx11 = 6;
        while (ecx11) {
            --ecx11;
            *reinterpret_cast<void***>(edi10) = *esi7;
            edi10 = edi10 + 4;
            esi7 = esi7 + 4;
        }
        *reinterpret_cast<void***>(v9) = *reinterpret_cast<void***>(ebp6 + 4);
        *reinterpret_cast<void***>(v9 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp6 + 4)) + reinterpret_cast<unsigned char>(a1));
        *reinterpret_cast<void***>(v9 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx3 + 8)) + (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v9)) << 8));
        v12 = *reinterpret_cast<void***>(ebp6 + 20);
        fun_406b70(ebp6, v9, v12);
    } else {
        esi13 = reinterpret_cast<void***>(0x4448e8);
        eax14 = fun_406470(24);
        v9 = eax14;
        edi15 = eax14;
        ecx16 = 6;
        while (ecx16) {
            --ecx16;
            *reinterpret_cast<void***>(edi15) = *esi13;
            edi15 = edi15 + 4;
            esi13 = esi13 + 4;
        }
        *reinterpret_cast<void***>(v9 + 4) = a1;
        *reinterpret_cast<void***>(v9 + 8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx3 + 8)) + (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v9)) << 8));
        eax17 = *reinterpret_cast<void***>(ebx3 + 12);
        *reinterpret_cast<void***>(v9 + 20) = eax17;
        if (!eax17) 
            goto addr_406c26_17; else 
            goto addr_406c23_18;
    }
    addr_406c87_19:
    eax18 = fun_406470(8);
    ecx19 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(a1) * 4 + 0x444c40);
    *reinterpret_cast<void***>(eax18) = *ecx19;
    *reinterpret_cast<void***>(eax18 + 4) = v9;
    *ecx19 = eax18;
    return;
    addr_406c26_17:
    *reinterpret_cast<void***>(ebx3 + 12) = v9;
    goto addr_406c87_19;
    addr_406c23_18:
    *reinterpret_cast<void***>(eax17 + 16) = v9;
    goto addr_406c26_17;
}

void fun_406710(void** a1, void*** a2) {
    void*** ecx3;
    int1_t less4;
    void** ebp5;
    void** v6;
    void*** eax7;
    void*** eax8;
    void** ebx9;
    void** esi10;
    void** edi11;
    int32_t ecx12;
    void** v13;
    void** v14;
    void** eax15;
    void** ecx16;

    ecx3 = a2;
    if (reinterpret_cast<int32_t>(ecx3) < 0 || (less4 = reinterpret_cast<int32_t>(ecx3) < reinterpret_cast<int32_t>(g445070), !less4)) {
        ecx3 = reinterpret_cast<void***>(0);
        ebp5 = v6;
    } else {
        eax7 = g445074;
        if (!eax7[reinterpret_cast<int32_t>(ecx3) * 4]) {
            ecx3 = reinterpret_cast<void***>(0);
        }
        eax8 = g445074;
        ebp5 = eax8[reinterpret_cast<int32_t>(ecx3) * 4];
    }
    if (!ecx3) {
        ebp5 = reinterpret_cast<void**>(0x444870);
    }
    ebx9 = a1;
    esi10 = ebp5;
    edi11 = ebx9;
    ecx12 = 16;
    while (ecx12) {
        --ecx12;
        *reinterpret_cast<void***>(edi11) = *reinterpret_cast<void***>(esi10);
        edi11 = edi11 + 4;
        esi10 = esi10 + 4;
    }
    v13 = *reinterpret_cast<void***>(ebp5);
    fun_4065a0(v13, ebx9);
    *reinterpret_cast<void***>(ebx9 + 24) = *reinterpret_cast<void***>(ebx9);
    v14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx9 + 8)) * reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx9 + 4)));
    eax15 = fun_406470(v14);
    ecx16 = *reinterpret_cast<void***>(ebx9 + 4);
    *reinterpret_cast<void***>(ebx9 + 16) = eax15;
    *reinterpret_cast<void***>(ebx9 + 20) = ecx16;
    fun_4067a0(ebp5, ebx9);
    *reinterpret_cast<void***>(ebx9 + 28) = *reinterpret_cast<void***>(ebx9 + 16);
    return;
}

signed char* g41caa0 = reinterpret_cast<signed char*>(0);

struct s163 {
    signed char[4] pad4;
    unsigned char f4;
};

signed char g41caa8 = 0;

signed char g41ca98 = 0;

uint32_t g41ca9c = 0;

signed char* g41caa4 = reinterpret_cast<signed char*>(0);

void fun_408fca(uint32_t ecx) {
    int32_t ebp2;
    int32_t ebx3;
    signed char* ebx4;
    struct s163* eax5;
    signed char* eax6;
    signed char dl7;
    uint32_t ebp8;
    signed char* eax9;
    int32_t esi10;
    int32_t esi11;
    uint32_t tmp32_12;
    uint1_t cf13;
    int32_t edi14;
    int32_t edi15;
    int32_t edi16;
    int32_t edi17;

    ebp2 = ebx3;
    ebx4 = g41caa0;
    *reinterpret_cast<unsigned char*>(&ebx4) = eax5->f4;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *eax6;
    g41caa8 = *ebx4;
    *reinterpret_cast<int16_t*>(&ebx4) = *reinterpret_cast<int16_t*>(&ebp2);
    dl7 = g41ca98;
    ebp8 = g41ca9c;
    eax9 = g41caa4;
    esi10 = esi11 - 1;
    if (esi10 >= 0) {
        do {
            tmp32_12 = ecx + ebp8;
            cf13 = reinterpret_cast<uint1_t>(tmp32_12 < ecx);
            ecx = tmp32_12;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1);
            *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + dl7) + cf13);
            *reinterpret_cast<signed char*>(&eax9) = *reinterpret_cast<signed char*>(edi14 + esi10);
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax9) + 1) = *ebx4;
            *reinterpret_cast<signed char*>(edi15 + esi10) = *eax9;
            --esi10;
        } while (esi10 >= 0);
    }
    if (esi10 >= -1) {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax9) + 1) = g41caa8;
        *reinterpret_cast<signed char*>(&eax9) = *reinterpret_cast<signed char*>(edi16 + esi10);
        *reinterpret_cast<signed char*>(edi17 + esi10) = *eax9;
    }
    return;
}

void fun_408fa4(signed char* ecx) {
    signed char* edx2;
    uint32_t ebx3;
    int32_t ebx4;
    uint32_t eax5;
    int32_t eax6;

    g41caa4 = edx2;
    ebx3 = reinterpret_cast<uint32_t>(-ebx4);
    eax5 = reinterpret_cast<uint32_t>(-eax6) >> 8;
    g41caa0 = ecx;
    __asm__("ror ebx, 0x10");
    g41ca98 = *reinterpret_cast<signed char*>(&ebx3);
    *reinterpret_cast<int16_t*>(&ebx3) = *reinterpret_cast<int16_t*>(&eax5);
    g41ca9c = ebx3;
    return;
}

void fun_40901f(uint32_t ecx) {
    int32_t ebp2;
    int32_t ebx3;
    signed char* ebx4;
    signed char dl5;
    uint32_t ebp6;
    signed char* eax7;
    int32_t esi8;
    int32_t esi9;
    uint32_t tmp32_10;
    uint1_t cf11;
    int32_t edi12;
    int32_t edi13;

    ebp2 = ebx3;
    ebx4 = g41caa0;
    *reinterpret_cast<int16_t*>(&ebx4) = *reinterpret_cast<int16_t*>(&ebp2);
    dl5 = g41ca98;
    ebp6 = g41ca9c;
    eax7 = g41caa4;
    esi8 = esi9 - 1;
    if (esi8 >= 0) {
        do {
            tmp32_10 = ecx + ebp6;
            cf11 = reinterpret_cast<uint1_t>(tmp32_10 < ecx);
            ecx = tmp32_10;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1);
            *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + dl5) + cf11);
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax7) + 1) = *ebx4;
            *reinterpret_cast<signed char*>(&eax7) = *reinterpret_cast<signed char*>(edi12 + esi8);
            *reinterpret_cast<signed char*>(edi13 + esi8) = *eax7;
            --esi8;
        } while (esi8 >= 0);
    }
    return;
}

signed char* g41cc3c = reinterpret_cast<signed char*>(0);

struct s164 {
    signed char[4] pad4;
    unsigned char f4;
};

signed char g41cc44 = 0;

signed char g41cc34 = 0;

uint32_t g41cc38 = 0;

void fun_4090d8(uint32_t ecx) {
    int32_t ebp2;
    int32_t ebx3;
    signed char* ebx4;
    struct s164* eax5;
    signed char* eax6;
    signed char dl7;
    uint32_t ebp8;
    int32_t esi9;
    int32_t esi10;
    uint32_t tmp32_11;
    uint32_t ecx12;
    uint32_t eax13;
    uint32_t tmp32_14;
    uint32_t ecx15;
    uint32_t tmp32_16;
    uint32_t ecx17;
    uint32_t tmp32_18;
    int32_t edi19;
    int32_t esi20;
    uint32_t tmp32_21;
    uint1_t cf22;
    int32_t edi23;
    signed char al24;
    int32_t edi25;

    ebp2 = ebx3;
    ebx4 = g41cc3c;
    *reinterpret_cast<unsigned char*>(&ebx4) = eax5->f4;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *eax6;
    g41cc44 = *ebx4;
    *reinterpret_cast<int16_t*>(&ebx4) = *reinterpret_cast<int16_t*>(&ebp2);
    dl7 = g41cc34;
    ebp8 = g41cc38;
    esi9 = esi10 - 4;
    if (esi9 >= 0) {
        do {
            tmp32_11 = ecx + ebp8;
            ecx12 = tmp32_11;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx12) + 1);
            *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + dl7) + reinterpret_cast<uint1_t>(tmp32_11 < ecx));
            *reinterpret_cast<signed char*>(&eax13) = *ebx4;
            tmp32_14 = ecx12 + ebp8;
            ecx15 = tmp32_14;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx15) + 1);
            *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + dl7) + reinterpret_cast<uint1_t>(tmp32_14 < ecx12));
            tmp32_16 = ecx15 + ebp8;
            ecx17 = tmp32_16;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax13) + 1) = *ebx4;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx17) + 1);
            *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + dl7) + reinterpret_cast<uint1_t>(tmp32_16 < ecx15));
            eax13 = eax13 >> 24 | eax13 >> 8 & 0xff00 | eax13 << 8 & 0xff0000 | eax13 << 24;
            tmp32_18 = ecx17 + ebp8;
            ecx = tmp32_18;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax13) + 1) = *ebx4;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1);
            *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + dl7) + reinterpret_cast<uint1_t>(tmp32_18 < ecx17));
            *reinterpret_cast<signed char*>(&eax13) = *ebx4;
            *reinterpret_cast<uint32_t*>(edi19 + esi9) = eax13;
            esi9 = esi9 - 4;
        } while (esi9 >= 0);
    }
    esi20 = esi9 + 3;
    if (esi20 >= 0) {
        do {
            tmp32_21 = ecx + ebp8;
            cf22 = reinterpret_cast<uint1_t>(tmp32_21 < ecx);
            ecx = tmp32_21;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1);
            *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + dl7) + cf22);
            *reinterpret_cast<signed char*>(edi23 + esi20) = *ebx4;
            --esi20;
        } while (esi20 >= 0);
    }
    if (esi20 >= -1) {
        al24 = g41cc44;
        *reinterpret_cast<signed char*>(edi25 + esi20) = al24;
    }
    return;
}

void fun_4090b8(signed char* ecx) {
    uint32_t ebx2;
    int32_t ebx3;
    uint32_t eax4;
    int32_t eax5;

    ebx2 = reinterpret_cast<uint32_t>(-ebx3);
    eax4 = reinterpret_cast<uint32_t>(-eax5) >> 8;
    g41cc3c = ecx;
    __asm__("ror ebx, 0x10");
    g41cc34 = *reinterpret_cast<signed char*>(&ebx2);
    *reinterpret_cast<int16_t*>(&ebx2) = *reinterpret_cast<int16_t*>(&eax4);
    g41cc38 = ebx2;
    return;
}

void fun_40914e(uint32_t ecx) {
    int32_t ebp2;
    int32_t ebx3;
    signed char* ebx4;
    signed char dl5;
    uint32_t ebp6;
    int32_t esi7;
    int32_t esi8;
    uint32_t tmp32_9;
    uint32_t ecx10;
    uint32_t tmp32_11;
    uint32_t ecx12;
    uint32_t eax13;
    uint32_t tmp32_14;
    uint32_t ecx15;
    uint32_t tmp32_16;
    int32_t edi17;
    int32_t esi18;
    uint32_t tmp32_19;
    uint1_t cf20;
    int32_t edi21;

    ebp2 = ebx3;
    ebx4 = g41cc3c;
    *reinterpret_cast<int16_t*>(&ebx4) = *reinterpret_cast<int16_t*>(&ebp2);
    dl5 = g41cc34;
    ebp6 = g41cc38;
    esi7 = esi8 - 4;
    if (esi7 >= 0) {
        do {
            tmp32_9 = ecx + ebp6;
            ecx10 = tmp32_9;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx10) + 1);
            *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + dl5) + reinterpret_cast<uint1_t>(tmp32_9 < ecx));
            tmp32_11 = ecx10 + ebp6;
            ecx12 = tmp32_11;
            *reinterpret_cast<signed char*>(&eax13) = *ebx4;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx12) + 1);
            *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + dl5) + reinterpret_cast<uint1_t>(tmp32_11 < ecx10));
            tmp32_14 = ecx12 + ebp6;
            ecx15 = tmp32_14;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax13) + 1) = *ebx4;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx15) + 1);
            *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + dl5) + reinterpret_cast<uint1_t>(tmp32_14 < ecx12));
            eax13 = eax13 >> 24 | eax13 >> 8 & 0xff00 | eax13 << 8 & 0xff0000 | eax13 << 24;
            tmp32_16 = ecx15 + ebp6;
            ecx = tmp32_16;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax13) + 1) = *ebx4;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1);
            *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + dl5) + reinterpret_cast<uint1_t>(tmp32_16 < ecx15));
            *reinterpret_cast<signed char*>(&eax13) = *ebx4;
            *reinterpret_cast<uint32_t*>(edi17 + esi7) = eax13;
            esi7 = esi7 - 4;
        } while (esi7 >= 0);
    }
    esi18 = esi7 + 3;
    if (esi18 >= 0) {
        do {
            tmp32_19 = ecx + ebp6;
            cf20 = reinterpret_cast<uint1_t>(tmp32_19 < ecx);
            ecx = tmp32_19;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1);
            *reinterpret_cast<unsigned char*>(&ebx4) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx4) + dl5) + cf20);
            *reinterpret_cast<signed char*>(edi21 + esi18) = *ebx4;
            --esi18;
        } while (esi18 >= 0);
    }
    return;
}

void* g44ce04;

void* g44ce00;

void* g44ce08;

void* g44ce0c;

int32_t g44ce10;

int32_t g44ce14;

int32_t g44ce18;

int32_t g44ce1c;

struct s165 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s166 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s167 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

struct s168 {
    signed char[8] pad8;
    uint32_t f8;
    uint32_t fc;
    int32_t f10;
};

void fun_4071f0(struct s41* a1) {
    void* ecx2;
    void* edx3;
    int1_t less_or_equal4;
    void* eax5;
    void* ecx6;
    void* eax7;
    void* eax8;
    int1_t less_or_equal9;
    void* eax10;
    int1_t less_or_equal11;
    void* eax12;
    int1_t less_or_equal13;
    void* ecx14;
    int32_t edx15;
    void* ebx16;
    void* ecx17;
    int32_t eax18;
    int32_t eax19;
    int32_t edx20;
    void* eax21;
    int1_t less_or_equal22;
    void* eax23;
    int1_t less24;
    void* ecx25;
    int32_t edx26;
    void* ebx27;
    void* ecx28;
    int32_t eax29;
    int32_t eax30;
    int32_t edx31;
    void* ecx32;
    int32_t edx33;
    void* ebx34;
    void* ecx35;
    int32_t eax36;
    int32_t eax37;
    int32_t edx38;
    void* eax39;
    int1_t less40;
    void* eax41;
    int1_t less_or_equal42;
    void* eax43;
    int1_t less_or_equal44;
    void* eax45;
    int1_t less46;
    signed char* ecx47;
    int32_t v48;
    int32_t edx49;
    int32_t eax50;
    void* ecx51;
    void* edx52;
    void* eax53;
    void* ecx54;
    int32_t eax55;
    void* ecx56;
    void* eax57;
    void* edx58;
    void* ecx59;
    int32_t eax60;
    void* ecx61;
    void* edx62;
    void* eax63;
    int32_t ecx64;
    void* eax65;
    int32_t edx66;
    int32_t eax67;
    int32_t ecx68;
    void* eax69;
    void* ecx70;
    void* edx71;
    void* eax72;
    int32_t ecx73;
    int32_t edx74;
    int32_t eax75;
    int32_t ecx76;
    void* eax77;
    void* ecx78;
    void* edx79;
    void* eax80;
    int32_t ecx81;
    int32_t edx82;
    int32_t eax83;
    int32_t ecx84;
    void** eax85;
    void** esi86;
    void** edi87;
    void* eax88;
    void* tmp32_89;
    void** eax90;
    void** ebp91;
    void** ebx92;
    struct s165* ebx93;
    struct s44* ebp94;
    uint32_t edx95;
    int32_t ecx96;
    uint32_t v97;
    uint32_t v98;
    void* eax99;
    struct s24* ecx100;
    void** eax101;
    void* tmp32_102;
    void** eax103;
    void** esi104;
    void** ebx105;
    void* edi106;
    void** edx107;
    void** ebp108;
    struct s166* ebp109;
    struct s44* edx110;
    uint32_t eax111;
    int32_t ecx112;
    int32_t eax113;
    uint32_t v114;
    void* eax115;
    struct s24* ecx116;
    void** eax117;
    void* tmp32_118;
    void* eax119;
    void* ecx120;
    void* edx121;
    void* eax122;
    int32_t ecx123;
    int32_t edx124;
    int32_t eax125;
    int32_t ecx126;
    void* eax127;
    void* ecx128;
    void* edx129;
    void* eax130;
    int32_t ecx131;
    int32_t edx132;
    int32_t eax133;
    int32_t ecx134;
    void** eax135;
    void** esi136;
    void* eax137;
    void* tmp32_138;
    void** eax139;
    void* edi140;
    void** ebp141;
    void** ebx142;
    struct s167* ebx143;
    struct s44* ebp144;
    uint32_t edx145;
    int32_t ecx146;
    uint32_t v147;
    uint32_t v148;
    void* eax149;
    struct s24* ecx150;
    void** eax151;
    void* tmp32_152;
    void** edi153;
    void** eax154;
    void* esi155;
    void* ebx156;
    void** edx157;
    void** ebp158;
    struct s168* ebp159;
    struct s44* edx160;
    uint32_t eax161;
    int32_t ecx162;
    int32_t eax163;
    uint32_t v164;
    void* eax165;
    struct s24* ecx166;
    void** eax167;
    void* tmp32_168;

    g41caac = a1->f4;
    g41cab0 = a1->f8;
    g41cab4 = a1->fc;
    g41cab8 = a1->f10;
    g41cabc = a1->f14;
    g41cac0 = a1->f18;
    g41cac4 = a1->f1c;
    g41cac8 = a1->f20;
    g41cacc = a1->f24;
    g41cad0 = a1->f28;
    g41cad4 = a1->f2c;
    ecx2 = g453068;
    g41cad8 = a1->f30;
    edx3 = g41cab4;
    less_or_equal4 = reinterpret_cast<int32_t>(g41caac) <= reinterpret_cast<int32_t>(edx3);
    g44ce24 = a1->f34;
    g44ce30 = ecx2;
    if (less_or_equal4) {
        eax5 = g41cab4;
        ecx6 = g41caac;
        g44ce58 = eax5;
        g44ce34 = ecx6;
    } else {
        eax7 = g41caac;
        g44ce34 = edx3;
        g44ce58 = eax7;
    }
    eax8 = g44ce58;
    less_or_equal9 = reinterpret_cast<int32_t>(g41cabc) <= reinterpret_cast<int32_t>(eax8);
    eax10 = g41cabc;
    if (less_or_equal9) {
        less_or_equal11 = reinterpret_cast<int32_t>(g44ce34) <= reinterpret_cast<int32_t>(eax10);
        if (!less_or_equal11) {
            g44ce34 = eax10;
        }
    } else {
        g44ce58 = eax10;
    }
    eax12 = g41cac0;
    less_or_equal13 = reinterpret_cast<int32_t>(g41cab0) <= reinterpret_cast<int32_t>(eax12);
    if (!less_or_equal13) {
        ecx14 = g41cab0;
        edx15 = g41cad8;
        ebx16 = g41cabc;
        g41cac0 = ecx14;
        ecx17 = g41caac;
        g41cab0 = eax12;
        eax18 = g41cac8;
        g41cabc = ecx17;
        g41cad8 = eax18;
        g41cac8 = edx15;
        eax19 = g41cad4;
        edx20 = g41cac4;
        g41caac = ebx16;
        g41cad4 = edx20;
        g41cac4 = eax19;
    }
    eax21 = g41cab8;
    less_or_equal22 = reinterpret_cast<int32_t>(g41cab0) <= reinterpret_cast<int32_t>(eax21);
    if (less_or_equal22) {
        eax23 = g41cab8;
        less24 = reinterpret_cast<int32_t>(g41cac0) < reinterpret_cast<int32_t>(eax23);
        if (less24) {
            ecx25 = g41cac0;
            edx26 = g41cad0;
            ebx27 = g41cab4;
            g41cab8 = ecx25;
            ecx28 = g41cabc;
            g41cac0 = eax23;
            eax29 = g41cad8;
            g41cab4 = ecx28;
            g41cad0 = eax29;
            g41cad8 = edx26;
            eax30 = g41cacc;
            edx31 = g41cad4;
            g41cabc = ebx27;
            g41cacc = edx31;
            g41cad4 = eax30;
        }
    } else {
        ecx32 = g41cab0;
        edx33 = g41cad0;
        ebx34 = g41cab4;
        g41cab8 = ecx32;
        ecx35 = g41caac;
        g41cab0 = eax21;
        eax36 = g41cac8;
        g41cab4 = ecx35;
        g41cad0 = eax36;
        g41cac8 = edx33;
        eax37 = g41cacc;
        edx38 = g41cac4;
        g41caac = ebx34;
        g41cacc = edx38;
        g41cac4 = eax37;
    }
    eax39 = g453044;
    less40 = reinterpret_cast<int32_t>(g41cab0) < reinterpret_cast<int32_t>(eax39);
    if (!less40) {
        eax41 = g453058;
        less_or_equal42 = reinterpret_cast<int32_t>(g41cac0) <= reinterpret_cast<int32_t>(eax41);
        if (less_or_equal42) {
            eax43 = g453064;
            less_or_equal44 = reinterpret_cast<int32_t>(g44ce58) <= reinterpret_cast<int32_t>(eax43);
            if (less_or_equal44) {
                eax45 = g453060;
                less46 = reinterpret_cast<int32_t>(g44ce34) < reinterpret_cast<int32_t>(eax45);
                if (!less46) {
                    fun_456000();
                    ecx47 = g44ce24;
                    v48 = a1->f38;
                    edx49 = g41cadc;
                    eax50 = g41cae0;
                    fun_407130(eax50, edx49, ecx47, v48);
                    ecx51 = g41cac0;
                    edx52 = g41cabc;
                    eax53 = g41cab0;
                    ecx54 = g41caac;
                    eax55 = fun_407f40(ecx54, eax53, edx52, ecx51);
                    ecx56 = g41cab8;
                    eax57 = g41cab4;
                    edx58 = g41cab0;
                    ecx59 = g41caac;
                    eax60 = fun_407f40(ecx59, edx58, eax57, ecx56);
                    ecx61 = g41cab0;
                    edx62 = g41cab4;
                    eax63 = g41caac;
                    g44ce04 = ecx61;
                    ecx64 = g41cac4;
                    g44ce00 = eax63;
                    eax65 = g41cab8;
                    g44ce08 = edx62;
                    edx66 = g41cac8;
                    g44ce0c = eax65;
                    eax67 = g41cacc;
                    g44ce10 = ecx64;
                    ecx68 = g41cad0;
                    g44ce14 = edx66;
                    g44ce18 = eax67;
                    g44ce1c = ecx68;
                    if (eax55 <= eax60) {
                        fun_456180();
                        eax69 = g41caac;
                        ecx70 = g41cab0;
                        edx71 = g41cabc;
                        g44ce00 = eax69;
                        eax72 = g41cac0;
                        g44ce04 = ecx70;
                        ecx73 = g41cac4;
                        g44ce08 = edx71;
                        edx74 = g41cac8;
                        g44ce0c = eax72;
                        eax75 = g41cad4;
                        g44ce10 = ecx73;
                        ecx76 = g41cad8;
                        g44ce14 = edx74;
                        g44ce18 = eax75;
                        g44ce1c = ecx76;
                        fun_4561c0();
                        eax77 = g41cab4;
                        ecx78 = g41cab8;
                        edx79 = g41cabc;
                        g44ce00 = eax77;
                        eax80 = g41cac0;
                        g44ce04 = ecx78;
                        ecx81 = g41cacc;
                        g44ce08 = edx79;
                        edx82 = g41cad0;
                        g44ce0c = eax80;
                        eax83 = g41cad4;
                        g44ce10 = ecx81;
                        ecx84 = g41cad8;
                        g44ce14 = edx82;
                        g44ce18 = eax83;
                        g44ce1c = ecx84;
                        fun_456180();
                        eax85 = g44ce3c;
                        esi86 = reinterpret_cast<void**>(0);
                        edi87 = reinterpret_cast<void**>(0);
                        eax88 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax85)) * reinterpret_cast<uint32_t>(g45305c));
                        tmp32_89 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ce30) + reinterpret_cast<uint32_t>(eax88));
                        g44ce30 = tmp32_89;
                        eax90 = g44ce38;
                        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax90 + 4)) > reinterpret_cast<signed char>(0)) {
                            do {
                                ebp91 = g44ce3c;
                                ebx92 = g44ce38;
                                ebx93 = reinterpret_cast<struct s165*>(reinterpret_cast<unsigned char>(ebx92) + reinterpret_cast<unsigned char>(esi86));
                                ebp94 = reinterpret_cast<struct s44*>(reinterpret_cast<unsigned char>(ebp91) + reinterpret_cast<unsigned char>(esi86) + 8);
                                esi86 = esi86 + 12;
                                edx95 = ebx93->fc;
                                ecx96 = ebp94->f8;
                                ++edi87;
                                v97 = (ebx93->f8 & 0xffff) + (edx95 << 24);
                                v98 = reinterpret_cast<uint32_t>(ebx93->f10 - ecx96 - 1);
                                eax99 = g44ce30;
                                fun_407150(reinterpret_cast<uint32_t>(eax99) + ecx96 + 1, v98, v97, reinterpret_cast<int32_t>(edx95) >> 8, ebp94);
                                ecx100 = g45305c;
                                eax101 = g44ce38;
                                tmp32_102 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ce30) + reinterpret_cast<uint32_t>(ecx100));
                                g44ce30 = tmp32_102;
                            } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax101 + 4)) > reinterpret_cast<signed char>(edi87));
                        }
                        eax103 = g44ce40;
                        esi104 = reinterpret_cast<void**>(0);
                        ebx105 = reinterpret_cast<void**>(0);
                        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax103 + 4)) > reinterpret_cast<signed char>(0)) {
                            edi106 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi87 + reinterpret_cast<unsigned char>(edi87) * 2) * 4);
                            do {
                                edx107 = g44ce3c;
                                ebp108 = g44ce40;
                                ebp109 = reinterpret_cast<struct s166*>(reinterpret_cast<unsigned char>(ebp108) + reinterpret_cast<unsigned char>(esi104));
                                edx110 = reinterpret_cast<struct s44*>(reinterpret_cast<unsigned char>(edx107) + reinterpret_cast<uint32_t>(edi106) + 8);
                                edi106 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi106) + 12);
                                eax111 = ebp109->fc;
                                ecx112 = edx110->f8;
                                esi104 = esi104 + 12;
                                ++ebx105;
                                eax113 = ebp109->f10;
                                v114 = (ebp109->f8 & 0xffff) + (eax111 << 24);
                                eax115 = g44ce30;
                                fun_407150(reinterpret_cast<uint32_t>(eax115) + ecx112 + 1, eax113 - ecx112 - 1, v114, reinterpret_cast<int32_t>(eax111) >> 8, edx110);
                                ecx116 = g45305c;
                                eax117 = g44ce40;
                                tmp32_118 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ce30) + reinterpret_cast<uint32_t>(ecx116));
                                g44ce30 = tmp32_118;
                            } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax117 + 4)) > reinterpret_cast<signed char>(ebx105));
                        }
                    } else {
                        fun_4561c0();
                        eax119 = g41caac;
                        ecx120 = g41cab0;
                        edx121 = g41cabc;
                        g44ce00 = eax119;
                        eax122 = g41cac0;
                        g44ce04 = ecx120;
                        ecx123 = g41cac4;
                        g44ce08 = edx121;
                        edx124 = g41cac8;
                        g44ce0c = eax122;
                        eax125 = g41cad4;
                        g44ce10 = ecx123;
                        ecx126 = g41cad8;
                        g44ce14 = edx124;
                        g44ce18 = eax125;
                        g44ce1c = ecx126;
                        fun_456180();
                        eax127 = g41cab4;
                        ecx128 = g41cab8;
                        edx129 = g41cabc;
                        g44ce00 = eax127;
                        eax130 = g41cac0;
                        g44ce04 = ecx128;
                        ecx131 = g41cacc;
                        g44ce08 = edx129;
                        edx132 = g41cad0;
                        g44ce0c = eax130;
                        eax133 = g41cad4;
                        g44ce10 = ecx131;
                        ecx134 = g41cad8;
                        g44ce14 = edx132;
                        g44ce18 = eax133;
                        g44ce1c = ecx134;
                        fun_4561c0();
                        eax135 = g44ce38;
                        esi136 = reinterpret_cast<void**>(0);
                        eax137 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax135)) * reinterpret_cast<uint32_t>(g45305c));
                        tmp32_138 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ce30) + reinterpret_cast<uint32_t>(eax137));
                        g44ce30 = tmp32_138;
                        eax139 = g44ce38;
                        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax139 + 4)) > reinterpret_cast<signed char>(0)) {
                            edi140 = reinterpret_cast<void*>(0);
                            do {
                                ebp141 = g44ce38;
                                ebx142 = g44ce3c;
                                ebx143 = reinterpret_cast<struct s167*>(reinterpret_cast<unsigned char>(ebx142) + reinterpret_cast<uint32_t>(edi140));
                                ebp144 = reinterpret_cast<struct s44*>(reinterpret_cast<unsigned char>(ebp141) + reinterpret_cast<uint32_t>(edi140) + 8);
                                edi140 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi140) + 12);
                                edx145 = ebx143->fc;
                                ecx146 = ebp144->f8;
                                ++esi136;
                                v147 = (ebx143->f8 & 0xffff) + (edx145 << 24);
                                v148 = reinterpret_cast<uint32_t>(ebx143->f10 - ecx146 - 1);
                                eax149 = g44ce30;
                                fun_407150(reinterpret_cast<uint32_t>(eax149) + ecx146 + 1, v148, v147, reinterpret_cast<int32_t>(edx145) >> 8, ebp144);
                                ecx150 = g45305c;
                                eax151 = g44ce38;
                                tmp32_152 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ce30) + reinterpret_cast<uint32_t>(ecx150));
                                g44ce30 = tmp32_152;
                            } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax151 + 4)) > reinterpret_cast<signed char>(esi136));
                        }
                        edi153 = reinterpret_cast<void**>(0);
                        eax154 = g44ce40;
                        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax154 + 4)) > reinterpret_cast<signed char>(0)) {
                            esi155 = reinterpret_cast<void*>(0);
                            ebx156 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi136 + reinterpret_cast<unsigned char>(esi136) * 2) * 4);
                            do {
                                edx157 = g44ce40;
                                ebp158 = g44ce3c;
                                ebp159 = reinterpret_cast<struct s168*>(reinterpret_cast<unsigned char>(ebp158) + reinterpret_cast<uint32_t>(ebx156));
                                edx160 = reinterpret_cast<struct s44*>(reinterpret_cast<unsigned char>(edx157) + reinterpret_cast<uint32_t>(esi155) + 8);
                                ebx156 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx156) + 12);
                                eax161 = ebp159->fc;
                                ecx162 = edx160->f8;
                                esi155 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi155) + 12);
                                ++edi153;
                                eax163 = ebp159->f10;
                                v164 = (ebp159->f8 & 0xffff) + (eax161 << 24);
                                eax165 = g44ce30;
                                fun_407150(reinterpret_cast<uint32_t>(eax165) + ecx162 + 1, eax163 - ecx162 - 1, v164, reinterpret_cast<int32_t>(eax161) >> 8, edx160);
                                ecx166 = g45305c;
                                eax167 = g44ce40;
                                tmp32_168 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g44ce30) + reinterpret_cast<uint32_t>(ecx166));
                                g44ce30 = tmp32_168;
                            } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax167 + 4)) > reinterpret_cast<signed char>(edi153));
                            return;
                        }
                    }
                    return;
                } else {
                    fun_407910(a1);
                    return;
                }
            } else {
                fun_407910(a1);
                return;
            }
        } else {
            fun_407910(a1);
            return;
        }
    } else {
        fun_407910(a1);
        return;
    }
}

int32_t g41cd98 = 0;

struct s81** g41cd9c = reinterpret_cast<struct s81**>(0);

struct s169 {
    signed char[12] pad12;
    void* fc;
};

struct s170 {
    signed char[4] pad4;
    void* f4;
};

void* g41cdac = reinterpret_cast<void*>(0);

struct s171 {
    signed char[16] pad16;
    void** f10;
};

struct s172 {
    signed char[20] pad20;
    void** f14;
};

void** g41cdb0 = reinterpret_cast<void**>(0);

void** g41cdb4 = reinterpret_cast<void**>(0);

void** g41cdc0 = reinterpret_cast<void**>(0);

void** g41cdc4 = reinterpret_cast<void**>(0);

signed char* g41cdd0 = reinterpret_cast<signed char*>(0);

uint32_t g41cdd4 = 0;

struct s173 {
    signed char[24] pad24;
    void** f18;
};

struct s174 {
    signed char[28] pad28;
    void** f1c;
};

void** g41cdb8 = reinterpret_cast<void**>(0);

void** g41cdbc = reinterpret_cast<void**>(0);

void** g41cdc8 = reinterpret_cast<void**>(0);

void** g41cdcc = reinterpret_cast<void**>(0);

signed char* g41cdd8 = reinterpret_cast<signed char*>(0);

uint32_t g41cddc = 0;

struct s81* g41cda0 = reinterpret_cast<struct s81*>(0);

uint32_t g436880 = 0;

void* g436884 = reinterpret_cast<void*>(0);

uint32_t g436878 = 0;

uint32_t g43687c = 0;

struct s175 {
    void** f0;
    signed char[3] pad4;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void** fc;
};

int32_t fun_410a20();

signed char g4301b0 = 0;

void** g43019c = reinterpret_cast<void**>(0);

void** g4301a0 = reinterpret_cast<void**>(0);

void** g4301a4 = reinterpret_cast<void**>(0);

void** g4301a8 = reinterpret_cast<void**>(0);

int32_t g4301ac = 0;

void* g4368d8 = reinterpret_cast<void*>(0);

signed char* g43a7bc = reinterpret_cast<signed char*>(0);

void* g4368d4 = reinterpret_cast<void*>(0);

void** g4368c0 = reinterpret_cast<void**>(0);

void** g4368c4 = reinterpret_cast<void**>(0);

void** g4368c8 = reinterpret_cast<void**>(0);

void** g4368cc = reinterpret_cast<void**>(0);

int32_t g4368d0 = 0;

void* g42c258 = reinterpret_cast<void*>(0);

signed char* g43013c = reinterpret_cast<signed char*>(0);

signed char* g42c254 = reinterpret_cast<signed char*>(0);

void** g42c240 = reinterpret_cast<void**>(0);

void** g42c244 = reinterpret_cast<void**>(0);

void** g42c248 = reinterpret_cast<void**>(0);

void** g42c24c = reinterpret_cast<void**>(0);

int32_t g42c250 = 0;

struct s176 {
    signed char* f0;
    signed char[3] pad4;
    int32_t f4;
    int32_t f8;
    int32_t fc;
};

void** g430140 = reinterpret_cast<void**>(0);

void** g430144 = reinterpret_cast<void**>(0);

void** g430148 = reinterpret_cast<void**>(0);

void** g43014c = reinterpret_cast<void**>(0);

void** g430150 = reinterpret_cast<void**>(0);

void** g430154 = reinterpret_cast<void**>(0);

uint48_t g430192 = 0;

uint48_t g43018c = 0;

void** g430178 = reinterpret_cast<void**>(0);

void* g430188 = reinterpret_cast<void*>(0);

void** g430180 = reinterpret_cast<void**>(0);

void** g43017c = reinterpret_cast<void**>(0);

void* g430198 = reinterpret_cast<void*>(0);

void** g430158 = reinterpret_cast<void**>(0);

void* g43015c = reinterpret_cast<void*>(0);

uint48_t g43016e = 0;

void** g430164 = reinterpret_cast<void**>(0);

uint48_t g430168 = 0;

void** g430160 = reinterpret_cast<void**>(0);

uint32_t g430174 = 0;

struct s177 {
    signed char* f0;
    signed char[3] pad4;
    int32_t f4;
    int32_t f8;
    int32_t fc;
};

int32_t g4340ac = 0;

int32_t g43409c = 0;

int32_t g4340bc = 0;

uint48_t g434126 = 0;

uint48_t g434120 = 0;

void** g434134 = reinterpret_cast<void**>(0);

void* g43411c = reinterpret_cast<void*>(0);

uint32_t g434130 = 0;

uint32_t g43412c = 0;

void fun_40e79b();

void* g4366b8 = reinterpret_cast<void*>(0);

uint32_t g43410c = 0;

uint32_t g434108 = 0;

uint32_t g434110 = 0;

uint32_t g434114 = 0;

void** g4340cc = reinterpret_cast<void**>(0);

void* g4340d0 = reinterpret_cast<void*>(0);

uint48_t g4340e2 = 0;

uint32_t g4340f4 = 0;

uint32_t g4340d8 = 0;

uint32_t g4340ec = 0;

uint32_t g4340f0 = 0;

uint48_t g4340dc = 0;

uint32_t g4340d4 = 0;

uint32_t g4340e8 = 0;

void*** fun_40d750(struct s81* a1);

void*** fun_40b390(struct s81* a1);

void* fun_40f9dc();

void fun_40cde0(struct s81* a1);

void** g434082 = reinterpret_cast<void**>(0);

int32_t g434086 = 0;

void** g43a7ac = reinterpret_cast<void**>(0);

int32_t g43a7b0 = 0;

int32_t g452700;

int32_t g434090 = 0;

void** g4534d4;

void** g4534d0;

int32_t g452744;

void** g43012c = reinterpret_cast<void**>(0);

int32_t g430130 = 0;

int16_t g43408c = 0;

uint16_t g43408e = 0;

int16_t g43408a = 0;

int16_t g43a7b6 = 0;

int16_t g43a7ba = 0;

uint16_t g43a7b8 = 0;

int16_t g43a7b4 = 0;

int16_t g430136 = 0;

int16_t g43013a = 0;

uint16_t g430138 = 0;

int16_t g430134 = 0;

void** fun_40a519() {
    int32_t esi1;
    struct s81** edi2;
    struct s81*** esi3;
    void* ebx4;
    struct s169* esi5;
    struct s170* esi6;
    void** eax7;
    struct s171* esi8;
    void** ebx9;
    struct s172* esi10;
    signed char* eax11;
    uint32_t ebx12;
    void** eax13;
    struct s173* esi14;
    void** ebx15;
    struct s174* esi16;
    void** eax17;
    void** ebx18;
    signed char* eax19;
    uint32_t ebx20;
    struct s81* esi21;
    void** eax22;
    void** eax23;
    void* eax24;
    void** eax25;
    void* eax26;
    void* eax27;
    void* ebx28;
    uint32_t ebx29;
    void** eax30;
    void* eax31;
    void*** tmp32_32;
    struct s175* tmp32_33;
    struct s175* eax34;
    void* ecx35;
    void** tmp32_36;
    void** ebx37;
    uint32_t edx38;
    int1_t zf39;
    uint32_t edx40;
    struct s175* tmp32_41;
    int1_t zf42;
    int1_t less43;
    int1_t less_or_equal44;
    int1_t less45;
    int1_t less_or_equal46;
    signed char* tmp32_47;
    void* ebx48;
    signed char* tmp32_49;
    int1_t less50;
    int1_t less_or_equal51;
    int1_t less52;
    int1_t less_or_equal53;
    signed char* tmp32_54;
    signed char* ebx55;
    void* ebx56;
    signed char* tmp32_57;
    void** eax58;
    void** ebx59;
    void** ecx60;
    void** edx61;
    void** tmp32_62;
    void** tmp32_63;
    int1_t less64;
    int1_t less65;
    void** eax66;
    void* eax67;
    void** tmp32_68;
    void** eax69;
    int1_t less_or_equal70;
    int1_t less_or_equal71;
    void** tmp32_72;
    void** eax73;
    int1_t less_or_equal74;
    int1_t less_or_equal75;
    void** tmp32_76;
    void** eax77;
    int1_t less78;
    int1_t less79;
    int1_t less_or_equal80;
    int1_t less_or_equal81;
    void** tmp32_82;
    void** eax83;
    int1_t less84;
    int1_t less85;
    void** eax86;
    signed char* ebx87;
    signed char* edx88;
    signed char* tmp32_89;
    void* tmp32_90;
    void** ebx91;
    void** edx92;
    void** tmp32_93;
    void** tmp32_94;
    int1_t less95;
    int1_t less96;
    void** eax97;
    void* eax98;
    void** tmp32_99;
    void** eax100;
    signed char* ebx101;
    void* tmp32_102;
    int1_t less_or_equal103;
    int1_t less_or_equal104;
    void** tmp32_105;
    void** eax106;
    int1_t less_or_equal107;
    int1_t less_or_equal108;
    void** tmp32_109;
    void** eax110;
    signed char* ebx111;
    void* tmp32_112;
    int1_t less113;
    int1_t less114;
    int1_t less_or_equal115;
    int1_t less_or_equal116;
    void** tmp32_117;
    void** eax118;
    int1_t less119;
    int1_t less120;
    void** eax121;
    signed char* ebx122;
    signed char* edx123;
    signed char* tmp32_124;
    void** ebx125;
    void** edx126;
    void** tmp32_127;
    void** tmp32_128;
    int1_t less129;
    int1_t less130;
    void** eax131;
    void* eax132;
    void** tmp32_133;
    void** eax134;
    signed char* ebx135;
    void* tmp32_136;
    int1_t less_or_equal137;
    int1_t less_or_equal138;
    void** tmp32_139;
    void** eax140;
    int1_t less_or_equal141;
    int1_t less_or_equal142;
    void** tmp32_143;
    void** eax144;
    signed char* ebx145;
    void* tmp32_146;
    int1_t less147;
    int1_t less148;
    int1_t less_or_equal149;
    int1_t less_or_equal150;
    void** tmp32_151;
    void** eax152;
    int1_t less153;
    int1_t less154;
    struct s176* ecx155;
    struct s176* ebx156;
    struct s176* edx157;
    struct s176* tmp32_158;
    struct s176* tmp32_159;
    struct s176* tmp32_160;
    struct s176* tmp32_161;
    struct s176* tmp32_162;
    struct s81** v163;
    void** ebx164;
    void** edx165;
    void** eax166;
    void* eax167;
    void** eax168;
    void** eax169;
    void** eax170;
    void** eax171;
    int1_t zf172;
    void** eax173;
    int1_t less_or_equal174;
    void** eax175;
    void** eax176;
    void** ebx177;
    void** edi178;
    int1_t less179;
    void* edi180;
    uint32_t edi181;
    int1_t sf182;
    uint32_t tmp32_183;
    uint32_t tmp32_184;
    void** tmp32_185;
    int1_t less_or_equal186;
    void* edi187;
    int1_t sf188;
    void** edi189;
    void* tmp32_190;
    void* edi191;
    void* edx192;
    signed char* tmp32_193;
    uint32_t eax194;
    void** esi195;
    void** edx196;
    int1_t less197;
    int1_t less198;
    int1_t less_or_equal199;
    int1_t less_or_equal200;
    int1_t less_or_equal201;
    uint32_t tmp32_202;
    uint32_t tmp32_203;
    void* tmp32_204;
    int1_t sf205;
    void* edx206;
    int16_t* esi207;
    void* edx208;
    int1_t zf209;
    void** eax210;
    int1_t less_or_equal211;
    void** edi212;
    void* edi213;
    void** eax214;
    void* eax215;
    int32_t eax216;
    void* tmp32_217;
    void** eax218;
    uint32_t tmp32_219;
    void** eax220;
    void* eax221;
    uint32_t tmp32_222;
    void** eax223;
    int1_t zf224;
    void** eax225;
    int1_t less_or_equal226;
    void** eax227;
    void* edi228;
    void** eax229;
    int32_t eax230;
    void* tmp32_231;
    void** eax232;
    uint32_t tmp32_233;
    void* eax234;
    uint32_t tmp32_235;
    void** eax236;
    void** eax237;
    void** eax238;
    void* eax239;
    void** eax240;
    void* eax241;
    void** eax242;
    void** edi243;
    void* edi244;
    void* tmp32_245;
    void** eax246;
    void* eax247;
    uint32_t eax248;
    void** tmp32_249;
    int1_t less250;
    void** eax251;
    void* eax252;
    void** eax253;
    uint32_t tmp32_254;
    uint32_t tmp32_255;
    void* edi256;
    void* tmp32_257;
    void** eax258;
    void* eax259;
    void** eax260;
    uint32_t tmp32_261;
    void** eax262;
    void* edi263;
    void* tmp32_264;
    void** eax265;
    void* eax266;
    void** eax267;
    uint32_t tmp32_268;
    void** eax269;
    void* eax270;
    void** eax271;
    uint32_t tmp32_272;
    uint32_t tmp32_273;
    void* edi274;
    void* tmp32_275;
    void** eax276;
    void* eax277;
    void** eax278;
    uint32_t tmp32_279;
    void** eax280;
    void* edi281;
    void* tmp32_282;
    void** eax283;
    void* eax284;
    uint32_t tmp32_285;
    void* edx286;
    signed char* tmp32_287;
    uint32_t eax288;
    void** ebx289;
    void** ecx290;
    void** edi291;
    int1_t less292;
    void* edi293;
    uint32_t edi294;
    int1_t sf295;
    uint32_t tmp32_296;
    uint32_t tmp32_297;
    void** tmp32_298;
    int1_t less_or_equal299;
    void* edi300;
    int1_t sf301;
    void** ebx302;
    void** edi303;
    int1_t less304;
    void* edi305;
    uint32_t edi306;
    int1_t sf307;
    uint32_t tmp32_308;
    uint32_t tmp32_309;
    void** edi310;
    void* tmp32_311;
    void* edi312;
    uint32_t eax313;
    void** tmp32_314;
    int1_t less_or_equal315;
    void* edi316;
    int1_t sf317;
    void** edi318;
    void* tmp32_319;
    void* edi320;
    uint32_t eax321;
    uint32_t tmp32_322;
    uint32_t tmp32_323;
    void** esi324;
    void** edx325;
    int1_t less326;
    int1_t less327;
    int1_t less_or_equal328;
    int1_t less_or_equal329;
    int1_t less_or_equal330;
    void* tmp32_331;
    int1_t sf332;
    void* edx333;
    int16_t* esi334;
    void* edx335;
    void** esi336;
    void** edx337;
    int1_t less338;
    int1_t less339;
    int1_t less_or_equal340;
    int1_t less_or_equal341;
    int1_t less_or_equal342;
    uint32_t tmp32_343;
    uint32_t tmp32_344;
    void* tmp32_345;
    int1_t sf346;
    void* edx347;
    int16_t* esi348;
    void* edx349;
    struct s177* ebx350;
    struct s176* esi351;
    int32_t ecx352;
    signed char* eax353;
    int32_t eax354;
    void** ebx355;
    int32_t eax356;
    void** edx357;
    int1_t less358;
    int32_t eax359;
    int1_t less_or_equal360;
    int1_t less_or_equal361;
    int1_t less362;
    int32_t eax363;
    int1_t less364;
    void** tmp32_365;
    void** eax366;
    uint32_t edi367;
    uint32_t eax368;
    void** tmp32_369;
    void* edi370;
    void** eax371;
    int32_t eax372;
    void* tmp32_373;
    uint32_t eax374;
    uint32_t tmp32_375;
    void* eax376;
    uint32_t eax377;
    uint32_t tmp32_378;
    void** tmp32_379;
    uint32_t eax380;
    void* edi381;
    void** eax382;
    int32_t eax383;
    void* tmp32_384;
    uint32_t eax385;
    uint32_t tmp32_386;
    void* eax387;
    uint32_t eax388;
    uint32_t tmp32_389;
    void** eax390;
    uint32_t eax391;
    void* tmp32_392;
    uint32_t eax393;
    void** eax394;
    uint32_t eax395;
    void* eax396;
    uint32_t eax397;
    uint32_t tmp32_398;
    uint32_t tmp32_399;
    uint32_t eax400;
    void* edi401;
    void* tmp32_402;
    void* eax403;
    uint32_t eax404;
    uint32_t tmp32_405;
    void* edi406;
    void* tmp32_407;
    void* eax408;
    uint32_t eax409;
    uint32_t tmp32_410;
    uint32_t eax411;
    void* eax412;
    uint32_t eax413;
    uint32_t tmp32_414;
    uint32_t tmp32_415;
    uint32_t eax416;
    void* edi417;
    void* tmp32_418;
    void* eax419;
    uint32_t eax420;
    uint32_t tmp32_421;
    void* edi422;
    void* tmp32_423;
    void* eax424;
    uint32_t eax425;
    uint32_t tmp32_426;
    void** eax427;
    void* eax428;
    void** eax429;
    void** eax430;
    uint32_t eax431;
    uint32_t eax432;
    int16_t ax433;
    int16_t ax434;
    uint32_t eax435;
    uint32_t eax436;
    uint32_t eax437;
    uint32_t eax438;
    int32_t ecx439;
    void** eax440;
    int32_t ecx441;
    void** eax442;
    uint16_t ax443;
    uint32_t ecx444;
    uint32_t edx445;
    void* edx446;
    uint32_t ecx447;
    uint32_t edx448;
    uint32_t eax449;
    uint32_t eax450;
    uint32_t edx451;
    uint32_t eax452;
    uint32_t eax453;
    void** tmp32_454;
    void** eax455;
    void** tmp32_456;
    void** eax457;
    void* edx458;
    void* ecx459;
    void* edx460;
    void* ebx461;
    void* eax462;
    int32_t eax463;
    void* eax464;
    void* eax465;
    void* ebx466;
    int32_t eax467;
    void* eax468;
    void* edx469;
    void* eax470;
    int32_t eax471;
    void* eax472;
    void* eax473;
    void* ebx474;
    int32_t eax475;
    void* eax476;
    void** tmp32_477;
    void** eax478;
    void** tmp32_479;
    void** eax480;
    signed char* ebx481;
    void* tmp32_482;
    void* edx483;
    void* ecx484;
    void* edx485;
    void* ebx486;
    void* eax487;
    int32_t eax488;
    void* eax489;
    void* eax490;
    void* ebx491;
    int32_t eax492;
    void* eax493;
    void* edx494;
    void* eax495;
    int32_t eax496;
    void* eax497;
    void* eax498;
    void* ebx499;
    int32_t eax500;
    void* eax501;
    void** tmp32_502;
    void** eax503;
    void** tmp32_504;
    void** eax505;
    signed char* ebx506;
    void* tmp32_507;

    __asm__("pushad ");
    g41cd98 = esi1;
    edi2 = *esi3;
    g41cd9c = edi2;
    ebx4 = esi5->fc;
    g41cda4 = esi6->f4;
    g41cdac = ebx4;
    eax7 = esi8->f10;
    ebx9 = esi10->f14;
    g41cdb0 = eax7;
    g41cdb4 = ebx9;
    g41cdc0 = eax7;
    eax11 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax7) << 8);
    g41cdc4 = ebx9;
    ebx12 = reinterpret_cast<unsigned char>(ebx9) << 8;
    g41cdd0 = eax11;
    g41cdd4 = ebx12;
    g41cde0 = eax11;
    g41cde4 = ebx12;
    eax13 = esi14->f18;
    ebx15 = esi16->f1c;
    g41cdb8 = eax13;
    g41cdbc = ebx15;
    eax17 = eax13 + 1;
    ebx18 = ebx15 + 1;
    g41cdc8 = eax17;
    eax19 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax17) << 8);
    g41cdcc = ebx18;
    g41cde8 = eax19;
    ebx20 = reinterpret_cast<unsigned char>(ebx18) << 8;
    g41cdd8 = eax19 - 1;
    g41cdec = ebx20;
    g41cddc = ebx20 - 1;
    while (esi21 = *edi2, g41cda0 = esi21, !!esi21) {
        eax22 = esi21->f0;
        ++edi2;
        switch (eax22) {
        case 0:
            eax23 = g41cdbc;
            eax24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax23) - reinterpret_cast<unsigned char>(g41cdb4));
            g436880 = reinterpret_cast<uint32_t>(eax24) + 1;
            eax25 = g41cdb8;
            eax26 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25) - reinterpret_cast<unsigned char>(g41cdb0));
            eax27 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax26) + 1);
            ebx28 = g41cdf0;
            g436884 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx28) - reinterpret_cast<uint32_t>(eax27));
            g436878 = reinterpret_cast<uint32_t>(eax27) >> 4;
            ebx29 = reinterpret_cast<uint32_t>(eax27) & 15;
            g43687c = ebx29;
            eax30 = g41cdb4;
            eax31 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax30) * reinterpret_cast<uint32_t>(g41cdf0));
            tmp32_32 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax31) + reinterpret_cast<unsigned char>(g41cdb0));
            tmp32_33 = reinterpret_cast<struct s175*>(reinterpret_cast<uint32_t>(tmp32_32) + reinterpret_cast<uint32_t>(g41cda4));
            eax34 = tmp32_33;
            ecx35 = reinterpret_cast<void*>(esi21->f8 >> 8);
            *reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(&ecx35) + 1) = esi21->f4;
            tmp32_36 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx35) + reinterpret_cast<uint32_t>(g41cdac));
            *reinterpret_cast<void***>(&ebx29) = *reinterpret_cast<void***>(tmp32_36);
            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&ebx29) + 1) = *reinterpret_cast<void***>(tmp32_36);
            ebx37 = reinterpret_cast<void**>(ebx29 << 16);
            ebx37 = *reinterpret_cast<void***>(tmp32_36);
            (&ebx37)[1] = *reinterpret_cast<void***>(tmp32_36);
            do {
                edx38 = g436878;
                do {
                    eax34->f0 = ebx37;
                    eax34->f4 = ebx37;
                    eax34->f8 = ebx37;
                    eax34->fc = ebx37;
                    eax34 = reinterpret_cast<struct s175*>(reinterpret_cast<uint32_t>(eax34) + 16);
                    --edx38;
                } while (edx38);
                zf39 = g43687c == 0;
                if (!zf39) {
                    edx40 = g43687c;
                    do {
                        eax34->f0 = ebx37;
                        eax34 = reinterpret_cast<struct s175*>(&eax34->pad4);
                        --edx40;
                    } while (edx40);
                }
                tmp32_41 = reinterpret_cast<struct s175*>(reinterpret_cast<uint32_t>(eax34) + reinterpret_cast<uint32_t>(g436884));
                eax34 = tmp32_41;
                --g436880;
                zf42 = g436880 == 0;
            } while (!zf42);
            break;
        case 1:
            less43 = reinterpret_cast<signed char>(esi21->f4) < reinterpret_cast<signed char>(g41cdd0);
            if (!less43 && ((less_or_equal44 = reinterpret_cast<signed char>(esi21->f4) <= reinterpret_cast<signed char>(g41cdd8), less_or_equal44) && ((less45 = reinterpret_cast<int32_t>(esi21->f8) < reinterpret_cast<int32_t>(g41cdd4), !less45) && (less_or_equal46 = reinterpret_cast<int32_t>(esi21->f8) <= reinterpret_cast<int32_t>(g41cddc), less_or_equal46)))) {
                tmp32_47 = reinterpret_cast<signed char*>((reinterpret_cast<signed char>(esi21->f4) >> 8) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<int32_t>(esi21->f8) >> 8) * 4 + 0x41cdf8)) + reinterpret_cast<uint32_t>(g41cda4));
                ebx48 = reinterpret_cast<void*>(0);
                *reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(&ebx48) + 1) = esi21->f10;
                *reinterpret_cast<signed char*>(&ebx48) = esi21->f15;
                tmp32_49 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx48) + reinterpret_cast<uint32_t>(g41cdac));
                *tmp32_47 = *tmp32_49;
            }
            break;
        case 2:
            less50 = reinterpret_cast<signed char>(esi21->f4) < reinterpret_cast<signed char>(g41cdd0);
            if (!less50 && ((less_or_equal51 = reinterpret_cast<signed char>(esi21->f4) <= reinterpret_cast<signed char>(g41cdd8), less_or_equal51) && ((less52 = reinterpret_cast<int32_t>(esi21->f8) < reinterpret_cast<int32_t>(g41cdd4), !less52) && (less_or_equal53 = reinterpret_cast<int32_t>(esi21->f8) <= reinterpret_cast<int32_t>(g41cddc), less_or_equal53)))) {
                tmp32_54 = reinterpret_cast<signed char*>((reinterpret_cast<signed char>(esi21->f4) >> 8) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<int32_t>(esi21->f8) >> 8) * 4 + 0x41cdf8)) + reinterpret_cast<uint32_t>(g41cda4));
                ebx55 = esi21->f10;
                (&ebx55)[1] = esi21->fc;
                *reinterpret_cast<signed char*>(&ebx55) = *tmp32_54;
                *tmp32_54 = *ebx55;
            }
            break;
        case 7:
            fun_410a20();
            break;
        case 11:
            ebx56 = reinterpret_cast<void*>(0);
            *reinterpret_cast<signed char*>(&ebx56) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi21) + 33);
            *reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(&ebx56) + 1) = esi21->f1c;
            tmp32_57 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx56) + reinterpret_cast<uint32_t>(g41cdac));
            g4301b0 = *tmp32_57;
            eax58 = reinterpret_cast<void**>(reinterpret_cast<signed char>(esi21->f4) >> 8);
            ebx59 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi21->f8) >> 8);
            ecx60 = reinterpret_cast<void**>(reinterpret_cast<signed char>(esi21->f10) >> 8);
            edx61 = reinterpret_cast<void**>(reinterpret_cast<signed char>(esi21->f14) >> 8);
            if (reinterpret_cast<signed char>(eax58) > reinterpret_cast<signed char>(ecx60)) {
                tmp32_62 = ecx60;
                ecx60 = eax58;
                eax58 = tmp32_62;
                tmp32_63 = edx61;
                edx61 = ebx59;
                ebx59 = tmp32_63;
            }
            less64 = reinterpret_cast<signed char>(eax58) < reinterpret_cast<signed char>(g41cdb0);
            if (less64) {
                less65 = reinterpret_cast<signed char>(ecx60) < reinterpret_cast<signed char>(g41cdb0);
                if (less65) 
                    break;
                g43019c = eax58;
                g4301a0 = ebx59;
                g4301a4 = ecx60;
                g4301a8 = edx61;
                g4301ac = 0;
                eax66 = g4301a8;
                eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax66) - reinterpret_cast<unsigned char>(g4301a0));
                tmp32_68 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(g4301a0) + (reinterpret_cast<uint32_t>(eax67) - __intrinsic()));
                g4301a0 = tmp32_68;
                eax69 = g41cdb0;
                g43019c = eax69;
                eax58 = g43019c;
                ebx59 = g4301a0;
                ecx60 = g4301a4;
                edx61 = g4301a8;
            }
            less_or_equal70 = reinterpret_cast<signed char>(ecx60) <= reinterpret_cast<signed char>(g41cdb8);
            if (!less_or_equal70) {
                less_or_equal71 = reinterpret_cast<signed char>(eax58) <= reinterpret_cast<signed char>(g41cdb8);
                if (!less_or_equal71) 
                    break;
                g43019c = eax58;
                g4301a0 = ebx59;
                g4301a4 = ecx60;
                g4301a8 = edx61;
                g4301ac = 0;
                tmp32_72 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<unsigned char>(g4301a0));
                g4301a8 = tmp32_72;
                eax73 = g41cdb8;
                g4301a4 = eax73;
                eax58 = g43019c;
                ebx59 = g4301a0;
                ecx60 = g4301a4;
                edx61 = g4301a8;
            }
            if (reinterpret_cast<signed char>(ebx59) > reinterpret_cast<signed char>(edx61)) {
                less_or_equal74 = reinterpret_cast<signed char>(ebx59) <= reinterpret_cast<signed char>(g41cdbc);
                if (!less_or_equal74) {
                    less_or_equal75 = reinterpret_cast<signed char>(edx61) <= reinterpret_cast<signed char>(g41cdbc);
                    if (!less_or_equal75) 
                        break;
                    g43019c = eax58;
                    g4301a0 = ebx59;
                    g4301a4 = ecx60;
                    g4301a8 = edx61;
                    g4301ac = 0;
                    tmp32_76 = reinterpret_cast<void**>(-__intrinsic() + reinterpret_cast<unsigned char>(g4301a4));
                    g43019c = tmp32_76;
                    eax77 = g41cdbc;
                    g4301a0 = eax77;
                    eax58 = g43019c;
                    ebx59 = g4301a0;
                    ecx60 = g4301a4;
                    edx61 = g4301a8;
                }
                less78 = reinterpret_cast<signed char>(edx61) < reinterpret_cast<signed char>(g41cdb4);
                if (!less78) 
                    goto addr_40ceb9_32;
                less79 = reinterpret_cast<signed char>(ebx59) < reinterpret_cast<signed char>(g41cdb4);
                if (less79) 
                    break; else 
                    goto addr_40d0ec_34;
            } else {
                less_or_equal80 = reinterpret_cast<signed char>(edx61) <= reinterpret_cast<signed char>(g41cdbc);
                if (!less_or_equal80) {
                    less_or_equal81 = reinterpret_cast<signed char>(ebx59) <= reinterpret_cast<signed char>(g41cdbc);
                    if (!less_or_equal81) 
                        break;
                    g43019c = eax58;
                    g4301a0 = ebx59;
                    g4301a4 = ecx60;
                    g4301a8 = edx61;
                    g4301ac = 0;
                    tmp32_82 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<unsigned char>(g43019c));
                    g4301a4 = tmp32_82;
                    eax83 = g41cdbc;
                    g4301a8 = eax83;
                    eax58 = g43019c;
                    ebx59 = g4301a0;
                    ecx60 = g4301a4;
                    edx61 = g4301a8;
                }
                less84 = reinterpret_cast<signed char>(ebx59) < reinterpret_cast<signed char>(g41cdb4);
                if (!less84) 
                    goto addr_40ceb9_32;
                less85 = reinterpret_cast<signed char>(edx61) < reinterpret_cast<signed char>(g41cdb4);
                if (less85) 
                    break; else 
                    goto addr_40d295_41;
            }
        case 12:
            eax86 = reinterpret_cast<void**>(reinterpret_cast<signed char>(esi21->f4) >> 8);
            ecx60 = reinterpret_cast<void**>(reinterpret_cast<signed char>(esi21->f10) >> 8);
            ebx87 = esi21->f20;
            edx88 = *reinterpret_cast<signed char**>(&esi21->f21);
            if (reinterpret_cast<signed char>(eax86) > reinterpret_cast<signed char>(ecx60)) {
                tmp32_89 = edx88;
                edx88 = ebx87;
                ebx87 = tmp32_89;
            }
            g4368d8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx88) - reinterpret_cast<int32_t>(ebx87));
            g43a7bc = ebx87;
            *reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(&ebx87) + 1) = esi21->f1c;
            tmp32_90 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx87) + reinterpret_cast<uint32_t>(g41cdac));
            g4368d4 = tmp32_90;
            ebx91 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi21->f8) >> 8);
            edx92 = reinterpret_cast<void**>(reinterpret_cast<signed char>(esi21->f14) >> 8);
            if (reinterpret_cast<signed char>(eax86) > reinterpret_cast<signed char>(ecx60)) {
                tmp32_93 = ecx60;
                ecx60 = eax86;
                eax86 = tmp32_93;
                tmp32_94 = edx92;
                edx92 = ebx91;
                ebx91 = tmp32_94;
            }
            less95 = reinterpret_cast<signed char>(eax86) < reinterpret_cast<signed char>(g41cdb0);
            if (less95) {
                less96 = reinterpret_cast<signed char>(ecx60) < reinterpret_cast<signed char>(g41cdb0);
                if (less96) 
                    break;
                g4368c0 = eax86;
                g4368c4 = ebx91;
                g4368c8 = ecx60;
                g4368cc = edx92;
                g4368d0 = 0;
                eax97 = g4368cc;
                eax98 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax97) - reinterpret_cast<unsigned char>(g4368c4));
                tmp32_99 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(g4368c4) + (reinterpret_cast<uint32_t>(eax98) - __intrinsic()));
                g4368c4 = tmp32_99;
                eax100 = g41cdb0;
                g4368c0 = eax100;
                ebx101 = g43a7bc;
                tmp32_102 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx101) + reinterpret_cast<int32_t>(g4368d8));
                g4368d8 = __intrinsic();
                g43a7bc = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(tmp32_102) - reinterpret_cast<int32_t>(__intrinsic()));
                eax86 = g4368c0;
                ebx91 = g4368c4;
                ecx60 = g4368c8;
                edx92 = g4368cc;
            }
            less_or_equal103 = reinterpret_cast<signed char>(ecx60) <= reinterpret_cast<signed char>(g41cdb8);
            if (!less_or_equal103) {
                less_or_equal104 = reinterpret_cast<signed char>(eax86) <= reinterpret_cast<signed char>(g41cdb8);
                if (!less_or_equal104) 
                    break;
                g4368c0 = eax86;
                g4368c4 = ebx91;
                g4368c8 = ecx60;
                g4368cc = edx92;
                g4368d0 = 0;
                tmp32_105 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<unsigned char>(g4368c4));
                g4368cc = tmp32_105;
                eax106 = g41cdb8;
                g4368c8 = eax106;
                g4368d8 = __intrinsic();
                eax86 = g4368c0;
                ebx91 = g4368c4;
                ecx60 = g4368c8;
                edx92 = g4368cc;
            }
            if (reinterpret_cast<signed char>(ebx91) > reinterpret_cast<signed char>(edx92)) {
                less_or_equal107 = reinterpret_cast<signed char>(ebx91) <= reinterpret_cast<signed char>(g41cdbc);
                if (!less_or_equal107) {
                    less_or_equal108 = reinterpret_cast<signed char>(edx92) <= reinterpret_cast<signed char>(g41cdbc);
                    if (!less_or_equal108) 
                        break;
                    g4368c0 = eax86;
                    g4368c4 = ebx91;
                    g4368c8 = ecx60;
                    g4368cc = edx92;
                    g4368d0 = 0;
                    tmp32_109 = reinterpret_cast<void**>(-__intrinsic() + reinterpret_cast<unsigned char>(g4368c8));
                    g4368c0 = tmp32_109;
                    eax110 = g41cdbc;
                    g4368c4 = eax110;
                    ebx111 = g43a7bc;
                    tmp32_112 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx111) + reinterpret_cast<int32_t>(g4368d8));
                    g4368d8 = __intrinsic();
                    g43a7bc = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(tmp32_112) - reinterpret_cast<int32_t>(__intrinsic()));
                    eax86 = g4368c0;
                    ebx91 = g4368c4;
                    ecx60 = g4368c8;
                    edx92 = g4368cc;
                }
                less113 = reinterpret_cast<signed char>(edx92) < reinterpret_cast<signed char>(g41cdb4);
                if (!less113) 
                    goto addr_40fe10_57;
                less114 = reinterpret_cast<signed char>(ebx91) < reinterpret_cast<signed char>(g41cdb4);
                if (less114) 
                    break; else 
                    goto addr_4100bc_59;
            } else {
                less_or_equal115 = reinterpret_cast<signed char>(edx92) <= reinterpret_cast<signed char>(g41cdbc);
                if (!less_or_equal115) {
                    less_or_equal116 = reinterpret_cast<signed char>(ebx91) <= reinterpret_cast<signed char>(g41cdbc);
                    if (!less_or_equal116) 
                        break;
                    g4368c0 = eax86;
                    g4368c4 = ebx91;
                    g4368c8 = ecx60;
                    g4368cc = edx92;
                    g4368d0 = 0;
                    tmp32_117 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<unsigned char>(g4368c0));
                    g4368c8 = tmp32_117;
                    eax118 = g41cdbc;
                    g4368cc = eax118;
                    g4368d8 = __intrinsic();
                    eax86 = g4368c0;
                    ebx91 = g4368c4;
                    ecx60 = g4368c8;
                    edx92 = g4368cc;
                }
                less119 = reinterpret_cast<signed char>(ebx91) < reinterpret_cast<signed char>(g41cdb4);
                if (!less119) 
                    goto addr_40fe10_57;
                less120 = reinterpret_cast<signed char>(edx92) < reinterpret_cast<signed char>(g41cdb4);
                if (less120) 
                    break; else 
                    goto addr_4102b2_66;
            }
        case 13:
            eax121 = reinterpret_cast<void**>(reinterpret_cast<signed char>(esi21->f4) >> 8);
            ecx60 = reinterpret_cast<void**>(reinterpret_cast<signed char>(esi21->f10) >> 8);
            ebx122 = esi21->f20;
            edx123 = *reinterpret_cast<signed char**>(&esi21->f21);
            if (reinterpret_cast<signed char>(eax121) > reinterpret_cast<signed char>(ecx60)) {
                tmp32_124 = edx123;
                edx123 = ebx122;
                ebx122 = tmp32_124;
            }
            g42c258 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx123) - reinterpret_cast<int32_t>(ebx122));
            g43013c = ebx122;
            g42c254 = esi21->f1c;
            ebx125 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi21->f8) >> 8);
            edx126 = reinterpret_cast<void**>(reinterpret_cast<signed char>(esi21->f14) >> 8);
            if (reinterpret_cast<signed char>(eax121) > reinterpret_cast<signed char>(ecx60)) {
                tmp32_127 = ecx60;
                ecx60 = eax121;
                eax121 = tmp32_127;
                tmp32_128 = edx126;
                edx126 = ebx125;
                ebx125 = tmp32_128;
            }
            less129 = reinterpret_cast<signed char>(eax121) < reinterpret_cast<signed char>(g41cdb0);
            if (less129) {
                less130 = reinterpret_cast<signed char>(ecx60) < reinterpret_cast<signed char>(g41cdb0);
                if (less130) 
                    break;
                g42c240 = eax121;
                g42c244 = ebx125;
                g42c248 = ecx60;
                g42c24c = edx126;
                g42c250 = 0;
                eax131 = g42c24c;
                eax132 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax131) - reinterpret_cast<unsigned char>(g42c244));
                tmp32_133 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(g42c244) + (reinterpret_cast<uint32_t>(eax132) - __intrinsic()));
                g42c244 = tmp32_133;
                eax134 = g41cdb0;
                g42c240 = eax134;
                ebx135 = g43013c;
                tmp32_136 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx135) + reinterpret_cast<int32_t>(g42c258));
                g42c258 = __intrinsic();
                g43013c = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(tmp32_136) - reinterpret_cast<int32_t>(__intrinsic()));
                eax121 = g42c240;
                ebx125 = g42c244;
                ecx60 = g42c248;
                edx126 = g42c24c;
            }
            less_or_equal137 = reinterpret_cast<signed char>(ecx60) <= reinterpret_cast<signed char>(g41cdb8);
            if (!less_or_equal137) {
                less_or_equal138 = reinterpret_cast<signed char>(eax121) <= reinterpret_cast<signed char>(g41cdb8);
                if (!less_or_equal138) 
                    break;
                g42c240 = eax121;
                g42c244 = ebx125;
                g42c248 = ecx60;
                g42c24c = edx126;
                g42c250 = 0;
                tmp32_139 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<unsigned char>(g42c244));
                g42c24c = tmp32_139;
                eax140 = g41cdb8;
                g42c248 = eax140;
                g42c258 = __intrinsic();
                eax121 = g42c240;
                ebx125 = g42c244;
                ecx60 = g42c248;
                edx126 = g42c24c;
            }
            if (reinterpret_cast<signed char>(ebx125) > reinterpret_cast<signed char>(edx126)) {
                less_or_equal141 = reinterpret_cast<signed char>(ebx125) <= reinterpret_cast<signed char>(g41cdbc);
                if (!less_or_equal141) {
                    less_or_equal142 = reinterpret_cast<signed char>(edx126) <= reinterpret_cast<signed char>(g41cdbc);
                    if (!less_or_equal142) 
                        break;
                    g42c240 = eax121;
                    g42c244 = ebx125;
                    g42c248 = ecx60;
                    g42c24c = edx126;
                    g42c250 = 0;
                    tmp32_143 = reinterpret_cast<void**>(-__intrinsic() + reinterpret_cast<unsigned char>(g42c248));
                    g42c240 = tmp32_143;
                    eax144 = g41cdbc;
                    g42c244 = eax144;
                    ebx145 = g43013c;
                    tmp32_146 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx145) + reinterpret_cast<int32_t>(g42c258));
                    g42c258 = __intrinsic();
                    g43013c = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(tmp32_146) - reinterpret_cast<int32_t>(__intrinsic()));
                    eax121 = g42c240;
                    ebx125 = g42c244;
                    ecx60 = g42c248;
                    edx126 = g42c24c;
                }
                less147 = reinterpret_cast<signed char>(edx126) < reinterpret_cast<signed char>(g41cdb4);
                if (!less147) 
                    goto addr_40a6ae_82;
                less148 = reinterpret_cast<signed char>(ebx125) < reinterpret_cast<signed char>(g41cdb4);
                if (less148) 
                    break; else 
                    goto addr_40a95a_84;
            } else {
                less_or_equal149 = reinterpret_cast<signed char>(edx126) <= reinterpret_cast<signed char>(g41cdbc);
                if (!less_or_equal149) {
                    less_or_equal150 = reinterpret_cast<signed char>(ebx125) <= reinterpret_cast<signed char>(g41cdbc);
                    if (!less_or_equal150) 
                        break;
                    g42c240 = eax121;
                    g42c244 = ebx125;
                    g42c248 = ecx60;
                    g42c24c = edx126;
                    g42c250 = 0;
                    tmp32_151 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<unsigned char>(g42c240));
                    g42c248 = tmp32_151;
                    eax152 = g41cdbc;
                    g42c24c = eax152;
                    g42c258 = __intrinsic();
                    eax121 = g42c240;
                    ebx125 = g42c244;
                    ecx60 = g42c248;
                    edx126 = g42c24c;
                }
                less153 = reinterpret_cast<signed char>(ebx125) < reinterpret_cast<signed char>(g41cdb4);
                if (!less153) 
                    goto addr_40a6ae_82;
                less154 = reinterpret_cast<signed char>(edx126) < reinterpret_cast<signed char>(g41cdb4);
                if (less154) 
                    break; else 
                    goto addr_40ab50_91;
            }
        case 15:
            ecx155 = reinterpret_cast<struct s176*>(&esi21->f10);
            ebx156 = reinterpret_cast<struct s176*>(&esi21->f4);
            edx157 = reinterpret_cast<struct s176*>(&esi21->f1c);
            if (ecx155->f4 < ebx156->f4) {
                tmp32_158 = ecx155;
                ecx155 = ebx156;
                ebx156 = tmp32_158;
                if (edx157->f4 <= ecx155->f4 && (tmp32_159 = edx157, edx157 = ecx155, ecx155 = tmp32_159, edx157->f4 <= ebx156->f4)) {
                    tmp32_160 = ecx155;
                    ecx155 = ebx156;
                    ebx156 = tmp32_160;
                }
            } else {
                if (ecx155->f4 >= edx157->f4 && (tmp32_161 = edx157, edx157 = ecx155, ecx155 = tmp32_161, ebx156->f4 >= ecx155->f4)) {
                    tmp32_162 = ecx155;
                    ecx155 = ebx156;
                    ebx156 = tmp32_162;
                }
            }
            v163 = edi2;
            g430140 = reinterpret_cast<void**>(reinterpret_cast<signed char>(ebx156->f0) >> 8);
            g430144 = reinterpret_cast<void**>(ebx156->f4 >> 8);
            ebx164 = reinterpret_cast<void**>(0x430140);
            g430148 = reinterpret_cast<void**>(reinterpret_cast<signed char>(ecx155->f0) >> 8);
            g43014c = reinterpret_cast<void**>(ecx155->f4 >> 8);
            ecx60 = reinterpret_cast<void**>(0x430148);
            g430150 = reinterpret_cast<void**>(reinterpret_cast<signed char>(edx157->f0) >> 8);
            g430154 = reinterpret_cast<void**>(edx157->f4 >> 8);
            edx165 = reinterpret_cast<void**>(0x430150);
            eax166 = g430154;
            eax167 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax166) - reinterpret_cast<unsigned char>(g430144));
            if (reinterpret_cast<int32_t>(eax167) > reinterpret_cast<int32_t>(0x3a98)) 
                goto addr_40c647_98;
            eax168 = g430140;
            if (reinterpret_cast<signed char>(eax168) < reinterpret_cast<signed char>(0xffff8300)) {
                g430140 = reinterpret_cast<void**>(0xffff8300);
            } else {
                if (reinterpret_cast<signed char>(eax168) > reinterpret_cast<signed char>(0x7d00)) {
                    g430140 = reinterpret_cast<void**>(0x7d00);
                }
            }
            eax169 = g430148;
            if (reinterpret_cast<signed char>(eax169) < reinterpret_cast<signed char>(0xffff8300)) {
                g430148 = reinterpret_cast<void**>(0xffff8300);
            } else {
                if (reinterpret_cast<signed char>(eax169) > reinterpret_cast<signed char>(0x7d00)) {
                    g430148 = reinterpret_cast<void**>(0x7d00);
                }
            }
            eax170 = g430150;
            if (reinterpret_cast<signed char>(eax170) < reinterpret_cast<signed char>(0xffff8300)) {
                g430150 = reinterpret_cast<void**>(0xffff8300);
            } else {
                if (reinterpret_cast<signed char>(eax170) > reinterpret_cast<signed char>(0x7d00)) {
                    g430150 = reinterpret_cast<void**>(0x7d00);
                }
            }
            eax171 = g430144;
            zf172 = eax171 == g430154;
            if (!zf172) 
                goto addr_40be55_113;
            eax173 = g430140;
            less_or_equal174 = reinterpret_cast<signed char>(eax173) <= reinterpret_cast<signed char>(g430148);
            if (!less_or_equal174) {
                ecx60 = reinterpret_cast<void**>(0x430140);
                ebx164 = reinterpret_cast<void**>(0x430148);
            }
            eax175 = g430150;
            if (reinterpret_cast<signed char>(eax175) <= reinterpret_cast<signed char>(*reinterpret_cast<void***>(ecx60))) {
                if (reinterpret_cast<signed char>(eax175) <= reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx164))) {
                    ebx164 = reinterpret_cast<void**>(0x430150);
                }
                eax175 = *reinterpret_cast<void***>(ecx60);
            }
            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g430192) + 2) = eax175;
            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g43018c) + 2) = *reinterpret_cast<void***>(ebx164);
            eax176 = *reinterpret_cast<void***>(ebx164 + 4);
            g430178 = eax176;
            g430188 = reinterpret_cast<void*>(0);
            addr_40c4ff_121:
            *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g43018c) + 4) = 0;
            *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g430192) + 4) = 0;
            ebx177 = g430180;
            ecx60 = g43017c;
            edi178 = g430178;
            less179 = reinterpret_cast<signed char>(edi178) < reinterpret_cast<signed char>(g41cdb4);
            if (less179) {
                edi180 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi178) - reinterpret_cast<unsigned char>(g41cdb4));
                edi181 = -reinterpret_cast<uint32_t>(edi180);
                g430188 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g430188) - edi181);
                sf182 = reinterpret_cast<int32_t>(g430188) < reinterpret_cast<int32_t>(0);
                if (sf182) 
                    goto addr_40c647_98;
                tmp32_183 = *reinterpret_cast<uint32_t*>(&g430192) + reinterpret_cast<unsigned char>(ebx177) * edi181;
                *reinterpret_cast<uint32_t*>(&g430192) = tmp32_183;
                eax176 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx60) * edi181);
                tmp32_184 = *reinterpret_cast<uint32_t*>(&g43018c) + reinterpret_cast<unsigned char>(eax176);
                *reinterpret_cast<uint32_t*>(&g43018c) = tmp32_184;
                edi178 = g41cdb4;
                g430178 = edi178;
            }
            tmp32_185 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi178) + reinterpret_cast<uint32_t>(g430188));
            less_or_equal186 = reinterpret_cast<signed char>(tmp32_185) <= reinterpret_cast<signed char>(g41cdbc);
            if (!less_or_equal186) {
                edi187 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(tmp32_185) - reinterpret_cast<unsigned char>(g41cdbc));
                g430188 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g430188) - reinterpret_cast<uint32_t>(edi187));
                sf188 = reinterpret_cast<int32_t>(g430188) < reinterpret_cast<int32_t>(0);
                if (sf188) {
                    addr_40c647_98:
                    edi2 = v163;
                    break;
                }
            }
            edi189 = g430178;
            tmp32_190 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi189) * 4 + 0x41cdf8)) + reinterpret_cast<uint32_t>(g41cda4));
            edi191 = tmp32_190;
            edx192 = reinterpret_cast<void*>(0);
            *reinterpret_cast<signed char*>(&edx192) = esi21->f2d;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx192) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi21) + 40);
            tmp32_193 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx192) + reinterpret_cast<uint32_t>(g41cdac));
            *reinterpret_cast<signed char*>(&eax176 + 1) = *tmp32_193;
            *reinterpret_cast<signed char*>(&eax176) = *tmp32_193;
            eax194 = reinterpret_cast<unsigned char>(eax176) >> 24 | reinterpret_cast<unsigned char>(eax176) >> 8 & 0xff00 | reinterpret_cast<unsigned char>(eax176) << 8 & 0xff0000 | reinterpret_cast<unsigned char>(eax176) << 24;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax194) + 1) = *tmp32_193;
            *reinterpret_cast<signed char*>(&eax194) = *tmp32_193;
            while (1) {
                esi195 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g43018c) + 2);
                edx196 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g430192) + 2);
                less197 = *reinterpret_cast<int16_t*>(&esi195) < *reinterpret_cast<int16_t*>(&g41cdb0);
                if (less197) {
                    less198 = *reinterpret_cast<int16_t*>(&edx196) < *reinterpret_cast<int16_t*>(&g41cdb0);
                    if (less198) 
                        goto addr_40c5b4_130;
                    esi195 = g41cdb0;
                    less_or_equal199 = *reinterpret_cast<int16_t*>(&edx196) <= *reinterpret_cast<int16_t*>(&g41cdb8);
                    if (less_or_equal199) 
                        goto addr_40c58c_132; else 
                        goto addr_40c5ec_133;
                } else {
                    less_or_equal200 = *reinterpret_cast<int16_t*>(&edx196) <= *reinterpret_cast<int16_t*>(&g41cdb8);
                    if (!less_or_equal200) {
                        addr_40c5ec_133:
                        less_or_equal201 = *reinterpret_cast<int16_t*>(&esi195) <= *reinterpret_cast<int16_t*>(&g41cdb8);
                        if (!less_or_equal201) {
                            addr_40c5b4_130:
                            tmp32_202 = *reinterpret_cast<uint32_t*>(&g430192) + reinterpret_cast<unsigned char>(ebx177);
                            *reinterpret_cast<uint32_t*>(&g430192) = tmp32_202;
                            tmp32_203 = *reinterpret_cast<uint32_t*>(&g43018c) + reinterpret_cast<unsigned char>(ecx60);
                            *reinterpret_cast<uint32_t*>(&g43018c) = tmp32_203;
                            tmp32_204 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi191) + reinterpret_cast<uint32_t>(g41cdf0));
                            edi191 = tmp32_204;
                            g430188 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g430188) - 1);
                            sf205 = reinterpret_cast<int32_t>(g430188) < reinterpret_cast<int32_t>(0);
                            if (sf205) 
                                break;
                        } else {
                            edx196 = g41cdb8;
                            goto addr_40c58c_132;
                        }
                    } else {
                        addr_40c58c_132:
                        edx206 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx196) - reinterpret_cast<unsigned char>(esi195));
                        esi207 = reinterpret_cast<int16_t*>(reinterpret_cast<unsigned char>(esi195) + reinterpret_cast<uint32_t>(edi191));
                        if (*reinterpret_cast<int16_t*>(&edx206) >= 0) {
                            edx208 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx206) - 3);
                            if (reinterpret_cast<int32_t>(edx208) >= reinterpret_cast<int32_t>(0)) {
                                do {
                                    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi207) + reinterpret_cast<uint32_t>(edx208)) = eax194;
                                    edx208 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx208) - 4);
                                } while (reinterpret_cast<int32_t>(edx208) >= reinterpret_cast<int32_t>(0));
                            }
                            if (reinterpret_cast<int32_t>(edx208) >= reinterpret_cast<int32_t>(0xfffffffe)) {
                                *esi207 = *reinterpret_cast<int16_t*>(&eax194);
                            }
                            if (reinterpret_cast<int32_t>(edx208) > reinterpret_cast<int32_t>(0xfffffffc)) {
                                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi207) + reinterpret_cast<uint32_t>(edx208) + 3) = *reinterpret_cast<signed char*>(&eax194);
                                goto addr_40c5b4_130;
                            }
                        }
                    }
                }
            }
            edi2 = v163;
            break;
            addr_40be55_113:
            zf209 = eax171 == g43014c;
            if (zf209) {
                eax210 = g430140;
                less_or_equal211 = reinterpret_cast<signed char>(eax210) <= reinterpret_cast<signed char>(g430148);
                if (!less_or_equal211) {
                    ecx60 = reinterpret_cast<void**>(0x430140);
                    ebx164 = reinterpret_cast<void**>(0x430148);
                }
                g430178 = *reinterpret_cast<void***>(ebx164 + 4);
                edi212 = g430154;
                edi213 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi212) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx164 + 4)));
                g430188 = edi213;
                *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g43018c) + 2) = *reinterpret_cast<void***>(ebx164);
                eax214 = *reinterpret_cast<void***>(ecx60);
                *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g430192) + 2) = eax214;
                eax215 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax214) - reinterpret_cast<unsigned char>(g430150));
                eax216 = reinterpret_cast<int32_t>(-reinterpret_cast<uint32_t>(eax215));
                tmp32_217 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi213) + reinterpret_cast<uint32_t>(g430198));
                if (eax216 <= 0) {
                    *reinterpret_cast<int16_t*>(&g430192) = -1;
                    eax218 = reinterpret_cast<void**>((eax216 - 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_217) * 4));
                } else {
                    *reinterpret_cast<int16_t*>(&g430192) = 0;
                    eax218 = reinterpret_cast<void**>((eax216 + 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_217) * 4));
                    tmp32_219 = *reinterpret_cast<uint32_t*>(&g430192) + reinterpret_cast<unsigned char>(eax218);
                    *reinterpret_cast<uint32_t*>(&g430192) = tmp32_219;
                }
                g430180 = eax218;
                eax220 = g430150;
                eax221 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax220) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx164)));
                if (reinterpret_cast<int32_t>(eax221) >= reinterpret_cast<int32_t>(0)) {
                    *reinterpret_cast<int16_t*>(&g43018c) = 0;
                    eax176 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax221) + 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_217) * 4));
                } else {
                    *reinterpret_cast<int16_t*>(&g43018c) = -1;
                    eax176 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax221) - 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_217) * 4));
                    tmp32_222 = *reinterpret_cast<uint32_t*>(&g43018c) + reinterpret_cast<unsigned char>(eax176);
                    *reinterpret_cast<uint32_t*>(&g43018c) = tmp32_222;
                }
                g43017c = eax176;
                goto addr_40c4ff_121;
            } else {
                eax223 = g43014c;
                zf224 = eax223 == g430154;
                if (zf224) {
                    eax225 = g430148;
                    less_or_equal226 = reinterpret_cast<signed char>(eax225) <= reinterpret_cast<signed char>(g430150);
                    if (!less_or_equal226) {
                        edx165 = reinterpret_cast<void**>(0x430148);
                        ecx60 = reinterpret_cast<void**>(0x430150);
                    }
                    eax227 = g430144;
                    g430178 = eax227;
                    edi228 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx165 + 4)) - reinterpret_cast<unsigned char>(g430144));
                    g430188 = edi228;
                    eax229 = g430140;
                    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g43018c) + 2) = eax229;
                    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g430192) + 2) = eax229;
                    eax230 = reinterpret_cast<int32_t>(-(reinterpret_cast<unsigned char>(eax229) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx165))));
                    tmp32_231 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi228) + reinterpret_cast<uint32_t>(g430198));
                    if (eax230 <= 0) {
                        *reinterpret_cast<int16_t*>(&g430192) = -1;
                        eax232 = reinterpret_cast<void**>((eax230 - 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_231) * 4));
                    } else {
                        *reinterpret_cast<int16_t*>(&g430192) = 0;
                        eax232 = reinterpret_cast<void**>((eax230 + 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_231) * 4));
                        tmp32_233 = *reinterpret_cast<uint32_t*>(&g430192) + reinterpret_cast<unsigned char>(eax232);
                        *reinterpret_cast<uint32_t*>(&g430192) = tmp32_233;
                    }
                    g430180 = eax232;
                    eax234 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx60)) - reinterpret_cast<unsigned char>(g430140));
                    if (reinterpret_cast<int32_t>(eax234) >= reinterpret_cast<int32_t>(0)) {
                        *reinterpret_cast<int16_t*>(&g43018c) = 0;
                        eax176 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax234) + 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_231) * 4));
                    } else {
                        *reinterpret_cast<int16_t*>(&g43018c) = -1;
                        eax176 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax234) - 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_231) * 4));
                        tmp32_235 = *reinterpret_cast<uint32_t*>(&g43018c) + reinterpret_cast<unsigned char>(eax176);
                        *reinterpret_cast<uint32_t*>(&g43018c) = tmp32_235;
                    }
                    g43017c = eax176;
                    goto addr_40c4ff_121;
                } else {
                    eax236 = g430144;
                    g430178 = eax236;
                    eax237 = g43014c;
                    g430158 = eax237;
                    eax238 = g43014c;
                    eax239 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax238) - reinterpret_cast<unsigned char>(g430144));
                    g430188 = eax239;
                    eax240 = g430154;
                    eax241 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax240) - reinterpret_cast<unsigned char>(g43014c));
                    g43015c = eax241;
                    eax242 = g430140;
                    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g43018c) + 2) = eax242;
                    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g430192) + 2) = eax242;
                    edi243 = g430154;
                    edi244 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi243) - reinterpret_cast<unsigned char>(g430144));
                    tmp32_245 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi244) + reinterpret_cast<uint32_t>(g430198));
                    eax246 = g430150;
                    eax247 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax246) - reinterpret_cast<unsigned char>(g430140));
                    eax248 = reinterpret_cast<uint32_t>(eax247) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_245) * 4) * reinterpret_cast<uint32_t>(g430188);
                    tmp32_249 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(eax248 + 0x8000) >> 16) + reinterpret_cast<unsigned char>(g430140));
                    less250 = reinterpret_cast<signed char>(tmp32_249) < reinterpret_cast<signed char>(g430148);
                    if (!less250) {
                        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g43016e) + 2) = tmp32_249;
                        eax251 = g430150;
                        eax252 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax251) - reinterpret_cast<unsigned char>(g430140));
                        if (reinterpret_cast<int32_t>(eax252) >= reinterpret_cast<int32_t>(0)) {
                            *reinterpret_cast<int16_t*>(&g430192) = 0;
                            eax253 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax252) + 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_245) * 4));
                            *reinterpret_cast<int16_t*>(&g43016e) = 0;
                            tmp32_254 = *reinterpret_cast<uint32_t*>(&g430192) + reinterpret_cast<unsigned char>(eax253);
                            *reinterpret_cast<uint32_t*>(&g430192) = tmp32_254;
                            tmp32_255 = *reinterpret_cast<uint32_t*>(&g43016e) + reinterpret_cast<unsigned char>(eax253);
                            *reinterpret_cast<uint32_t*>(&g43016e) = tmp32_255;
                        } else {
                            eax253 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax252) - 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_245) * 4));
                            *reinterpret_cast<int16_t*>(&g430192) = -1;
                            *reinterpret_cast<int16_t*>(&g43016e) = -1;
                        }
                        g430180 = eax253;
                        g430164 = eax253;
                        edi256 = g430188;
                        tmp32_257 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi256) + reinterpret_cast<uint32_t>(g430198));
                        eax258 = g430148;
                        eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax258) - reinterpret_cast<unsigned char>(g430140));
                        if (reinterpret_cast<int32_t>(eax259) <= reinterpret_cast<int32_t>(0)) {
                            eax260 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax259) - 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_257) * 4));
                            *reinterpret_cast<int16_t*>(&g43018c) = -1;
                            tmp32_261 = *reinterpret_cast<uint32_t*>(&g43018c) + reinterpret_cast<unsigned char>(eax260);
                            *reinterpret_cast<uint32_t*>(&g43018c) = tmp32_261;
                        } else {
                            eax260 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax259) + 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_257) * 4));
                            *reinterpret_cast<int16_t*>(&g43018c) = 0;
                        }
                        g43017c = eax260;
                        eax262 = g430148;
                        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g430168) + 2) = eax262;
                        edi263 = g43015c;
                        tmp32_264 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi263) + reinterpret_cast<uint32_t>(g430198));
                        eax265 = g430150;
                        eax266 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax265) - reinterpret_cast<unsigned char>(g430148));
                        if (reinterpret_cast<int32_t>(eax266) >= reinterpret_cast<int32_t>(0)) {
                            eax267 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax266) + 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_264) * 4));
                            *reinterpret_cast<int16_t*>(&g430168) = 0;
                        } else {
                            eax267 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax266) - 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_264) * 4));
                            *reinterpret_cast<int16_t*>(&g430168) = -1;
                            tmp32_268 = *reinterpret_cast<uint32_t*>(&g430168) + reinterpret_cast<unsigned char>(eax267);
                            *reinterpret_cast<uint32_t*>(&g430168) = tmp32_268;
                        }
                        g430160 = eax267;
                    } else {
                        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g430168) + 2) = tmp32_249;
                        eax269 = g430150;
                        eax270 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax269) - reinterpret_cast<unsigned char>(g430140));
                        if (reinterpret_cast<int32_t>(eax270) <= reinterpret_cast<int32_t>(0)) {
                            *reinterpret_cast<int16_t*>(&g43018c) = -1;
                            *reinterpret_cast<int16_t*>(&g430168) = -1;
                            eax271 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax270) - 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_245) * 4));
                            tmp32_272 = *reinterpret_cast<uint32_t*>(&g43018c) + reinterpret_cast<unsigned char>(eax271);
                            *reinterpret_cast<uint32_t*>(&g43018c) = tmp32_272;
                            tmp32_273 = *reinterpret_cast<uint32_t*>(&g430168) + reinterpret_cast<unsigned char>(eax271);
                            *reinterpret_cast<uint32_t*>(&g430168) = tmp32_273;
                        } else {
                            *reinterpret_cast<int16_t*>(&g43018c) = 0;
                            eax271 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax270) + 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_245) * 4));
                            *reinterpret_cast<int16_t*>(&g430168) = 0;
                        }
                        g43017c = eax271;
                        g430160 = eax271;
                        edi274 = g430188;
                        tmp32_275 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi274) + reinterpret_cast<uint32_t>(g430198));
                        eax276 = g430148;
                        eax277 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax276) - reinterpret_cast<unsigned char>(g430140));
                        if (reinterpret_cast<int32_t>(eax277) >= reinterpret_cast<int32_t>(0)) {
                            eax278 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax277) + 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_275) * 4));
                            *reinterpret_cast<int16_t*>(&g430192) = 0;
                            tmp32_279 = *reinterpret_cast<uint32_t*>(&g430192) + reinterpret_cast<unsigned char>(eax278);
                            *reinterpret_cast<uint32_t*>(&g430192) = tmp32_279;
                        } else {
                            eax278 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax277) - 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_275) * 4));
                            *reinterpret_cast<int16_t*>(&g430192) = -1;
                        }
                        g430180 = eax278;
                        eax280 = g430148;
                        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g43016e) + 2) = eax280;
                        edi281 = g43015c;
                        tmp32_282 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi281) + reinterpret_cast<uint32_t>(g430198));
                        eax283 = g430150;
                        eax284 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax283) - reinterpret_cast<unsigned char>(g430148));
                        if (reinterpret_cast<int32_t>(eax284) <= reinterpret_cast<int32_t>(0)) {
                            eax267 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax284) - 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_282) * 4));
                            *reinterpret_cast<int16_t*>(&g43016e) = -1;
                        } else {
                            *reinterpret_cast<int16_t*>(&g43016e) = 0;
                            eax267 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax284) + 1) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_282) * 4));
                            tmp32_285 = *reinterpret_cast<uint32_t*>(&g43016e) + reinterpret_cast<unsigned char>(eax267);
                            *reinterpret_cast<uint32_t*>(&g43016e) = tmp32_285;
                        }
                        g430164 = eax267;
                    }
                    edx286 = reinterpret_cast<void*>(0);
                    *reinterpret_cast<signed char*>(&edx286) = esi21->f2d;
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx286) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi21) + 40);
                    tmp32_287 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx286) + reinterpret_cast<uint32_t>(g41cdac));
                    *reinterpret_cast<signed char*>(&eax267 + 1) = *tmp32_287;
                    *reinterpret_cast<signed char*>(&eax267) = *tmp32_287;
                    eax288 = reinterpret_cast<unsigned char>(eax267) >> 24 | reinterpret_cast<unsigned char>(eax267) >> 8 & 0xff00 | reinterpret_cast<unsigned char>(eax267) << 8 & 0xff0000 | reinterpret_cast<unsigned char>(eax267) << 24;
                    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax288) + 1) = *tmp32_287;
                    *reinterpret_cast<signed char*>(&eax288) = *tmp32_287;
                    g430174 = eax288;
                    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g43018c) + 4) = 0;
                    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g430192) + 4) = 0;
                    ebx289 = g430180;
                    ecx290 = g43017c;
                    edi291 = g430178;
                    less292 = reinterpret_cast<signed char>(edi291) < reinterpret_cast<signed char>(g41cdb4);
                    if (!less292) 
                        goto addr_40c0ff_184;
                }
            }
            edi293 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi291) - reinterpret_cast<unsigned char>(g41cdb4));
            edi294 = -reinterpret_cast<uint32_t>(edi293);
            g430188 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g430188) - edi294);
            sf295 = reinterpret_cast<int32_t>(g430188) < reinterpret_cast<int32_t>(0);
            if (sf295) 
                goto addr_40c191_186;
            tmp32_296 = *reinterpret_cast<uint32_t*>(&g430192) + reinterpret_cast<unsigned char>(ebx289) * edi294;
            *reinterpret_cast<uint32_t*>(&g430192) = tmp32_296;
            tmp32_297 = *reinterpret_cast<uint32_t*>(&g43018c) + reinterpret_cast<unsigned char>(ecx290) * edi294;
            *reinterpret_cast<uint32_t*>(&g43018c) = tmp32_297;
            edi291 = g41cdb4;
            g430178 = edi291;
            addr_40c0ff_184:
            tmp32_298 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi291) + reinterpret_cast<uint32_t>(g430188));
            less_or_equal299 = reinterpret_cast<signed char>(tmp32_298) <= reinterpret_cast<signed char>(g41cdbc);
            if (!less_or_equal299) {
                edi300 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(tmp32_298) - reinterpret_cast<unsigned char>(g41cdbc));
                g430188 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g430188) - reinterpret_cast<uint32_t>(edi300));
                sf301 = reinterpret_cast<int32_t>(g430188) < reinterpret_cast<int32_t>(0);
                if (sf301) {
                    addr_40c191_186:
                    g43015c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43015c) - 1);
                    ++g430158;
                    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g430168) + 4) = 0;
                    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g43016e) + 4) = 0;
                    ebx302 = g430164;
                    ecx60 = g430160;
                    edi303 = g430158;
                    less304 = reinterpret_cast<signed char>(edi303) < reinterpret_cast<signed char>(g41cdb4);
                    if (less304) {
                        edi305 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi303) - reinterpret_cast<unsigned char>(g41cdb4));
                        edi306 = -reinterpret_cast<uint32_t>(edi305);
                        g43015c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43015c) - edi306);
                        sf307 = reinterpret_cast<int32_t>(g43015c) < reinterpret_cast<int32_t>(0);
                        if (sf307) 
                            goto addr_40c25f_190;
                        tmp32_308 = *reinterpret_cast<uint32_t*>(&g43016e) + reinterpret_cast<unsigned char>(ebx302) * edi306;
                        *reinterpret_cast<uint32_t*>(&g43016e) = tmp32_308;
                        tmp32_309 = *reinterpret_cast<uint32_t*>(&g430168) + reinterpret_cast<unsigned char>(ecx60) * edi306;
                        *reinterpret_cast<uint32_t*>(&g430168) = tmp32_309;
                        edi303 = g41cdb4;
                        g430158 = edi303;
                    }
                } else {
                    goto addr_40c111_193;
                }
            } else {
                addr_40c111_193:
                edi310 = g430178;
                tmp32_311 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi310) * 4 + 0x41cdf8)) + reinterpret_cast<uint32_t>(g41cda4));
                edi312 = tmp32_311;
                eax313 = g430174;
                goto addr_40c129_194;
            }
            tmp32_314 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi303) + reinterpret_cast<uint32_t>(g43015c));
            less_or_equal315 = reinterpret_cast<signed char>(tmp32_314) <= reinterpret_cast<signed char>(g41cdbc);
            if (!less_or_equal315) {
                edi316 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(tmp32_314) - reinterpret_cast<unsigned char>(g41cdbc));
                g43015c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43015c) - reinterpret_cast<uint32_t>(edi316));
                sf317 = reinterpret_cast<int32_t>(g43015c) < reinterpret_cast<int32_t>(0);
                if (sf317) {
                    addr_40c25f_190:
                    edi2 = v163;
                    break;
                }
            }
            edi318 = g430158;
            tmp32_319 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi318) * 4 + 0x41cdf8)) + reinterpret_cast<uint32_t>(g41cda4));
            edi320 = tmp32_319;
            eax321 = g430174;
            while (1) {
                tmp32_322 = *reinterpret_cast<uint32_t*>(&g43016e) + reinterpret_cast<unsigned char>(ebx302);
                *reinterpret_cast<uint32_t*>(&g43016e) = tmp32_322;
                tmp32_323 = *reinterpret_cast<uint32_t*>(&g430168) + reinterpret_cast<unsigned char>(ecx60);
                *reinterpret_cast<uint32_t*>(&g430168) = tmp32_323;
                esi324 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g430168) + 2);
                edx325 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g43016e) + 2);
                less326 = *reinterpret_cast<int16_t*>(&esi324) < *reinterpret_cast<int16_t*>(&g41cdb0);
                if (less326) {
                    less327 = *reinterpret_cast<int16_t*>(&edx325) < *reinterpret_cast<int16_t*>(&g41cdb0);
                    if (less327) 
                        goto addr_40c251_201;
                    esi324 = g41cdb0;
                    less_or_equal328 = *reinterpret_cast<int16_t*>(&edx325) <= *reinterpret_cast<int16_t*>(&g41cdb8);
                    if (less_or_equal328) 
                        goto addr_40c229_203; else 
                        goto addr_40c30f_204;
                } else {
                    less_or_equal329 = *reinterpret_cast<int16_t*>(&edx325) <= *reinterpret_cast<int16_t*>(&g41cdb8);
                    if (!less_or_equal329) {
                        addr_40c30f_204:
                        less_or_equal330 = *reinterpret_cast<int16_t*>(&esi324) <= *reinterpret_cast<int16_t*>(&g41cdb8);
                        if (!less_or_equal330) {
                            addr_40c251_201:
                            tmp32_331 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi320) + reinterpret_cast<uint32_t>(g41cdf0));
                            edi320 = tmp32_331;
                            g43015c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43015c) - 1);
                            sf332 = reinterpret_cast<int32_t>(g43015c) < reinterpret_cast<int32_t>(0);
                            if (sf332) 
                                goto addr_40c25f_190;
                        } else {
                            edx325 = g41cdb8;
                            goto addr_40c229_203;
                        }
                    } else {
                        addr_40c229_203:
                        edx333 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx325) - reinterpret_cast<unsigned char>(esi324));
                        esi334 = reinterpret_cast<int16_t*>(reinterpret_cast<unsigned char>(esi324) + reinterpret_cast<uint32_t>(edi320));
                        if (*reinterpret_cast<int16_t*>(&edx333) >= 0) {
                            edx335 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx333) - 3);
                            if (reinterpret_cast<int32_t>(edx335) >= reinterpret_cast<int32_t>(0)) {
                                do {
                                    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi334) + reinterpret_cast<uint32_t>(edx335)) = eax321;
                                    edx335 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx335) - 4);
                                } while (reinterpret_cast<int32_t>(edx335) >= reinterpret_cast<int32_t>(0));
                            }
                            if (reinterpret_cast<int32_t>(edx335) >= reinterpret_cast<int32_t>(0xfffffffe)) {
                                *esi334 = *reinterpret_cast<int16_t*>(&eax321);
                            }
                            if (reinterpret_cast<int32_t>(edx335) > reinterpret_cast<int32_t>(0xfffffffc)) {
                                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi334) + reinterpret_cast<uint32_t>(edx335) + 3) = *reinterpret_cast<signed char*>(&eax321);
                                goto addr_40c251_201;
                            }
                        }
                    }
                }
            }
            while (1) {
                addr_40c129_194:
                esi336 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g43018c) + 2);
                edx337 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g430192) + 2);
                less338 = *reinterpret_cast<int16_t*>(&esi336) < *reinterpret_cast<int16_t*>(&g41cdb0);
                if (less338) {
                    less339 = *reinterpret_cast<int16_t*>(&edx337) < *reinterpret_cast<int16_t*>(&g41cdb0);
                    if (less339) 
                        goto addr_40c177_214;
                    esi336 = g41cdb0;
                    less_or_equal340 = *reinterpret_cast<int16_t*>(&edx337) <= *reinterpret_cast<int16_t*>(&g41cdb8);
                    if (less_or_equal340) 
                        goto addr_40c14f_216; else 
                        goto addr_40c285_217;
                } else {
                    less_or_equal341 = *reinterpret_cast<int16_t*>(&edx337) <= *reinterpret_cast<int16_t*>(&g41cdb8);
                    if (!less_or_equal341) {
                        addr_40c285_217:
                        less_or_equal342 = *reinterpret_cast<int16_t*>(&esi336) <= *reinterpret_cast<int16_t*>(&g41cdb8);
                        if (!less_or_equal342) {
                            addr_40c177_214:
                            tmp32_343 = *reinterpret_cast<uint32_t*>(&g430192) + reinterpret_cast<unsigned char>(ebx289);
                            *reinterpret_cast<uint32_t*>(&g430192) = tmp32_343;
                            tmp32_344 = *reinterpret_cast<uint32_t*>(&g43018c) + reinterpret_cast<unsigned char>(ecx290);
                            *reinterpret_cast<uint32_t*>(&g43018c) = tmp32_344;
                            tmp32_345 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi312) + reinterpret_cast<uint32_t>(g41cdf0));
                            edi312 = tmp32_345;
                            g430188 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g430188) - 1);
                            sf346 = reinterpret_cast<int32_t>(g430188) < reinterpret_cast<int32_t>(0);
                            if (sf346) 
                                goto addr_40c191_186;
                        } else {
                            edx337 = g41cdb8;
                            goto addr_40c14f_216;
                        }
                    } else {
                        addr_40c14f_216:
                        edx347 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx337) - reinterpret_cast<unsigned char>(esi336));
                        esi348 = reinterpret_cast<int16_t*>(reinterpret_cast<unsigned char>(esi336) + reinterpret_cast<uint32_t>(edi312));
                        if (*reinterpret_cast<int16_t*>(&edx347) >= 0) {
                            edx349 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx347) - 3);
                            if (reinterpret_cast<int32_t>(edx349) >= reinterpret_cast<int32_t>(0)) {
                                do {
                                    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi348) + reinterpret_cast<uint32_t>(edx349)) = eax313;
                                    edx349 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx349) - 4);
                                } while (reinterpret_cast<int32_t>(edx349) >= reinterpret_cast<int32_t>(0));
                            }
                            if (reinterpret_cast<int32_t>(edx349) >= reinterpret_cast<int32_t>(0xfffffffe)) {
                                *esi348 = *reinterpret_cast<int16_t*>(&eax313);
                            }
                            if (reinterpret_cast<int32_t>(edx349) > reinterpret_cast<int32_t>(0xfffffffc)) {
                                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi348) + reinterpret_cast<uint32_t>(edx349) + 3) = *reinterpret_cast<signed char*>(&eax313);
                                goto addr_40c177_214;
                            }
                        }
                    }
                }
            }
        case 16:
            ebx350 = reinterpret_cast<struct s177*>(0x434098);
            esi351 = reinterpret_cast<struct s176*>(&esi21->f4);
            ecx352 = 3;
            do {
                eax353 = reinterpret_cast<signed char*>(reinterpret_cast<signed char>(esi351->f0) >> 8);
                if (reinterpret_cast<signed char>(eax353) < reinterpret_cast<signed char>(0xffffc180)) {
                    eax353 = reinterpret_cast<signed char*>(0xffffc180);
                }
                if (reinterpret_cast<signed char>(eax353) > reinterpret_cast<signed char>(0x3e80)) {
                    eax353 = reinterpret_cast<signed char*>(0x3e80);
                }
                ebx350->f0 = eax353;
                eax354 = esi351->f4 >> 8;
                if (eax354 < 0xffffc180) {
                    eax354 = 0xffffc180;
                }
                if (eax354 > 0x3e80) {
                    eax354 = 0x3e80;
                }
                ebx350->f4 = eax354;
                ebx350->f8 = esi351->f8;
                ebx350->fc = esi351->fc;
                ++esi351;
                ++ebx350;
                --ecx352;
            } while (ecx352);
            ebx350->f0 = esi351->f0;
            ecx60 = reinterpret_cast<void**>(0x4340a8);
            ebx355 = reinterpret_cast<void**>(0x434098);
            eax356 = g4340ac;
            edx357 = reinterpret_cast<void**>(0x4340b8);
            less358 = eax356 < g43409c;
            if (less358) {
                eax359 = g4340bc;
                ecx60 = reinterpret_cast<void**>(0x434098);
                ebx355 = reinterpret_cast<void**>(0x4340a8);
                less_or_equal360 = eax359 <= g43409c;
                if (less_or_equal360 && (edx357 = reinterpret_cast<void**>(0x434098), ecx60 = reinterpret_cast<void**>(0x4340b8), less_or_equal361 = eax359 <= g4340ac, less_or_equal361)) {
                    ecx60 = reinterpret_cast<void**>(0x4340a8);
                    ebx355 = reinterpret_cast<void**>(0x4340b8);
                }
            } else {
                less362 = eax356 < g4340bc;
                if (!less362 && (eax363 = g43409c, edx357 = reinterpret_cast<void**>(0x4340a8), ecx60 = reinterpret_cast<void**>(0x4340b8), less364 = eax363 < g4340bc, !less364)) {
                    ecx60 = reinterpret_cast<void**>(0x434098);
                    ebx355 = reinterpret_cast<void**>(0x4340b8);
                }
            }
            if (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357 + 4)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355 + 4))) > reinterpret_cast<int32_t>(0x3a98)) 
                break;
            if (*reinterpret_cast<void***>(ebx355 + 4) == *reinterpret_cast<void***>(edx357 + 4)) {
                if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx355)) > reinterpret_cast<signed char>(*reinterpret_cast<void***>(ecx60))) {
                    tmp32_365 = ecx60;
                    ecx60 = ebx355;
                    ebx355 = tmp32_365;
                }
                eax366 = *reinterpret_cast<void***>(edx357);
                edi367 = *reinterpret_cast<uint32_t*>(edx357 + 12);
                if (reinterpret_cast<signed char>(eax366) <= reinterpret_cast<signed char>(*reinterpret_cast<void***>(ecx60))) {
                    if (reinterpret_cast<signed char>(eax366) <= reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx355))) {
                        ebx355 = edx357;
                    }
                    eax366 = *reinterpret_cast<void***>(ecx60);
                    edi367 = *reinterpret_cast<uint32_t*>(ecx60 + 12);
                }
                *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434126) + 2) = eax366;
                *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434120) + 2) = *reinterpret_cast<void***>(ebx355);
                g434134 = *reinterpret_cast<void***>(ebx355 + 4);
                g43411c = reinterpret_cast<void*>(0);
                eax368 = *reinterpret_cast<uint32_t*>(ebx355 + 12) << 8;
                g434130 = edi367 << 8;
                g43412c = eax368;
                fun_40e79b();
                edi2 = edi2;
                break;
            } else {
                if (*reinterpret_cast<void***>(ebx355 + 4) == *reinterpret_cast<void***>(ecx60 + 4)) {
                    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx355)) > reinterpret_cast<signed char>(*reinterpret_cast<void***>(ecx60))) {
                        tmp32_369 = ecx60;
                        ecx60 = ebx355;
                        ebx355 = tmp32_369;
                    }
                    g434134 = *reinterpret_cast<void***>(ebx355 + 4);
                    edi370 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357 + 4)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355 + 4)));
                    g43411c = edi370;
                    g43412c = *reinterpret_cast<uint32_t*>(ebx355 + 12) << 8;
                    g434130 = *reinterpret_cast<uint32_t*>(ecx60 + 12) << 8;
                    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434120) + 2) = *reinterpret_cast<void***>(ebx355);
                    eax371 = *reinterpret_cast<void***>(ecx60);
                    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434126) + 2) = eax371;
                    eax372 = reinterpret_cast<int32_t>(-(reinterpret_cast<unsigned char>(eax371) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357))));
                    tmp32_373 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi370) + reinterpret_cast<uint32_t>(g4366b8));
                    if (eax372 <= 0) {
                        *reinterpret_cast<int16_t*>(&g434126) = -1;
                        eax374 = reinterpret_cast<uint32_t>((eax372 - 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_373) * 4));
                    } else {
                        *reinterpret_cast<int16_t*>(&g434126) = 0;
                        eax374 = reinterpret_cast<uint32_t>((eax372 + 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_373) * 4));
                        tmp32_375 = *reinterpret_cast<uint32_t*>(&g434126) + eax374;
                        *reinterpret_cast<uint32_t*>(&g434126) = tmp32_375;
                    }
                    g43410c = eax374;
                    eax376 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355)));
                    if (reinterpret_cast<int32_t>(eax376) >= reinterpret_cast<int32_t>(0)) {
                        *reinterpret_cast<int16_t*>(&g434120) = 0;
                        eax377 = (reinterpret_cast<uint32_t>(eax376) + 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_373) * 4);
                    } else {
                        *reinterpret_cast<int16_t*>(&g434120) = -1;
                        eax377 = (reinterpret_cast<uint32_t>(eax376) - 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_373) * 4);
                        tmp32_378 = *reinterpret_cast<uint32_t*>(&g434120) + eax377;
                        *reinterpret_cast<uint32_t*>(&g434120) = tmp32_378;
                    }
                    g434108 = eax377;
                    g434110 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>((*reinterpret_cast<uint32_t*>(edx357 + 12) - *reinterpret_cast<uint32_t*>(ebx355 + 12)) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_373) * 4)) >> 8);
                    g434114 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>((*reinterpret_cast<uint32_t*>(edx357 + 12) - *reinterpret_cast<uint32_t*>(ecx60 + 12)) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_373) * 4)) >> 8);
                    fun_40e79b();
                    edi2 = edi2;
                    break;
                } else {
                    if (*reinterpret_cast<void***>(ecx60 + 4) == *reinterpret_cast<void***>(edx357 + 4)) {
                        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ecx60)) > reinterpret_cast<signed char>(*reinterpret_cast<void***>(edx357))) {
                            tmp32_379 = edx357;
                            edx357 = ecx60;
                            ecx60 = tmp32_379;
                        }
                        eax380 = *reinterpret_cast<uint32_t*>(ebx355 + 12) << 8;
                        g43412c = eax380;
                        g434130 = eax380;
                        g434134 = *reinterpret_cast<void***>(ebx355 + 4);
                        edi381 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357 + 4)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355 + 4)));
                        g43411c = edi381;
                        eax382 = *reinterpret_cast<void***>(ebx355);
                        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434120) + 2) = eax382;
                        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434126) + 2) = eax382;
                        eax383 = reinterpret_cast<int32_t>(-(reinterpret_cast<unsigned char>(eax382) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357))));
                        tmp32_384 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi381) + reinterpret_cast<uint32_t>(g4366b8));
                        if (eax383 <= 0) {
                            *reinterpret_cast<int16_t*>(&g434126) = -1;
                            eax385 = reinterpret_cast<uint32_t>((eax383 - 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_384) * 4));
                        } else {
                            *reinterpret_cast<int16_t*>(&g434126) = 0;
                            eax385 = reinterpret_cast<uint32_t>((eax383 + 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_384) * 4));
                            tmp32_386 = *reinterpret_cast<uint32_t*>(&g434126) + eax385;
                            *reinterpret_cast<uint32_t*>(&g434126) = tmp32_386;
                        }
                        g43410c = eax385;
                        eax387 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx60)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355)));
                        if (reinterpret_cast<int32_t>(eax387) >= reinterpret_cast<int32_t>(0)) {
                            *reinterpret_cast<int16_t*>(&g434120) = 0;
                            eax388 = (reinterpret_cast<uint32_t>(eax387) + 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_384) * 4);
                        } else {
                            *reinterpret_cast<int16_t*>(&g434120) = -1;
                            eax388 = (reinterpret_cast<uint32_t>(eax387) - 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_384) * 4);
                            tmp32_389 = *reinterpret_cast<uint32_t*>(&g434120) + eax388;
                            *reinterpret_cast<uint32_t*>(&g434120) = tmp32_389;
                        }
                        g434108 = eax388;
                        g434110 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>((*reinterpret_cast<uint32_t*>(ecx60 + 12) - *reinterpret_cast<uint32_t*>(ebx355 + 12)) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_384) * 4)) >> 8);
                        g434114 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>((*reinterpret_cast<uint32_t*>(edx357 + 12) - *reinterpret_cast<uint32_t*>(ebx355 + 12)) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_384) * 4)) >> 8);
                        fun_40e79b();
                        edi2 = edi2;
                        break;
                    } else {
                        g434134 = *reinterpret_cast<void***>(ebx355 + 4);
                        g4340cc = *reinterpret_cast<void***>(ecx60 + 4);
                        g43411c = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx60 + 4)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355 + 4)));
                        g4340d0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357 + 4)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx60 + 4)));
                        eax390 = *reinterpret_cast<void***>(ebx355);
                        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434120) + 2) = eax390;
                        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434126) + 2) = eax390;
                        eax391 = *reinterpret_cast<uint32_t*>(ebx355 + 12) << 8;
                        g43412c = eax391;
                        g434130 = eax391;
                        tmp32_392 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357 + 4)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355 + 4)) + reinterpret_cast<uint32_t>(g4366b8));
                        eax393 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355))) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_392) * 4) * reinterpret_cast<uint32_t>(g43411c);
                        eax394 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(eax393 + 0x8000) >> 16) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355)));
                        if (reinterpret_cast<signed char>(eax394) >= reinterpret_cast<signed char>(*reinterpret_cast<void***>(ecx60))) {
                            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g4340e2) + 2) = eax394;
                            eax395 = (*reinterpret_cast<uint32_t*>(edx357 + 12) - *reinterpret_cast<uint32_t*>(ebx355 + 12)) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_392) * 4) * reinterpret_cast<uint32_t>(g43411c);
                            ecx60 = ecx60;
                            g4340f4 = (reinterpret_cast<int32_t>(eax395) >> 8) + (*reinterpret_cast<uint32_t*>(ebx355 + 12) << 8);
                            eax396 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355)));
                            if (reinterpret_cast<int32_t>(eax396) >= reinterpret_cast<int32_t>(0)) {
                                *reinterpret_cast<int16_t*>(&g434126) = 0;
                                eax397 = (reinterpret_cast<uint32_t>(eax396) + 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_392) * 4);
                                *reinterpret_cast<int16_t*>(&g4340e2) = 0;
                                tmp32_398 = *reinterpret_cast<uint32_t*>(&g434126) + eax397;
                                *reinterpret_cast<uint32_t*>(&g434126) = tmp32_398;
                                tmp32_399 = *reinterpret_cast<uint32_t*>(&g4340e2) + eax397;
                                *reinterpret_cast<uint32_t*>(&g4340e2) = tmp32_399;
                            } else {
                                eax397 = (reinterpret_cast<uint32_t>(eax396) - 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_392) * 4);
                                *reinterpret_cast<int16_t*>(&g434126) = -1;
                                *reinterpret_cast<int16_t*>(&g4340e2) = -1;
                            }
                            g43410c = eax397;
                            g4340d8 = eax397;
                            eax400 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>((*reinterpret_cast<uint32_t*>(edx357 + 12) - *reinterpret_cast<uint32_t*>(ebx355 + 12)) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_392) * 4 - 4)) >> 8);
                            g434114 = eax400;
                            g4340ec = eax400;
                            edi401 = g43411c;
                            tmp32_402 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi401) + reinterpret_cast<uint32_t>(g4366b8));
                            eax403 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx60)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355)));
                            if (reinterpret_cast<int32_t>(eax403) <= reinterpret_cast<int32_t>(0)) {
                                eax404 = (reinterpret_cast<uint32_t>(eax403) - 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_402) * 4);
                                *reinterpret_cast<int16_t*>(&g434120) = -1;
                                tmp32_405 = *reinterpret_cast<uint32_t*>(&g434120) + eax404;
                                *reinterpret_cast<uint32_t*>(&g434120) = tmp32_405;
                            } else {
                                eax404 = (reinterpret_cast<uint32_t>(eax403) + 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_402) * 4);
                                *reinterpret_cast<int16_t*>(&g434120) = 0;
                            }
                            g434108 = eax404;
                            g434110 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>((*reinterpret_cast<uint32_t*>(ecx60 + 12) - *reinterpret_cast<uint32_t*>(ebx355 + 12)) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_402) * 4 - 4)) >> 8);
                            g4340f0 = *reinterpret_cast<uint32_t*>(ecx60 + 12) << 8;
                            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g4340dc) + 2) = *reinterpret_cast<void***>(ecx60);
                            edi406 = g4340d0;
                            tmp32_407 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi406) + reinterpret_cast<uint32_t>(g4366b8));
                            eax408 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx60)));
                            if (reinterpret_cast<int32_t>(eax408) >= reinterpret_cast<int32_t>(0)) {
                                eax409 = (reinterpret_cast<uint32_t>(eax408) + 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_407) * 4);
                                *reinterpret_cast<int16_t*>(&g4340dc) = 0;
                            } else {
                                eax409 = (reinterpret_cast<uint32_t>(eax408) - 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_407) * 4);
                                *reinterpret_cast<int16_t*>(&g4340dc) = -1;
                                tmp32_410 = *reinterpret_cast<uint32_t*>(&g4340dc) + eax409;
                                *reinterpret_cast<uint32_t*>(&g4340dc) = tmp32_410;
                            }
                            g4340d4 = eax409;
                            g4340e8 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>((*reinterpret_cast<uint32_t*>(edx357 + 12) - *reinterpret_cast<uint32_t*>(ecx60 + 12)) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_407) * 4 - 4)) >> 8);
                        } else {
                            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g4340dc) + 2) = eax394;
                            eax411 = (*reinterpret_cast<uint32_t*>(edx357 + 12) - *reinterpret_cast<uint32_t*>(ebx355 + 12)) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_392) * 4 - 4) * reinterpret_cast<uint32_t>(g43411c);
                            ecx60 = ecx60;
                            g4340f0 = (reinterpret_cast<int32_t>(eax411) >> 8) + (*reinterpret_cast<uint32_t*>(ebx355 + 12) << 8);
                            eax412 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355)));
                            if (reinterpret_cast<int32_t>(eax412) <= reinterpret_cast<int32_t>(0)) {
                                eax413 = (reinterpret_cast<uint32_t>(eax412) - 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_392) * 4);
                                *reinterpret_cast<int16_t*>(&g434120) = -1;
                                *reinterpret_cast<int16_t*>(&g4340dc) = -1;
                                tmp32_414 = *reinterpret_cast<uint32_t*>(&g434120) + eax413;
                                *reinterpret_cast<uint32_t*>(&g434120) = tmp32_414;
                                tmp32_415 = *reinterpret_cast<uint32_t*>(&g4340dc) + eax413;
                                *reinterpret_cast<uint32_t*>(&g4340dc) = tmp32_415;
                            } else {
                                eax413 = (reinterpret_cast<uint32_t>(eax412) + 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_392) * 4);
                                *reinterpret_cast<int16_t*>(&g434120) = 0;
                                *reinterpret_cast<int16_t*>(&g4340dc) = 0;
                            }
                            g434108 = eax413;
                            g4340d4 = eax413;
                            eax416 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>((*reinterpret_cast<uint32_t*>(edx357 + 12) - *reinterpret_cast<uint32_t*>(ebx355 + 12)) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_392) * 4 - 4)) >> 8);
                            g434110 = eax416;
                            g4340e8 = eax416;
                            edi417 = g43411c;
                            tmp32_418 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi417) + reinterpret_cast<uint32_t>(g4366b8));
                            eax419 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx60)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx355)));
                            if (reinterpret_cast<int32_t>(eax419) >= reinterpret_cast<int32_t>(0)) {
                                eax420 = (reinterpret_cast<uint32_t>(eax419) + 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_418) * 4);
                                *reinterpret_cast<int16_t*>(&g434126) = 0;
                                tmp32_421 = *reinterpret_cast<uint32_t*>(&g434126) + eax420;
                                *reinterpret_cast<uint32_t*>(&g434126) = tmp32_421;
                            } else {
                                eax420 = (reinterpret_cast<uint32_t>(eax419) - 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_418) * 4);
                                *reinterpret_cast<int16_t*>(&g434126) = -1;
                            }
                            g43410c = eax420;
                            g434114 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>((*reinterpret_cast<uint32_t*>(ecx60 + 12) - *reinterpret_cast<uint32_t*>(ebx355 + 12)) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_418) * 4 - 4)) >> 8);
                            g4340f4 = *reinterpret_cast<uint32_t*>(ecx60 + 12) << 8;
                            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g4340e2) + 2) = *reinterpret_cast<void***>(ecx60);
                            edi422 = g4340d0;
                            tmp32_423 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi422) + reinterpret_cast<uint32_t>(g4366b8));
                            eax424 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx357)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx60)));
                            if (reinterpret_cast<int32_t>(eax424) <= reinterpret_cast<int32_t>(0)) {
                                eax425 = (reinterpret_cast<uint32_t>(eax424) - 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_423) * 4);
                                *reinterpret_cast<int16_t*>(&g4340e2) = -1;
                            } else {
                                *reinterpret_cast<int16_t*>(&g4340e2) = 0;
                                eax425 = (reinterpret_cast<uint32_t>(eax424) + 1) * *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_423) * 4);
                                tmp32_426 = *reinterpret_cast<uint32_t*>(&g4340e2) + eax425;
                                *reinterpret_cast<uint32_t*>(&g4340e2) = tmp32_426;
                            }
                            g4340d8 = eax425;
                            g4340ec = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>((*reinterpret_cast<uint32_t*>(edx357 + 12) - *reinterpret_cast<uint32_t*>(ecx60 + 12)) * *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_423) * 4 - 4)) >> 8);
                        }
                        fun_40e79b();
                        eax427 = g4340cc;
                        g434134 = eax427;
                        eax428 = g4340d0;
                        g43411c = eax428;
                        eax429 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g4340dc) + 2);
                        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434120) + 2) = eax429;
                        eax430 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g4340e2) + 2);
                        *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434126) + 2) = eax430;
                        eax431 = g4340d4;
                        g434108 = eax431;
                        eax432 = g4340d8;
                        g43410c = eax432;
                        ax433 = *reinterpret_cast<int16_t*>(&g4340dc);
                        *reinterpret_cast<int16_t*>(&g434120) = ax433;
                        ax434 = *reinterpret_cast<int16_t*>(&g4340e2);
                        *reinterpret_cast<int16_t*>(&g434126) = ax434;
                        eax435 = g4340e8;
                        g434110 = eax435;
                        eax436 = g4340ec;
                        g434114 = eax436;
                        eax437 = g4340f0;
                        g43412c = eax437;
                        eax438 = g4340f4;
                        g434130 = eax438;
                        fun_40e79b();
                        edi2 = edi2;
                        break;
                    }
                }
            }
        case 17:
            fun_40d750(esi21);
            edi2 = edi2;
            break;
        case 18:
            fun_40b390(esi21);
            edi2 = edi2;
            break;
        case 19:
            fun_40f9dc();
            break;
        case 20:
        case 21:
            fun_40cde0(esi21);
            edi2 = edi2;
        case 29:
            goto 0x40eeeb;
        case 28:
            goto 0x40a608;
        case 27:
            goto 0x40d700;
        case 26:
            goto 0x40b340;
        case 25:
            goto 0x40e0ac;
        case 24:
            goto 0x40bd50;
        case 23:
            goto 0x40fd64;
        case 22:
            goto 0x40ce20;
        case 3:
        case 4:
        case 5:
        case 6:
        case 8:
        case 9:
        case 10:
        case 14:
            goto 0x40a5ca;
        }
    }
    __asm__("popad ");
    return 0;
    __asm__("popad ");
    return 0xffffffff;
    g434082 = eax22 + 1;
    g434086 = reinterpret_cast<int32_t>(-reinterpret_cast<unsigned char>(eax22)) + 1;
    return eax22;
    g43a7ac = eax22 + 1;
    g43a7b0 = reinterpret_cast<int32_t>(-reinterpret_cast<unsigned char>(eax22)) + 1;
    return eax22;
    g430198 = reinterpret_cast<void*>(0x1075d7);
    return eax22;
    g4366b8 = reinterpret_cast<void*>(0x1075d7);
    return eax22;
    g452700 = 0;
    ecx439 = g434090;
    if (!ecx439) {
        eax440 = fun_4111a0(0x2588);
        g4534d4 = eax440;
        eax22 = fun_4111a0(0xc88);
        g4534d0 = eax22;
        g434090 = 1;
    }
    return eax22;
    g452744 = 0;
    ecx441 = g434090;
    if (!ecx441) {
        eax442 = fun_4111a0(0x2588);
        g4534d4 = eax442;
        eax22 = fun_4111a0(0xc88);
        g4534d0 = eax22;
        g434090 = 1;
    }
    return eax22;
    g43012c = eax22 + 1;
    g430130 = reinterpret_cast<int32_t>(-reinterpret_cast<unsigned char>(eax22)) + 1;
    return eax22;
    __asm__("fnstcw word [0x4366c8]");
    ax443 = g4366c8;
    *reinterpret_cast<uint16_t*>(&eax22) = reinterpret_cast<uint16_t>(ax443 & 0xfcff);
    g4366ca = *reinterpret_cast<uint16_t*>(&eax22);
    __asm__("fldcw word [0x4366ca]");
    ecx444 = 16;
    edx445 = 0;
    do {
        g4366bc = 15;
        __asm__("fild dword [0x4366bc]");
        g4366bc = edx445;
        __asm__("fimul dword [0x4366bc]");
        __asm__("fistp dword [esi+ecx*4]");
        __asm__("fld1 ");
        g4366bc = ecx444;
        __asm__("fidiv dword [0x4366bc]");
        __asm__("fstp dword [edi+ecx*4]");
        ++edx445;
        --ecx444;
    } while (ecx444);
    g4366bc = 0;
    __asm__("fild dword [0x4366bc]");
    __asm__("fist dword [edi]");
    __asm__("fistp dword [esi]");
    g4366bc = 16;
    __asm__("fild dword [0x4366bc]");
    __asm__("fstp dword [0x4366e4]");
    __asm__("fldcw word [0x4366c8]");
    return eax22;
    addr_40ceb9_32:
    edx446 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx61) - reinterpret_cast<unsigned char>(ebx59));
    ecx447 = reinterpret_cast<unsigned char>(ecx60) - reinterpret_cast<unsigned char>(eax58) + 1;
    if (reinterpret_cast<int32_t>(edx446) < reinterpret_cast<int32_t>(0)) {
        edx448 = -reinterpret_cast<uint32_t>(edx446) + 1;
        if (reinterpret_cast<int32_t>(ecx447) > reinterpret_cast<int32_t>(edx448)) {
            eax449 = ecx447;
            g43408c = *reinterpret_cast<int16_t*>(&edx448);
            g43408e = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax449) / *reinterpret_cast<uint16_t*>(&edx448));
            g43408a = 0;
            *reinterpret_cast<uint16_t*>(&ebx59) = g43408e;
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx59) * 4 + 0x432a8e);
        } else {
            eax450 = edx448;
            g43408e = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax450) / *reinterpret_cast<uint16_t*>(&ecx447));
            g43408c = *reinterpret_cast<int16_t*>(&ecx447);
            g43408a = 0;
            *reinterpret_cast<uint16_t*>(&ebx59) = g43408e;
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx59) * 4 + 0x43211a);
        }
    } else {
        edx451 = reinterpret_cast<uint32_t>(edx446) + 1;
        if (reinterpret_cast<int32_t>(ecx447) > reinterpret_cast<int32_t>(edx451)) {
            eax452 = ecx447;
            g43408c = *reinterpret_cast<int16_t*>(&edx451);
            g43408e = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax452) / *reinterpret_cast<uint16_t*>(&edx451));
            g43408a = 0;
            *reinterpret_cast<uint16_t*>(&ebx59) = g43408e;
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx59) * 4 + 0x430b26);
        } else {
            eax453 = edx451;
            g43408e = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax453) / *reinterpret_cast<uint16_t*>(&ecx447));
            g43408c = *reinterpret_cast<int16_t*>(&ecx447);
            g43408a = 0;
            *reinterpret_cast<uint16_t*>(&ebx59) = g43408e;
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx59) * 4 + 0x4301b2);
        }
    }
    addr_40d0ec_34:
    g43019c = eax58;
    g4301a0 = ebx59;
    g4301a4 = ecx60;
    g4301a8 = edx61;
    g4301ac = 0;
    tmp32_454 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<unsigned char>(g43019c));
    g4301a4 = tmp32_454;
    eax455 = g41cdb4;
    g4301a8 = eax455;
    eax58 = g43019c;
    ebx59 = g4301a0;
    ecx60 = g4301a4;
    edx61 = g4301a8;
    goto addr_40ceb9_32;
    addr_40d295_41:
    g43019c = eax58;
    g4301a0 = ebx59;
    g4301a4 = ecx60;
    g4301a8 = edx61;
    g4301ac = 0;
    tmp32_456 = reinterpret_cast<void**>(-__intrinsic() + reinterpret_cast<unsigned char>(g4301a4));
    g43019c = tmp32_456;
    eax457 = g41cdb4;
    g4301a0 = eax457;
    eax58 = g43019c;
    ebx59 = g4301a0;
    ecx60 = g4301a4;
    edx61 = g4301a8;
    goto addr_40ceb9_32;
    addr_40fe10_57:
    edx458 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx92) - reinterpret_cast<unsigned char>(ebx91));
    ecx459 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx60) - reinterpret_cast<unsigned char>(eax86) + 1);
    if (reinterpret_cast<int32_t>(edx458) < reinterpret_cast<int32_t>(0)) {
        edx460 = reinterpret_cast<void*>(-reinterpret_cast<uint32_t>(edx458) + 1);
        if (reinterpret_cast<int32_t>(ecx459) > reinterpret_cast<int32_t>(edx460)) {
            g43a7b6 = *reinterpret_cast<int16_t*>(&edx460);
            ebx461 = edx460;
            eax462 = g4368d8;
            __asm__("cdq ");
            eax463 = reinterpret_cast<int32_t>(eax462) / reinterpret_cast<int32_t>(ecx459);
            g43a7ba = *reinterpret_cast<int16_t*>(&eax463);
            eax464 = ecx459;
            g43a7b8 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax464) / *reinterpret_cast<uint16_t*>(&ebx461));
            g43a7b4 = 0;
            *reinterpret_cast<uint16_t*>(&ebx461) = g43a7b8;
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx461) * 4 + 0x4391b8);
        } else {
            eax465 = g4368d8;
            ebx466 = edx460;
            __asm__("cdq ");
            eax467 = reinterpret_cast<int32_t>(eax465) / reinterpret_cast<int32_t>(ebx466);
            g43a7ba = *reinterpret_cast<int16_t*>(&eax467);
            eax468 = ebx466;
            g43a7b8 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax468) / *reinterpret_cast<uint16_t*>(&ecx459));
            g43a7b6 = *reinterpret_cast<int16_t*>(&ecx459);
            g43a7b4 = 0;
            *reinterpret_cast<uint16_t*>(&ebx466) = g43a7b8;
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx466) * 4 + 0x438844);
        }
    } else {
        edx469 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx458) + 1);
        if (reinterpret_cast<int32_t>(ecx459) > reinterpret_cast<int32_t>(edx469)) {
            g43a7b6 = *reinterpret_cast<int16_t*>(&edx469);
            eax470 = g4368d8;
            __asm__("cdq ");
            eax471 = reinterpret_cast<int32_t>(eax470) / reinterpret_cast<int32_t>(ecx459);
            g43a7ba = *reinterpret_cast<int16_t*>(&eax471);
            eax472 = ecx459;
            g43a7b8 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax472) / *reinterpret_cast<uint16_t*>(&edx469));
            g43a7b4 = 0;
            *reinterpret_cast<uint16_t*>(&ebx91) = g43a7b8;
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx91) * 4 + 0x437250);
        } else {
            eax473 = g4368d8;
            ebx474 = edx469;
            __asm__("cdq ");
            eax475 = reinterpret_cast<int32_t>(eax473) / reinterpret_cast<int32_t>(ebx474);
            g43a7ba = *reinterpret_cast<int16_t*>(&eax475);
            eax476 = ebx474;
            g43a7b8 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax476) / *reinterpret_cast<uint16_t*>(&ecx459));
            g43a7b6 = *reinterpret_cast<int16_t*>(&ecx459);
            g43a7b4 = 0;
            *reinterpret_cast<uint16_t*>(&ebx474) = g43a7b8;
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx474) * 4 + 0x4368dc);
        }
    }
    addr_4100bc_59:
    g4368c0 = eax86;
    g4368c4 = ebx91;
    g4368c8 = ecx60;
    g4368cc = edx92;
    g4368d0 = 0;
    tmp32_477 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<unsigned char>(g4368c0));
    g4368c8 = tmp32_477;
    eax478 = g41cdb4;
    g4368cc = eax478;
    g4368d8 = __intrinsic();
    eax86 = g4368c0;
    ebx91 = g4368c4;
    ecx60 = g4368c8;
    edx92 = g4368cc;
    goto addr_40fe10_57;
    addr_4102b2_66:
    g4368c0 = eax86;
    g4368c4 = ebx91;
    g4368c8 = ecx60;
    g4368cc = edx92;
    g4368d0 = 0;
    tmp32_479 = reinterpret_cast<void**>(-__intrinsic() + reinterpret_cast<unsigned char>(g4368c8));
    g4368c0 = tmp32_479;
    eax480 = g41cdb4;
    g4368c4 = eax480;
    ebx481 = g43a7bc;
    tmp32_482 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx481) + reinterpret_cast<int32_t>(g4368d8));
    g4368d8 = __intrinsic();
    g43a7bc = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(tmp32_482) - reinterpret_cast<int32_t>(__intrinsic()));
    eax86 = g4368c0;
    ebx91 = g4368c4;
    ecx60 = g4368c8;
    edx92 = g4368cc;
    goto addr_40fe10_57;
    addr_40a6ae_82:
    edx483 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx126) - reinterpret_cast<unsigned char>(ebx125));
    ecx484 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx60) - reinterpret_cast<unsigned char>(eax121) + 1);
    if (reinterpret_cast<int32_t>(edx483) < reinterpret_cast<int32_t>(0)) {
        edx485 = reinterpret_cast<void*>(-reinterpret_cast<uint32_t>(edx483) + 1);
        if (reinterpret_cast<int32_t>(ecx484) > reinterpret_cast<int32_t>(edx485)) {
            g430136 = *reinterpret_cast<int16_t*>(&edx485);
            ebx486 = edx485;
            eax487 = g42c258;
            __asm__("cdq ");
            eax488 = reinterpret_cast<int32_t>(eax487) / reinterpret_cast<int32_t>(ecx484);
            g43013a = *reinterpret_cast<int16_t*>(&eax488);
            eax489 = ecx484;
            g430138 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax489) / *reinterpret_cast<uint16_t*>(&ebx486));
            g430134 = 0;
            *reinterpret_cast<uint16_t*>(&ebx486) = g430138;
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx486) * 4 + 0x42eb38);
        } else {
            eax490 = g42c258;
            ebx491 = edx485;
            __asm__("cdq ");
            eax492 = reinterpret_cast<int32_t>(eax490) / reinterpret_cast<int32_t>(ebx491);
            g43013a = *reinterpret_cast<int16_t*>(&eax492);
            eax493 = ebx491;
            g430138 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax493) / *reinterpret_cast<uint16_t*>(&ecx484));
            g430136 = *reinterpret_cast<int16_t*>(&ecx484);
            g430134 = 0;
            *reinterpret_cast<uint16_t*>(&ebx491) = g430138;
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx491) * 4 + 0x42e1c4);
        }
    } else {
        edx494 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx483) + 1);
        if (reinterpret_cast<int32_t>(ecx484) > reinterpret_cast<int32_t>(edx494)) {
            g430136 = *reinterpret_cast<int16_t*>(&edx494);
            eax495 = g42c258;
            __asm__("cdq ");
            eax496 = reinterpret_cast<int32_t>(eax495) / reinterpret_cast<int32_t>(ecx484);
            g43013a = *reinterpret_cast<int16_t*>(&eax496);
            eax497 = ecx484;
            g430138 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax497) / *reinterpret_cast<uint16_t*>(&edx494));
            g430134 = 0;
            *reinterpret_cast<uint16_t*>(&ebx125) = g430138;
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx125) * 4 + 0x42cbd0);
        } else {
            eax498 = g42c258;
            ebx499 = edx494;
            __asm__("cdq ");
            eax500 = reinterpret_cast<int32_t>(eax498) / reinterpret_cast<int32_t>(ebx499);
            g43013a = *reinterpret_cast<int16_t*>(&eax500);
            eax501 = ebx499;
            g430138 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax501) / *reinterpret_cast<uint16_t*>(&ecx484));
            g430136 = *reinterpret_cast<int16_t*>(&ecx484);
            g430134 = 0;
            *reinterpret_cast<uint16_t*>(&ebx499) = g430138;
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx499) * 4 + 0x42c25c);
        }
    }
    addr_40a95a_84:
    g42c240 = eax121;
    g42c244 = ebx125;
    g42c248 = ecx60;
    g42c24c = edx126;
    g42c250 = 0;
    tmp32_502 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<unsigned char>(g42c240));
    g42c248 = tmp32_502;
    eax503 = g41cdb4;
    g42c24c = eax503;
    g42c258 = __intrinsic();
    eax121 = g42c240;
    ebx125 = g42c244;
    ecx60 = g42c248;
    edx126 = g42c24c;
    goto addr_40a6ae_82;
    addr_40ab50_91:
    g42c240 = eax121;
    g42c244 = ebx125;
    g42c248 = ecx60;
    g42c24c = edx126;
    g42c250 = 0;
    tmp32_504 = reinterpret_cast<void**>(-__intrinsic() + reinterpret_cast<unsigned char>(g42c248));
    g42c240 = tmp32_504;
    eax505 = g41cdb4;
    g42c244 = eax505;
    ebx506 = g43013c;
    tmp32_507 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx506) + reinterpret_cast<int32_t>(g42c258));
    g42c258 = __intrinsic();
    g43013c = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(tmp32_507) - reinterpret_cast<int32_t>(__intrinsic()));
    eax121 = g42c240;
    ebx125 = g42c244;
    ecx60 = g42c248;
    edx126 = g42c24c;
    goto addr_40a6ae_82;
}

struct s178 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    int32_t fc;
    int32_t f10;
    int32_t f14;
    int32_t f18;
    int32_t f1c;
};

struct s179 {
    signed char[4] pad4;
    struct s178* f4;
};

int32_t g43a7e0 = 0;

int32_t g43a7e4 = 0;

int32_t g43a7e8 = 0;

int32_t g43a7ec = 0;

int32_t g43a7f0 = 0;

int32_t g43a7f4 = 0;

struct s180 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    int32_t fc;
};

struct s181 {
    signed char[8] pad8;
    struct s180* f8;
};

int32_t g43a7c0 = 0;

int32_t g43a7c4 = 0;

int32_t g43a7cc = 0;

int32_t g43a7c8 = 0;

int32_t g43a7d4 = 0;

int32_t g43a7dc = 0;

int32_t g43a7d0 = 0;

int32_t g43a7d8 = 0;

struct s182 {
    signed char[12] pad12;
    int32_t fc;
};

struct s183 {
    signed char[16] pad16;
    int32_t f10;
};

struct s184 {
    signed char[12] pad12;
    int32_t fc;
};

struct s185 {
    signed char[16] pad16;
    int32_t f10;
};

struct s186 {
    signed char[12] pad12;
    int32_t fc;
};

struct s187 {
    signed char[16] pad16;
    int32_t f10;
};

struct s188 {
    signed char[12] pad12;
    int32_t fc;
};

struct s189 {
    signed char[16] pad16;
    int32_t f10;
};

int32_t g43a7fc = 0;

int32_t g43a800 = 0;

int32_t g43a804 = 0;

int32_t g43a808 = 0;

int32_t g43a80c = 0;

int32_t g43a810 = 0;

int32_t g43a814 = 0;

int32_t g43a824 = 0;

int32_t g43a82c = 0;

int32_t g43a834 = 0;

int32_t g43a820 = 0;

int32_t g43a830 = 0;

int32_t g43a828 = 0;

int32_t g43a818 = 0;

int32_t g43a81c = 0;

int32_t fun_410a20() {
    struct s178* ebp1;
    struct s179* esi2;
    struct s180* ecx3;
    struct s181* esi4;
    int32_t eax5;
    int32_t edx6;
    int32_t eax7;
    int32_t edx8;
    int32_t tmp32_9;
    int32_t eax10;
    int32_t edx11;
    int32_t eax12;
    int32_t edx13;
    int32_t tmp32_14;
    int32_t ebx15;
    int32_t eax16;
    int32_t edx17;
    int32_t eax18;
    int32_t edx19;
    int32_t ebx20;
    int32_t eax21;
    int32_t edx22;
    int32_t tmp32_23;
    int32_t tmp32_24;
    int32_t eax25;
    int32_t tmp32_26;
    int32_t eax27;
    int32_t edx28;
    int32_t tmp32_29;
    int32_t tmp32_30;
    int32_t eax31;
    int32_t tmp32_32;
    int32_t eax33;
    struct s182* esi34;
    int32_t eax35;
    struct s183* esi36;
    int32_t eax37;
    struct s184* esi38;
    int32_t eax39;
    struct s185* esi40;
    int32_t eax41;
    struct s186* esi42;
    int32_t eax43;
    struct s187* esi44;
    int32_t eax45;
    struct s188* esi46;
    int32_t eax47;
    struct s189* esi48;
    int32_t eax49;
    int32_t eax50;
    int32_t eax51;
    int32_t eax52;
    int32_t eax53;
    int32_t eax54;
    int32_t eax55;
    int32_t eax56;
    int32_t eax57;
    int32_t eax58;
    int32_t eax59;
    int32_t eax60;
    int32_t eax61;
    int32_t eax62;
    int32_t eax63;
    int32_t eax64;
    int32_t eax65;
    int32_t eax66;
    int32_t eax67;
    int32_t eax68;
    int32_t eax69;
    int32_t eax70;
    int32_t eax71;
    int32_t eax72;

    ebp1 = esi2->f4;
    g43a7e0 = ebp1->fc;
    g43a7e4 = ebp1->f14;
    g43a7e8 = ebp1->f8;
    g43a7ec = ebp1->f10;
    g43a7f0 = ebp1->f1c;
    g43a7f4 = ebp1->f18;
    ecx3 = esi4->f8;
    eax5 = -ebp1->f0 * ecx3->f0;
    edx6 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax5) = *reinterpret_cast<int16_t*>(&edx6);
    __asm__("rol eax, 0x10");
    g43a7c0 = eax5;
    eax7 = -ebp1->f4 * ecx3->f8;
    edx8 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax7) = *reinterpret_cast<int16_t*>(&edx8);
    __asm__("rol eax, 0x10");
    tmp32_9 = g43a7c0 + eax7;
    g43a7c0 = tmp32_9;
    eax10 = -ebp1->f0 * ecx3->f4;
    edx11 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax10) = *reinterpret_cast<int16_t*>(&edx11);
    __asm__("rol eax, 0x10");
    g43a7c4 = eax10;
    eax12 = -ebp1->f4 * ecx3->fc;
    edx13 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax12) = *reinterpret_cast<int16_t*>(&edx13);
    __asm__("rol eax, 0x10");
    tmp32_14 = g43a7c4 + eax12;
    g43a7c4 = tmp32_14;
    ebx15 = ebp1->f10 - ebp1->f8;
    eax16 = ecx3->f4 * ebx15;
    edx17 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax16) = *reinterpret_cast<int16_t*>(&edx17);
    __asm__("rol eax, 0x10");
    g43a7cc = eax16;
    eax18 = ecx3->f0 * ebx15;
    edx19 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax18) = *reinterpret_cast<int16_t*>(&edx19);
    __asm__("rol eax, 0x10");
    g43a7c8 = eax18;
    ebx20 = ebp1->f14 - ebp1->fc;
    eax21 = ecx3->fc * ebx20;
    edx22 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax21) = *reinterpret_cast<int16_t*>(&edx22);
    __asm__("rol eax, 0x10");
    tmp32_23 = eax21 + g43a7c4;
    g43a7d4 = tmp32_23;
    tmp32_24 = tmp32_23 + g43a7cc;
    g43a7dc = tmp32_24;
    eax25 = g43a7cc;
    tmp32_26 = eax25 + g43a7c4;
    g43a7cc = tmp32_26;
    eax27 = ecx3->f8 * ebx20;
    edx28 = __intrinsic();
    *reinterpret_cast<int16_t*>(&eax27) = *reinterpret_cast<int16_t*>(&edx28);
    __asm__("rol eax, 0x10");
    tmp32_29 = eax27 + g43a7c0;
    g43a7d0 = tmp32_29;
    tmp32_30 = tmp32_29 + g43a7c8;
    g43a7d8 = tmp32_30;
    eax31 = g43a7c8;
    tmp32_32 = eax31 + g43a7c0;
    g43a7c8 = tmp32_32;
    eax33 = g43a7c0;
    g43a7c0 = eax33 + esi34->fc;
    eax35 = g43a7c4;
    g43a7c4 = eax35 + esi36->f10;
    eax37 = g43a7c8;
    g43a7c8 = eax37 + esi38->fc;
    eax39 = g43a7cc;
    g43a7cc = eax39 + esi40->f10;
    eax41 = g43a7d0;
    g43a7d0 = eax41 + esi42->fc;
    eax43 = g43a7d4;
    g43a7d4 = eax43 + esi44->f10;
    eax45 = g43a7d8;
    g43a7d8 = eax45 + esi46->fc;
    eax47 = g43a7dc;
    g43a7dc = eax47 + esi48->f10;
    eax49 = g43a7c0;
    g43a7fc = eax49;
    eax50 = g43a7c4;
    g43a800 = eax50;
    eax51 = g43a7c8;
    g43a804 = eax51;
    eax52 = g43a7cc;
    g43a808 = eax52;
    eax53 = g43a7d0;
    g43a80c = eax53;
    eax54 = g43a7d4;
    g43a810 = eax54;
    g43a814 = 0x43a820;
    eax55 = g43a7e0;
    g43a824 = eax55;
    g43a82c = eax55;
    eax56 = g43a7e4;
    g43a834 = eax56;
    eax57 = g43a7e8;
    g43a820 = eax57;
    g43a830 = eax57;
    eax58 = g43a7ec;
    g43a828 = eax58;
    eax59 = g43a7f4;
    g43a818 = eax59;
    eax60 = g43a7f0;
    g43a81c = eax60;
    fun_40b390(0x43a7f8);
    eax61 = g43a7c8;
    g43a7fc = eax61;
    eax62 = g43a7cc;
    g43a800 = eax62;
    eax63 = g43a7d0;
    g43a804 = eax63;
    eax64 = g43a7d4;
    g43a808 = eax64;
    eax65 = g43a7d8;
    g43a80c = eax65;
    eax66 = g43a7dc;
    g43a810 = eax66;
    g43a814 = 0x43a820;
    eax67 = g43a7e0;
    g43a824 = eax67;
    eax68 = g43a7e4;
    g43a82c = eax68;
    g43a834 = eax68;
    eax69 = g43a7ec;
    g43a820 = eax69;
    g43a830 = eax69;
    eax70 = g43a7e8;
    g43a828 = eax70;
    eax71 = g43a7f4;
    g43a818 = eax71;
    eax72 = g43a7f0;
    g43a81c = eax72;
    fun_40b390(0x43a7f8);
    return 0x43a7f8;
}

signed char* g452758;

signed char* g452750;

int32_t g452754;

int32_t g452740;

int32_t g452748;

void** g43a914 = reinterpret_cast<void**>(0);

int32_t g43a918 = 0;

void** g43a91c = reinterpret_cast<void**>(0);

int32_t g43a920 = 0;

void** g43a924 = reinterpret_cast<void**>(0);

int32_t g43a928 = 0;

int32_t g43a92c = 0;

signed char g43a930 = 0;

int32_t g43a934 = 0;

signed char g43a938 = 0;

int32_t g43a93c = 0;

signed char g43a940 = 0;

void* g45274c;

void fun_456b20();

int32_t g43a960 = 0;

int32_t g45271c;

void** g452720;

void** g452718;

int32_t g452724;

int32_t g452728;

signed char g45272c;

int32_t g452730;

signed char g452734;

void fun_456ce0();

void fun_456e00();

void fun_456c70();

void fun_456cb0();

void*** fun_40d750(struct s81* a1) {
    signed char* ecx2;
    signed char* eax3;
    signed char* eax4;
    signed char* ecx5;
    signed char* ecx6;
    int32_t eax7;
    int32_t eax8;
    int32_t esi9;
    void* esi10;
    int32_t ecx11;
    void* ecx12;
    signed char* ebx13;
    signed char* eax14;
    void*** eax15;
    int32_t edi16;
    void* edi17;
    signed char* edx18;
    void* eax19;
    int32_t ecx20;
    int32_t ecx21;
    void** edx22;
    void** eax23;
    int32_t eax24;
    int32_t ecx25;
    signed char edx26;
    int32_t eax27;
    signed char ecx28;
    void** eax29;
    int32_t ecx30;
    void** edx31;
    int32_t eax32;
    void** eax33;
    void* ecx34;
    void** edx35;
    void* eax36;
    void** v37;
    void* edi38;
    void** eax39;
    int32_t ecx40;
    void** edx41;
    int32_t eax42;
    int32_t ecx43;
    signed char edx44;
    int32_t eax45;
    signed char ecx46;
    void** edx47;
    void* edi48;
    void** eax49;
    int32_t ecx50;
    void** edx51;
    int32_t eax52;
    int32_t ecx53;
    signed char edx54;
    int32_t eax55;
    signed char ecx56;
    void** eax57;
    void* ecx58;
    void* eax59;
    void* edi60;
    void** eax61;
    int32_t ecx62;
    void** edx63;
    int32_t eax64;
    void** eax65;
    void* edi66;
    int32_t edi67;
    void* edi68;
    signed char* edx69;
    void* eax70;
    int32_t ecx71;
    int32_t ecx72;
    void** edx73;
    void** eax74;
    int32_t eax75;
    int32_t ecx76;
    signed char edx77;
    int32_t eax78;
    signed char ecx79;
    void** eax80;
    int32_t ecx81;
    void** eax82;
    void* ecx83;
    void** edx84;
    void* eax85;
    void** v86;
    void* edi87;
    void** eax88;
    int32_t ecx89;
    int32_t edx90;
    signed char eax91;
    int32_t ecx92;
    signed char edx93;
    void** edx94;
    void* edi95;
    void** eax96;
    int32_t ecx97;
    int32_t edx98;
    signed char eax99;
    int32_t ecx100;
    signed char edx101;
    void** eax102;
    void* ecx103;
    void* eax104;
    void* edi105;
    void** eax106;
    int32_t ecx107;
    void** eax108;
    void* edi109;

    ecx2 = a1->f4;
    eax3 = a1->fc;
    if (reinterpret_cast<signed char>(ecx2) <= reinterpret_cast<signed char>(eax3)) {
        g452758 = eax3;
        eax4 = a1->f4;
    } else {
        g452758 = ecx2;
        eax4 = a1->fc;
    }
    ecx5 = g452758;
    g452750 = eax4;
    if (reinterpret_cast<signed char>(ecx5) >= reinterpret_cast<signed char>(a1->f14)) {
        ecx6 = g452750;
        if (reinterpret_cast<signed char>(ecx6) > reinterpret_cast<signed char>(a1->f14)) {
            g452750 = a1->f14;
        }
    } else {
        g452758 = a1->f14;
    }
    g452754 = 1;
    g452740 = 3;
    g452748 = 5;
    if (reinterpret_cast<int32_t>(a1->f18) < reinterpret_cast<int32_t>(a1->f8)) {
        g452754 = 5;
        g452748 = 1;
    }
    eax7 = g452754;
    if (reinterpret_cast<signed char>(*reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(a1) + eax7 * 4 + 4)) <= reinterpret_cast<signed char>(a1->f10)) {
        eax8 = g452748;
        if (reinterpret_cast<signed char>(*reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(a1) + eax8 * 4 + 4)) < reinterpret_cast<signed char>(a1->f10)) {
            g452748 = 3;
            g452740 = eax8;
        }
    } else {
        g452754 = 3;
        g452740 = eax7;
    }
    esi9 = g452754;
    esi10 = reinterpret_cast<void*>(esi9 << 2);
    ecx11 = g452748;
    ecx12 = reinterpret_cast<void*>(ecx11 << 2);
    if (__intrinsic()) {
        ebx13 = g41cde0;
        eax14 = g452758;
        eax15 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax14) - reinterpret_cast<unsigned char>(ebx13));
        if (!__intrinsic()) {
            edi16 = g452740;
            edi17 = reinterpret_cast<void*>(edi16 << 2);
            g43a914 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(esi10));
            g43a918 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(esi10) + 4);
            g43a91c = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(edi17));
            g43a920 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(edi17) + 4);
            g43a924 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(ecx12));
            g43a928 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(ecx12) + 4);
            edx18 = a1->f1c;
            g43a92c = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi10) + reinterpret_cast<unsigned char>(edx18) - 4);
            g43a930 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi10) + reinterpret_cast<unsigned char>(edx18));
            g43a934 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi17) + reinterpret_cast<unsigned char>(edx18) - 4);
            g43a938 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi17) + reinterpret_cast<unsigned char>(edx18));
            eax19 = g41cda4;
            g43a93c = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx12) + reinterpret_cast<unsigned char>(edx18) - 4);
            g43a940 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx12) + reinterpret_cast<unsigned char>(edx18));
            g45274c = eax19;
            fun_456b20();
            ecx20 = g43a960;
            ecx21 = g43a918;
            edx22 = g43a91c;
            g43a94c = a1->f20;
            g45271c = ecx21;
            eax23 = g43a914;
            g452720 = edx22;
            g452718 = eax23;
            eax24 = g43a920;
            g452724 = eax24;
            if (reinterpret_cast<uint1_t>(ecx20 < 0) | reinterpret_cast<uint1_t>(ecx20 == 0)) {
                ecx25 = g43a92c;
                edx26 = g43a930;
                eax27 = g43a934;
                g452728 = ecx25;
                ecx28 = g43a938;
                g45272c = edx26;
                g452730 = eax27;
                g452734 = ecx28;
                fun_456ce0();
                eax29 = g43a914;
                ecx30 = g43a918;
                edx31 = g43a924;
                g452718 = eax29;
                eax32 = g43a928;
                g45271c = ecx30;
                g452720 = edx31;
                g452724 = eax32;
                fun_456e00();
                eax33 = g4534d0;
                ecx34 = g45274c;
                edx35 = g4534d4;
                eax36 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax33)) * reinterpret_cast<uint32_t>(g41cdf0));
                g45274c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx34) + reinterpret_cast<uint32_t>(eax36));
                v37 = *reinterpret_cast<void***>(edx35 + 4);
                edi38 = g45274c;
                fun_410d5c();
                g45274c = edi38;
                eax39 = g43a91c;
                ecx40 = g43a920;
                edx41 = g43a924;
                g452718 = eax39;
                eax42 = g43a928;
                g45271c = ecx40;
                ecx43 = g43a934;
                g452720 = edx41;
                edx44 = g43a938;
                g452724 = eax42;
                eax45 = g43a93c;
                g452728 = ecx43;
                ecx46 = g43a940;
                g45272c = edx44;
                g452730 = eax45;
                g452734 = ecx46;
                fun_456ce0();
                edx47 = g4534d0;
                edi48 = g45274c;
                fun_410d5c();
                g45274c = edi48;
                eax15 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx47 + reinterpret_cast<unsigned char>(v37) * 4) + 8);
            } else {
                fun_456e00();
                eax49 = g43a914;
                ecx50 = g43a918;
                edx51 = g43a924;
                g452718 = eax49;
                eax52 = g43a928;
                g45271c = ecx50;
                ecx53 = g43a92c;
                g452720 = edx51;
                edx54 = g43a930;
                g452724 = eax52;
                eax55 = g43a93c;
                g452728 = ecx53;
                ecx56 = g43a940;
                g45272c = edx54;
                g452730 = eax55;
                g452734 = ecx56;
                fun_456ce0();
                eax57 = g4534d0;
                ecx58 = g45274c;
                eax59 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax57)) * reinterpret_cast<uint32_t>(g41cdf0));
                g45274c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx58) + reinterpret_cast<uint32_t>(eax59));
                edi60 = g45274c;
                fun_410d5c();
                g45274c = edi60;
                eax61 = g43a91c;
                ecx62 = g43a920;
                edx63 = g43a924;
                g452718 = eax61;
                eax64 = g43a928;
                g45271c = ecx62;
                g452720 = edx63;
                g452724 = eax64;
                fun_456e00();
                eax65 = g4534d0;
                edi66 = g45274c;
                fun_410d5c();
                g45274c = edi66;
                return eax65 + 8;
            }
        }
        return eax15;
    } else {
        edi67 = g452740;
        edi68 = reinterpret_cast<void*>(edi67 << 2);
        g43a914 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(esi10));
        g43a918 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(esi10) + 4);
        g43a91c = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(edi68));
        g43a920 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(edi68) + 4);
        g43a924 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(ecx12));
        g43a928 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(ecx12) + 4);
        edx69 = a1->f1c;
        g43a92c = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi10) + reinterpret_cast<unsigned char>(edx69) - 4);
        g43a930 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi10) + reinterpret_cast<unsigned char>(edx69));
        g43a934 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi68) + reinterpret_cast<unsigned char>(edx69) - 4);
        g43a938 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi68) + reinterpret_cast<unsigned char>(edx69));
        eax70 = g41cda4;
        g43a93c = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx12) + reinterpret_cast<unsigned char>(edx69) - 4);
        g43a940 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx12) + reinterpret_cast<unsigned char>(edx69));
        g45274c = eax70;
        fun_456b20();
        ecx71 = g43a960;
        ecx72 = g43a918;
        edx73 = g43a91c;
        g43a94c = a1->f20;
        g45271c = ecx72;
        eax74 = g43a914;
        g452720 = edx73;
        g452718 = eax74;
        eax75 = g43a920;
        g452724 = eax75;
        if (reinterpret_cast<uint1_t>(ecx71 < 0) | reinterpret_cast<uint1_t>(ecx71 == 0)) {
            ecx76 = g43a92c;
            edx77 = g43a930;
            eax78 = g43a934;
            g452728 = ecx76;
            ecx79 = g43a938;
            g45272c = edx77;
            g452730 = eax78;
            g452734 = ecx79;
            fun_456c70();
            eax80 = g43a924;
            ecx81 = g43a928;
            g452720 = eax80;
            g452724 = ecx81;
            fun_456cb0();
            eax82 = g4534d0;
            ecx83 = g45274c;
            edx84 = g4534d4;
            eax85 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax82)) * reinterpret_cast<uint32_t>(g41cdf0));
            g45274c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx83) + reinterpret_cast<uint32_t>(eax85));
            v86 = *reinterpret_cast<void***>(edx84 + 4);
            edi87 = g45274c;
            fun_410d5c();
            g45274c = edi87;
            eax88 = g43a91c;
            ecx89 = g43a920;
            edx90 = g43a934;
            g452718 = eax88;
            eax91 = g43a938;
            g45271c = ecx89;
            ecx92 = g43a93c;
            g452728 = edx90;
            edx93 = g43a940;
            g45272c = eax91;
            g452730 = ecx92;
            g452734 = edx93;
            fun_456c70();
            edx94 = g4534d0;
            edi95 = g45274c;
            fun_410d5c();
            g45274c = edi95;
            return reinterpret_cast<uint32_t>(edx94 + reinterpret_cast<unsigned char>(v86) * 4) + 8;
        } else {
            fun_456cb0();
            eax96 = g43a924;
            ecx97 = g43a928;
            edx98 = g43a92c;
            g452720 = eax96;
            eax99 = g43a930;
            g452724 = ecx97;
            ecx100 = g43a93c;
            g452728 = edx98;
            edx101 = g43a940;
            g45272c = eax99;
            g452730 = ecx100;
            g452734 = edx101;
            fun_456c70();
            eax102 = g4534d0;
            ecx103 = g45274c;
            eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax102)) * reinterpret_cast<uint32_t>(g41cdf0));
            g45274c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx103) + reinterpret_cast<uint32_t>(eax104));
            edi105 = g45274c;
            fun_410d5c();
            g45274c = edi105;
            eax106 = g43a91c;
            ecx107 = g43a920;
            g452718 = eax106;
            g45271c = ecx107;
            fun_456cb0();
            eax108 = g4534d0;
            edi109 = g45274c;
            fun_410d5c();
            g45274c = edi109;
            return eax108 + 8;
        }
    }
}

signed char* g452714;

signed char* g45270c;

int32_t g452710;

int32_t g4526fc;

int32_t g452704;

void* g452708;

void** g4526d8;

int32_t g4526dc;

void** g4526e0;

int32_t g4526e4;

int32_t g4526e8;

signed char g4526ec;

int32_t g4526f0;

signed char g4526f4;

void*** fun_40b390(struct s81* a1) {
    signed char* ecx2;
    signed char* eax3;
    signed char* eax4;
    signed char* ecx5;
    signed char* ecx6;
    int32_t eax7;
    int32_t eax8;
    int32_t esi9;
    void* esi10;
    int32_t ecx11;
    void* ecx12;
    signed char* ebx13;
    signed char* eax14;
    void*** eax15;
    int32_t edi16;
    void* edi17;
    signed char* edx18;
    void* eax19;
    int32_t ebx20;
    void** eax21;
    void** edx22;
    int32_t ecx23;
    int32_t eax24;
    int32_t ecx25;
    signed char edx26;
    int32_t eax27;
    signed char ecx28;
    void** eax29;
    int32_t ecx30;
    void** edx31;
    int32_t eax32;
    void** eax33;
    void* ecx34;
    void** edx35;
    void* eax36;
    void** v37;
    void* edi38;
    void** eax39;
    int32_t ecx40;
    void** edx41;
    int32_t eax42;
    int32_t ecx43;
    signed char edx44;
    int32_t eax45;
    signed char ecx46;
    void** edx47;
    void* edi48;
    void** eax49;
    int32_t ecx50;
    void** edx51;
    int32_t eax52;
    int32_t ecx53;
    signed char edx54;
    int32_t eax55;
    signed char ecx56;
    void** eax57;
    void* ecx58;
    void* eax59;
    void* edi60;
    void** eax61;
    int32_t ecx62;
    void** edx63;
    int32_t eax64;
    void** eax65;
    void* edi66;
    int32_t edi67;
    void* edi68;
    signed char* edx69;
    void* eax70;
    int32_t ebx71;
    void** eax72;
    void** edx73;
    int32_t ecx74;
    int32_t eax75;
    int32_t ecx76;
    signed char edx77;
    int32_t eax78;
    signed char ecx79;
    void** eax80;
    int32_t ecx81;
    void** eax82;
    void* ecx83;
    void** edx84;
    void* eax85;
    void** v86;
    void* edi87;
    void** eax88;
    int32_t ecx89;
    int32_t edx90;
    signed char eax91;
    int32_t ecx92;
    signed char edx93;
    void** edx94;
    void* edi95;
    void** eax96;
    int32_t ecx97;
    int32_t edx98;
    signed char eax99;
    int32_t ecx100;
    signed char edx101;
    void** eax102;
    void* ecx103;
    void* eax104;
    void* edi105;
    void** eax106;
    int32_t ecx107;
    void** eax108;
    void* edi109;

    ecx2 = a1->f4;
    eax3 = a1->fc;
    if (reinterpret_cast<signed char>(ecx2) <= reinterpret_cast<signed char>(eax3)) {
        g452714 = eax3;
        eax4 = a1->f4;
    } else {
        g452714 = ecx2;
        eax4 = a1->fc;
    }
    ecx5 = g452714;
    g45270c = eax4;
    if (reinterpret_cast<signed char>(ecx5) >= reinterpret_cast<signed char>(a1->f14)) {
        ecx6 = g45270c;
        if (reinterpret_cast<signed char>(ecx6) > reinterpret_cast<signed char>(a1->f14)) {
            g45270c = a1->f14;
        }
    } else {
        g452714 = a1->f14;
    }
    g452710 = 1;
    g4526fc = 3;
    g452704 = 5;
    if (reinterpret_cast<int32_t>(a1->f18) < reinterpret_cast<int32_t>(a1->f8)) {
        g452710 = 5;
        g452704 = 1;
    }
    eax7 = g452710;
    if (reinterpret_cast<signed char>(*reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(a1) + eax7 * 4 + 4)) <= reinterpret_cast<signed char>(a1->f10)) {
        eax8 = g452704;
        if (reinterpret_cast<signed char>(*reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(a1) + eax8 * 4 + 4)) < reinterpret_cast<signed char>(a1->f10)) {
            g452704 = 3;
            g4526fc = eax8;
        }
    } else {
        g452710 = 3;
        g4526fc = eax7;
    }
    esi9 = g452710;
    esi10 = reinterpret_cast<void*>(esi9 << 2);
    ecx11 = g452704;
    ecx12 = reinterpret_cast<void*>(ecx11 << 2);
    if (__intrinsic()) {
        ebx13 = g41cde0;
        eax14 = g452714;
        eax15 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax14) - reinterpret_cast<unsigned char>(ebx13));
        if (!__intrinsic()) {
            edi16 = g4526fc;
            edi17 = reinterpret_cast<void*>(edi16 << 2);
            g43a914 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(esi10));
            g43a918 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(esi10) + 4);
            g43a91c = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(edi17));
            g43a920 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(edi17) + 4);
            g43a924 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(ecx12));
            g43a928 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(ecx12) + 4);
            edx18 = a1->f1c;
            g43a92c = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi10) + reinterpret_cast<unsigned char>(edx18) - 4);
            g43a930 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi10) + reinterpret_cast<unsigned char>(edx18));
            g43a934 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi17) + reinterpret_cast<unsigned char>(edx18) - 4);
            g43a938 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi17) + reinterpret_cast<unsigned char>(edx18));
            eax19 = g41cda4;
            g43a93c = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx12) + reinterpret_cast<unsigned char>(edx18) - 4);
            g43a940 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx12) + reinterpret_cast<unsigned char>(edx18));
            g452708 = eax19;
            fun_456b20();
            ebx20 = g43a960;
            g43a94c = a1->f20;
            eax21 = g43a914;
            edx22 = g43a91c;
            g43a910 = *reinterpret_cast<signed char**>(&a1->f21);
            g4526d8 = eax21;
            ecx23 = g43a918;
            eax24 = g43a920;
            g4526dc = ecx23;
            g4526e0 = edx22;
            g4526e4 = eax24;
            if (reinterpret_cast<uint1_t>(ebx20 < 0) | reinterpret_cast<uint1_t>(ebx20 == 0)) {
                ecx25 = g43a92c;
                edx26 = g43a930;
                eax27 = g43a934;
                g4526e8 = ecx25;
                ecx28 = g43a938;
                g4526ec = edx26;
                g4526f0 = eax27;
                g4526f4 = ecx28;
                fun_456ce0();
                eax29 = g43a914;
                ecx30 = g43a918;
                edx31 = g43a924;
                g4526d8 = eax29;
                eax32 = g43a928;
                g4526dc = ecx30;
                g4526e0 = edx31;
                g4526e4 = eax32;
                fun_456e00();
                eax33 = g4534d0;
                ecx34 = g452708;
                edx35 = g4534d4;
                eax36 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax33)) * reinterpret_cast<uint32_t>(g41cdf0));
                g452708 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx34) + reinterpret_cast<uint32_t>(eax36));
                v37 = *reinterpret_cast<void***>(edx35 + 4);
                edi38 = g452708;
                fun_410cbe();
                g452708 = edi38;
                eax39 = g43a91c;
                ecx40 = g43a920;
                edx41 = g43a924;
                g4526d8 = eax39;
                eax42 = g43a928;
                g4526dc = ecx40;
                ecx43 = g43a934;
                g4526e0 = edx41;
                edx44 = g43a938;
                g4526e4 = eax42;
                eax45 = g43a93c;
                g4526e8 = ecx43;
                ecx46 = g43a940;
                g4526ec = edx44;
                g4526f0 = eax45;
                g4526f4 = ecx46;
                fun_456ce0();
                edx47 = g4534d0;
                edi48 = g452708;
                fun_410cbe();
                g452708 = edi48;
                eax15 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edx47 + reinterpret_cast<unsigned char>(v37) * 4) + 8);
            } else {
                fun_456e00();
                eax49 = g43a914;
                ecx50 = g43a918;
                edx51 = g43a924;
                g4526d8 = eax49;
                eax52 = g43a928;
                g4526dc = ecx50;
                ecx53 = g43a92c;
                g4526e0 = edx51;
                edx54 = g43a930;
                g4526e4 = eax52;
                eax55 = g43a93c;
                g4526e8 = ecx53;
                ecx56 = g43a940;
                g4526ec = edx54;
                g4526f0 = eax55;
                g4526f4 = ecx56;
                fun_456ce0();
                eax57 = g4534d0;
                ecx58 = g452708;
                eax59 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax57)) * reinterpret_cast<uint32_t>(g41cdf0));
                g452708 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx58) + reinterpret_cast<uint32_t>(eax59));
                edi60 = g452708;
                fun_410cbe();
                g452708 = edi60;
                eax61 = g43a91c;
                ecx62 = g43a920;
                edx63 = g43a924;
                g4526d8 = eax61;
                eax64 = g43a928;
                g4526dc = ecx62;
                g4526e0 = edx63;
                g4526e4 = eax64;
                fun_456e00();
                eax65 = g4534d0;
                edi66 = g452708;
                fun_410cbe();
                g452708 = edi66;
                return eax65 + 8;
            }
        }
        return eax15;
    } else {
        edi67 = g4526fc;
        edi68 = reinterpret_cast<void*>(edi67 << 2);
        g43a914 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(esi10));
        g43a918 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(esi10) + 4);
        g43a91c = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(edi68));
        g43a920 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(edi68) + 4);
        g43a924 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(ecx12));
        g43a928 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(ecx12) + 4);
        edx69 = a1->f1c;
        g43a92c = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi10) + reinterpret_cast<unsigned char>(edx69) - 4);
        g43a930 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi10) + reinterpret_cast<unsigned char>(edx69));
        g43a934 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi68) + reinterpret_cast<unsigned char>(edx69) - 4);
        g43a938 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi68) + reinterpret_cast<unsigned char>(edx69));
        eax70 = g41cda4;
        g43a93c = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx12) + reinterpret_cast<unsigned char>(edx69) - 4);
        g43a940 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx12) + reinterpret_cast<unsigned char>(edx69));
        g452708 = eax70;
        fun_456b20();
        ebx71 = g43a960;
        g43a94c = a1->f20;
        eax72 = g43a914;
        edx73 = g43a91c;
        g43a910 = *reinterpret_cast<signed char**>(&a1->f21);
        g4526d8 = eax72;
        ecx74 = g43a918;
        eax75 = g43a920;
        g4526dc = ecx74;
        g4526e0 = edx73;
        g4526e4 = eax75;
        if (reinterpret_cast<uint1_t>(ebx71 < 0) | reinterpret_cast<uint1_t>(ebx71 == 0)) {
            ecx76 = g43a92c;
            edx77 = g43a930;
            eax78 = g43a934;
            g4526e8 = ecx76;
            ecx79 = g43a938;
            g4526ec = edx77;
            g4526f0 = eax78;
            g4526f4 = ecx79;
            fun_456c70();
            eax80 = g43a924;
            ecx81 = g43a928;
            g4526e0 = eax80;
            g4526e4 = ecx81;
            fun_456cb0();
            eax82 = g4534d0;
            ecx83 = g452708;
            edx84 = g4534d4;
            eax85 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax82)) * reinterpret_cast<uint32_t>(g41cdf0));
            g452708 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx83) + reinterpret_cast<uint32_t>(eax85));
            v86 = *reinterpret_cast<void***>(edx84 + 4);
            edi87 = g452708;
            fun_410cbe();
            g452708 = edi87;
            eax88 = g43a91c;
            ecx89 = g43a920;
            edx90 = g43a934;
            g4526d8 = eax88;
            eax91 = g43a938;
            g4526dc = ecx89;
            ecx92 = g43a93c;
            g4526e8 = edx90;
            edx93 = g43a940;
            g4526ec = eax91;
            g4526f0 = ecx92;
            g4526f4 = edx93;
            fun_456c70();
            edx94 = g4534d0;
            edi95 = g452708;
            fun_410cbe();
            g452708 = edi95;
            return reinterpret_cast<uint32_t>(edx94 + reinterpret_cast<unsigned char>(v86) * 4) + 8;
        } else {
            fun_456cb0();
            eax96 = g43a924;
            ecx97 = g43a928;
            edx98 = g43a92c;
            g4526e0 = eax96;
            eax99 = g43a930;
            g4526e4 = ecx97;
            ecx100 = g43a93c;
            g4526e8 = edx98;
            edx101 = g43a940;
            g4526ec = eax99;
            g4526f0 = ecx100;
            g4526f4 = edx101;
            fun_456c70();
            eax102 = g4534d0;
            ecx103 = g452708;
            eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax102)) * reinterpret_cast<uint32_t>(g41cdf0));
            g452708 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx103) + reinterpret_cast<uint32_t>(eax104));
            edi105 = g452708;
            fun_410cbe();
            g452708 = edi105;
            eax106 = g43a91c;
            ecx107 = g43a920;
            g4526d8 = eax106;
            g4526dc = ecx107;
            fun_456cb0();
            eax108 = g4534d0;
            edi109 = g452708;
            fun_410cbe();
            g452708 = edi109;
            return eax108 + 8;
        }
    }
}

struct s190 {
    signed char[32] pad32;
    signed char* f20;
};

struct s191 {
    signed char[28] pad28;
    signed char f1c;
};

signed char* g4368a0 = reinterpret_cast<signed char*>(0);

struct s192 {
    void* f0;
    void* f4;
};

struct s193 {
    signed char[12] pad12;
    void* fc;
};

struct s194 {
    signed char[4] pad4;
    void* f4;
};

struct s195 {
    signed char[20] pad20;
    void* f14;
};

void* g4368a8 = reinterpret_cast<void*>(0);

void* g4368ac = reinterpret_cast<void*>(0);

void* g4368b0 = reinterpret_cast<void*>(0);

void* g4368b4 = reinterpret_cast<void*>(0);

void* g4368b8 = reinterpret_cast<void*>(0);

void* g4368bc = reinterpret_cast<void*>(0);

void** g436888 = reinterpret_cast<void**>(0);

void* g43688c = reinterpret_cast<void*>(0);

void* fun_40fba0();

void* fun_40f9dc() {
    signed char* edx1;
    struct s190* esi2;
    struct s191* esi3;
    struct s192* ecx4;
    struct s193* esi5;
    struct s192* ebx6;
    struct s194* esi7;
    struct s192* edx8;
    struct s195* esi9;
    struct s192* tmp32_10;
    struct s192* tmp32_11;
    struct s192* tmp32_12;
    struct s192* tmp32_13;
    struct s192* tmp32_14;
    void* eax15;
    void* ebx16;
    void* eax17;
    void** ebx18;
    void* eax19;
    void* eax20;
    void* ebx21;
    void* eax22;
    void* ebx23;
    void* ebx24;
    void* eax25;
    void** ebx26;
    void* eax27;
    void* ebx28;
    void* eax29;
    void* tmp32_30;
    void* eax31;
    void* ebx32;
    void* eax33;
    void* ebx34;

    edx1 = esi2->f20;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx1) + 1) = esi3->f1c;
    g4368a0 = edx1;
    ecx4 = reinterpret_cast<struct s192*>(&esi5->fc);
    ebx6 = reinterpret_cast<struct s192*>(&esi7->f4);
    edx8 = reinterpret_cast<struct s192*>(&esi9->f14);
    if (reinterpret_cast<int32_t>(ecx4->f4) < reinterpret_cast<int32_t>(ebx6->f4)) {
        tmp32_10 = ecx4;
        ecx4 = ebx6;
        ebx6 = tmp32_10;
        if (reinterpret_cast<int32_t>(edx8->f4) <= reinterpret_cast<int32_t>(ecx4->f4) && (tmp32_11 = edx8, edx8 = ecx4, ecx4 = tmp32_11, reinterpret_cast<int32_t>(edx8->f4) <= reinterpret_cast<int32_t>(ebx6->f4))) {
            tmp32_12 = ecx4;
            ecx4 = ebx6;
            ebx6 = tmp32_12;
        }
    } else {
        if (reinterpret_cast<int32_t>(ecx4->f4) >= reinterpret_cast<int32_t>(edx8->f4) && (tmp32_13 = edx8, edx8 = ecx4, ecx4 = tmp32_13, reinterpret_cast<int32_t>(ebx6->f4) >= reinterpret_cast<int32_t>(ecx4->f4))) {
            tmp32_14 = ecx4;
            ecx4 = ebx6;
            ebx6 = tmp32_14;
        }
    }
    eax15 = ebx6->f0;
    if (reinterpret_cast<int32_t>(eax15) >= reinterpret_cast<int32_t>(0xff830000) && (reinterpret_cast<int32_t>(eax15) <= reinterpret_cast<int32_t>(0x7d0000) && ((g4368a8 = eax15, reinterpret_cast<int32_t>(eax15) >= reinterpret_cast<int32_t>(0xff830000)) && ((g4368ac = ebx6->f4, eax15 = ecx4->f0, reinterpret_cast<int32_t>(eax15) >= reinterpret_cast<int32_t>(0xff830000)) && (reinterpret_cast<int32_t>(eax15) <= reinterpret_cast<int32_t>(0x7d0000) && ((g4368b0 = eax15, g4368b4 = ecx4->f4, eax15 = edx8->f0, reinterpret_cast<int32_t>(eax15) >= reinterpret_cast<int32_t>(0xff830000)) && (reinterpret_cast<int32_t>(eax15) <= reinterpret_cast<int32_t>(0x7d0000) && (g4368b8 = eax15, eax15 = edx8->f4, reinterpret_cast<int32_t>(eax15) <= reinterpret_cast<int32_t>(0x7d0000))))))))) {
        g4368bc = eax15;
        ebx16 = g4368ac;
        eax17 = g4368b4;
        ebx18 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx16) >> 8);
        g436888 = ebx18;
        eax19 = reinterpret_cast<void*>((reinterpret_cast<int32_t>(eax17) >> 8) - reinterpret_cast<unsigned char>(ebx18));
        if (eax19) {
            g43688c = eax19;
            fun_40fc98();
            fun_40fcfe();
            eax20 = g436898;
            ebx21 = g43689c;
            if (reinterpret_cast<int32_t>(eax20) > reinterpret_cast<int32_t>(ebx21)) {
                g436898 = ebx21;
                g43689c = eax20;
                eax22 = g436890;
                ebx23 = g436894;
                g436890 = ebx23;
                g436894 = eax22;
            }
            fun_40fba0();
        }
        ebx24 = g4368b4;
        eax25 = g4368bc;
        ebx26 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx24) >> 8);
        g436888 = ebx26;
        eax15 = reinterpret_cast<void*>((reinterpret_cast<int32_t>(eax25) >> 8) - reinterpret_cast<unsigned char>(ebx26));
        if (eax15) {
            g43688c = eax15;
            fun_40fc98();
            fun_40fcfe();
            eax27 = g4368b4;
            ebx28 = g4368ac;
            eax29 = reinterpret_cast<void*>(((reinterpret_cast<int32_t>(eax27) >> 8) - (reinterpret_cast<int32_t>(ebx28) >> 8)) * reinterpret_cast<uint32_t>(g436898));
            tmp32_30 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g436890) + reinterpret_cast<uint32_t>(eax29));
            g436890 = tmp32_30;
            eax31 = g436898;
            ebx32 = g43689c;
            if (reinterpret_cast<int32_t>(eax31) < reinterpret_cast<int32_t>(ebx32)) {
                g436898 = ebx32;
                g43689c = eax31;
                eax33 = g436890;
                ebx34 = g436894;
                g436890 = ebx34;
                g436894 = eax33;
            }
            eax15 = fun_40fba0();
        }
    }
    return eax15;
}

uint32_t g4534f4;

uint32_t g4534f8;

uint32_t g436714 = 0;

int32_t g43671c = 0;

int32_t g436720 = 0;

int32_t g436724 = 0;

int32_t g453558;

int32_t g436710 = 0;

int32_t g453560;

int32_t g45355c;

int32_t g436738 = 0;

int32_t g43673c = 0;

void fun_40cde0(struct s81* a1) {
    signed char* eax2;
    uint32_t eax3;
    uint32_t esi4;
    uint32_t esi5;
    uint32_t ecx6;
    uint32_t eax7;
    uint32_t ecx8;
    uint32_t edx9;
    uint32_t ecx10;
    int32_t eax11;
    uint32_t eax12;
    uint32_t esi13;
    uint32_t eax14;
    uint32_t eax15;
    uint32_t eax16;
    int32_t eax17;
    int32_t eax18;
    int32_t eax19;
    uint32_t eax20;
    int32_t eax21;
    int32_t eax22;
    uint32_t eax23;
    uint32_t edi24;
    uint32_t eax25;
    uint32_t edx26;
    uint32_t eax27;
    uint32_t ecx28;
    uint32_t eax29;
    int32_t eax30;
    int32_t edx31;
    int32_t eax32;
    int32_t ebx33;
    int32_t eax34;
    int32_t edx35;
    int32_t eax36;
    int32_t ebx37;
    int32_t eax38;

    g436764 = 0;
    if (reinterpret_cast<int1_t>(a1->f0 == 21)) {
        g436764 = 1;
        g436760 = a1->f44;
    }
    eax2 = a1->f4;
    g43675c = eax2;
    fun_40c9e0(a1);
    fun_40c650();
    eax3 = g453504;
    esi4 = g41cde4;
    esi5 = esi4 - eax3;
    g4534f4 = esi5;
    if (reinterpret_cast<int32_t>(esi5) < reinterpret_cast<int32_t>(0)) {
        esi5 = 0;
    }
    ecx6 = g45352c;
    eax7 = g41cdec;
    ecx8 = ecx6 - eax7;
    g4534f8 = ecx8;
    if (reinterpret_cast<int32_t>(ecx8) < reinterpret_cast<int32_t>(0)) {
        g4534f8 = 0;
    }
    edx9 = g4534dc;
    if (reinterpret_cast<int32_t>(edx9) <= reinterpret_cast<int32_t>(esi5)) {
        ecx10 = g4534e0;
    } else {
        eax11 = g4534e4;
        ecx10 = g4534e0;
        if (eax11) {
            eax12 = g4534f8;
            if (reinterpret_cast<int32_t>(ecx10) < reinterpret_cast<int32_t>(eax12)) {
                edx9 = edx9 - eax12 + ecx10;
            }
            g4534f4 = esi5;
            if (esi5) {
                g4534f4 = esi5;
                esi13 = esi5 + 0x100;
            } else {
                eax14 = g453504;
                esi13 = 0x100 - (eax14 & 0xff);
            }
            g4366fc = esi13;
            g436708 = esi13;
            __asm__("fild dword [0x436708]");
            __asm__("fild dword [0x436708]");
            __asm__("fxch st0, st1");
            __asm__("fmul dword [0x436710]");
            __asm__("fxch st0, st1");
            __asm__("fmul dword [0x436704]");
            eax15 = g453500;
            g4534dc = edx9;
            __asm__("fxch st0, st1");
            __asm__("fstp dword [0x43670c]");
            __asm__("fstp dword [0x436700]");
            g436714 = eax15;
            eax16 = g453504;
            g436718 = eax16;
            eax17 = g453508;
            g43671c = eax17;
            g4366f8 = edx9;
            eax18 = g45350c;
            g436720 = eax18;
            eax19 = g453510;
            g436724 = eax19;
            fun_40e9cc();
            esi5 = g4534f4;
            edx9 = g4534dc;
            ecx10 = g4534e0;
        }
    }
    eax20 = g4534f8;
    g4534f4 = esi5;
    if (reinterpret_cast<int32_t>(ecx10) >= reinterpret_cast<int32_t>(eax20) && (eax21 = g4534e8, !!eax21)) {
        eax22 = g453558;
        g436710 = eax22;
        eax23 = g453518;
        edi24 = 0x100 - (eax23 & 0xff);
        g436708 = edi24;
        if (edi24 == 0x100) {
            edi24 = 0;
        }
        eax25 = edx9 + edi24;
        g4534f4 = esi5;
        g436708 = edi24;
        g4366fc = eax25;
        if (reinterpret_cast<int32_t>(edx9) < reinterpret_cast<int32_t>(esi5)) {
            eax25 = esi5 + 0x100;
            edi24 = esi5 - edx9 + 0x100;
        }
        g4366fc = eax25;
        g436708 = edi24;
        __asm__("fild dword [0x4366fc]");
        __asm__("fild dword [0x436708]");
        __asm__("fxch st0, st1");
        __asm__("fmul dword [0x436704]");
        __asm__("fxch st0, st1");
        __asm__("fmul dword [0x453558]");
        edx26 = g4534f8;
        eax27 = g453514;
        __asm__("fxch st0, st1");
        __asm__("fstp dword [0x436700]");
        __asm__("fstp dword [0x43670c]");
        ecx28 = ecx10 - edx26;
        g436714 = eax27;
        eax29 = g453518;
        g4534e0 = ecx28;
        g436718 = eax29;
        eax30 = g45351c;
        edx31 = g453554;
        g43671c = eax30;
        eax32 = g453520;
        ebx33 = g4534ec;
        g436720 = eax32;
        g43672c = edx31;
        eax34 = g453524;
        edx35 = g4534d8;
        g436724 = eax34;
        g436748 = ebx33;
        eax36 = g4534f0;
        ebx37 = g453560;
        g43674c = eax36;
        g436754 = edx35;
        eax38 = g45355c;
        g436738 = ebx37;
        g43673c = eax38;
        g4534dc = ecx28;
        g4366f8 = ecx28;
        fun_40e9cc();
    }
    return;
}

void* g434104 = reinterpret_cast<void*>(0);

int32_t g4340fc = 0;

void* g434100 = reinterpret_cast<void*>(0);

struct s196 {
    void* f0;
    void* f4;
    uint32_t f8;
    uint32_t fc;
};

struct s197 {
    signed char[52] pad52;
    signed char f34;
};

struct s198 {
    void* f0;
    void* f4;
    uint32_t f8;
    int32_t fc;
};

void fun_40e79b() {
    void** edi1;
    int1_t less2;
    void* edi3;
    uint32_t edi4;
    int1_t sf5;
    uint32_t eax6;
    uint32_t tmp32_7;
    uint32_t eax8;
    uint32_t tmp32_9;
    uint32_t eax10;
    uint32_t tmp32_11;
    uint32_t eax12;
    uint32_t tmp32_13;
    void** tmp32_14;
    int1_t less_or_equal15;
    void* edi16;
    int1_t sf17;
    void** eax18;
    void* eax19;
    struct s196* edi20;
    uint32_t eax21;
    void** ebx22;
    void* ebx23;
    uint32_t eax24;
    uint32_t eax25;
    void** ebx26;
    void** ecx27;
    int1_t less28;
    int1_t less29;
    int1_t less_or_equal30;
    int1_t less_or_equal31;
    void* eax32;
    void* tmp32_33;
    uint32_t eax34;
    uint32_t tmp32_35;
    uint32_t eax36;
    uint32_t tmp32_37;
    uint32_t eax38;
    uint32_t tmp32_39;
    uint32_t eax40;
    uint32_t tmp32_41;
    int1_t sf42;
    void* ecx43;
    void* tmp32_44;
    void* eax45;
    int1_t zf46;
    void* eax47;
    struct s197* esi48;
    signed char* tmp32_49;
    signed char* eax50;
    struct s198* edx51;
    void* edi52;
    uint32_t ebx53;
    int32_t esi54;
    void* ecx55;
    struct s198* tmp32_56;
    uint1_t cf57;
    uint32_t tmp32_58;
    int1_t zf59;

    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g434120) + 4) = 0;
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g434126) + 4) = 0;
    edi1 = g434134;
    less2 = reinterpret_cast<signed char>(edi1) < reinterpret_cast<signed char>(g41cdb4);
    if (less2) {
        edi3 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi1) - reinterpret_cast<unsigned char>(g41cdb4));
        edi4 = -reinterpret_cast<uint32_t>(edi3);
        g43411c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43411c) - edi4);
        sf5 = reinterpret_cast<int32_t>(g43411c) < reinterpret_cast<int32_t>(0);
        if (sf5) 
            goto addr_40e97f_3;
        eax6 = g43410c;
        tmp32_7 = *reinterpret_cast<uint32_t*>(&g434126) + eax6 * edi4;
        *reinterpret_cast<uint32_t*>(&g434126) = tmp32_7;
        eax8 = g434108;
        tmp32_9 = *reinterpret_cast<uint32_t*>(&g434120) + eax8 * edi4;
        *reinterpret_cast<uint32_t*>(&g434120) = tmp32_9;
        eax10 = g434110;
        tmp32_11 = g43412c + eax10 * edi4;
        g43412c = tmp32_11;
        eax12 = g434114;
        tmp32_13 = g434130 + eax12 * edi4;
        g434130 = tmp32_13;
        edi1 = g41cdb4;
        g434134 = edi1;
    }
    tmp32_14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi1) + reinterpret_cast<uint32_t>(g43411c));
    less_or_equal15 = reinterpret_cast<signed char>(tmp32_14) <= reinterpret_cast<signed char>(g41cdbc);
    if (less_or_equal15 || (edi16 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(tmp32_14) - reinterpret_cast<unsigned char>(g41cdbc)), g43411c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43411c) - reinterpret_cast<uint32_t>(edi16)), sf17 = reinterpret_cast<int32_t>(g43411c) < reinterpret_cast<int32_t>(0), !sf17)) {
        g434104 = reinterpret_cast<void*>(0);
        g4340fc = 0;
        eax18 = g434134;
        eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax18) * reinterpret_cast<uint32_t>(g41cdf0));
        g434100 = eax19;
        edi20 = reinterpret_cast<struct s196*>(0x434138);
        while (1) {
            eax21 = g434130;
            edi20->f8 = eax21;
            ebx22 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434126) + 2);
            ebx23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx22) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434120) + 2)));
            if (ebx23) {
                eax24 = g43412c;
                eax25 = eax24 - g434130;
                __asm__("cdq ");
                eax21 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(eax25) / reinterpret_cast<int32_t>(ebx23));
                edi20->fc = eax21;
            }
            ebx26 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434120) + 2);
            ecx27 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&g434126) + 2);
            less28 = *reinterpret_cast<int16_t*>(&ebx26) < *reinterpret_cast<int16_t*>(&g41cdb0);
            if (less28) {
                less29 = *reinterpret_cast<int16_t*>(&ecx27) < *reinterpret_cast<int16_t*>(&g41cdb0);
                if (less29) 
                    goto addr_40e8f2_11;
                ebx26 = g41cdb0;
            }
            less_or_equal30 = *reinterpret_cast<int16_t*>(&ecx27) <= *reinterpret_cast<int16_t*>(&g41cdb8);
            if (!less_or_equal30) {
                less_or_equal31 = *reinterpret_cast<int16_t*>(&ebx26) <= *reinterpret_cast<int16_t*>(&g41cdb8);
                if (!less_or_equal31) {
                    addr_40e8f2_11:
                    eax32 = g41cdf0;
                    tmp32_33 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g434100) + reinterpret_cast<uint32_t>(eax32));
                    g434100 = tmp32_33;
                    eax34 = g434110;
                    tmp32_35 = g43412c + eax34;
                    g43412c = tmp32_35;
                    eax36 = g434114;
                    tmp32_37 = g434130 + eax36;
                    g434130 = tmp32_37;
                    eax38 = g43410c;
                    tmp32_39 = *reinterpret_cast<uint32_t*>(&g434126) + eax38;
                    *reinterpret_cast<uint32_t*>(&g434126) = tmp32_39;
                    eax40 = g434108;
                    tmp32_41 = *reinterpret_cast<uint32_t*>(&g434120) + eax40;
                    *reinterpret_cast<uint32_t*>(&g434120) = tmp32_41;
                    g43411c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43411c) - 1);
                    sf42 = reinterpret_cast<int32_t>(g43411c) < reinterpret_cast<int32_t>(0);
                    if (!sf42) 
                        continue; else 
                        break;
                } else {
                    ecx43 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx27) - reinterpret_cast<unsigned char>(g41cdb8));
                    edi20->f8 = edi20->f8 + eax21 * reinterpret_cast<uint32_t>(ecx43);
                    ecx27 = g41cdb8;
                }
            }
            edi20->f4 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx27) - reinterpret_cast<unsigned char>(ebx26));
            tmp32_44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx26) + reinterpret_cast<uint32_t>(g434100));
            eax45 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(tmp32_44) - reinterpret_cast<uint32_t>(g434104));
            g434104 = tmp32_44;
            edi20->f0 = eax45;
            ++edi20;
            ++g4340fc;
            goto addr_40e8f2_11;
        }
        zf46 = g4340fc == 0;
        if (zf46) 
            goto addr_40e97f_3;
    } else {
        addr_40e97f_3:
        return;
    }
    eax47 = reinterpret_cast<void*>(0);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax47) + 1) = esi48->f34;
    tmp32_49 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax47) + reinterpret_cast<uint32_t>(g41cdac));
    eax50 = tmp32_49;
    edx51 = reinterpret_cast<struct s198*>(0x434138);
    edi52 = g41cda4;
    do {
        edi52 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi52) + reinterpret_cast<int32_t>(edx51->f0));
        ebx53 = edx51->f8;
        esi54 = edx51->fc;
        __asm__("ror ebx, 0x8");
        __asm__("ror esi, 0x8");
        ecx55 = edx51->f4;
        tmp32_56 = edx51 + 1;
        cf57 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_56) < reinterpret_cast<uint32_t>(edx51));
        edx51 = tmp32_56;
        *reinterpret_cast<signed char*>(&eax50) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx53) + 1);
        do {
            tmp32_58 = ebx53 + esi54 + cf57;
            cf57 = reinterpret_cast<uint1_t>(tmp32_58 < ebx53);
            ebx53 = tmp32_58;
            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi52) + reinterpret_cast<int32_t>(ecx55)) = *eax50;
            *reinterpret_cast<int16_t*>(&ecx55) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ecx55) - 1);
            *reinterpret_cast<signed char*>(&eax50) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx53) + 1);
        } while (*reinterpret_cast<int16_t*>(&ecx55) >= 0);
        --g4340fc;
        zf59 = g4340fc == 0;
    } while (!zf59);
    goto addr_40e97f_3;
}

struct s199 {
    signed char[1] pad1;
    signed char f1;
};

void* fun_40fba0() {
    void* eax1;
    void* ebx2;
    void** edx3;
    int1_t less4;
    void** ecx5;
    void* ecx6;
    int1_t less_or_equal7;
    void* ecx8;
    void* edx9;
    void** ecx10;
    void* ecx11;
    int1_t less12;
    int1_t less_or_equal13;
    void* tmp32_14;
    void* ebp15;
    signed char* edx16;
    void* edi17;
    void** ecx18;
    void** esi19;
    int1_t less20;
    int1_t less21;
    int1_t less_or_equal22;
    int1_t less_or_equal23;
    void* tmp32_24;
    void* tmp32_25;
    void* tmp32_26;
    int1_t zf27;
    void* ecx28;
    struct s199* esi29;
    void* ecx30;

    eax1 = g436890;
    ebx2 = g436894;
    edx3 = g436888;
    less4 = reinterpret_cast<signed char>(edx3) < reinterpret_cast<signed char>(g41cdb4);
    if (less4) {
        ecx5 = g41cdb4;
        ecx6 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx5) - reinterpret_cast<unsigned char>(edx3));
        less_or_equal7 = reinterpret_cast<int32_t>(g43688c) <= reinterpret_cast<int32_t>(ecx6);
        g43688c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43688c) - reinterpret_cast<uint32_t>(ecx6));
        if (less_or_equal7) 
            goto addr_40fc97_3;
        ecx8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx6) * reinterpret_cast<uint32_t>(g436898));
        eax1 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax1) + reinterpret_cast<uint32_t>(ecx8));
        edx9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx6) * reinterpret_cast<uint32_t>(g43689c));
        ebx2 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx2) + reinterpret_cast<uint32_t>(edx9));
        edx3 = g41cdb4;
    }
    ecx10 = g41cdcc;
    ecx11 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx10) - reinterpret_cast<unsigned char>(edx3));
    less12 = reinterpret_cast<int32_t>(ecx11) < reinterpret_cast<int32_t>(g43688c);
    if (less12) {
        less_or_equal13 = reinterpret_cast<signed char>(edx3) <= reinterpret_cast<signed char>(g41cdcc);
        if (!less_or_equal13 || !ecx11) {
            addr_40fc97_3:
            return eax1;
        } else {
            g43688c = ecx11;
        }
    }
    tmp32_14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx3) * 4 + 0x41cdf8)) + reinterpret_cast<uint32_t>(g41cda4));
    ebp15 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(tmp32_14) - 1);
    edx16 = g4368a0;
    edi17 = eax1;
    while (1) {
        ecx18 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx2) >> 16);
        esi19 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(edi17) >> 16);
        less20 = reinterpret_cast<signed char>(esi19) < reinterpret_cast<signed char>(g41cdb0);
        if (less20) {
            less21 = reinterpret_cast<signed char>(ecx18) < reinterpret_cast<signed char>(g41cdb0);
            if (less21) 
                goto addr_40fc7b_11;
            esi19 = g41cdb0;
        }
        less_or_equal22 = reinterpret_cast<signed char>(ecx18) <= reinterpret_cast<signed char>(g41cdc8);
        if (!less_or_equal22) {
            less_or_equal23 = reinterpret_cast<signed char>(esi19) <= reinterpret_cast<signed char>(g41cdc8);
            if (!less_or_equal23) {
                addr_40fc7b_11:
                tmp32_24 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi17) + reinterpret_cast<uint32_t>(g436898));
                edi17 = tmp32_24;
                tmp32_25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx2) + reinterpret_cast<uint32_t>(g43689c));
                ebx2 = tmp32_25;
                tmp32_26 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp15) + reinterpret_cast<uint32_t>(g41cdf0));
                ebp15 = tmp32_26;
                g43688c = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(g43688c) - 1);
                zf27 = g43688c == 0;
                if (!zf27) 
                    continue; else 
                    break;
            } else {
                ecx18 = g41cdc8;
            }
        }
        ecx28 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx18) - reinterpret_cast<unsigned char>(esi19));
        if (reinterpret_cast<signed char>(ecx18) > reinterpret_cast<signed char>(esi19)) {
            esi29 = reinterpret_cast<struct s199*>(reinterpret_cast<unsigned char>(esi19) + reinterpret_cast<uint32_t>(ebp15));
            *reinterpret_cast<signed char*>(&edx16) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi29) + reinterpret_cast<uint32_t>(ecx28));
            ecx30 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx28) - 1);
            if (ecx30) {
                do {
                    *reinterpret_cast<signed char*>(&edx16) = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi29) + reinterpret_cast<uint32_t>(ecx30));
                    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi29) + reinterpret_cast<uint32_t>(ecx30) + 1) = *edx16;
                    ecx30 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx30) - 1);
                } while (ecx30);
            }
            esi29->f1 = *edx16;
            goto addr_40fc7b_11;
        }
    }
    eax1 = edi17;
    goto addr_40fc97_3;
}

int32_t HeapCreate = 0x5572a;

int32_t HeapDestroy = 0x5571c;

int32_t fun_412c60() {
    int32_t eax1;
    struct s93* eax2;
    int32_t eax3;

    eax1 = reinterpret_cast<int32_t>(HeapCreate());
    g454574 = eax1;
    if (eax1) {
        eax2 = fun_412ff0();
        if (eax2) {
            goto 1;
        } else {
            eax3 = g454574;
            HeapDestroy();
            goto eax3;
        }
    } else {
        goto 1;
    }
}

void** fun_412990(void** a1);

struct s200 {
    signed char f0;
    signed char f1;
};

struct s201 {
    void** f0;
    signed char[7] pad8;
    void** f8;
};

int32_t GetCPInfo = 0x556ca;

int32_t g43acac = 0;

int32_t fun_4127b0(void** a1) {
    uint32_t v2;
    uint32_t ebx3;
    void** eax4;
    void** ebp5;
    int1_t zf6;
    int32_t v7;
    void*** eax8;
    unsigned char* edi9;
    unsigned char eax10;
    int32_t ecx11;
    int32_t edi12;
    struct s200* esi13;
    uint32_t edx14;
    uint32_t ebx15;
    unsigned char cl16;
    uint32_t ebx17;
    void** eax18;
    int32_t eax19;
    void** ebx20;
    struct s201* ecx21;
    void** ecx22;
    int32_t eax23;
    int1_t zf24;
    int32_t v25;
    int32_t v26;
    signed char* edi27;
    int32_t ecx28;
    void** eax29;
    int32_t v30;
    signed char v31;
    uint32_t ecx32;
    uint32_t edx33;
    signed char v34;
    uint32_t eax35;
    signed char v36;
    signed char v37;
    uint32_t eax38;

    v2 = ebx3;
    eax4 = fun_412990(a1);
    ebp5 = eax4;
    zf6 = ebp5 == g43ac94;
    if (zf6) {
        return 0;
    }
    if (!ebp5) {
        fun_412a40();
        return 0;
    }
    v7 = 0;
    eax8 = reinterpret_cast<void***>(0x43acb8);
    do {
        if (*eax8 == ebp5) 
            break;
        eax8 = eax8 + 48;
        ++v7;
    } while (reinterpret_cast<uint32_t>(eax8) < 0x43ada8);
    goto addr_41280e_8;
    edi9 = reinterpret_cast<unsigned char*>(0x43ab90);
    eax10 = reinterpret_cast<unsigned char>(0);
    ecx11 = 64;
    while (ecx11) {
        --ecx11;
        *edi9 = reinterpret_cast<unsigned char>(0);
        edi9 = edi9 + 4;
    }
    *edi9 = 0;
    edi12 = (v7 + v7 * 2) * 2;
    do {
        esi13 = reinterpret_cast<struct s200*>((eax10 + edi12) * 8 + 0x43acc8);
        if (esi13->f0) {
            do {
                if (!esi13->f1) 
                    break;
                edx14 = 0;
                ebx15 = 0;
                *reinterpret_cast<signed char*>(&edx14) = esi13->f0;
                *reinterpret_cast<signed char*>(&ebx15) = esi13->f1;
                if (ebx15 >= edx14) {
                    cl16 = *reinterpret_cast<unsigned char*>(eax10 + 0x43acb0);
                    do {
                        *reinterpret_cast<unsigned char*>(edx14 + 0x43ab91) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx14 + 0x43ab91) | cl16);
                        ++edx14;
                        ebx17 = 0;
                        *reinterpret_cast<signed char*>(&ebx17) = esi13->f1;
                    } while (ebx17 >= edx14);
                }
                ++esi13;
            } while (esi13->f0);
        }
        eax10 = reinterpret_cast<unsigned char>(eax10 + 1);
    } while (eax10 < reinterpret_cast<unsigned char>(4));
    g43ac94 = ebp5;
    eax18 = fun_4129e0(ebp5);
    g43ac98 = eax18;
    eax19 = v7 << 4;
    ebx20 = *reinterpret_cast<void***>(eax19 + eax19 * 2 + reinterpret_cast<int32_t>("!"));
    ecx21 = reinterpret_cast<struct s201*>(eax19 + eax19 * 2 + 0x43acbc);
    ecx22 = ecx21->f8;
    g43aca0 = ecx21->f0;
    g43aca4 = ebx20;
    g43aca8 = ecx22;
    return 0;
    addr_41280e_8:
    eax23 = reinterpret_cast<int32_t>(GetCPInfo());
    if (eax23 != 1) {
        zf24 = g43acac == 0;
        if (zf24) {
            goto v25;
        } else {
            fun_412a40();
            goto v26;
        }
    }
    edi27 = reinterpret_cast<signed char*>(0x43ab90);
    ecx28 = 64;
    while (ecx28) {
        --ecx28;
        *edi27 = reinterpret_cast<signed char>(0);
        edi27 = edi27 + 4;
    }
    *edi27 = 0;
    if (v2 > 1) 
        goto addr_41283d_34;
    eax29 = reinterpret_cast<void**>(0);
    g43ac94 = reinterpret_cast<void**>(0);
    addr_41294a_36:
    g43ac98 = eax29;
    g43aca0 = reinterpret_cast<void**>(0);
    g43aca4 = reinterpret_cast<void**>(0);
    g43aca8 = reinterpret_cast<void**>(0);
    goto v30;
    addr_41283d_34:
    if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v7) + 2)) {
        do {
            if (!v31) 
                break;
            ecx32 = 0;
            edx33 = 0;
            *reinterpret_cast<signed char*>(&ecx32) = v34;
            *reinterpret_cast<signed char*>(&edx33) = v31;
            if (edx33 >= ecx32) {
                do {
                    *reinterpret_cast<unsigned char*>(ecx32 + 0x43ab91) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx32 + 0x43ab91) | 4);
                    ++ecx32;
                    eax35 = 0;
                    *reinterpret_cast<signed char*>(&eax35) = v36;
                } while (eax35 >= ecx32);
            }
        } while (v37);
    }
    eax38 = 1;
    do {
        *reinterpret_cast<unsigned char*>(eax38 + 0x43ab91) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax38 + 0x43ab91) | 8);
        ++eax38;
    } while (eax38 < 0xff);
    g43ac94 = ebp5;
    eax29 = fun_4129e0(ebp5);
    goto addr_41294a_36;
}

void*** g454684;

void*** g43aa90 = reinterpret_cast<void***>(0);

struct s202 {
    void** f0;
    signed char[1039] pad1040;
    void** f410;
};

void** g43aa78 = reinterpret_cast<void**>(0);

int32_t g43aa74 = 0;

void fun_4123a0() {
    void*** esi1;
    void* esp2;
    void*** eax3;
    struct s202* edi4;
    void** eax5;
    void* esp6;
    int32_t esi7;

    esi1 = reinterpret_cast<void***>(0x452760);
    GetModuleFileNameA();
    esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 8 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
    eax3 = g454684;
    g43aa90 = reinterpret_cast<void***>(0x452760);
    if (*eax3) {
        esi1 = g454684;
    }
    fun_412440(esi1, 0, 0, reinterpret_cast<int32_t>(esp2) + 8, reinterpret_cast<int32_t>(esp2) + 12);
    eax5 = fun_4111a0(&edi4->f410);
    esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp2) - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 20 - 4 - 4 + 4 + 4);
    if (!eax5) {
        fun_411170(8);
        esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp6) - 4 - 4 + 4 + 4);
    }
    fun_412440(esi1, eax5, eax5 + 0x410, reinterpret_cast<int32_t>(esp6) + 8, reinterpret_cast<int32_t>(esp6) + 12);
    g43aa78 = eax5;
    g43aa74 = 0x103;
    goto esi7;
}

void** g43aa80 = reinterpret_cast<void**>(0);

void fun_4122b0() {
    void** edx1;
    void*** esi2;
    void** edi3;
    int32_t ecx4;
    int32_t eax5;
    void** eax6;
    void** ebx7;
    void** ebp8;
    void** eax9;
    void** edi10;
    int32_t ecx11;
    void** ecx12;
    void** v13;
    void** eax14;
    void** edi15;
    int32_t ecx16;
    void* eax17;
    void** ecx18;
    uint32_t ecx19;
    void** edi20;
    uint32_t ecx21;
    void** eax22;

    edx1 = g43aaa4;
    esi2 = reinterpret_cast<void***>(0);
    if (*reinterpret_cast<void***>(edx1)) {
        do {
            if (*reinterpret_cast<void***>(edx1) != 61) {
                ++esi2;
            }
            edi3 = edx1;
            ecx4 = -1;
            eax5 = eax5 - eax5;
            do {
                if (!ecx4) 
                    break;
                --ecx4;
                ++edi3;
                ++esi2;
            } while (*reinterpret_cast<void***>(edi3) != *reinterpret_cast<void***>(&eax5));
            edx1 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx1) + ~ecx4);
        } while (*reinterpret_cast<void***>(edx1));
    }
    eax6 = fun_4111a0(reinterpret_cast<uint32_t>(esi2) * 4 + 4);
    g43aa80 = eax6;
    ebx7 = eax6;
    if (!ebx7) {
        fun_411170(9);
    }
    ebp8 = g43aaa4;
    eax9 = ebp8;
    if (*reinterpret_cast<void***>(ebp8)) {
        do {
            edi10 = ebp8;
            ecx11 = -1;
            eax9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax9) - reinterpret_cast<unsigned char>(eax9));
            do {
                if (!ecx11) 
                    break;
                --ecx11;
                ++edi10;
            } while (*reinterpret_cast<void***>(edi10) != eax9);
            ecx12 = reinterpret_cast<void**>(~ecx11);
            v13 = ecx12;
            if (*reinterpret_cast<void***>(ebp8) != 61) {
                eax14 = fun_4111a0(ecx12);
                *reinterpret_cast<void***>(ebx7) = eax14;
                if (!eax14) {
                    eax14 = fun_411170(9);
                }
                edi15 = ebp8;
                ecx16 = -1;
                eax17 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14) - reinterpret_cast<unsigned char>(eax14));
                do {
                    if (!ecx16) 
                        break;
                    --ecx16;
                    ++edi15;
                } while (*reinterpret_cast<void***>(edi15) != *reinterpret_cast<void***>(&eax17));
                ecx18 = reinterpret_cast<void**>(~ecx16);
                eax9 = ecx18;
                ecx19 = reinterpret_cast<unsigned char>(ecx18) >> 2;
                esi2 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi15) - reinterpret_cast<unsigned char>(ecx18));
                edi20 = *reinterpret_cast<void***>(ebx7);
                ebx7 = ebx7 + 4;
                while (ecx19) {
                    --ecx19;
                    *reinterpret_cast<void***>(edi20) = *esi2;
                    edi20 = edi20 + 4;
                    esi2 = esi2 + 4;
                }
                ecx21 = reinterpret_cast<unsigned char>(eax9) & 3;
                while (ecx21) {
                    --ecx21;
                    *reinterpret_cast<void***>(edi20) = *esi2;
                    ++edi20;
                    ++esi2;
                }
            }
            ebp8 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp8) + reinterpret_cast<unsigned char>(v13));
        } while (*reinterpret_cast<void***>(ebp8));
    }
    eax22 = g43aaa4;
    fun_411250(eax22);
    g43aaa4 = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ebx7) = reinterpret_cast<void**>(0);
    return;
}

/* (image base) */
int32_t image_base_ = 0x410e20;

void fun_410e90() {
    int32_t eax1;

    eax1 = image_base_;
    if (eax1) {
        eax1();
    }
    fun_410fb0(0x41c008, 0x41c010);
    fun_410fb0(0x41c000, 0x41c004);
    return;
}

int32_t fun_412270(signed char a1, uint32_t a2, uint32_t a3) {
    int32_t edx4;
    uint32_t ecx5;
    uint32_t ecx6;
    uint32_t ecx7;

    edx4 = 0;
    ecx5 = 0;
    *reinterpret_cast<signed char*>(&edx4) = a1;
    *reinterpret_cast<signed char*>(&ecx5) = *reinterpret_cast<signed char*>(edx4 + 0x43ab91);
    if (!(a3 & ecx5)) {
        ecx6 = 0;
        if (a2) {
            ecx7 = 0;
            *reinterpret_cast<int16_t*>(&ecx7) = *reinterpret_cast<int16_t*>(" " + edx4 * 2);
            ecx6 = ecx7 & a2;
        }
        if (!ecx6) {
            return 0;
        }
    }
    return 1;
}

struct s203 {
    void* f0;
    unsigned char f4;
    void** f5;
};

int32_t ReadFile = 0x55770;

void** fun_413ab0(void** a1, void** a2, void** a3) {
    int1_t below_or_equal4;
    int32_t v5;
    int32_t ebx6;
    void*** ebp7;
    uint32_t ebx8;
    struct s203* eax9;
    void** edx10;
    signed char* v11;
    void** eax12;
    void** v13;
    void* v14;
    int32_t eax15;
    void* esp16;
    uint32_t eax17;
    void** ecx18;
    unsigned char* eax19;
    int32_t edi20;
    unsigned char cl21;
    signed char* edi22;
    signed char* esi23;
    signed char* eax24;
    int32_t ebp25;
    signed char* v26;
    void*** esp27;
    void** v28;
    void* v29;
    void** edx30;
    void* eax31;
    void* v32;
    int32_t eax33;
    void* eax34;
    signed char* ecx35;
    unsigned char* eax36;

    below_or_equal4 = reinterpret_cast<unsigned char>(g454680) <= reinterpret_cast<unsigned char>(a1);
    v5 = ebx6;
    if (below_or_equal4 || (ebp7 = reinterpret_cast<void***>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a1) & 0xffffffe7) >> 3) + 0x454580), ebx8 = (reinterpret_cast<unsigned char>(a1) & 31) * 8, eax9 = reinterpret_cast<struct s203*>(reinterpret_cast<int32_t>(*ebp7) + ebx8), (eax9->f4 & 1) == 0)) {
        g43aa58 = 9;
        g43aa5c = 0;
        return 0xffffffff;
    }
    edx10 = a2;
    v11 = reinterpret_cast<signed char*>(0);
    if (!a3 || eax9->f4 & 2) {
        return 0;
    }
    if (eax9->f4 & 72 && eax9->f5 != 10) {
        *reinterpret_cast<void***>(edx10) = eax9->f5;
        ++edx10;
        eax12 = *ebp7;
        v11 = reinterpret_cast<signed char*>(1);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax12) + ebx8 + 5) = 10;
    }
    v13 = edx10;
    v14 = *reinterpret_cast<void**>(reinterpret_cast<int32_t>(*ebp7) + ebx8);
    eax15 = reinterpret_cast<int32_t>(ReadFile());
    esp16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 16 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
    if (!eax15) {
        eax17 = reinterpret_cast<uint32_t>(GetLastError());
        if (eax17 != 5) {
            if (eax17 != 0x6d) {
                fun_4144a0(eax17);
                goto v5;
            } else {
                goto v5;
            }
        } else {
            g43aa5c = eax17;
            g43aa58 = 9;
            goto v5;
        }
    }
    ecx18 = *ebp7;
    eax19 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx18) + ebx8 + 4);
    if (*eax19 & 0x80) 
        goto addr_413bb3_14;
    addr_413cdc_15:
    goto v5;
    addr_413bb3_14:
    if (!edi20 || *v11 != 10) {
        cl21 = reinterpret_cast<unsigned char>(*eax19 & 0xfb);
    } else {
        cl21 = reinterpret_cast<unsigned char>(*eax19 | 4);
    }
    edi22 = v11;
    *eax19 = cl21;
    esi23 = edi22;
    eax24 = reinterpret_cast<signed char*>(ebp25 + edi20 + reinterpret_cast<uint32_t>(edi22));
    v26 = eax24;
    if (reinterpret_cast<uint32_t>(eax24) > reinterpret_cast<uint32_t>(edi22)) 
        goto addr_413be5_19;
    addr_413cd4_20:
    goto addr_413cdc_15;
    addr_413be5_19:
    while (*esi23 != 26) {
        if (*esi23 == 13) {
            if (reinterpret_cast<uint32_t>(v26 - 1) <= reinterpret_cast<uint32_t>(esi23)) {
                ++esi23;
                esp27 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp16) - 4);
                v28 = reinterpret_cast<void**>(0);
                v29 = reinterpret_cast<void*>(esp27 + 28);
                edx30 = *ebp7;
                eax31 = *reinterpret_cast<void**>(reinterpret_cast<int32_t>(edx30) + ebx8);
                v32 = reinterpret_cast<void*>(esp27 + 23);
                eax33 = reinterpret_cast<int32_t>(ReadFile(eax31, v32, 1, v29));
                esp16 = reinterpret_cast<void*>(esp27 - 4 - 4 - 4 - 4 - 4 + 4);
                if (!eax33) {
                    eax34 = reinterpret_cast<void*>(GetLastError(eax31, v32, 1, v29));
                    esp16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp16) - 4 + 4);
                    v14 = eax34;
                }
                if (v14) 
                    goto addr_413cb1_26;
                if (!v13) 
                    goto addr_413cb1_26;
                if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*ebp7) + ebx8 + 4) & 72) 
                    goto addr_413c6a_29;
            } else {
                ecx35 = esi23 + 1;
                if (*ecx35 != 10) {
                    esi23 = ecx35;
                    *edi22 = *esi23;
                    goto addr_413cb4_32;
                } else {
                    esi23 = esi23 + 2;
                    *edi22 = 10;
                    goto addr_413cb4_32;
                }
            }
        } else {
            ++esi23;
            *edi22 = *esi23;
            goto addr_413cb4_32;
        }
        if (edi22 || *reinterpret_cast<signed char*>(&v28 + 3) != 10) {
            fun_4143e0(0, 0xff, 1, eax31, v32, 1, v29, 0);
            esp16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp16) - 4 - 4 - 4 - 4 + 4 + 12);
            if (*reinterpret_cast<signed char*>(&v28 + 3) == 10) {
                addr_413cb5_37:
                if (reinterpret_cast<uint32_t>(esi23) < reinterpret_cast<uint32_t>(v26)) 
                    continue; else 
                    goto addr_413cbf_38;
            } else {
                addr_413cb1_26:
                *edi22 = 13;
            }
        } else {
            *edi22 = 10;
        }
        addr_413cb4_32:
        ++edi22;
        goto addr_413cb5_37;
        addr_413c6a_29:
        if (*reinterpret_cast<signed char*>(&v28 + 3) != 10) {
            *edi22 = 13;
            ++edi22;
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(*ebp7) + ebx8 + 5) = *reinterpret_cast<signed char*>(&v28 + 3);
            goto addr_413cb5_37;
        } else {
            *edi22 = 10;
            goto addr_413cb4_32;
        }
    }
    eax36 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(*ebp7) + ebx8 + 4);
    if (!(*eax36 & 64)) {
        *eax36 = reinterpret_cast<unsigned char>(*eax36 | 2);
        goto addr_413cd4_20;
    }
    addr_413cbf_38:
    goto addr_413cd4_20;
}

struct s204 {
    signed char[4] pad4;
    unsigned char f4;
};

int32_t fun_4139c0(void** a1) {
    void** eax2;
    void** eax3;
    void** ecx4;
    void** v5;
    void** edx6;
    void** eax7;
    void** edx8;
    struct s204* eax9;
    void** eax10;
    void** ecx11;
    int32_t eax12;

    eax2 = *reinterpret_cast<void***>(a1 + 12);
    if (!(*reinterpret_cast<unsigned char*>(&eax2) & 0x83) || *reinterpret_cast<unsigned char*>(&eax2) & 64) {
        return -1;
    } else {
        if (!(*reinterpret_cast<unsigned char*>(&eax2) & 2)) {
            eax3 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax2) | 1);
            *reinterpret_cast<void***>(a1 + 12) = eax3;
            if (reinterpret_cast<unsigned char>(eax3) & 0x10c) {
                *reinterpret_cast<void***>(a1) = *reinterpret_cast<void***>(a1 + 8);
            } else {
                fun_4166c0(a1);
            }
            ecx4 = *reinterpret_cast<void***>(a1 + 8);
            v5 = *reinterpret_cast<void***>(a1 + 24);
            edx6 = *reinterpret_cast<void***>(a1 + 16);
            eax7 = fun_413ab0(edx6, ecx4, v5);
            *reinterpret_cast<void***>(a1 + 4) = eax7;
            if (!eax7 || eax7 == 0xffffffff) {
                *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 12)) | (reinterpret_cast<unsigned char>(eax7) - (reinterpret_cast<unsigned char>(eax7) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax7) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax7) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax7) < reinterpret_cast<unsigned char>(1))))) & 0xfffffff0) + 32);
                *reinterpret_cast<void***>(a1 + 4) = reinterpret_cast<void**>(0);
                return -1;
            } else {
                edx8 = *reinterpret_cast<void***>(a1 + 12);
                if (!(*reinterpret_cast<unsigned char*>(&edx8) & 0x82)) {
                    eax9 = reinterpret_cast<struct s204*>(0x43ada8);
                    if (*reinterpret_cast<void***>(a1 + 16) != 0xffffffff) {
                        eax9 = reinterpret_cast<struct s204*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 16)) & 0xffffffe7) >> 3) + 0x454580)) + (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 16)) & 31) * 8);
                    }
                    if ((eax9->f4 & 0x82) == 0x82) {
                        *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx8) | 0x2000);
                    }
                }
                if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a1 + 24) == 0x200) && ((eax10 = *reinterpret_cast<void***>(a1 + 12), !!(*reinterpret_cast<unsigned char*>(&eax10) & 8)) && !(*reinterpret_cast<unsigned char*>(&eax10 + 1) & 4))) {
                    *reinterpret_cast<void***>(a1 + 24) = reinterpret_cast<void**>(0x1000);
                }
                *reinterpret_cast<void***>(a1 + 4) = *reinterpret_cast<void***>(a1 + 4) - 1;
                ecx11 = *reinterpret_cast<void***>(a1);
                *reinterpret_cast<void***>(a1) = ecx11 + 1;
                eax12 = 0;
                *reinterpret_cast<void***>(&eax12) = *reinterpret_cast<void***>(ecx11);
                return eax12;
            }
        } else {
            *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax2) | 32);
            return -1;
        }
    }
}

uint32_t g43be00 = 0;

void fun_413f94(unsigned char* ecx);

void** fun_413dd0(void* a1, struct s0* a2, int32_t a3, void** a4) {
    int32_t ebx5;
    int32_t eax6;
    int32_t edi7;
    uint32_t edx8;
    uint32_t esi9;
    void** esi10;
    uint32_t esi11;
    int32_t ebp12;
    signed char* ecx13;
    uint32_t eax14;
    int32_t v15;
    void** eax16;

    ebx5 = 0;
    eax6 = a2->f0;
    edi7 = 0;
    if (eax6 == 97) {
        edx8 = 0x109;
    } else {
        if (eax6 == 0x72) {
            edx8 = 0;
            esi9 = g43be00;
            esi10 = reinterpret_cast<void**>(esi9 | 1);
            goto addr_413e1d_5;
        } else {
            if (eax6 == 0x77) {
                edx8 = 0x301;
            } else {
                return 0;
            }
        }
    }
    esi11 = g43be00;
    esi10 = reinterpret_cast<void**>(esi11 | 2);
    addr_413e1d_5:
    ebp12 = 1;
    ecx13 = &a2->f1;
    if (*ecx13) {
        do {
            if (!ebp12) 
                break;
            eax14 = *ecx13 - 43;
            if (eax14 > 73) 
                goto addr_413e5d_12;
            v15 = 0;
            *reinterpret_cast<signed char*>(&v15) = *reinterpret_cast<signed char*>(eax14 + reinterpret_cast<int32_t>(fun_413f94));
            switch (v15) {
            case 0:
                if (!(*reinterpret_cast<unsigned char*>(&edx8) & 2)) {
                    edx8 = (edx8 | 2) & 0xfffffffe;
                    esi10 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(esi10) | 0x80) & 0xfffffffc);
                    break;
                } else {
                    ebp12 = 0;
                    break;
                }
            case 1:
                if (!(*reinterpret_cast<unsigned char*>(&edx8) & 64)) {
                    edx8 = edx8 | 64;
                    break;
                } else {
                    ebp12 = 0;
                    break;
                }
            case 2:
                if (!ebx5) {
                    ebx5 = 1;
                    edx8 = edx8 | 16;
                    break;
                } else {
                    ebp12 = 0;
                    break;
                }
            case 3:
                if (!ebx5) {
                    ebx5 = 1;
                    edx8 = edx8 | 32;
                    break;
                } else {
                    ebp12 = 0;
                    break;
                }
            case 4:
                if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx8) + 1) & 16)) {
                    edx8 = edx8 | 0x1000;
                    break;
                } else {
                    ebp12 = 0;
                    break;
                }
            case 5:
                if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx8) + 1) & 0xc0)) {
                    edx8 = edx8 | 0x8000;
                    break;
                } else {
                    ebp12 = 0;
                    break;
                }
            case 6:
                if (!edi7) {
                    edi7 = 1;
                    esi10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi10) | 0x4000);
                    break;
                } else {
                    ebp12 = 0;
                    break;
                }
            case 7:
                if (!edi7) {
                    edi7 = 1;
                    esi10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi10) & 0xffffbfff);
                    break;
                } else {
                    ebp12 = 0;
                    break;
                }
            case 8:
                if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx8) + 1) & 0xc0)) {
                    edx8 = edx8 | 0x4000;
                    break;
                } else {
                    ebp12 = 0;
                    break;
                }
                addr_413e5d_12:
            case 9:
                ebp12 = 0;
            }
            ++ecx13;
        } while (*ecx13);
    }
    eax16 = fun_4169e0(a1, edx8, a3, 0x1a4);
    if (reinterpret_cast<signed char>(eax16) >= reinterpret_cast<signed char>(0)) {
        ++g43ba68;
        *reinterpret_cast<void***>(a4 + 12) = esi10;
        *reinterpret_cast<void***>(a4 + 4) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a4) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a4 + 8) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a4 + 28) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a4 + 16) = eax16;
        return a4;
    } else {
        return 0;
    }
}

void fun_418fe0();

void fun_419030(int32_t ecx);

void fun_419080(int32_t ecx);

void fun_41a240(struct s135* a1, uint32_t a2, int32_t a3);

uint32_t fun_418970(struct s101* a1, signed char** a2, signed char* a3, int32_t a4, uint32_t a5, uint32_t a6, int32_t a7) {
    int32_t v8;
    void* esp9;
    uint32_t edi10;
    uint16_t v11;
    uint32_t v12;
    uint32_t v13;
    uint32_t v14;
    uint32_t v15;
    uint32_t v16;
    uint32_t ecx17;
    signed char* esi18;
    uint32_t v19;
    uint32_t v20;
    uint32_t v21;
    signed char* v22;
    signed char bl23;
    int1_t zf24;
    int32_t eax25;
    int1_t zf26;
    uint32_t ecx27;
    int32_t eax28;
    int1_t zf29;
    int1_t less_or_equal30;
    int32_t ecx31;
    int16_t* edx32;
    uint32_t eax33;
    uint32_t eax34;
    uint32_t eax35;
    int1_t zf36;
    uint32_t ecx37;
    int32_t eax38;
    int1_t less_or_equal39;
    int32_t ecx40;
    int16_t* edx41;
    uint32_t eax42;
    uint32_t eax43;
    uint32_t eax44;
    uint32_t ecx45;
    int32_t eax46;
    int1_t less_or_equal47;
    int32_t ecx48;
    int16_t* edx49;
    uint32_t eax50;
    uint32_t eax51;
    uint32_t eax52;
    int32_t eax53;
    int1_t less_or_equal54;
    int32_t ecx55;
    int16_t* edx56;
    uint32_t eax57;
    uint32_t eax58;
    uint32_t eax59;
    int1_t less_or_equal60;
    int32_t ecx61;
    int16_t* edx62;
    uint32_t eax63;
    uint32_t eax64;
    uint32_t eax65;
    int32_t eax66;
    int16_t si67;
    int16_t v68;
    int32_t ecx69;
    int32_t v70;
    uint16_t di71;
    uint16_t v72;
    int32_t edx73;
    int32_t v74;
    signed char v75;
    uint32_t edi76;
    int16_t v77;
    int32_t v78;
    uint16_t v79;
    int32_t v80;

    v8 = 1;
    esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 84 - 4 - 4 - 4 - 4);
    edi10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    ecx17 = 0;
    esi18 = a3;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = esi18;
    while (*esi18 == 32 || (*esi18 == 9 || (*esi18 == 10 || *esi18 == 13))) {
        ++esi18;
    }
    while (1) {
        bl23 = *esi18;
        ++esi18;
        if (ecx17 > 11) {
            addr_418e25_5:
            if (ecx17 != 10) 
                continue; else 
                break;
        } else {
            switch (ecx17) {
            case 0:
                if (bl23 < 49 || bl23 > 57) {
                    zf24 = g43bb84 == bl23;
                    if (!zf24) {
                        eax25 = bl23;
                        if (eax25 == 43) {
                            v11 = 0;
                            ecx17 = 2;
                            break;
                        } else {
                            if (eax25 == 45) {
                                v11 = 0x8000;
                                ecx17 = 2;
                                break;
                            } else {
                                if (eax25 == 48) {
                                    ecx17 = 1;
                                    break;
                                } else {
                                    goto addr_418e1f_16;
                                }
                            }
                        }
                    } else {
                        ecx17 = 5;
                        break;
                    }
                } else {
                    ecx17 = 3;
                    goto addr_418e24_19;
                }
            case 1:
                v13 = 1;
                if (bl23 < 49 || bl23 > 57) {
                    zf26 = g43bb84 == bl23;
                    if (!zf26) {
                        ecx27 = bl23 - 43;
                        if (ecx27 > 58) 
                            goto addr_418e1f_16;
                        eax28 = 0;
                        *reinterpret_cast<signed char*>(&eax28) = *reinterpret_cast<signed char*>(ecx27 + reinterpret_cast<int32_t>(fun_418fe0));
                        switch (eax28) {
                        case 0:
                        case 1:
                            --esi18;
                            ecx17 = 11;
                            goto addr_418e25_5;
                        case 2:
                            ecx17 = 1;
                            goto addr_418e25_5;
                        case 3:
                        case 4:
                            ecx17 = 6;
                            goto addr_418e25_5;
                            addr_418e1f_16:
                        case 5:
                            ecx17 = 10;
                            goto addr_418e24_19;
                        }
                    } else {
                        ecx17 = 4;
                        break;
                    }
                } else {
                    ecx17 = 3;
                    goto addr_418e24_19;
                }
            case 2:
                if (bl23 < 49 || bl23 > 57) {
                    zf29 = g43bb84 == bl23;
                    if (!zf29) {
                        if (static_cast<int32_t>(bl23) == 48) {
                            ecx17 = 1;
                            break;
                        } else {
                            ecx17 = 10;
                            esi18 = v22;
                            break;
                        }
                    } else {
                        ecx17 = 5;
                        break;
                    }
                } else {
                    ecx17 = 3;
                    goto addr_418e24_19;
                }
            case 3:
                v13 = 1;
                while (1) {
                    less_or_equal30 = g43bb80 <= 1;
                    if (less_or_equal30) {
                        ecx31 = 0;
                        edx32 = image_base_;
                        *reinterpret_cast<signed char*>(&ecx31) = bl23;
                        eax33 = 0;
                        *reinterpret_cast<int16_t*>(&eax33) = edx32[ecx31];
                        eax34 = eax33 & 4;
                    } else {
                        eax35 = 0;
                        *reinterpret_cast<signed char*>(&eax35) = bl23;
                        eax34 = fun_4158a0(eax35, 4);
                        esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) - 4 - 4 - 4 + 4 + 8);
                    }
                    if (!eax34) 
                        break;
                    if (v12 >= 25) {
                        bl23 = *esi18;
                        ++esi18;
                        ++v20;
                    } else {
                        ++esi18;
                        ++v12;
                        bl23 = *(esi18 - 1);
                    }
                }
                zf36 = g43bb84 == bl23;
                if (!zf36) {
                    ecx37 = bl23 - 43;
                    if (ecx37 > 58) 
                        goto addr_418e1f_16;
                    eax38 = 0;
                    *reinterpret_cast<signed char*>(&eax38) = *reinterpret_cast<signed char*>(ecx37 + reinterpret_cast<int32_t>(fun_419030));
                    goto *reinterpret_cast<int32_t*>(eax38 * 4 + 0x41901c);
                } else {
                    ecx17 = 4;
                    break;
                }
                --esi18;
                ecx17 = 11;
                break;
                ecx17 = 6;
                break;
            case 4:
                v13 = 1;
                v14 = 1;
                if (!v12 && bl23 == 48) {
                    do {
                        bl23 = *esi18;
                        ++esi18;
                        --v20;
                    } while (bl23 == 48);
                }
                while (1) {
                    less_or_equal39 = g43bb80 <= 1;
                    if (less_or_equal39) {
                        ecx40 = 0;
                        edx41 = image_base_;
                        *reinterpret_cast<signed char*>(&ecx40) = bl23;
                        eax42 = 0;
                        *reinterpret_cast<int16_t*>(&eax42) = edx41[ecx40];
                        eax43 = eax42 & 4;
                    } else {
                        eax44 = 0;
                        *reinterpret_cast<signed char*>(&eax44) = bl23;
                        eax43 = fun_4158a0(eax44, 4);
                        esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) - 4 - 4 - 4 + 4 + 8);
                    }
                    if (!eax43) 
                        break;
                    if (v12 < 25) {
                        ++v12;
                        --v20;
                    }
                    bl23 = *esi18;
                    ++esi18;
                }
                ecx45 = bl23 - 43;
                if (ecx45 > 58) 
                    goto addr_418e1f_16;
                eax46 = 0;
                *reinterpret_cast<signed char*>(&eax46) = *reinterpret_cast<signed char*>(ecx45 + reinterpret_cast<int32_t>(fun_419080));
                switch (eax46) {
                case 0:
                case 1:
                    --esi18;
                    ecx17 = 11;
                    goto addr_418e25_5;
                case 2:
                case 3:
                    ecx17 = 6;
                    goto addr_418e25_5;
                case 4:
                    goto 0x418e1f;
                }
            case 5:
                v14 = 1;
                less_or_equal47 = g43bb80 <= 1;
                if (less_or_equal47) {
                    ecx48 = 0;
                    edx49 = image_base_;
                    *reinterpret_cast<signed char*>(&ecx48) = bl23;
                    eax50 = 0;
                    *reinterpret_cast<int16_t*>(&eax50) = edx49[ecx48];
                    eax51 = eax50 & 4;
                } else {
                    eax52 = 0;
                    *reinterpret_cast<signed char*>(&eax52) = bl23;
                    eax51 = fun_4158a0(eax52, 4);
                    esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) - 4 - 4 - 4 + 4 + 8);
                }
                if (!eax51) {
                    ecx17 = 10;
                    esi18 = v22;
                    break;
                } else {
                    ecx17 = 4;
                    goto addr_418e24_19;
                }
            case 6:
                v22 = esi18 - 2;
                if (bl23 < 49 || bl23 > 57) {
                    eax53 = bl23;
                    if (eax53 == 43) {
                        ecx17 = 7;
                        break;
                    } else {
                        if (eax53 == 45) {
                            v8 = -1;
                            ecx17 = 7;
                            break;
                        } else {
                            if (eax53 == 48) {
                                ecx17 = 8;
                                break;
                            } else {
                                ecx17 = 10;
                                esi18 = v22;
                                break;
                            }
                        }
                    }
                } else {
                    ecx17 = 9;
                    goto addr_418e24_19;
                }
            case 7:
                if (bl23 < 49 || bl23 > 57) {
                    if (static_cast<int32_t>(bl23) == 48) {
                        ecx17 = 8;
                        break;
                    } else {
                        ecx17 = 10;
                        esi18 = v22;
                        break;
                    }
                } else {
                    ecx17 = 9;
                    goto addr_418e24_19;
                }
            case 8:
                v15 = 1;
                if (bl23 == 48) {
                    do {
                        bl23 = *esi18;
                        ++esi18;
                    } while (bl23 == 48);
                }
                if (bl23 < 49) 
                    goto addr_418e1f_16;
                if (bl23 > 57) 
                    goto addr_418e1f_16;
                ecx17 = 9;
                goto addr_418e24_19;
            case 9:
                v15 = 1;
                edi10 = 0;
                while (1) {
                    less_or_equal54 = g43bb80 <= 1;
                    if (less_or_equal54) {
                        ecx55 = 0;
                        edx56 = image_base_;
                        *reinterpret_cast<signed char*>(&ecx55) = bl23;
                        eax57 = 0;
                        *reinterpret_cast<int16_t*>(&eax57) = edx56[ecx55];
                        eax58 = eax57 & 4;
                    } else {
                        eax59 = 0;
                        *reinterpret_cast<signed char*>(&eax59) = bl23;
                        eax58 = fun_4158a0(eax59, 4);
                        esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) - 4 - 4 - 4 + 4 + 8);
                    }
                    if (!eax58) 
                        break;
                    edi10 = bl23 + (edi10 + edi10 * 4) * 2 + 0xffffffd0;
                    if (reinterpret_cast<int32_t>(edi10) > reinterpret_cast<int32_t>(0x1450)) 
                        goto addr_418da5_94;
                    bl23 = *esi18;
                    ++esi18;
                }
                while (1) {
                    addr_418daa_96:
                    less_or_equal60 = g43bb80 <= 1;
                    if (less_or_equal60) {
                        ecx61 = 0;
                        edx62 = image_base_;
                        *reinterpret_cast<signed char*>(&ecx61) = bl23;
                        eax63 = 0;
                        *reinterpret_cast<int16_t*>(&eax63) = edx62[ecx61];
                        eax64 = eax63 & 4;
                    } else {
                        eax65 = 0;
                        *reinterpret_cast<signed char*>(&eax65) = bl23;
                        eax64 = fun_4158a0(eax65, 4);
                        esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) - 4 - 4 - 4 + 4 + 8);
                    }
                    if (!eax64) 
                        goto addr_418e1f_16;
                    bl23 = *esi18;
                    ++esi18;
                }
                addr_418da5_94:
                edi10 = 0x1451;
                goto addr_418daa_96;
            case 11:
                if (!a7) 
                    goto addr_418e1f_16;
                v22 = esi18 - 1;
                eax66 = bl23;
                if (eax66 == 43) {
                    ecx17 = 7;
                } else {
                    if (eax66 == 45) {
                        v8 = -1;
                        ecx17 = 7;
                    } else {
                        ecx17 = 10;
                        esi18 = v22;
                    }
                }
            case 15:
            case 16:
                goto 0x418aa6;
            case 12:
            case 13:
                goto 0x418a91;
            case 14:
                goto 0x418a9c;
            case 10:
                goto 0x418e25;
            case 17:
                goto 0x418e1f;
            }
            goto addr_418e25_5;
        }
        addr_418e24_19:
        --esi18;
        goto addr_418e25_5;
    }
    *a2 = esi18;
    if (!v13) {
        addr_418f10_108:
        si67 = v68;
        ecx69 = v70;
        di71 = v72;
        edx73 = v74;
    } else {
        if (v12 > 24) {
            if (v75 >= 5) {
            }
            ++v20;
            v12 = 24;
        }
        if (!v12) 
            goto addr_418f04_114; else 
            goto addr_418e69_115;
    }
    addr_418f22_116:
    if (v13) {
        if (!v16) {
            if (v19) {
                si67 = 0;
                edx73 = 0;
                di71 = 0;
                ecx69 = 0;
                v21 = 1;
            }
        } else {
            di71 = 0x7fff;
            edx73 = 0x80000000;
            si67 = 0;
            ecx69 = 0;
            v21 = 2;
        }
    } else {
        si67 = 0;
        edx73 = 0;
        di71 = 0;
        ecx69 = 0;
        v21 = 4;
    }
    a1->f0 = si67;
    a1->f2 = ecx69;
    a1->fa = reinterpret_cast<uint16_t>(di71 | v11);
    a1->f6 = edx73;
    return v21;
    addr_418f04_114:
    si67 = 0;
    edx73 = 0;
    di71 = 0;
    ecx69 = 0;
    goto addr_418f22_116;
    addr_418e69_115:
    if (!*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&a3) + 2)) {
        do {
            --v12;
            ++v20;
        } while (!*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&a3) + 1));
    }
    fun_418880(reinterpret_cast<int32_t>(esp9) + 60, v12, reinterpret_cast<int32_t>(esp9) + 88);
    esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) - 4 - 4 - 4 - 4 + 4 + 12);
    if (v8 < 0) {
        edi10 = -edi10;
    }
    edi76 = edi10 + v20;
    if (!v15) {
        edi76 = edi76 + a5;
    }
    if (!v14) {
        edi76 = edi76 - a6;
    }
    if (reinterpret_cast<int32_t>(edi76) > reinterpret_cast<int32_t>(0x1450)) 
        goto addr_418ec1_131;
    if (reinterpret_cast<int32_t>(edi76) >= reinterpret_cast<int32_t>(0xffffebb0)) {
        fun_41a240(reinterpret_cast<int32_t>(esp9) + 88, edi76, a4);
        si67 = v77;
        ecx69 = v78;
        di71 = v79;
        edx73 = v80;
        goto addr_418f22_116;
    } else {
        v19 = 1;
        goto addr_418f10_108;
    }
    addr_418ec1_131:
    v16 = 1;
    goto addr_418f10_108;
}

struct s205 {
    uint32_t f0;
    uint32_t f4;
    uint32_t f8;
    unsigned char fc;
    signed char[3] pad16;
    int32_t f10;
    uint32_t f14;
};

int32_t fun_415cc0(struct s102* a1, struct s100* a2, struct s205* a3);

int32_t fun_415e90(struct s102* a1, struct s100* a2) {
    int32_t eax3;

    eax3 = fun_415cc0(a1, a2, 0x43bda0);
    return eax3;
}

int32_t fun_415eb0(struct s102* a1, struct s100* a2);

int32_t fun_415f10(struct s100* a1, signed char* a2) {
    signed char** esp3;
    void* esp4;
    int32_t eax5;

    esp3 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 16);
    esp4 = reinterpret_cast<void*>(esp3 - 1);
    fun_418970(reinterpret_cast<int32_t>(esp4) + 8, esp3, a2, 0, 0, 0, 0);
    eax5 = fun_415eb0(reinterpret_cast<int32_t>(esp4) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 + 32, a1);
    return eax5;
}

struct s206 {
    uint32_t f0;
    uint32_t f4;
    uint16_t f8;
};

struct s207 {
    uint32_t f0;
    uint32_t f4;
    uint16_t f6;
};

void fun_416050(struct s206* a1, struct s207* a2);

struct s208 {
    int16_t f0;
    signed char f2;
    signed char f3;
    signed char f4;
    signed char f5;
};

int32_t fun_4190c0(int32_t a1, uint32_t a2, uint16_t a3, int32_t a4, unsigned char a5, struct s208* a6);

int32_t g4528a8;

int32_t g4528ac;

signed char g452882;

int16_t g452880;

int32_t g4528a0;

int32_t g4528a4;

struct s104* fun_415fe0(struct s105* a1, int32_t a2) {
    int32_t v3;
    int32_t v4;
    int32_t v5;
    uint32_t v6;
    int32_t eax7;
    int32_t ecx8;
    int32_t edx9;

    fun_416050(reinterpret_cast<int32_t>(__zero_stack_offset()) - 12, reinterpret_cast<int32_t>(__zero_stack_offset()) + 4);
    v3 = v4;
    eax7 = fun_4190c0(v5, v6, *reinterpret_cast<uint16_t*>(&v3), 17, 0, 0x452880);
    g4528a8 = eax7;
    g4528ac = 0x452884;
    ecx8 = g452882;
    edx9 = g452880;
    g4528a0 = ecx8;
    g4528a4 = edx9;
    return 0x4528a0;
}

struct s105* fun_411be0(struct s106* a1, struct s105* a2, void* a3, int32_t a4);

struct s105* fun_411ed0(struct s106* a1, struct s105* a2, void* a3, int32_t a4) {
    struct s105* eax5;

    g43aad8 = 1;
    eax5 = fun_411be0(a1, a2, a3, a4);
    g43aad8 = 0;
    return eax5;
}

struct s105* fun_411f00(struct s106* a1, struct s105* a2, void* a3) {
    struct s105* eax4;

    g43aad8 = 1;
    eax4 = fun_411d20(a1, a2, a3);
    g43aad8 = 0;
    return eax4;
}

struct s209 {
    int32_t f0;
    int16_t f4;
};

int32_t g41b328 = 0x30302b65;

int16_t g41b32c = 48;

struct s210 {
    signed char f0;
    signed char f1;
};

struct s211 {
    signed char f0;
    signed char f1;
};

struct s212 {
    signed char f0;
    signed char f1;
};

struct s213 {
    signed char f0;
    signed char f1;
};

struct s105* fun_411be0(struct s106* a1, struct s105* a2, void* a3, int32_t a4) {
    int1_t zf5;
    struct s105* edx6;
    int32_t v7;
    struct s104* eax8;
    void* esi9;
    struct s104* edi10;
    void* ecx11;
    uint32_t eax12;
    struct s105* ebp13;
    uint32_t eax14;
    void* ecx15;
    struct s105* ecx16;
    signed char bl17;
    uint1_t cf18;
    struct s209* edx19;
    int32_t ebx20;
    uint32_t eax21;
    uint1_t cf22;
    struct s210* ecx23;
    struct s211* ecx24;
    void* ebx25;
    struct s212* ecx26;
    int32_t eax27;
    struct s213* ecx28;
    int32_t eax29;

    zf5 = g43aad8 == 0;
    if (zf5) {
        edx6 = a1->f0;
        v7 = a1->f4;
        eax8 = fun_415fe0(edx6, v7);
        esi9 = a3;
        edi10 = eax8;
        ecx11 = reinterpret_cast<void*>(1);
        eax12 = edi10->f0 - 45;
        ebp13 = a2;
        if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi9) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi9 == 0))) {
            ecx11 = reinterpret_cast<void*>(0);
        }
        fun_415f50(reinterpret_cast<int32_t>(-(eax12 - (eax12 + reinterpret_cast<uint1_t>(eax12 < eax12 + reinterpret_cast<uint1_t>(eax12 < 1))))) + reinterpret_cast<int32_t>(ecx11) + reinterpret_cast<uint32_t>(ebp13), reinterpret_cast<uint32_t>(esi9) + 1, edi10);
    } else {
        edi10 = g45275c;
        ebp13 = a2;
        esi9 = a3;
        eax14 = edi10->f0 - 45;
        ecx15 = reinterpret_cast<void*>(1);
        if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi9) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi9 == 0))) {
            ecx15 = reinterpret_cast<void*>(0);
        }
        fun_411fa0(-(eax14 - (eax14 + reinterpret_cast<uint1_t>(eax14 < eax14 + reinterpret_cast<uint1_t>(eax14 < 1)))) + reinterpret_cast<uint32_t>(ebp13), ecx15);
    }
    ecx16 = ebp13;
    if (edi10->f0 == 45) {
        ecx16 = reinterpret_cast<struct s105*>(&ebp13->pad2);
        ebp13->f0 = 45;
    }
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi9) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(esi9 == 0))) {
        edx6 = reinterpret_cast<struct s105*>(&ecx16->pad2);
        ecx16->f0 = edx6->f0;
        ecx16 = edx6;
        bl17 = g43bb84;
        edx6->f0 = bl17;
    }
    cf18 = reinterpret_cast<uint1_t>(g43aad8 < 1);
    edx19 = reinterpret_cast<struct s209*>(-(reinterpret_cast<uint32_t>(edx6) - (reinterpret_cast<uint32_t>(edx6) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(edx6) < reinterpret_cast<uint32_t>(edx6) + cf18))) + reinterpret_cast<uint32_t>(ecx16) + reinterpret_cast<uint32_t>(esi9));
    ebx20 = g41b328;
    eax21 = reinterpret_cast<uint32_t>("e+000");
    edx19->f0 = ebx20;
    *reinterpret_cast<int16_t*>(&eax21) = g41b32c;
    edx19->f4 = *reinterpret_cast<int16_t*>(&eax21);
    cf22 = reinterpret_cast<uint1_t>(g43aad8 < 1);
    ecx23 = reinterpret_cast<struct s210*>(reinterpret_cast<uint32_t>(ecx16) + (-(eax21 - (eax21 + reinterpret_cast<uint1_t>(eax21 < eax21 + cf22))) + reinterpret_cast<uint32_t>(esi9)));
    if (a4) {
        ecx23->f0 = 69;
    }
    ecx24 = reinterpret_cast<struct s211*>(&ecx23->f1);
    if (*edi10->fc != 48) {
        ebx25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi10->f4) - 1);
        if (reinterpret_cast<int32_t>(ebx25) < reinterpret_cast<int32_t>(0)) {
            ebx25 = reinterpret_cast<void*>(-reinterpret_cast<uint32_t>(ebx25));
            ecx24->f0 = 45;
        }
        ecx26 = reinterpret_cast<struct s212*>(&ecx24->f1);
        if (reinterpret_cast<int32_t>(ebx25) >= reinterpret_cast<int32_t>(100)) {
            __asm__("cdq ");
            eax27 = reinterpret_cast<int32_t>(ebx25) / 100;
            ecx26->f0 = reinterpret_cast<signed char>(ecx26->f0 + *reinterpret_cast<signed char*>(&eax27));
            __asm__("cdq ");
            ebx25 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx25) % 100);
        }
        ecx28 = reinterpret_cast<struct s213*>(&ecx26->f1);
        if (reinterpret_cast<int32_t>(ebx25) >= reinterpret_cast<int32_t>(10)) {
            __asm__("cdq ");
            eax29 = reinterpret_cast<int32_t>(ebx25) / 10;
            ecx28->f0 = reinterpret_cast<signed char>(ecx28->f0 + *reinterpret_cast<signed char*>(&eax29));
            __asm__("cdq ");
            ebx25 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx25) % 10);
        }
        ecx28->f1 = reinterpret_cast<signed char>(ecx28->f1 + *reinterpret_cast<signed char*>(&ebx25));
    }
    return ebp13;
}

unsigned char g43aae0 = 0;

struct s105* fun_411e20(struct s106* a1, struct s105* a2, void* a3, int32_t a4) {
    struct s106* ebp5;
    struct s105* ecx6;
    int32_t v7;
    struct s104* eax8;
    struct s104* ecx9;
    struct s105* esi10;
    uint32_t eax11;
    void* edi12;
    struct s103* ebx13;
    struct s104* ecx14;
    int1_t less_or_equal15;
    unsigned char dl16;
    void* eax17;
    struct s105* eax18;
    struct s103* eax19;
    struct s105* eax20;

    ebp5 = a1;
    ecx6 = ebp5->f0;
    v7 = ebp5->f4;
    eax8 = fun_415fe0(ecx6, v7);
    g45275c = eax8;
    ecx9 = g45275c;
    esi10 = a2;
    g43aadc = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax8->f4) - 1);
    eax11 = ecx9->f0 - 45;
    edi12 = a3;
    ebx13 = reinterpret_cast<struct s103*>(-(eax11 - (eax11 + reinterpret_cast<uint1_t>(eax11 < eax11 + reinterpret_cast<uint1_t>(eax11 < 1)))) + reinterpret_cast<uint32_t>(esi10));
    fun_415f50(ebx13, edi12, ecx9);
    ecx14 = g45275c;
    less_or_equal15 = reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(ecx14->f4) - 1) <= reinterpret_cast<int32_t>(g43aadc);
    dl16 = reinterpret_cast<uint1_t>(!less_or_equal15);
    g43aae0 = dl16;
    eax17 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx14->f4) - 1);
    g43aadc = eax17;
    if (reinterpret_cast<int32_t>(eax17) < reinterpret_cast<int32_t>(0xfffffffc) || reinterpret_cast<int32_t>(edi12) <= reinterpret_cast<int32_t>(eax17)) {
        eax18 = fun_411ed0(ebp5, esi10, edi12, a4);
        return eax18;
    } else {
        if (dl16) {
            do {
                eax19 = ebx13;
                ebx13 = reinterpret_cast<struct s103*>(&ebx13->f1);
            } while (eax19->f0);
            (ebx13 + 0xffffffff)->f0 = 0;
        }
        eax20 = fun_411f00(ebp5, esi10, edi12);
        return eax20;
    }
}

int32_t RtlUnwind = 0x555fa;

void fun_41a370() {
    goto RtlUnwind;
}

struct s214 {
    int32_t f0;
    unsigned char f4;
};

int32_t SetStdHandle = 0x5579e;

int32_t fun_416570(void** a1) {
    int1_t cf2;
    int32_t** edi3;
    uint32_t esi4;
    struct s214* eax5;
    int1_t zf6;
    int32_t v7;

    cf2 = reinterpret_cast<unsigned char>(a1) < reinterpret_cast<unsigned char>(g454680);
    if (!cf2 || ((edi3 = reinterpret_cast<int32_t**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a1) & 0xffffffe7) >> 3) + 0x454580), esi4 = (reinterpret_cast<unsigned char>(a1) & 31) * 8, eax5 = reinterpret_cast<struct s214*>(reinterpret_cast<int32_t>(*edi3) + esi4), (eax5->f4 & 1) == 0) || eax5->f0 == -1)) {
        g43aa58 = 9;
        g43aa5c = 0;
        return -1;
    }
    zf6 = g43aab4 == 1;
    if (!zf6) {
        addr_4165d6_4:
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*edi3) + esi4) = -1;
        return 0;
    } else {
        if (!a1) {
            v7 = 0xf6;
        } else {
            if (a1 == 1) {
                v7 = 0xf5;
            } else {
                if (a1 == 2) {
                    v7 = 0xf4;
                } else {
                    goto addr_4165d6_4;
                }
            }
        }
    }
    SetStdHandle(v7, 0);
    goto addr_4165d6_4;
}

void** fun_413920() {
    void** eax1;

    eax1 = fun_413930(1);
    return eax1;
}

struct s215 {
    signed char[4] pad4;
    unsigned char f4;
};

uint32_t fun_414060(void** a1, void** a2) {
    void** esp3;
    void** edi4;
    void** eax5;
    void** eax6;
    void* ebp7;
    void** eax8;
    uint32_t eax9;
    void* ebx10;
    void* eax11;
    struct s215* eax12;
    void* ebp13;
    void* edi14;
    uint32_t esi15;
    void* ebx16;
    void** v17;
    void* eax18;

    esp3 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4);
    edi4 = *reinterpret_cast<void***>(a2 + 16);
    eax5 = *reinterpret_cast<void***>(a2 + 12);
    if (!(*reinterpret_cast<unsigned char*>(&eax5) & 0x82) || *reinterpret_cast<unsigned char*>(&eax5) & 64) {
        *reinterpret_cast<void***>(a2 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax5) | 32);
        return 0xffffffff;
    } else {
        if (*reinterpret_cast<unsigned char*>(&eax5) & 1) {
            *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(0);
            eax6 = *reinterpret_cast<void***>(a2 + 12);
            if (!(*reinterpret_cast<unsigned char*>(&eax6) & 16)) {
                *reinterpret_cast<void***>(a2 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax6) | 32);
                return 0xffffffff;
            } else {
                *reinterpret_cast<void***>(a2) = *reinterpret_cast<void***>(a2 + 8);
                *reinterpret_cast<void***>(a2 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 12)) & 0xfffffffe);
            }
        }
        ebp7 = reinterpret_cast<void*>(0);
        eax8 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 12)) | 2);
        *reinterpret_cast<void***>(a2 + 12) = eax8;
        *reinterpret_cast<void***>(a2 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax8) & 0xffffffef);
        *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(0);
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 12)) & 0x10c) && (a2 != 0x43b808 && !reinterpret_cast<int1_t>(a2 == 0x43b828) || (eax9 = fun_416e00(edi4), esp3 = esp3 - 1 - 1 + 1 + 1, !eax9))) {
            fun_4166c0(a2);
            esp3 = esp3 - 1 - 1 + 1 + 1;
        }
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 12)) & 0x108)) {
            ebx10 = reinterpret_cast<void*>(1);
            eax11 = fun_4141b0(edi4, esp3 + 5, 1);
            ebp7 = eax11;
        } else {
            ebx10 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 8)));
            *reinterpret_cast<void***>(a2) = *reinterpret_cast<void***>(a2 + 8) + 1;
            *reinterpret_cast<void***>(a2 + 4) = *reinterpret_cast<void***>(a2 + 24) - 1;
            if (reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ebx10) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(ebx10 == 0)) {
                eax12 = reinterpret_cast<struct s215*>(0x43ada8);
                if (edi4 != 0xffffffff) {
                    eax12 = reinterpret_cast<struct s215*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(edi4) & 0xffffffe7) >> 3) + 0x454580)) + (reinterpret_cast<unsigned char>(edi4) & 31) * 8);
                }
                if (eax12->f4 & 32) {
                    fun_4143e0(edi4, 0, 2, ebp13, edi14, esi15, ebx16, __return_address());
                }
            } else {
                v17 = *reinterpret_cast<void***>(a2 + 8);
                eax18 = fun_4141b0(edi4, v17, ebx10);
                ebp7 = eax18;
            }
            *reinterpret_cast<void***>(*reinterpret_cast<void***>(a2 + 8)) = a1;
        }
        if (ebp7 == ebx10) {
            return reinterpret_cast<unsigned char>(a1) & 0xff;
        } else {
            *reinterpret_cast<void***>(a2 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 12)) | 32);
            return 0xffffffff;
        }
    }
}

int32_t fun_417d11() {
    uint32_t v1;
    uint32_t v2;
    uint32_t v3;
    int32_t eax4;

    __asm__("fstp tword [esp+0xc]");
    __asm__("fstp tword [esp]");
    fun_417520(v1, v2, v3);
    return eax4;
}

int32_t fun_4156a1(int32_t a1, int32_t a2) {
    int32_t eax3;

    *reinterpret_cast<uint16_t*>(&eax3) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&a2) + 2) & 0x7ff0);
    if (*reinterpret_cast<uint16_t*>(&eax3) != 0x7ff0) {
        __asm__("fld qword [ebp+0x8]");
    } else {
        eax3 = a2;
        __asm__("shld eax, ebx, 0xb");
        __asm__("fld tword [ebp-0xa]");
    }
    return eax3;
}

struct s216 {
    signed char[12] pad12;
    signed char fc;
};

struct s217 {
    signed char[14] pad14;
    signed char fe;
};

struct s218 {
    int32_t f0;
    int32_t f4;
};

struct s219 {
    signed char[8] pad8;
    int32_t f8;
};

struct s220 {
    int32_t f0;
    int32_t f4;
};

struct s221 {
    int32_t f0;
    int32_t f4;
};

struct s222 {
    signed char[16] pad16;
    int32_t f10;
};

struct s223 {
    int32_t f0;
    int32_t f4;
};

void fun_41553e() {
    int1_t zf1;
    int32_t ebp2;
    int32_t ebp3;
    uint16_t fpu_status_word4;
    int32_t ebp5;
    uint16_t ax6;
    uint16_t ax7;
    int32_t ebp8;
    int16_t ax9;
    int16_t fpu_status_word10;
    int32_t ebp11;
    int16_t ax12;
    int16_t fpu_status_word13;
    int32_t ebp14;
    struct s216* ebx15;
    int32_t ebp16;
    int32_t ebp17;
    int1_t zf18;
    uint32_t v19;
    int32_t ebp20;
    int32_t ebp21;
    int32_t ebp22;
    struct s218* esi23;
    struct s219* ebp24;
    struct s220* edi25;
    int32_t ebp26;
    struct s221* esi27;
    struct s222* ebp28;
    struct s223* edi29;
    int32_t ebp30;

    g452878 = 0;
    zf1 = g43aa44 == 0;
    if (!zf1) 
        goto addr_41559a_3;
    __asm__("fst qword [0x452870]");
    if (!*reinterpret_cast<signed char*>(ebp2 - 0x90)) {
        addr_415578_5:
        if (*reinterpret_cast<uint16_t*>(ebp3 - 0xa4) & 32 || !(fpu_status_word4 & 32)) {
            addr_41559a_3:
            __asm__("fldcw word [ebp+0xffffff5c]");
            __asm__("wait ");
            return;
        } else {
            *reinterpret_cast<int32_t*>(ebp5 - 0x8e) = 8;
        }
    } else {
        if (*reinterpret_cast<signed char*>(ebp2 - 0x90) == -1 || *reinterpret_cast<signed char*>(ebp2 - 0x90) == -2) {
            ax6 = g452876;
            ax7 = reinterpret_cast<uint16_t>(ax6 & 0x7ff0);
            if (!ax7) {
                *reinterpret_cast<int32_t*>(ebp8 - 0x8e) = 4;
                __asm__("fld qword [0x41b6b8]");
                __asm__("fxch st0, st1");
                __asm__("fscale ");
                __asm__("fstp st1");
                __asm__("fld st0");
                __asm__("fabs ");
                __asm__("fcomp qword [0x41b6a8]");
                __asm__("wait ");
                ax9 = fpu_status_word10;
                if (*reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&ax9) + 1)) {
                    __asm__("fmul qword [0x41b6c8]");
                }
            } else {
                if (ax7 == 0x7ff0) {
                    *reinterpret_cast<int32_t*>(ebp11 - 0x8e) = 3;
                    __asm__("fld qword [0x41b6b0]");
                    __asm__("fxch st0, st1");
                    __asm__("fscale ");
                    __asm__("fstp st1");
                    __asm__("fld st0");
                    __asm__("fabs ");
                    __asm__("fcomp qword [0x41b6a0]");
                    __asm__("wait ");
                    ax12 = fpu_status_word13;
                    if (!(*reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&ax12) + 1) | *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&ax12) + 1))) {
                        __asm__("fmul qword [0x41b6c0]");
                    }
                } else {
                    goto addr_415578_5;
                }
            }
        } else {
            if (!*reinterpret_cast<signed char*>(ebp2 - 0x90)) 
                goto addr_41559a_3;
            *reinterpret_cast<int32_t*>(ebp14 - 0x8e) = *reinterpret_cast<signed char*>(ebp2 - 0x90);
        }
    }
    ebx15 = reinterpret_cast<struct s216*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp16 - 0x94)) + 1);
    *reinterpret_cast<struct s216**>(ebp17 - 0x8a) = ebx15;
    zf18 = g452878 == 0;
    if (!zf18) {
        addr_415645_18:
        __asm__("fstp qword [ebp-0x76]");
        v19 = reinterpret_cast<uint32_t>(static_cast<int32_t>((*reinterpret_cast<struct s217**>(ebp20 - 0x94))->fe));
        fun_4182b0(v19, ebp21 - 0x8e, ebp22 - 0xa4);
        __asm__("fld qword [ebp-0x76]");
        goto addr_41559a_3;
    } else {
        esi23 = reinterpret_cast<struct s218*>(&ebp24->f8);
        edi25 = reinterpret_cast<struct s220*>(ebp26 - 0x86);
        edi25->f0 = esi23->f0;
        edi25->f4 = esi23->f4;
        if (ebx15->fc == 1) 
            goto addr_415645_18;
    }
    esi27 = reinterpret_cast<struct s221*>(&ebp28->f10);
    edi29 = reinterpret_cast<struct s223*>(ebp30 - 0x7e);
    edi29->f0 = esi27->f0;
    edi29->f4 = esi27->f4;
    goto addr_415645_18;
}

int32_t g43bfac = 0;

int32_t LCMapStringA = 0x557f4;

int32_t LCMapStringW = 0x55804;

int32_t fun_418500(int32_t a1, int32_t a2, signed char* a3, int32_t a4, void* a5, int32_t a6, void** a7) {
    int32_t eax8;
    int32_t edi9;
    int32_t eax10;
    int32_t eax11;
    int32_t esi12;
    int32_t eax13;
    void** edi14;
    int32_t eax15;
    void** eax16;
    int32_t v17;
    int32_t eax18;
    void** eax19;
    void** eax20;
    int32_t eax21;
    int32_t ebp22;
    void** eax23;
    int32_t ebp24;
    void** eax25;
    int32_t eax26;

    eax8 = g43bfac;
    if (eax8) {
        edi9 = LCMapStringA;
    } else {
        edi9 = LCMapStringA;
        eax10 = reinterpret_cast<int32_t>(edi9(0, 0x100, 0x41b728, 1, 0, 0));
        if (!eax10) {
            eax11 = reinterpret_cast<int32_t>(LCMapStringW());
            if (!eax11) {
                goto 0;
            } else {
                eax8 = 1;
            }
        } else {
            eax8 = 2;
        }
    }
    esi12 = a4;
    g43bfac = eax8;
    if (!(reinterpret_cast<uint1_t>(esi12 < 0) | reinterpret_cast<uint1_t>(esi12 == 0))) {
        eax13 = fun_418730(a3, esi12);
        esi12 = eax13;
        eax8 = g43bfac;
    }
    g43bfac = eax8;
    if (eax8 == 2) {
        edi9();
        goto a5;
    }
    g43bfac = eax8;
    if (eax8 != 1) {
        addr_41868f_13:
        return eax8;
    } else {
        edi14 = reinterpret_cast<void**>(0);
        if (!a7) {
        }
        eax15 = reinterpret_cast<int32_t>(MultiByteToWideChar());
        if (!eax15) {
            goto 0;
        }
        eax16 = fun_4111a0(eax15 * 2);
        if (!eax16) {
            goto 0;
        }
        v17 = a1;
        eax18 = reinterpret_cast<int32_t>(MultiByteToWideChar());
        if (!eax18) 
            goto addr_41867b_21;
        eax19 = reinterpret_cast<void**>(LCMapStringW());
        if (!eax19) 
            goto addr_41867b_21;
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&v17) + 1) & 4) 
            goto addr_41864b_24;
    }
    eax20 = fun_4111a0(reinterpret_cast<unsigned char>(eax19) * 2);
    edi14 = eax20;
    if (!edi14) 
        goto addr_41867b_21;
    eax21 = reinterpret_cast<int32_t>(LCMapStringW(0, v17, eax16, eax15, edi14, eax19));
    if (!eax21) 
        goto addr_41867b_21;
    if (!0) 
        goto addr_4186ce_28;
    ebp22 = WideCharToMultiByte;
    eax23 = reinterpret_cast<void**>(ebp22(0, 0x220, edi14, eax19, eax15, 0, 0, 0, 0, v17, eax16, eax15, edi14, eax19));
    if (!eax23) {
        addr_41867b_21:
        fun_411250(eax16);
        fun_411250(edi14);
        eax8 = 0;
        goto addr_41868f_13;
    } else {
        addr_418712_30:
        fun_411250(eax16);
        fun_411250(edi14);
        goto 0;
    }
    addr_4186ce_28:
    ebp24 = WideCharToMultiByte;
    eax25 = reinterpret_cast<void**>(ebp24(0, 0x220, edi14, eax19, 0, 0, 0, 0, 0, v17, eax16, eax15, edi14, eax19));
    if (eax25) 
        goto addr_418712_30;
    goto addr_41867b_21;
    addr_41864b_24:
    if (!eax16) 
        goto addr_418712_30;
    if (reinterpret_cast<signed char>(eax19) > reinterpret_cast<signed char>(eax16)) 
        goto addr_41867b_21;
    eax26 = reinterpret_cast<int32_t>(LCMapStringW(0, v17, eax16, eax15, esi12, eax16));
    if (eax26) 
        goto addr_418712_30; else 
        goto addr_41867b_21;
}

struct s224 {
    int32_t f0;
    unsigned char f4;
};

void** fun_416400() {
    void** esi1;
    uint32_t edi2;
    void* ebx3;
    struct s224** edx4;
    struct s224* ebp5;
    struct s224* eax6;
    void** eax7;
    void*** ebx8;
    void** tmp32_9;

    esi1 = reinterpret_cast<void**>(0xffffffff);
    edi2 = 0;
    ebx3 = reinterpret_cast<void*>(0);
    edx4 = reinterpret_cast<struct s224**>(0x454580);
    do {
        ebp5 = *edx4;
        if (!ebp5) 
            break;
        eax6 = reinterpret_cast<struct s224*>(reinterpret_cast<uint32_t>(ebp5) + 0x100);
        if (reinterpret_cast<uint32_t>(ebp5) >= reinterpret_cast<uint32_t>(eax6)) {
            addr_416445_4:
            if (!reinterpret_cast<int1_t>(esi1 == 0xffffffff)) 
                goto addr_4164b3_5; else 
                continue;
        } else {
            do {
                if (!(ebp5->f4 & 1)) 
                    break;
                ebp5 = reinterpret_cast<struct s224*>(reinterpret_cast<uint32_t>(ebp5) + 8);
            } while (reinterpret_cast<uint32_t>(ebp5) < reinterpret_cast<uint32_t>(eax6));
            goto addr_416433_9;
        }
        ebp5->f0 = -1;
        esi1 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(ebp5) - reinterpret_cast<uint32_t>(*edx4)) >> 3) + reinterpret_cast<uint32_t>(ebx3));
        goto addr_416445_4;
        addr_416433_9:
        goto addr_416445_4;
        ebx3 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx3) + 32);
        ++edx4;
        ++edi2;
    } while (reinterpret_cast<uint32_t>(edx4) < 0x454680);
    goto addr_416459_12;
    eax7 = fun_4111a0(0x100);
    if (eax7) {
        ebx8 = reinterpret_cast<void***>(edi2 * 4 + 0x454580);
        tmp32_9 = g454680 + 32;
        g454680 = tmp32_9;
        *ebx8 = eax7;
        if (reinterpret_cast<unsigned char>(eax7 + 0x100) > reinterpret_cast<unsigned char>(eax7)) {
            do {
                *reinterpret_cast<void***>(eax7 + 4) = reinterpret_cast<void**>(0);
                eax7 = eax7 + 8;
                *reinterpret_cast<void****>(eax7 + 0xfffffff8) = reinterpret_cast<void***>(0xffffffff);
                *reinterpret_cast<signed char*>(eax7 + 0xfffffffd) = 10;
            } while (reinterpret_cast<unsigned char>(*ebx8 + 0x100) > reinterpret_cast<unsigned char>(eax7));
        }
        esi1 = reinterpret_cast<void**>(edi2 << 5);
    }
    addr_4164b3_5:
    return esi1;
    addr_416459_12:
    return esi1;
}

int32_t fun_4164c0(void** a1, void* a2) {
    int1_t cf3;
    void*** edi4;
    uint32_t esi5;
    int1_t zf6;
    void* ebx7;

    cf3 = reinterpret_cast<unsigned char>(a1) < reinterpret_cast<unsigned char>(g454680);
    if (!cf3 || (edi4 = reinterpret_cast<void***>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a1) & 0xffffffe7) >> 3) + 0x454580), esi5 = (reinterpret_cast<unsigned char>(a1) & 31) * 8, !reinterpret_cast<int1_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(*edi4) + esi5) == 0xffffffff))) {
        g43aa58 = 9;
        g43aa5c = 0;
        return -1;
    }
    zf6 = g43aab4 == 1;
    if (!zf6) {
        addr_416537_4:
        ebx7 = a2;
    } else {
        if (!a1) {
            ebx7 = a2;
            SetStdHandle(0xf6, ebx7);
        } else {
            if (a1 == 1) {
                ebx7 = a2;
                SetStdHandle(0xf5, ebx7);
            } else {
                if (a1 == 2) {
                    ebx7 = a2;
                    SetStdHandle(0xf4, ebx7);
                } else {
                    goto addr_416537_4;
                }
            }
        }
    }
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(*edi4) + esi5) = ebx7;
    return 0;
}

void fun_41a340(void* ecx, void** a2) {
    int32_t v3;
    void* ecx4;
    uint32_t eax5;
    uint32_t eax6;
    int32_t* esp7;

    v3 = reinterpret_cast<int32_t>(__return_address());
    ecx4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 8);
    if (eax5 >= 0x1000) {
        do {
            ecx4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx4) - 0x1000);
            eax6 = eax6 - 0x1000;
        } while (eax6 >= 0x1000);
    }
    esp7 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx4) - eax6 - 4);
    *esp7 = v3;
    goto *esp7;
}

unsigned char fun_419790(uint32_t a1, uint32_t a2) {
    uint16_t cx3;
    uint32_t eax4;
    uint32_t eax5;
    uint32_t eax6;
    uint32_t eax7;
    uint32_t eax8;
    int32_t eax9;

    cx3 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&a2) + 2) & 0x7ff0);
    if (cx3 != 0x7ff0) {
        eax4 = 0;
        *reinterpret_cast<uint16_t*>(&eax4) = *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&a2) + 2);
        eax5 = eax4 & 0x8000;
        if (a2 & 0x7fffffff | a1) {
            if (cx3 || !(a2 & 0xfffff) && !a1) {
                eax6 = (eax5 - (eax5 + reinterpret_cast<uint1_t>(eax5 < eax5 + reinterpret_cast<uint1_t>(eax5 < 1))) & 0xf8) + 8;
                return *reinterpret_cast<unsigned char*>(&eax6);
            } else {
                eax7 = (eax5 - (eax5 + reinterpret_cast<uint1_t>(eax5 < eax5 + reinterpret_cast<uint1_t>(eax5 < 1))) & 0x70) + 16;
                return *reinterpret_cast<unsigned char*>(&eax7);
            }
        } else {
            eax8 = (eax5 - (eax5 + reinterpret_cast<uint1_t>(eax5 < eax5 + reinterpret_cast<uint1_t>(eax5 < 1))) & 32) + 32;
            return *reinterpret_cast<unsigned char*>(&eax8);
        }
    } else {
        eax9 = fun_419610(a1, a2);
        if (eax9 == 1) {
            return 0;
        } else {
            if (eax9 == 2) {
                return 4;
            } else {
                if (eax9 == 3) {
                    return 2;
                } else {
                    return 1;
                }
            }
        }
    }
}

uint32_t fun_417520(uint32_t a1, uint32_t a2, uint32_t a3) {
    uint32_t tmp32_4;
    uint32_t eax5;
    uint32_t eax6;
    uint32_t v7;
    uint32_t tmp32_8;
    uint32_t v9;
    uint32_t tmp32_10;
    uint32_t v11;
    uint32_t eax12;
    uint32_t eax13;
    uint32_t eax14;
    uint32_t v15;

    __asm__("fld tword [esp+0x10]");
    __asm__("fld tword [esp+0x4]");
    while (tmp32_4 = a2 + a2, tmp32_4 >= a2) {
        eax5 = a1 | a2;
        if (!eax5) 
            goto addr_4175c4_4;
        eax5 = a3 & 0x7fff;
        if (eax5) 
            goto addr_4175c4_4;
        __asm__("fnstcw word [esp+0x1c]");
        __asm__("fldcw word [esp+0x20]");
        eax6 = v7 & 0x7fff;
        if (!eax6) {
            tmp32_8 = v9 + v9;
            eax6 = tmp32_8;
            if (tmp32_8 < v9) 
                goto addr_417630_8;
        } else {
            if (eax6 == 0x7fff) 
                goto addr_417630_8;
            tmp32_10 = v11 + v11;
            eax6 = tmp32_10;
            if (tmp32_10 >= v11) 
                goto addr_417630_8;
        }
        __asm__("fxch st0, st1");
        __asm__("fstp st0");
        __asm__("fld st0");
        __asm__("fmul dword [0x43be58]");
        __asm__("fstp tword [esp+0x4]");
        __asm__("fld tword [esp+0x10]");
        __asm__("fxch st0, st1");
        __asm__("wait ");
        __asm__("fldcw word [esp+0x1c]");
    }
    eax12 = tmp32_4 ^ 0xe000000;
    if (!(eax12 & 0xe000000)) {
        eax13 = eax12 >> 28;
        if (*reinterpret_cast<signed char*>(eax13 + 0x43be40)) {
            eax5 = a3 & 0x7fff;
            if (eax5 && eax5 != 0x7fff) {
                __asm__("fnstcw word [esp+0x1c]");
                __asm__("fldcw word [esp+0x20]");
                eax14 = v15 & 0x7fff;
                if (eax14 == 1) {
                    __asm__("fmul dword [0x43be54]");
                    __asm__("fxch st0, st1");
                    __asm__("fmul dword [0x43be54]");
                    __asm__("fxch st0, st1");
                    __asm__("fldcw word [esp+0x1c]");
                    __asm__("fdivp st1, st0");
                    return eax14;
                } else {
                    __asm__("fmul dword [0x43be50]");
                    __asm__("fxch st0, st1");
                    __asm__("fmul dword [0x43be50]");
                    __asm__("fxch st0, st1");
                    __asm__("fldcw word [esp+0x1c]");
                    __asm__("fdivp st1, st0");
                    return eax14;
                }
            }
        } else {
            __asm__("fdivp st1, st0");
            return eax13;
        }
    } else {
        __asm__("fdivp st1, st0");
        return eax12;
    }
    addr_4175c4_4:
    __asm__("fdivp st1, st0");
    return eax5;
    addr_417630_8:
    __asm__("fldcw word [esp+0x1c]");
    __asm__("fdivp st1, st0");
    return eax6;
}

int32_t fun_419ef0(int16_t a1, int16_t a2) {
    int16_t v3;

    __asm__("wait ");
    __asm__("fnstcw word [esp+0x0]");
    __asm__("fldcw word [esp+0x2]");
    return static_cast<int32_t>(v3);
}

unsigned char fun_419eb0();

int32_t fun_419ed0();

int32_t RaiseException = 0x55824;

struct s225 {
    uint32_t f0;
    signed char[4] pad8;
    unsigned char f8;
    signed char[55] pad64;
    uint32_t f40;
    uint32_t f44;
};

void fun_419840(struct s129* a1, uint32_t* a2, uint32_t a3, uint32_t a4, struct s130* a5, struct s128* a6) {
    uint32_t ecx7;
    uint32_t* eax8;
    uint32_t eax9;
    uint32_t* ecx10;
    uint32_t eax11;
    uint32_t* edx12;
    uint32_t* edx13;
    uint32_t eax14;
    uint32_t eax15;
    uint32_t eax16;
    uint32_t* ecx17;
    unsigned char al18;
    uint32_t eax19;
    uint32_t eax20;
    unsigned char* eax21;
    struct s225* esi22;
    uint32_t eax23;
    int32_t edi24;

    a1->f4 = 0;
    a1->f8 = 0;
    a1->fc = 0;
    ecx7 = a3;
    if (*reinterpret_cast<unsigned char*>(&ecx7) & 16) {
        a1->f4 = a1->f4 | 1;
    }
    if (*reinterpret_cast<unsigned char*>(&ecx7) & 2) {
        a1->f4 = a1->f4 | 2;
    }
    if (*reinterpret_cast<unsigned char*>(&ecx7) & 1) {
        a1->f4 = a1->f4 | 4;
    }
    if (*reinterpret_cast<unsigned char*>(&ecx7) & 4) {
        a1->f4 = a1->f4 | 8;
    }
    if (*reinterpret_cast<unsigned char*>(&ecx7) & 8) {
        a1->f4 = a1->f4 | 16;
    }
    eax8 = &a1->f8;
    *eax8 = ((~*a2 & 1) << 4 ^ *eax8) & 16 ^ *eax8;
    eax9 = *a2 & 4;
    ecx10 = &a1->f8;
    *ecx10 = (-(eax9 - (eax9 + reinterpret_cast<uint1_t>(eax9 < eax9 + reinterpret_cast<uint1_t>(eax9 < 1)))) << 3 ^ *ecx10) & 8 ^ *ecx10;
    eax11 = *a2 & 8;
    edx12 = &a1->f8;
    *edx12 = (-(eax11 - (eax11 + reinterpret_cast<uint1_t>(eax11 < eax11 + reinterpret_cast<uint1_t>(eax11 < 1)))) << 2 ^ *edx12) & 4 ^ *edx12;
    edx13 = &a1->f8;
    eax14 = *a2 & 16;
    eax15 = -(eax14 - (eax14 + reinterpret_cast<uint1_t>(eax14 < eax14 + reinterpret_cast<uint1_t>(eax14 < 1))));
    *edx13 = (eax15 + eax15 ^ *edx13) & 2 ^ *edx13;
    eax16 = *a2 & 32;
    ecx17 = &a1->f8;
    *ecx17 = (-(eax16 - (eax16 + reinterpret_cast<uint1_t>(eax16 < eax16 + reinterpret_cast<uint1_t>(eax16 < 1)))) ^ *ecx17) & 1 ^ *ecx17;
    al18 = fun_419eb0();
    if (al18 & 1) {
        a1->fc = a1->fc | 16;
    }
    if (al18 & 4) {
        a1->fc = a1->fc | 8;
    }
    if (al18 & 8) {
        a1->fc = a1->fc | 4;
    }
    if (al18 & 16) {
        a1->fc = a1->fc | 2;
    }
    if (al18 & 32) {
        a1->fc = a1->fc | 1;
    }
    eax19 = *a2 & 0xc00;
    if (eax19 > 0x400) {
        if (eax19 == 0x800) {
            a1->f0 = a1->f0 & 0xfffffffe | 2;
        } else {
            if (eax19 == 0xc00) {
                a1->f0 = a1->f0 | 3;
            }
        }
    } else {
        if (eax19 == 0x400) {
            a1->f0 = a1->f0 & 0xfffffffd | 1;
        } else {
            if (!eax19) {
                a1->f0 = a1->f0 & 0xfffffffc;
            }
        }
    }
    eax20 = *a2 & 0x300;
    if (!eax20) {
        a1->f0 = a1->f0 & 0xffffffeb | 8;
    } else {
        if (eax20 == 0x200) {
            a1->f0 = a1->f0 & 0xffffffe7 | 4;
        } else {
            if (eax20 == 0x300) {
                a1->f0 = a1->f0 & 0xffffffe3;
            }
        }
    }
    a1->f0 = (a4 << 5 ^ a1->f0) & 0x1ffe0 ^ a1->f0;
    a1->f20 = a1->f20 | 1;
    a1->f20 = a1->f20 & 0xffffffe3 | 2;
    a1->f14 = a5->f4;
    a1->f10 = a5->f0;
    a1->f50 = a1->f50 | 1;
    a1->f50 = a1->f50 & 0xffffffe3 | 2;
    a1->f44 = a6->f4;
    a1->f40 = a6->f0;
    fun_419ed0();
    RaiseException();
    eax21 = &esi22->f8;
    if (*eax21 & 16) {
        *a2 = *a2 & 0xfffffffe;
    }
    if (*eax21 & 8) {
        *a2 = *a2 & 0xfffffffb;
    }
    if (*eax21 & 4) {
        *a2 = *a2 & 0xfffffff7;
    }
    if (*eax21 & 2) {
        *a2 = *a2 & 0xffffffef;
    }
    if (*eax21 & 1) {
        *a2 = *a2 & 0xffffffdf;
    }
    switch (esi22->f0 & 3) {
    case 0:
        *a2 = *a2 & 0xfffff3ff;
        break;
    case 1:
        *a2 = *a2 & 0xfffff7ff | 0x400;
        break;
    case 2:
        *a2 = *a2 & 0xfffffbff | 0x800;
        break;
    case 3:
        *a2 = *a2 | 0xc00;
    }
    eax23 = (esi22->f0 & 28) >> 2;
    if (!eax23) {
        *a2 = *a2 & 0xfffff3ff | 0x300;
    } else {
        if (eax23 == 1) {
            *a2 = *a2 & 0xfffff3ff | 0x200;
        } else {
            if (eax23 == 2) {
                *a2 = *a2 & 0xfffff3ff;
            }
        }
    }
    a6->f4 = esi22->f44;
    a6->f0 = esi22->f40;
    goto edi24;
}

void fun_41a240(struct s135* a1, uint32_t a2, int32_t a3) {
    void* esp4;
    uint16_t* esi5;
    uint32_t edi6;
    struct s135* ebx7;
    uint32_t eax8;
    uint32_t eax9;
    struct s136* edx10;

    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 12 - 4 - 4 - 4);
    esi5 = reinterpret_cast<uint16_t*>(0x43c080);
    edi6 = a2;
    if (edi6) {
        if (reinterpret_cast<int32_t>(edi6) < reinterpret_cast<int32_t>(0)) {
            edi6 = -edi6;
            esi5 = reinterpret_cast<uint16_t*>(0x43c1e0);
        }
        ebx7 = a1;
        if (!a3) {
            ebx7->f0 = 0;
        }
        if (edi6) {
            do {
                esi5 = esi5 + 42;
                eax8 = edi6;
                edi6 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edi6) >> 3);
                eax9 = eax8 & 7;
                if (eax9) {
                    edx10 = reinterpret_cast<struct s136*>(esi5 + (eax9 + eax9 * 2) * 2);
                    if (edx10->f0 >= 0x8000) {
                        edx10 = reinterpret_cast<struct s136*>(reinterpret_cast<int32_t>(esp4) + 12);
                    }
                    fun_419f90(ebx7, edx10);
                    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) - 4 - 4 - 4 + 4 + 8);
                }
            } while (edi6);
        }
    }
    return;
}

int32_t fun_4195d0(uint32_t a1, uint32_t a2, int32_t a3) {
    int32_t eax4;

    eax4 = a3;
    *reinterpret_cast<uint16_t*>(&eax4) = reinterpret_cast<uint16_t>(reinterpret_cast<uint16_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax4) + 0x3fe) << 4) | reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&a2) + 2) & 0x800f));
    __asm__("fld qword [esp+0x0]");
    return eax4;
}

unsigned char fun_419eb0() {
    int32_t eax1;
    int16_t fpu_status_word2;

    __asm__("wait ");
    eax1 = fpu_status_word2;
    return *reinterpret_cast<unsigned char*>(&eax1);
}

int32_t fun_419ed0() {
    int16_t fpu_status_word1;

    __asm__("fclex ");
    return static_cast<int32_t>(fpu_status_word1);
}

uint32_t fun_4114d0(void** a1, void** a2, int32_t a3);

void** fun_404490(void** a1) {
    void** eax2;
    void** eax3;

    eax2 = fun_411570(a1);
    fun_4114d0(a1, 0, 2);
    eax3 = fun_411570(a1);
    fun_4114d0(a1, eax2, 0);
    return eax3;
}

struct s226 {
    signed char[4] pad4;
    void** f4;
};

int32_t fun_401c20(void** a1, int32_t* a2) {
    void*** esi3;
    void* ecx4;
    uint32_t eax5;
    uint32_t edx6;
    uint32_t edi7;
    void** eax8;
    void* ecx9;
    int32_t* edx10;
    int32_t eax11;
    void** ebx12;
    void* esi13;
    int32_t eax14;
    void** ebx15;
    void* esi16;
    int32_t eax17;
    void** ebx18;
    struct s226* esi19;
    int32_t eax20;
    void** ebx21;
    int32_t eax22;
    void** ebx23;
    int32_t eax24;
    void** ebx25;
    int16_t eax26;
    void** ebx27;

    esi3 = reinterpret_cast<void***>(a1 + 8);
    __asm__("cdq ");
    ecx4 = g452a10;
    eax5 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 4)) + (edx6 & 15)) >> 4);
    edi7 = eax5;
    eax8 = fun_403630(ecx4, eax5 * 8 - edi7 << 2);
    g43c41c = eax8;
    if (eax8) {
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edi7) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(edi7 == 0))) {
            ecx9 = reinterpret_cast<void*>(0);
            edx10 = a2;
            do {
                eax11 = 0;
                ebx12 = g43c41c;
                *reinterpret_cast<void***>(&eax11) = *esi3;
                esi13 = reinterpret_cast<void*>(esi3 + 2 + 2);
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx12) + reinterpret_cast<uint32_t>(ecx9)) = eax11;
                eax14 = 0;
                ebx15 = g43c41c;
                *reinterpret_cast<int16_t*>(&eax14) = *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esi13) + 0xfffffffe);
                esi16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi13) + 2 + 2);
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx15) + reinterpret_cast<uint32_t>(ecx9) + 4) = eax14;
                eax17 = 0;
                ebx18 = g43c41c;
                *reinterpret_cast<int16_t*>(&eax17) = *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esi16) + 0xfffffffc);
                esi19 = reinterpret_cast<struct s226*>(reinterpret_cast<uint32_t>(esi16) + 2 + 2);
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx18) + reinterpret_cast<uint32_t>(ecx9) + 8) = eax17;
                eax20 = 0;
                ebx21 = g43c41c;
                *reinterpret_cast<int16_t*>(&eax20) = *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esi19) + 0xfffffffa);
                esi3 = &esi19->f4;
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx21) + reinterpret_cast<uint32_t>(ecx9) + 12) = eax20;
                eax22 = 0;
                *reinterpret_cast<int16_t*>(&eax22) = *reinterpret_cast<int16_t*>(esi3 + 0xfffffff8);
                ebx23 = g43c41c;
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx23) + reinterpret_cast<uint32_t>(ecx9) + 16) = eax22;
                eax24 = 0;
                *reinterpret_cast<int16_t*>(&eax24) = *reinterpret_cast<int16_t*>(esi3 + 0xfffffffa);
                ebx25 = g43c41c;
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx25) + reinterpret_cast<uint32_t>(ecx9) + 20) = eax24;
                eax26 = *reinterpret_cast<int16_t*>(esi3 + 0xfffffffc);
                if (eax26 > reinterpret_cast<int16_t>(30) || eax26 < reinterpret_cast<int16_t>(0)) {
                    eax26 = reinterpret_cast<int16_t>(0);
                }
                ebx27 = g43c41c;
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx27) + reinterpret_cast<uint32_t>(ecx9) + 24) = edx10[eax26];
                ecx9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx9) + 28);
                --edi7;
            } while (edi7);
        }
        return 0;
    } else {
        return -1;
    }
}

/* (image base) */
int32_t image_base_ = 0x415890;

struct s227 {
    signed char f0;
    signed char f1;
};

void fun_411b10(struct s227* a1);

/* (image base) */
int32_t image_base_ = 0x415890;

struct s228 {
    int32_t f0;
    int32_t f4;
};

int32_t fun_411b90(int32_t a1, struct s228* a2, signed char* a3);

/* (image base) */
int32_t image_base_ = 0x415890;

struct s229 {
    signed char f0;
    signed char f1;
};

void fun_411aa0(struct s229* a1);

/* (image base) */
int32_t image_base_ = 0x415890;

int32_t fun_411b70(int32_t a1);

/* (image base) */
int32_t image_base_ = 0x415890;

struct s105* fun_411f30(struct s106* a1, struct s105* a2, int32_t a3, void* a4, int32_t a5);

/* (image base) */
int32_t image_base_ = 0x415890;

void fun_410e50() {
    image_base_ = reinterpret_cast<int32_t>(fun_411b10);
    image_base_ = reinterpret_cast<int32_t>(fun_411b90);
    image_base_ = reinterpret_cast<int32_t>(fun_411aa0);
    image_base_ = reinterpret_cast<int32_t>(fun_411b70);
    image_base_ = reinterpret_cast<int32_t>(fun_411f30);
    image_base_ = reinterpret_cast<int32_t>(fun_411f30);
    return;
}

int32_t GetModuleHandleA = 0x5557a;

int32_t fun_411a70() {
    int32_t eax1;
    int32_t eax2;
    int16_t ax3;
    int16_t fpu_status_word4;

    eax1 = reinterpret_cast<int32_t>(GetModuleHandleA());
    if (eax1 && (eax2 = reinterpret_cast<int32_t>(GetProcAddress(eax1, "IsProcessorFeaturePresent")), !!eax2)) {
        eax2();
        goto 0;
    }
    __asm__("fld qword [esp+0x0]");
    __asm__("fdiv qword [esp+0x8]");
    __asm__("fmul qword [esp+0x8]");
    __asm__("fsubr qword [esp+0x0]");
    __asm__("fstp qword [esp+0x10]");
    __asm__("fld1 ");
    __asm__("fcomp qword [esp+0x10]");
    ax3 = fpu_status_word4;
    if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax3) + 1) & 1)) 
        goto addr_411a69_5;
    addr_411a6b_6:
    goto "KERNEL32";
    addr_411a69_5:
    goto addr_411a6b_6;
}

uint32_t fun_415730(uint32_t a1, uint32_t a2);

uint32_t fun_411a00() {
    uint32_t eax1;

    eax1 = fun_415730(0x10000, 0x30000);
    return eax1;
}

void** fun_413fe0();

void** fun_411480(void* a1, struct s0* a2, int32_t a3) {
    void** eax4;
    void** eax5;

    eax4 = fun_413fe0();
    if (eax4) {
        eax5 = fun_413dd0(a1, a2, a3, eax4);
        return eax5;
    } else {
        return 0;
    }
}

int32_t fun_404c30() {
    fun_4117a0("\nLisa 2 Development System, %s\n", "Compilation 0.91.0");
    fun_4117a0("Copyright (c) UDS, 1995-1996\n\n", __return_address());
    return 0;
}

int32_t fun_403570() {
    int32_t* edi1;
    int32_t ecx2;

    edi1 = reinterpret_cast<int32_t*>(0x4530d0);
    ecx2 = 0x100;
    while (ecx2) {
        --ecx2;
        *edi1 = 0;
        ++edi1;
    }
    fun_4035a0("DEFAULT");
    return 1;
}

int32_t g43d5c8;

void fun_4046e0() {
    g43cd64 = 0;
    g43d5c8 = 0;
    return;
}

void*** g4449e8;

void*** g4449ec;

void*** g4449f0;

void*** g4449f4;

void*** g444b80;

void*** g444b84;

void*** g444b88;

void*** g444b8c;

void*** g4450a0;

void*** g4450a4;

void*** g4450a8;

void*** g4450ac;

void*** g445048;

void*** g44504c;

void*** g445050;

void*** g445054;

void*** g444b18;

void*** g444b1c;

void*** g444b20;

void*** g444b24;

void*** g444970;

void*** g444974;

void*** g444978;

void*** g44497c;

void*** g445088;

void*** g44508c;

void*** g445090;

void*** g445094;

void*** g44506c;

void fun_406460();

void fun_4065f0();

void fun_4066d0();

void fun_4069d0();

void fun_406630();

void fun_406520();

void fun_406590();

struct s230 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    void** fc;
};

void fun_406f70(struct s230* a1);

int32_t g43f7c8;

int32_t g43f7d4;

void** g43f7e4;

void** g43f7cc;

signed char g43f7e8;

int32_t g43f7e0;

int32_t g43f7dc;

int32_t g43f7d8;

void** g43f7e9;

void fun_406310() {
    void*** eax1;
    void*** eax2;
    void*** eax3;
    void*** ecx4;
    void*** eax5;
    void*** eax6;
    void*** eax7;
    void*** ecx8;
    void*** eax9;
    void*** eax10;
    void*** eax11;
    void*** ecx12;
    void*** eax13;
    void*** eax14;
    void*** eax15;
    void*** ecx16;
    void*** eax17;
    void*** eax18;
    void*** eax19;
    void*** ecx20;
    void*** eax21;
    void*** eax22;
    void*** eax23;
    void*** ecx24;
    void*** eax25;
    void*** eax26;
    void*** eax27;
    void*** ecx28;
    void** eax29;

    g4449e8 = reinterpret_cast<void***>(0);
    g4449ec = reinterpret_cast<void***>(0);
    g4449f0 = reinterpret_cast<void***>(0);
    g4449f4 = reinterpret_cast<void***>(0);
    eax1 = g4449e8;
    g444b80 = eax1;
    eax2 = g4449ec;
    g444b84 = eax2;
    eax3 = g4449f0;
    ecx4 = g4449f4;
    g444b88 = eax3;
    g444b8c = ecx4;
    eax5 = g4449e8;
    g4450a0 = eax5;
    eax6 = g4449ec;
    g4450a4 = eax6;
    eax7 = g4449f0;
    ecx8 = g4449f4;
    g4450a8 = eax7;
    g4450ac = ecx8;
    eax9 = g4449e8;
    g445048 = eax9;
    eax10 = g4449ec;
    g44504c = eax10;
    eax11 = g4449f0;
    ecx12 = g4449f4;
    g445050 = eax11;
    g445054 = ecx12;
    eax13 = g4449e8;
    g444b18 = eax13;
    eax14 = g4449ec;
    g444b1c = eax14;
    eax15 = g4449f0;
    ecx16 = g4449f4;
    g444b20 = eax15;
    g444b24 = ecx16;
    eax17 = g4449e8;
    g444970 = eax17;
    eax18 = g4449ec;
    g444974 = eax18;
    eax19 = g4449f0;
    ecx20 = g4449f4;
    g444978 = eax19;
    g44497c = ecx20;
    eax21 = g4449e8;
    g445088 = eax21;
    eax22 = g4449ec;
    g44508c = eax22;
    eax23 = g4449f0;
    ecx24 = g4449f4;
    g445090 = eax23;
    eax25 = g4449e8;
    g445094 = ecx24;
    g445068 = eax25;
    eax26 = g4449ec;
    g44506c = eax26;
    eax27 = g4449f0;
    ecx28 = g4449f4;
    g445070 = eax27;
    g445074 = ecx28;
    fun_406460();
    fun_4065f0();
    fun_4066d0();
    fun_4069d0();
    fun_406630();
    fun_406520();
    fun_406590();
    fun_406f70(0x445058);
    g43f7c8 = reinterpret_cast<int32_t>("default");
    g43f7d4 = 0x3f800000;
    g43f7e4 = reinterpret_cast<void**>(0);
    g43f7cc = reinterpret_cast<void**>(0);
    g43f7e8 = 0;
    g43f7e0 = 0x3ecccccd;
    g43f7dc = 0x3f000000;
    g43f7d8 = 0x3dcccccd;
    eax29 = fun_406470(16);
    g43f7e9 = eax29;
    *reinterpret_cast<void***>(eax29) = reinterpret_cast<void**>(12);
    *reinterpret_cast<void***>(eax29 + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(eax29 + 8) = reinterpret_cast<void**>(0xfff);
    *reinterpret_cast<void***>(eax29 + 12) = reinterpret_cast<void**>(0);
    g4450a0 = reinterpret_cast<void***>(1);
    return;
}

int32_t fun_4045e0(int32_t a1) {
    if (a1) {
        return 2;
    } else {
        fun_405220();
        fun_404c60();
        return 1;
    }
}

signed char g43cdd0;

signed char g43cfd8;

signed char g43d0d8;

signed char g43ced8;

int32_t g43d248;

void fun_404910() {
    int32_t eax1;
    int32_t* edx2;
    int32_t esi3;
    int32_t ecx4;
    int32_t tmp32_5;
    int32_t tmp32_6;
    int32_t ecx7;
    struct s13** edx8;
    struct s13* eax9;
    int32_t eax10;
    int32_t esi11;
    uint32_t v12;
    int1_t zf13;
    int1_t zf14;
    uint32_t v15;
    int32_t eax16;
    struct s13** eax17;
    struct s13* ebx18;
    int32_t eax19;
    int32_t v20;
    int32_t v21;

    eax1 = 0;
    edx2 = reinterpret_cast<int32_t*>(0x43d1c8);
    do {
        if (*reinterpret_cast<signed char*>(eax1 + 0x43cdb0) == 1 && (esi3 = g43ceb4, ecx4 = *edx2 - g43d1b8, tmp32_5 = esi3 + g43d1c4, tmp32_6 = ecx4 + g41c7b0, *edx2 = tmp32_6, tmp32_5 <= tmp32_6)) {
            ecx7 = tmp32_6 - g43d1c4;
            *reinterpret_cast<signed char*>(eax1 + 0x43ceb8) = 1;
            *edx2 = ecx7;
        }
        ++edx2;
        ++eax1;
    } while (reinterpret_cast<uint32_t>(edx2) < 0x43d5c8);
    edx8 = g43d1bc;
    eax9 = *edx8;
    eax10 = reinterpret_cast<int32_t>(eax9->f28());
    if (eax10 != 0x8007001e) {
        if ((!eax10 || eax10 == 1) && (esi11 = 0, !1)) {
            do {
                if (!(v12 & 0x80)) {
                    g43cdd0 = 0;
                    g43cfd8 = 0;
                    g43d0d8 = 0;
                    g43ced8 = 0;
                    g43d248 = 0;
                    fun_404aa0(0, 32);
                } else {
                    g43cdd0 = 1;
                    zf13 = g43d0d8 == 0;
                    if (zf13) {
                        g43cfd8 = 1;
                        g43d0d8 = 1;
                    }
                    zf14 = g43d248 == 0;
                    if (zf14) {
                        g43ced8 = 1;
                    }
                    fun_404aa0(1, 32);
                    fun_404ac0(1, v15 & 0xff);
                }
                ++esi11;
            } while (esi11 < 0);
        }
        eax16 = g41c7b0;
        g43d1b8 = eax16;
    } else {
        g43d1c0 = 0;
        eax17 = g43d1bc;
        ebx18 = *eax17;
        eax19 = reinterpret_cast<int32_t>(ebx18->f1c());
        if (eax19 >= 0) {
            g43d1c0 = 1;
            goto v20;
        }
    }
    goto v21;
}

int32_t fun_413d20(void** a1, void* a2, void** a3, int32_t a4) {
    void** eax5;
    int32_t edi6;
    void* eax7;
    void* tmp32_8;
    uint1_t cf9;
    void* edx10;
    void** eax11;
    void** edx12;
    void* eax13;

    eax5 = *reinterpret_cast<void***>(a1 + 12);
    if (!(*reinterpret_cast<unsigned char*>(&eax5) & 0x83) || (edi6 = a4, !!edi6) && (edi6 != 1 && edi6 != 2)) {
        g43aa58 = 22;
        return -1;
    } else {
        *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax5) & 0xffffffef);
        if (edi6 == 1) {
            eax7 = fun_416800(a1);
            tmp32_8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a2) + reinterpret_cast<uint32_t>(eax7));
            cf9 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_8) < reinterpret_cast<uint32_t>(a2));
            a2 = tmp32_8;
            a3 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a3) + reinterpret_cast<uint32_t>(edx10) + cf9);
            edi6 = 0;
        }
        fun_4138b0(a1);
        eax11 = *reinterpret_cast<void***>(a1 + 12);
        if (!(*reinterpret_cast<unsigned char*>(&eax11) & 0x80)) {
            if (*reinterpret_cast<unsigned char*>(&eax11) & 1 && (*reinterpret_cast<unsigned char*>(&eax11) & 8 && !(*reinterpret_cast<unsigned char*>(&eax11 + 1) & 4))) {
                *reinterpret_cast<void***>(a1 + 24) = reinterpret_cast<void**>(0x200);
            }
        } else {
            *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax11) & 0xfffffffc);
        }
        edx12 = *reinterpret_cast<void***>(a1 + 16);
        eax13 = fun_416710(edx12, a2, a3, edi6);
        if (!reinterpret_cast<int1_t>(edx12 == 0xffffffff) || !reinterpret_cast<int1_t>(eax13 == 0xffffffff)) {
            return 0;
        } else {
            return -1;
        }
    }
}

int32_t fun_4145e0(struct s146* a1) {
    void** v2;
    uint32_t eax3;
    int32_t eax4;
    void*** edi5;
    void** eax6;
    void** eax7;

    v2 = a1->f10;
    eax3 = fun_416e00(v2);
    if (eax3) {
        if (!reinterpret_cast<int1_t>(a1 == 0x43b808)) {
            if (!reinterpret_cast<int1_t>(a1 == 0x43b828)) {
                return 0;
            } else {
                eax4 = 1;
            }
        } else {
            eax4 = 0;
        }
        ++g43ba68;
        if (!(a1->fc & 0x10c)) {
            edi5 = reinterpret_cast<void***>(eax4 * 4 + 0x43b7e0);
            if (*edi5 || (eax6 = fun_4111a0(0x1000), *edi5 = eax6, !!eax6)) {
                eax7 = *edi5;
                a1->f8 = eax7;
                a1->f0 = eax7;
                a1->f18 = 0x1000;
                a1->f4 = 0x1000;
                a1->fc = a1->fc | 0x1102;
                return 1;
            } else {
                return 0;
            }
        } else {
            return 0;
        }
    } else {
        return 0;
    }
}

struct s231 {
    signed char f0;
    signed char f1;
};

void fun_415090(int32_t ecx);

void fun_4150b8();

void fun_41512c(uint32_t ecx);

/* (image base) */
void** image_base_ = reinterpret_cast<void**>(48);

/* (image base) */
void** image_base_ = reinterpret_cast<void**>(32);

int32_t fun_4147c0(void** a1, struct s145* a2, void* a3) {
    int32_t v4;
    struct s231* v5;
    signed char bl6;
    void* esp7;
    int32_t v8;
    void* esi9;
    void* v10;
    void** ebp11;
    void** v12;
    void** edi13;
    void** v14;
    uint32_t eax15;
    uint32_t eax16;
    int32_t ecx17;
    int32_t eax18;
    int16_t* ecx19;
    void* v20;
    void** edx21;
    int32_t v22;
    int32_t v23;
    void** v24;
    void** v25;
    uint32_t ecx26;
    int32_t eax27;
    void** eax28;
    void** eax29;
    uint32_t ecx30;
    struct s231* eax31;
    int32_t eax32;
    uint32_t ecx33;
    int32_t eax34;
    int32_t** esp35;
    int32_t* v36;
    void** eax37;
    signed char v38;
    int32_t* eax39;
    int32_t** esp40;
    int32_t* v41;
    void** eax42;
    void** v43;
    int32_t* esp44;
    void** eax45;
    uint32_t edi46;
    int32_t ecx47;
    void* eax48;
    signed char v49;
    void** ebx50;
    void** eax51;
    void** eax52;
    void** edi53;
    void** ebx54;
    void** eax55;
    void** eax56;
    void** edi57;
    void** ebx58;
    void** eax59;
    void** eax60;
    void** ecx61;
    void** eax62;
    int32_t ecx63;
    void** edi64;
    void* eax65;
    void** v66;
    void** eax67;
    void** v68;
    int32_t** esp69;
    void** ebx70;
    void** v71;
    void** eax72;
    void** v73;
    void** eax74;
    void*** esp75;
    void** ecx76;
    int32_t** esp77;
    int32_t* v78;
    void** eax79;
    void** eax80;
    void** v81;
    void** v82;
    int32_t** esp83;
    int32_t* v84;
    void** eax85;
    void** eax86;
    void** eax87;
    void** v88;
    void** v89;
    void* v90;
    void** eax91;
    void** edi92;
    uint32_t eax93;
    void** eax94;

    v4 = reinterpret_cast<int32_t>(__return_address());
    v5 = reinterpret_cast<struct s231*>(&a2->f1);
    bl6 = a2->f0;
    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x248 - 4 - 4 - 4 - 4);
    v8 = 0;
    if (bl6) {
        esi9 = v10;
        ebp11 = v12;
        edi13 = v14;
        while (!0) {
            if (bl6 < 32 || bl6 > 0x78) {
                eax15 = 0;
            } else {
                eax16 = 0;
                *reinterpret_cast<signed char*>(&eax16) = *reinterpret_cast<signed char*>(bl6 + reinterpret_cast<int32_t>("known>"));
                eax15 = eax16 & 15;
            }
            ecx17 = *reinterpret_cast<signed char*>(v8 + eax15 * 8 + 0x41b638) >> 4;
            v8 = ecx17;
            switch (ecx17) {
                addr_414993_9:
            case 0:
                eax18 = 0;
                ecx19 = image_base_;
                *reinterpret_cast<signed char*>(&eax18) = bl6;
                v20 = reinterpret_cast<void*>(0);
                if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx19 + eax18) + 1) & 0x80) {
                    fun_415170(static_cast<int32_t>(bl6), a1, reinterpret_cast<int32_t>(esp7) + 36);
                    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 - 4 - 4 + 4 + 12);
                    bl6 = v5->f0;
                    v5 = reinterpret_cast<struct s231*>(&v5->f1);
                }
                edx21 = reinterpret_cast<void**>(static_cast<int32_t>(bl6));
                fun_415170(edx21, a1, reinterpret_cast<int32_t>(esp7) + 36);
                esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 - 4 - 4 + 4 + 12);
                goto addr_4149ee_12;
            case 1:
                v22 = 0;
                esi9 = reinterpret_cast<void*>(0);
                ebp11 = reinterpret_cast<void**>(0xffffffff);
                v23 = 0;
                v24 = reinterpret_cast<void**>(0);
                v25 = reinterpret_cast<void**>(0);
                v20 = reinterpret_cast<void*>(0);
                goto addr_4149ee_12;
            case 2:
                ecx26 = bl6 - 32;
                if (ecx26 <= 16) {
                    eax27 = 0;
                    *reinterpret_cast<signed char*>(&eax27) = *reinterpret_cast<signed char*>(ecx26 + reinterpret_cast<int32_t>(fun_415090));
                    switch (eax27) {
                    case 0:
                        esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 2);
                        break;
                    case 1:
                        esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 0x80);
                        break;
                    case 2:
                        esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 1);
                        break;
                    case 3:
                        esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 4);
                        break;
                    case 4:
                        esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 8);
                    case 5:
                        goto 0x4149ee;
                    }
                    goto addr_4149ee_12;
                }
            case 3:
                if (bl6 != 42) {
                    edx21 = v24 + reinterpret_cast<unsigned char>(v24) * 4;
                    v24 = reinterpret_cast<void**>(bl6 + reinterpret_cast<unsigned char>(edx21) * 2 + 0xffffffd0);
                    goto addr_4149ee_12;
                } else {
                    eax28 = fun_415240(reinterpret_cast<int32_t>(esp7) + 0x264);
                    v24 = eax28;
                    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 + 4 + 4);
                    if (reinterpret_cast<signed char>(eax28) < reinterpret_cast<signed char>(0)) {
                        esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 4);
                        v24 = reinterpret_cast<void**>(-reinterpret_cast<unsigned char>(eax28));
                        goto addr_4149ee_12;
                    }
                }
            case 4:
                ebp11 = reinterpret_cast<void**>(0);
                goto addr_4149ee_12;
            case 5:
                if (bl6 != 42) {
                    ebp11 = reinterpret_cast<void**>(bl6 + reinterpret_cast<uint32_t>(ebp11 + reinterpret_cast<unsigned char>(ebp11) * 4) * 2 + 0xffffffd0);
                    goto addr_4149ee_12;
                } else {
                    eax29 = fun_415240(reinterpret_cast<int32_t>(esp7) + 0x264);
                    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 + 4 + 4);
                    ebp11 = eax29;
                    if (reinterpret_cast<signed char>(ebp11) < reinterpret_cast<signed char>(0)) {
                        ebp11 = reinterpret_cast<void**>(0xffffffff);
                        goto addr_4149ee_12;
                    }
                }
            case 6:
                ecx30 = bl6 - 73;
                if (ecx30 > 46) {
                    addr_4149ee_12:
                    eax31 = v5;
                    v5 = reinterpret_cast<struct s231*>(&v5->f1);
                    bl6 = eax31->f0;
                    if (bl6) 
                        break; else 
                        goto addr_414a06_31;
                } else {
                    eax32 = 0;
                    *reinterpret_cast<signed char*>(&eax32) = *reinterpret_cast<signed char*>(ecx30 + reinterpret_cast<int32_t>(fun_4150b8));
                    switch (eax32) {
                    case 0:
                        if (v5->f0 != 54 || v5->f1 != 52) {
                            v8 = 0;
                            goto addr_414993_9;
                        } else {
                            ++v5;
                            esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 0x8000);
                            break;
                        }
                    case 1:
                        esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 32);
                        break;
                    case 2:
                        esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 16);
                        break;
                    case 3:
                        esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 0x800);
                    case 4:
                        goto 0x4149ee;
                    }
                    goto addr_4149ee_12;
                }
            case 7:
                ecx33 = bl6 - 67;
                if (ecx33 > 53) {
                    addr_414ef3_40:
                    if (v23) 
                        goto addr_4149ee_12;
                } else {
                    eax34 = 0;
                    *reinterpret_cast<signed char*>(&eax34) = *reinterpret_cast<signed char*>(ecx33 + reinterpret_cast<int32_t>(fun_41512c));
                    switch (eax34) {
                    case 0:
                        if (!(reinterpret_cast<uint32_t>(esi9) & 0x830)) {
                            esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 0x800);
                        }
                    case 6:
                        esp35 = reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(esp7) - 4);
                        v36 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp7) + 0x264);
                        if (!(reinterpret_cast<uint32_t>(esi9) & 0x810)) {
                            edi13 = reinterpret_cast<void**>(1);
                            eax37 = fun_415240(v36);
                            v38 = *reinterpret_cast<signed char*>(&eax37);
                            esp7 = reinterpret_cast<void*>(esp35 - 1 + 1 + 1);
                        } else {
                            eax39 = fun_415270(v36);
                            esp40 = esp35 - 1 + 1 + 1 - 1;
                            v41 = eax39;
                            eax42 = fun_416eb0(esp40 + 23, *reinterpret_cast<uint16_t*>(&v41));
                            esp7 = reinterpret_cast<void*>(esp40 - 1 - 1 + 1 + 2);
                            edi13 = eax42;
                            if (reinterpret_cast<signed char>(edi13) < reinterpret_cast<signed char>(0)) {
                                v23 = 1;
                            }
                        }
                        v43 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp7) + 88);
                        break;
                    case 1:
                    case 2:
                        v22 = 1;
                        bl6 = reinterpret_cast<signed char>(bl6 + 32);
                    case 8:
                        esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 64);
                        v43 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp7) + 88);
                        if (reinterpret_cast<signed char>(ebp11) >= reinterpret_cast<signed char>(0)) {
                            if (!ebp11 && bl6 == 0x67) {
                                ebp11 = reinterpret_cast<void**>(1);
                            }
                        } else {
                            ebp11 = reinterpret_cast<void**>(6);
                        }
                        edx21 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp7) + 88);
                        esp44 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 - 4);
                        eax45 = reinterpret_cast<void**>(image_base_(esp44 + 23, edx21, static_cast<int32_t>(bl6), ebp11, v22));
                        esp7 = reinterpret_cast<void*>(esp44 - 1 - 1 - 1 + 1 + 5);
                        edi46 = reinterpret_cast<uint32_t>(esi9) & 0x80;
                        if (edi46 && !ebp11) {
                            eax45 = reinterpret_cast<void**>(image_base_(reinterpret_cast<int32_t>(esp7) + 88));
                            esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 + 4 + 4);
                        }
                        if (bl6 == 0x67 && !edi46) {
                            eax45 = reinterpret_cast<void**>(image_base_(reinterpret_cast<int32_t>(esp7) + 88));
                            esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 + 4 + 4);
                        }
                        if (v38 == 45) {
                            esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 0x100);
                            eax45 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp7) + 89);
                            v43 = eax45;
                        }
                        ecx47 = -1;
                        eax48 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45) - reinterpret_cast<unsigned char>(eax45));
                        do {
                            if (!ecx47) 
                                break;
                            --ecx47;
                            esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) + 1);
                        } while (v49 != *reinterpret_cast<signed char*>(&eax48));
                        edi13 = reinterpret_cast<void**>(~ecx47 + 0xffffffff);
                        break;
                    case 3:
                        if (!(reinterpret_cast<uint32_t>(esi9) & 0x830)) {
                            esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 0x800);
                        }
                    case 13:
                        ebx50 = reinterpret_cast<void**>(0x7fffffff);
                        if (ebp11 != 0xffffffff) {
                            ebx50 = ebp11;
                        }
                        eax51 = fun_415240(reinterpret_cast<int32_t>(esp7) + 0x264);
                        v43 = eax51;
                        esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 + 4 + 4);
                        if (!(reinterpret_cast<uint32_t>(esi9) & 0x810)) {
                            if (!v43) {
                                eax52 = image_base_;
                                v43 = eax52;
                            }
                            edi53 = v43;
                            ebx54 = ebx50 - 1;
                            if (ebx50) {
                                do {
                                    if (!*reinterpret_cast<void***>(edi53)) 
                                        break;
                                    ++edi53;
                                    eax55 = ebx54;
                                    --ebx54;
                                } while (eax55);
                            }
                            edi13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi53) - reinterpret_cast<unsigned char>(v43));
                            break;
                        } else {
                            if (!eax51) {
                                eax56 = image_base_;
                                v43 = eax56;
                            }
                            edi57 = v43;
                            v20 = reinterpret_cast<void*>(1);
                            ebx58 = ebx50 - 1;
                            if (ebx50) {
                                do {
                                    if (!*reinterpret_cast<void***>(edi57)) 
                                        break;
                                    edi57 = edi57 + 2;
                                    eax59 = ebx58;
                                    --ebx58;
                                } while (eax59);
                            }
                            edi13 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(edi57) - reinterpret_cast<unsigned char>(v43)) >> 1);
                            break;
                        }
                        addr_414bf8_81:
                    case 4:
                        goto addr_414c00_82;
                    case 5:
                        eax60 = fun_415240(reinterpret_cast<int32_t>(esp7) + 0x264);
                        esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 + 4 + 4);
                        if (!eax60 || (ecx61 = *reinterpret_cast<void***>(eax60 + 4), ecx61 == 0)) {
                            eax62 = image_base_;
                            ecx63 = -1;
                            edi64 = eax62;
                            v43 = eax62;
                            eax65 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax62) - reinterpret_cast<unsigned char>(eax62));
                            do {
                                if (!ecx63) 
                                    break;
                                --ecx63;
                                ++edi64;
                                esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) + 1);
                            } while (*reinterpret_cast<void***>(edi64) != *reinterpret_cast<void***>(&eax65));
                            edi13 = reinterpret_cast<void**>(~ecx63 + 0xffffffff);
                            break;
                        } else {
                            if (!(reinterpret_cast<uint32_t>(esi9) & 0x800)) {
                                v20 = reinterpret_cast<void*>(0);
                                edi13 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax60))));
                                v43 = ecx61;
                                break;
                            } else {
                                v20 = reinterpret_cast<void*>(1);
                                edi13 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax60)))) >> 1);
                                v43 = ecx61;
                                break;
                            }
                        }
                    case 7:
                    case 9:
                        v66 = reinterpret_cast<void**>(10);
                        esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 64);
                        goto addr_414c27_92;
                    case 10:
                        eax67 = fun_415240(reinterpret_cast<int32_t>(esp7) + 0x264);
                        esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 + 4 + 4);
                        if (!(reinterpret_cast<uint32_t>(esi9) & 32)) {
                            *reinterpret_cast<void***>(eax67) = reinterpret_cast<void**>(0);
                        } else {
                            *reinterpret_cast<void***>(eax67) = reinterpret_cast<void**>(0);
                        }
                        v23 = 1;
                        break;
                    case 11:
                        v66 = reinterpret_cast<void**>(8);
                        if (reinterpret_cast<uint32_t>(esi9) & 0x80) {
                            esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 0x200);
                            goto addr_414c27_92;
                        }
                    case 12:
                        ebp11 = reinterpret_cast<void**>(8);
                        goto addr_414bf8_81;
                    case 14:
                        v66 = reinterpret_cast<void**>(10);
                        goto addr_414c27_92;
                    case 15:
                        goto addr_414c00_82;
                    case 16:
                        goto 0x414ef3;
                    }
                    goto addr_414ef3_40;
                }
                if (!(reinterpret_cast<uint32_t>(esi9) & 64)) 
                    goto addr_414f39_103;
                if (!(reinterpret_cast<uint32_t>(esi9) & 0x100)) {
                    if (!(reinterpret_cast<uint32_t>(esi9) & 1)) {
                        if (!(reinterpret_cast<uint32_t>(esi9) & 2)) {
                            addr_414f39_103:
                            v68 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v24) - reinterpret_cast<unsigned char>(edi13) - reinterpret_cast<unsigned char>(v25));
                            if (!(reinterpret_cast<uint32_t>(esi9) & 12)) {
                                fun_4151c0(32, v68, a1, reinterpret_cast<int32_t>(esp7) + 36);
                                esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
                            }
                        } else {
                            goto addr_414f31_109;
                        }
                    } else {
                        goto addr_414f31_109;
                    }
                } else {
                    goto addr_414f31_109;
                }
                edx21 = v25;
                esp69 = reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(esp7) - 4);
                fun_415200(reinterpret_cast<int32_t>(esp69) + 22, edx21, a1, reinterpret_cast<int32_t>(esp7) + 36);
                esp7 = reinterpret_cast<void*>(esp69 - 1 - 1 - 1 - 1 + 1 + 4);
                if (reinterpret_cast<uint32_t>(esi9) & 8 && !(reinterpret_cast<uint32_t>(esi9) & 4)) {
                    edx21 = v68;
                    fun_4151c0(48, edx21, a1, reinterpret_cast<int32_t>(esp7) + 36);
                    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
                }
                if (!v20 || reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edi13) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(edi13 == 0)) {
                    edx21 = v43;
                    fun_415200(edx21, edi13, a1, reinterpret_cast<int32_t>(esp7) + 36);
                    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
                } else {
                    ebx70 = v43;
                    v71 = edi13 + 0xffffffff;
                    do {
                        eax72 = ebx70;
                        eax72 = *reinterpret_cast<void***>(eax72);
                        ebx70 = ebx70 + 2;
                        v73 = eax72;
                        eax74 = fun_416eb0(reinterpret_cast<int32_t>(esp7) + 20, *reinterpret_cast<uint16_t*>(&v73));
                        esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 - 4 + 4 + 8);
                        if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax74) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax74 == 0)) 
                            break;
                        edx21 = a1;
                        esp75 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp7) - 4 - 4 - 4);
                        fun_415200(esp75 + 32, eax74, edx21, reinterpret_cast<int32_t>(esp7) + 36);
                        ecx76 = v71;
                        --v71;
                        esp7 = reinterpret_cast<void*>(esp75 - 4 - 4 + 4 + 16);
                    } while (ecx76);
                    goto addr_41500d_119;
                }
                addr_41502a_120:
                if (reinterpret_cast<uint32_t>(esi9) & 4) {
                    edx21 = v68;
                    fun_4151c0(32, edx21, a1, reinterpret_cast<int32_t>(esp7) + 36);
                    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 - 4 - 4 - 4 + 4 + 16);
                    goto addr_4149ee_12;
                }
                addr_41500d_119:
                goto addr_41502a_120;
                addr_414f31_109:
                v25 = reinterpret_cast<void**>(1);
                goto addr_414f39_103;
                addr_414c27_92:
                if (!(reinterpret_cast<uint32_t>(esi9) & 0x8000)) {
                    if (!(reinterpret_cast<uint32_t>(esi9) & 32)) {
                        esp77 = reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(esp7) - 4);
                        v78 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp7) + 0x264);
                        if (!(reinterpret_cast<uint32_t>(esi9) & 64)) {
                            eax79 = fun_415240(v78);
                            esp7 = reinterpret_cast<void*>(esp77 - 1 + 1 + 1);
                        } else {
                            eax80 = fun_415240(v78);
                            v81 = eax80;
                            esp7 = reinterpret_cast<void*>(esp77 - 1 + 1 + 1);
                            __asm__("cdq ");
                            v82 = edx21;
                            goto addr_414cd2_126;
                        }
                    } else {
                        esp83 = reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(esp7) - 4);
                        v84 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp7) + 0x264);
                        if (!(reinterpret_cast<uint32_t>(esi9) & 64)) {
                            eax85 = fun_415240(v84);
                            eax79 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax85)));
                            esp7 = reinterpret_cast<void*>(esp83 - 1 + 1 + 1);
                        } else {
                            eax86 = fun_415240(v84);
                            v81 = reinterpret_cast<void**>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax86)));
                            esp7 = reinterpret_cast<void*>(esp83 - 1 + 1 + 1);
                            __asm__("cdq ");
                            v82 = edx21;
                            goto addr_414cd2_126;
                        }
                    }
                } else {
                    eax87 = fun_415250(reinterpret_cast<int32_t>(esp7) + 0x264);
                    v81 = eax87;
                    v82 = edx21;
                    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 + 4 + 4);
                    goto addr_414cd2_126;
                }
                v81 = eax79;
                v82 = reinterpret_cast<void**>(0);
                addr_414cd2_126:
                if (!(reinterpret_cast<uint32_t>(esi9) & 64) || (reinterpret_cast<signed char>(v82) > reinterpret_cast<signed char>(0) || reinterpret_cast<signed char>(v82) >= reinterpret_cast<signed char>(0) && reinterpret_cast<unsigned char>(v81) >= reinterpret_cast<unsigned char>(0))) {
                    v88 = v81;
                    v89 = v82;
                } else {
                    v88 = reinterpret_cast<void**>(-reinterpret_cast<unsigned char>(v81));
                    esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) | 0x100);
                    v89 = reinterpret_cast<void**>(-(reinterpret_cast<unsigned char>(v82) + reinterpret_cast<uint1_t>(!!v81)));
                }
                if (!(reinterpret_cast<uint32_t>(esi9) & 0x8000)) {
                    v88 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v88) & 0xffffffff);
                    v89 = reinterpret_cast<void**>(0);
                }
                if (reinterpret_cast<signed char>(ebp11) >= reinterpret_cast<signed char>(0)) {
                    esi9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi9) & 0xfffffff7);
                } else {
                    ebp11 = reinterpret_cast<void**>(1);
                }
                if (!v89 && !v88) {
                    v25 = reinterpret_cast<void**>(0);
                }
                v90 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) + 0x257);
                while ((eax91 = ebp11, --ebp11, !reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax91) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax91 == 0))) || (v89 || v88)) {
                    __asm__("cdq ");
                    edi92 = edx21;
                    eax93 = fun_416fc0(v88, v89, v66, edi92);
                    edx21 = v66;
                    eax94 = fun_416f50(v88, v89, edx21, edi92);
                    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp7) - 4 - 4 - 4 - 4 - 4 + 16 + 4 - 4 - 4 - 4 - 4 - 4 + 16 + 4);
                    v88 = eax94;
                    v89 = edx21;
                    if (reinterpret_cast<int32_t>(eax93 + 48) > reinterpret_cast<int32_t>(57)) {
                    }
                    v90 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v90) - 1);
                }
                edi13 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp7) + 0x257 - reinterpret_cast<uint32_t>(v90));
                v43 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(v90) + 1);
                if (reinterpret_cast<uint32_t>(esi9) & 0x200 && (*reinterpret_cast<signed char*>(&v4) != 48 || !edi13)) {
                    ++edi13;
                    --v43;
                    goto addr_414ef3_40;
                }
                addr_414c00_82:
                v66 = reinterpret_cast<void**>(16);
                if (reinterpret_cast<uint32_t>(esi9) & 0x80) {
                    v25 = reinterpret_cast<void**>(2);
                    goto addr_414c27_92;
                }
            }
        }
    }
    addr_414a06_31:
    return 0;
}

int32_t fun_414680(int32_t a1, void** a2) {
    int32_t eax3;
    int32_t eax4;

    if (!a1) {
        if (*reinterpret_cast<unsigned char*>(a2 + 13) & 16) {
            eax3 = fun_4138b0(a2);
        }
    } else {
        if (*reinterpret_cast<unsigned char*>(a2 + 13) & 16) {
            eax4 = fun_4138b0(a2);
            *reinterpret_cast<void***>(a2 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 12)) & 0xffffeeff);
            *reinterpret_cast<void***>(a2 + 24) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(a2 + 8) = reinterpret_cast<void**>(0);
            return eax4;
        }
    }
    return eax3;
}

void fun_406f70(struct s230* a1) {
    struct s230* esi2;
    void** eax3;
    void* ecx4;

    esi2 = a1;
    eax3 = fun_406470(0x80);
    ecx4 = reinterpret_cast<void*>(0);
    esi2->fc = eax3;
    do {
        ecx4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx4) + 8);
        *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(esi2->fc) + reinterpret_cast<uint32_t>(ecx4) + 0xfffffff8) = 0;
        *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(esi2->fc) + reinterpret_cast<uint32_t>(ecx4) + 0xfffffffc) = 0;
    } while (reinterpret_cast<int32_t>(ecx4) < reinterpret_cast<int32_t>(0x80));
    esi2->f8 = 15;
    esi2->f4 = 0;
    esi2->f0 = 16;
    return;
}

void fun_4069b0(struct s33* a1) {
    void** v2;
    void** v3;

    v2 = a1->f18;
    fun_406570(v2);
    v3 = a1->f1c;
    fun_406570(v3);
    return;
}

int32_t GetACP = 0x556d6;

int32_t GetOEMCP = 0x556e0;

void** fun_412990(void** a1) {
    void** eax2;

    g43acac = 0;
    eax2 = a1;
    if (!reinterpret_cast<int1_t>(eax2 == 0xfffffffe)) {
        if (!reinterpret_cast<int1_t>(eax2 == 0xfffffffd)) {
            if (reinterpret_cast<int1_t>(eax2 == 0xfffffffc)) {
                g43acac = 1;
                eax2 = g43bde8;
            }
            return eax2;
        } else {
            g43acac = 1;
            goto GetACP;
        }
    } else {
        g43acac = 1;
        goto GetOEMCP;
    }
}

struct s232 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
};

struct s232* fun_412220(int32_t a1);

int32_t UnhandledExceptionFilter = 0x55606;

int32_t g43ab80 = 0;

int32_t g43ab74 = 7;

int32_t g43ab70 = 3;

int32_t g43ab7c = 0x8c;

int32_t fun_4120c0(int32_t a1, int32_t a2) {
    struct s232* eax3;
    int32_t edx4;
    int32_t esi5;
    int32_t esi6;
    int32_t v7;
    int32_t ecx8;
    int32_t tmp32_9;
    int1_t less_or_equal10;
    int32_t ecx11;
    int32_t* edi12;
    int32_t ecx13;
    int32_t edi14;
    int32_t eax15;

    eax3 = fun_412220(a1);
    if (!eax3 || (edx4 = eax3->f8, edx4 == 0)) {
        UnhandledExceptionFilter();
        goto esi5;
    } else {
        if (edx4 != 5) {
            if (edx4 != 1) {
                esi6 = g43ab80;
                g43ab80 = a2;
                if (eax3->f4 != 8) {
                    eax3->f8 = 0;
                    v7 = eax3->f4;
                    edx4(v7);
                } else {
                    ecx8 = g43ab74;
                    tmp32_9 = ecx8 + g43ab70;
                    less_or_equal10 = tmp32_9 <= g43ab70;
                    if (!less_or_equal10) {
                        ecx11 = g43ab70;
                        edi12 = reinterpret_cast<int32_t*>((ecx11 + ecx11 * 2) * 4 + 0x43ab00);
                        ecx13 = g43ab74;
                        do {
                            *edi12 = 0;
                            edi12 = edi12 + 3;
                            --ecx13;
                        } while (ecx13);
                    }
                    edi14 = g43ab7c;
                    if (eax3->f0 != 0xc000008e) {
                        if (eax3->f0 != 0xc0000090) {
                            if (eax3->f0 != 0xc0000091) {
                                if (eax3->f0 != 0xc0000093) {
                                    if (eax3->f0 != 0xc000008d) {
                                        if (eax3->f0 != 0xc000008f) {
                                            if (eax3->f0 == 0xc0000092) {
                                                g43ab7c = 0x8a;
                                            }
                                        } else {
                                            g43ab7c = 0x86;
                                        }
                                    } else {
                                        g43ab7c = 0x82;
                                    }
                                } else {
                                    g43ab7c = 0x85;
                                }
                            } else {
                                g43ab7c = 0x84;
                            }
                        } else {
                            g43ab7c = 0x81;
                        }
                    } else {
                        g43ab7c = 0x83;
                    }
                    eax15 = g43ab7c;
                    edx4(8, eax15);
                    g43ab7c = edi14;
                }
                g43ab80 = esi6;
                return -1;
            } else {
                return -1;
            }
        } else {
            eax3->f8 = 0;
            return 1;
        }
    }
}

int32_t fun_415cc0(struct s102* a1, struct s100* a2, struct s205* a3) {
    int16_t ax4;
    uint32_t ebx5;
    void* esp6;
    uint32_t ebx7;
    uint32_t esi8;
    uint32_t edx9;
    uint32_t v10;
    void* esp11;
    struct s205* edi12;
    uint32_t v13;
    uint32_t eax14;
    void* esp15;
    uint32_t ebx16;
    unsigned char v17;
    int32_t eax18;
    unsigned char eax19;
    unsigned char ebp20;
    void* esp21;
    void* esp22;
    uint32_t v23;
    unsigned char v24;
    int32_t eax25;
    uint32_t ebx26;

    ax4 = a1->fa;
    ebx5 = 0;
    *reinterpret_cast<int16_t*>(&ebx5) = ax4;
    esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 24 - 4 - 4 - 4 - 4);
    ebx7 = (ebx5 & 0x7fff) - 0x3fff;
    esi8 = 0;
    *reinterpret_cast<int16_t*>(&esi8) = ax4;
    edx9 = a1->f2;
    v10 = a1->f6;
    if (ebx7 != 0xffffc001) {
        fun_415bc0(reinterpret_cast<int32_t>(esp6) + 28, reinterpret_cast<int32_t>(esp6) + 16);
        esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp6) - 4 - 4 - 4 + 4);
        edi12 = a3;
        v13 = edi12->f8;
        eax14 = fun_415b10(reinterpret_cast<int32_t>(esp11) + 24, v13);
        esp15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp11) + 8 - 4 - 4 - 4 + 4 + 8);
        if (eax14) {
            ++ebx7;
        }
        if (reinterpret_cast<int32_t>(edi12->f4 - edi12->f8) <= reinterpret_cast<int32_t>(ebx7)) {
            if (reinterpret_cast<int32_t>(ebx7) > reinterpret_cast<int32_t>(edi12->f4)) {
                if (reinterpret_cast<int32_t>(edi12->f0) > reinterpret_cast<int32_t>(ebx7)) {
                    ebx16 = ebx7 + edi12->f14;
                    v17 = edi12->fc;
                    v10 = v10 & 0x7fffffff;
                    fun_415c10(reinterpret_cast<int32_t>(esp15) + 16, v17);
                    eax18 = 0;
                } else {
                    fun_415be0(reinterpret_cast<int32_t>(esp15) + 16);
                    eax19 = edi12->fc;
                    v10 = v10 | 0x80000000;
                    fun_415c10(reinterpret_cast<int32_t>(esp15) - 4 - 4 + 4 + 20, eax19);
                    ebx16 = edi12->f14 + edi12->f0;
                    eax18 = 1;
                }
            } else {
                ebp20 = reinterpret_cast<unsigned char>(edi12->f4 - ebx7);
                fun_415bc0(reinterpret_cast<int32_t>(esp15) + 16, reinterpret_cast<int32_t>(esp15) + 28);
                esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp15) - 4 - 4 - 4 + 4);
                fun_415c10(reinterpret_cast<int32_t>(esp21) + 24, ebp20);
                esp22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp21) + 8 - 4 - 4 - 4 + 4);
                v23 = edi12->f8;
                fun_415b10(reinterpret_cast<int32_t>(esp22) + 24, v23);
                ebx16 = 0;
                v24 = reinterpret_cast<unsigned char>(edi12->fc + 1);
                fun_415c10(reinterpret_cast<int32_t>(esp22) + 8 - 4 - 4 - 4 + 4 + 24, v24);
                eax18 = 2;
            }
        } else {
            ebx16 = 0;
            fun_415be0(reinterpret_cast<int32_t>(esp15) + 16);
            eax18 = 2;
        }
    } else {
        ebx16 = 0;
        eax25 = fun_415bf0(reinterpret_cast<int32_t>(esp6) + 16);
        if (!eax25) {
            fun_415be0(reinterpret_cast<int32_t>(esp6) - 4 - 4 + 4 + 4 + 16);
            edi12 = a3;
            eax18 = 2;
        } else {
            eax18 = 0;
            edi12 = a3;
        }
    }
    ebx26 = ebx16 << reinterpret_cast<unsigned char>(31 - edi12->fc) | 1 - reinterpret_cast<uint1_t>((esi8 & 0x8000) < 1) & 0x80000000 | v10;
    if (edi12->f10 != 64) {
        if (edi12->f10 == 32) {
            a2->f0 = ebx26;
        }
        return eax18;
    } else {
        a2->f4 = ebx26;
        a2->f0 = edx9;
        return eax18;
    }
}

int32_t fun_415eb0(struct s102* a1, struct s100* a2) {
    int32_t eax3;

    eax3 = fun_415cc0(a1, a2, 0x43bdb8);
    return eax3;
}

void fun_416050(struct s206* a1, struct s207* a2) {
    uint16_t dx3;
    uint16_t si4;
    uint32_t ebx5;
    uint16_t dx6;
    uint32_t ecx7;
    uint32_t eax8;
    uint16_t si9;
    struct s206* edi10;
    uint32_t ecx11;
    uint32_t ebx12;

    dx3 = *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(a2) + 6);
    si4 = reinterpret_cast<uint16_t>(reinterpret_cast<uint16_t>(dx3 & 0x7ff0) >> 4);
    ebx5 = 0x80000000;
    dx6 = reinterpret_cast<uint16_t>(dx3 & 0x8000);
    ecx7 = a2->f4 & 0xfffff;
    eax8 = si4;
    if (!eax8) {
        if (ecx7 || a2->f0) {
            si9 = reinterpret_cast<uint16_t>(si4 + 0x3c01);
            ebx5 = 0;
        } else {
            a1->f8 = 0;
            a1->f4 = 0;
            a1->f0 = 0;
            return;
        }
    } else {
        if (eax8 == 0x7ff) {
            si9 = 0x7fff;
        } else {
            si9 = reinterpret_cast<uint16_t>(si4 + 0x3c00);
        }
    }
    edi10 = a1;
    ecx11 = ecx7 << 11 | a2->f0 >> 21 | ebx5;
    edi10->f0 = a2->f0 << 11;
    edi10->f4 = ecx11;
    if (!(ecx11 & 0x80000000)) {
        do {
            si9 = reinterpret_cast<uint16_t>(si9 - 1);
            ebx12 = (edi10->f0 & 0x80000000) >> 31 | edi10->f4 + edi10->f4;
            edi10->f0 = edi10->f0 + edi10->f0;
            edi10->f4 = ebx12;
        } while (!(ebx12 & 0x80000000));
    }
    edi10->f8 = reinterpret_cast<uint16_t>(si9 | dx6);
    return;
}

struct s233 {
    signed char f0;
    signed char[3] pad4;
    int16_t f4;
    signed char f6;
};

signed char g41b730 = 49;

int16_t g41b734 = 0x4e41;

signed char g41b736 = 0;

signed char g41b738 = 49;

int16_t g41b73c = 70;

signed char g41b740 = 49;

int16_t g41b744 = 68;

signed char g41b748 = 49;

int16_t g41b74c = 0x4e41;

signed char g41b74e = 0;

int32_t fun_4190c0(int32_t a1, uint32_t a2, uint16_t a3, int32_t a4, unsigned char a5, struct s208* a6) {
    struct s208* edi7;
    int32_t v8;
    uint16_t ax9;
    uint16_t cx10;
    uint32_t eax11;
    uint32_t esi12;
    uint32_t edx13;
    uint32_t eax14;
    void* esp15;
    int32_t esi16;
    void* esp17;
    int32_t esi18;
    int32_t ebx19;
    int32_t ebp20;
    int32_t ebx21;
    uint32_t ebx22;
    struct s233* ebp23;
    int32_t esi24;
    struct s233* ebx25;
    void* esp26;
    void* esp27;
    void* esp28;
    struct s233* ebx29;
    signed char eax30;
    struct s233* ecx31;
    int16_t bx32;
    signed char dl33;
    signed char ecx34;
    struct s233* edx35;
    int16_t ax36;
    signed char ecx37;
    struct s233* edx38;
    int16_t ax39;
    signed char eax40;
    struct s233* edx41;
    int16_t bx42;
    signed char cl43;
    void* ebx44;
    signed char bl45;

    edi7 = a6;
    v8 = 1;
    ax9 = reinterpret_cast<uint16_t>(a3 & 0x8000);
    cx10 = reinterpret_cast<uint16_t>(a3 & 0x7fff);
    if (!ax9) {
        edi7->f2 = 32;
    } else {
        edi7->f2 = 45;
    }
    if (!cx10 && (!a2 && !a1)) {
        edi7->f2 = 32;
        edi7->f0 = 0;
        edi7->f3 = 1;
        edi7->f4 = 48;
        edi7->f5 = 0;
        return 1;
    }
    if (cx10 != 0x7fff) {
        eax11 = a2 >> 24;
        esi12 = reinterpret_cast<uint16_t>(cx10 >> 8) + *reinterpret_cast<uint16_t*>(&eax11) * 2;
        edx13 = cx10;
        eax14 = edx13 + ((edx13 << 4) + edx13) * 8;
        esp15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 40 - 4 - 4 - 4 - 4 - 4);
        esi16 = reinterpret_cast<int32_t>(esi12 + (esi12 + (esi12 + esi12 * 8) * 2) * 4 + (eax14 + eax14 * 8 << 4) - 0x134312f4) >> 16;
        fun_41a240(reinterpret_cast<int32_t>(esp15) + 20, -static_cast<int32_t>(*reinterpret_cast<int16_t*>(&esi16)), 1);
        esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp15) - 4 - 4 - 4 + 4 + 12);
        if (cx10 >= 0x3fff) {
            *reinterpret_cast<int16_t*>(&esi16) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&esi16) + 1);
            fun_419f90(reinterpret_cast<int32_t>(esp17) + 16, reinterpret_cast<int32_t>(esp17) + 32);
            esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4 - 4 - 4 + 4 + 8);
        }
        edi7->f0 = *reinterpret_cast<int16_t*>(&esi16);
        if (!(a5 & 1)) {
            esi18 = a4;
        } else {
            esi18 = a4 + *reinterpret_cast<int16_t*>(&esi16);
            if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(esi18 < 0) | reinterpret_cast<uint1_t>(esi18 == 0))) {
                edi7->f2 = 32;
                edi7->f0 = 0;
                edi7->f3 = 1;
                edi7->f4 = 48;
                edi7->f5 = 0;
                return 1;
            }
        }
        if (esi18 > 21) {
            esi18 = 21;
        }
        ebx19 = 0;
        ebp20 = 8;
        *reinterpret_cast<uint16_t*>(&ebx19) = cx10;
        ebx21 = ebx19 - 0x3ffe;
        do {
            fun_418800(reinterpret_cast<int32_t>(esp17) + 16);
            esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4 - 4 + 4 + 4);
            --ebp20;
        } while (ebp20);
        if (ebx21 < 0 && (ebx22 = reinterpret_cast<uint32_t>(-ebx21) & 0xff, !(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(ebx22 == 0)))) {
            do {
                fun_418840(reinterpret_cast<int32_t>(esp17) + 16);
                esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4 - 4 + 4 + 4);
                --ebx22;
            } while (ebx22);
        }
        ebp23 = reinterpret_cast<struct s233*>(&edi7->f4);
        esi24 = esi18 + 1;
        ebx25 = ebp23;
        if (!(reinterpret_cast<uint1_t>(esi24 < 0) | reinterpret_cast<uint1_t>(esi24 == 0))) {
            do {
                ebx25 = reinterpret_cast<struct s233*>(&ebx25->pad4);
                fun_418800(reinterpret_cast<int32_t>(esp17) + 16);
                esp26 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp17) - 4 - 4 + 4);
                fun_418800(reinterpret_cast<int32_t>(esp26) + 20);
                esp27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp26) + 4 - 4 - 4 + 4);
                fun_418790(reinterpret_cast<int32_t>(esp27) + 20, reinterpret_cast<int32_t>(esp27) + 48);
                esp28 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp27) + 4 - 4 - 4 - 4 + 4);
                fun_418800(reinterpret_cast<int32_t>(esp28) + 24);
                esp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp28) + 8 - 4 - 4 + 4 + 4);
                --esi24;
                *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebx25) - 1) = 48;
            } while (esi24);
        }
        ebx29 = reinterpret_cast<struct s233*>(reinterpret_cast<uint32_t>(ebx25) - 1 - 1);
        if (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebx25) - 1) >= 53) 
            goto addr_4193f0_22;
    } else {
        edi7->f0 = 1;
        if (a2 == 0x80000000 && !a1 || *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&a2) + 3) & 64) {
            if (!ax9 || (a2 != 0xc0000000 || a1)) {
                if (a2 != 0x80000000 || a1) {
                    eax30 = g41b730;
                    ecx31 = reinterpret_cast<struct s233*>(&edi7->f4);
                    v8 = 0;
                    ecx31->f0 = eax30;
                    bx32 = g41b734;
                    ecx31->f4 = bx32;
                    dl33 = g41b736;
                    ecx31->f6 = dl33;
                    edi7->f3 = 6;
                    goto addr_41941b_27;
                } else {
                    ecx34 = g41b738;
                    edx35 = reinterpret_cast<struct s233*>(&edi7->f4);
                    v8 = 0;
                    edx35->f0 = ecx34;
                    ax36 = g41b73c;
                    edx35->f4 = ax36;
                    edi7->f3 = 5;
                    goto addr_41941b_27;
                }
            } else {
                ecx37 = g41b740;
                edx38 = reinterpret_cast<struct s233*>(&edi7->f4);
                v8 = 0;
                edx38->f0 = ecx37;
                ax39 = g41b744;
                edx38->f4 = ax39;
                edi7->f3 = 5;
                goto addr_41941b_27;
            }
        } else {
            eax40 = g41b748;
            edx41 = reinterpret_cast<struct s233*>(&edi7->f4);
            v8 = 0;
            edx41->f0 = eax40;
            bx42 = g41b74c;
            edx41->f4 = bx42;
            cl43 = g41b74e;
            edx41->f6 = cl43;
            edi7->f3 = 6;
            goto addr_41941b_27;
        }
    }
    if (reinterpret_cast<uint32_t>(ebx29) < reinterpret_cast<uint32_t>(ebp23)) {
        addr_419439_32:
        edi7->f0 = 0;
        ebp23->f0 = 48;
        edi7->f2 = 32;
        edi7->f3 = 1;
        edi7->f5 = 0;
        return 1;
    } else {
        do {
            if (ebx29->f0 != 48) 
                break;
            ebx29 = reinterpret_cast<struct s233*>(reinterpret_cast<uint32_t>(ebx29) - 1);
        } while (reinterpret_cast<uint32_t>(ebx29) >= reinterpret_cast<uint32_t>(ebp23));
        if (reinterpret_cast<uint32_t>(ebx29) < reinterpret_cast<uint32_t>(ebp23)) 
            goto addr_419439_32;
    }
    addr_41940b_36:
    ebx44 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx29) - reinterpret_cast<int32_t>(edi7));
    bl45 = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx44) - 3);
    edi7->f3 = bl45;
    *reinterpret_cast<signed char*>(bl45 + reinterpret_cast<int32_t>(edi7) + 4) = 0;
    addr_41941b_27:
    return v8;
    addr_4193f0_22:
    if (reinterpret_cast<uint32_t>(ebx29) < reinterpret_cast<uint32_t>(ebp23)) {
        addr_419405_37:
        edi7->f0 = reinterpret_cast<int16_t>(edi7->f0 + 1);
        ebx29 = reinterpret_cast<struct s233*>(&ebx29->pad4);
    } else {
        do {
            if (ebx29->f0 != 57) 
                break;
            ebx29->f0 = 48;
            ebx29 = reinterpret_cast<struct s233*>(reinterpret_cast<uint32_t>(ebx29) - 1);
        } while (reinterpret_cast<uint32_t>(ebx29) >= reinterpret_cast<uint32_t>(ebp23));
        if (reinterpret_cast<uint32_t>(ebx29) < reinterpret_cast<uint32_t>(ebp23)) 
            goto addr_419405_37;
    }
    ebx29->f0 = reinterpret_cast<signed char>(ebx29->f0 + 1);
    goto addr_41940b_36;
}

struct s234 {
    uint32_t f0;
    uint32_t f4;
};

uint32_t g43bfdc = 0x80000000;

uint32_t g43bfd8 = 0;

uint32_t g43bfc4 = 0xfff80000;

uint32_t g43bfc0 = 0;

int32_t fun_417250(int32_t a1, int32_t a2, uint32_t a3, uint32_t a4, struct s234* a5) {
    int32_t eax6;
    int16_t ax7;
    int16_t fpu_status_word8;
    int16_t ax9;
    int16_t fpu_status_word10;
    uint32_t v11;
    uint32_t v12;
    uint32_t eax13;
    uint32_t ecx14;
    uint32_t eax15;
    uint32_t ecx16;
    uint32_t v17;
    uint32_t v18;
    int16_t ax19;
    int16_t fpu_status_word20;
    int16_t ax21;
    int16_t fpu_status_word22;
    uint32_t eax23;
    uint32_t edx24;
    int16_t ax25;
    int16_t fpu_status_word26;
    int16_t ax27;
    int16_t fpu_status_word28;
    uint32_t eax29;
    uint32_t edx30;
    uint32_t eax31;
    uint32_t edx32;
    int16_t ax33;
    int16_t fpu_status_word34;
    int16_t ax35;
    int16_t fpu_status_word36;
    uint32_t eax37;
    uint32_t edx38;
    uint32_t eax39;
    uint32_t edx40;

    __asm__("fld qword [esp+0x4]");
    __asm__("fabs ");
    __asm__("fstp qword [esp+0x0]");
    if (a4 != 0x7ff00000 || a3) {
        if (a4 != 0xfff00000 || a3) {
            if (a2 != 0x7ff00000 || a1) {
                if (a2 == 0xfff00000 && !a1) {
                    eax6 = fun_4174a0(a3, a4);
                    __asm__("fldz ");
                    __asm__("fcomp qword [esp+0x20]");
                    ax7 = fpu_status_word8;
                    if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax7) + 1) & 1)) {
                        __asm__("fldz ");
                        __asm__("fcomp qword [esp+0x18]");
                        ax9 = fpu_status_word10;
                        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax9) + 1) & 65) {
                            a5->f0 = 0;
                            a5->f4 = 0x3ff00000;
                        } else {
                            if (eax6 != 1) {
                                v11 = 0;
                                v12 = 0;
                            } else {
                                eax13 = g43bfdc;
                                ecx14 = g43bfd8;
                                v12 = eax13;
                                v11 = ecx14;
                            }
                            a5->f4 = v12;
                            a5->f0 = v11;
                            return 0;
                        }
                    } else {
                        if (eax6 != 1) {
                            eax15 = g43bfbc;
                            ecx16 = g43bfb8;
                            v17 = eax15;
                            v18 = ecx16;
                        } else {
                            __asm__("fld qword [0x43bfb8]");
                            __asm__("fchs ");
                            __asm__("fstp qword [esp+0x4]");
                        }
                        a5->f4 = v17;
                        a5->f0 = v18;
                        return 0;
                    }
                }
                return 0;
            } else {
                __asm__("fldz ");
                __asm__("fcomp qword [esp+0x18]");
                ax19 = fpu_status_word20;
                if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax19) + 1) & 1)) {
                    __asm__("fldz ");
                    __asm__("fcomp qword [esp+0x18]");
                    a5->f0 = 0;
                    ax21 = fpu_status_word22;
                    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax21) + 1) & 65) {
                        a5->f4 = 0x3ff00000;
                        return 0;
                    } else {
                        a5->f4 = 0;
                        return 0;
                    }
                } else {
                    eax23 = g43bfbc;
                    a5->f4 = eax23;
                    edx24 = g43bfb8;
                    a5->f0 = edx24;
                    return 0;
                }
            }
        } else {
            __asm__("fld1 ");
            __asm__("fcomp qword [esp+0x4]");
            ax25 = fpu_status_word26;
            if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax25) + 1) & 1)) {
                __asm__("fld1 ");
                __asm__("fcomp qword [esp+0x4]");
                ax27 = fpu_status_word28;
                if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax27) + 1) & 65) {
                    eax29 = g43bfc4;
                    a5->f4 = eax29;
                    edx30 = g43bfc0;
                    a5->f0 = edx30;
                    return 1;
                } else {
                    eax31 = g43bfbc;
                    a5->f4 = eax31;
                    edx32 = g43bfb8;
                    a5->f0 = edx32;
                    return 0;
                }
            } else {
                a5->f0 = 0;
                a5->f4 = 0;
                return 0;
            }
        }
    } else {
        __asm__("fld1 ");
        __asm__("fcomp qword [esp+0x4]");
        ax33 = fpu_status_word34;
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax33) + 1) & 1)) {
            __asm__("fld1 ");
            __asm__("fcomp qword [esp+0x4]");
            ax35 = fpu_status_word36;
            if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax35) + 1) & 65) {
                eax37 = g43bfc4;
                a5->f4 = eax37;
                edx38 = g43bfc0;
                a5->f0 = edx38;
                return 1;
            } else {
                a5->f0 = 0;
                a5->f4 = 0;
                return 0;
            }
        } else {
            eax39 = g43bfbc;
            a5->f4 = eax39;
            edx40 = g43bfb8;
            a5->f0 = edx40;
            return 0;
        }
    }
}

uint32_t fun_415750(int16_t a1) {
    int16_t dx2;
    uint32_t eax3;
    uint32_t ecx4;
    uint32_t ecx5;
    uint32_t ecx6;
    uint32_t ecx7;

    dx2 = a1;
    eax3 = 0;
    if (*reinterpret_cast<unsigned char*>(&dx2) & 1) {
        eax3 = 16;
    }
    if (*reinterpret_cast<unsigned char*>(&dx2) & 4) {
        eax3 = eax3 | 8;
    }
    if (*reinterpret_cast<unsigned char*>(&dx2) & 8) {
        eax3 = eax3 | 4;
    }
    if (*reinterpret_cast<unsigned char*>(&dx2) & 16) {
        eax3 = eax3 | 2;
    }
    if (*reinterpret_cast<unsigned char*>(&dx2) & 32) {
        eax3 = eax3 | 1;
    }
    if (*reinterpret_cast<unsigned char*>(&dx2) & 2) {
        eax3 = eax3 | 0x80000;
    }
    ecx4 = 0;
    *reinterpret_cast<int16_t*>(&ecx4) = dx2;
    ecx5 = ecx4 & 0xc00;
    if (ecx5 == 0x400) {
        eax3 = eax3 | 0x100;
    } else {
        if (ecx5 == 0x800) {
            eax3 = eax3 | 0x200;
        } else {
            if (ecx5 == 0xc00) {
                eax3 = eax3 | 0x300;
            }
        }
    }
    ecx6 = 0;
    *reinterpret_cast<int16_t*>(&ecx6) = dx2;
    ecx7 = ecx6 & 0x300;
    if (!ecx7) {
        eax3 = eax3 | 0x20000;
    } else {
        if (ecx7 == 0x200) {
            eax3 = eax3 | 0x10000;
        }
    }
    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&dx2) + 1) & 16) {
        eax3 = eax3 | 0x40000;
    }
    return eax3;
}

int16_t fun_415800(uint32_t a1) {
    int16_t ax2;
    uint32_t edx3;
    uint32_t ecx4;
    uint32_t ecx5;

    ax2 = 0;
    edx3 = a1;
    if (*reinterpret_cast<unsigned char*>(&edx3) & 16) {
        ax2 = 1;
    }
    if (*reinterpret_cast<unsigned char*>(&edx3) & 8) {
        *reinterpret_cast<unsigned char*>(&ax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ax2) | 4);
    }
    if (*reinterpret_cast<unsigned char*>(&edx3) & 4) {
        *reinterpret_cast<unsigned char*>(&ax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ax2) | 8);
    }
    if (*reinterpret_cast<unsigned char*>(&edx3) & 2) {
        *reinterpret_cast<unsigned char*>(&ax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ax2) | 16);
    }
    if (*reinterpret_cast<unsigned char*>(&edx3) & 1) {
        *reinterpret_cast<unsigned char*>(&ax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ax2) | 32);
    }
    if (edx3 & 0x80000) {
        *reinterpret_cast<unsigned char*>(&ax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ax2) | 2);
    }
    ecx4 = edx3 & 0x300;
    if (ecx4 == 0x100) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) | 4);
    } else {
        if (ecx4 == 0x200) {
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) | 8);
        } else {
            if (ecx4 == 0x300) {
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) | 12);
            }
        }
    }
    ecx5 = edx3 & 0x30000;
    if (!ecx5) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) | 3);
    } else {
        if (ecx5 == 0x10000) {
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) | 2);
        }
    }
    if (edx3 & 0x40000) {
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) | 16);
    }
    return ax2;
}

uint32_t fun_417f2c(int32_t ecx) {
    uint32_t v2;
    uint32_t eax3;
    uint32_t v4;
    uint32_t v5;
    uint32_t v6;
    uint32_t eax7;
    uint32_t eax8;

    __asm__("fstp tword [esp+0x18]");
    __asm__("fstp tword [esp]");
    if (!(v2 & 0x7fff0000)) {
        __asm__("fld tword [esp]");
        __asm__("fld tword [esp+0x18]");
        eax3 = v4 | v5;
        if (!eax3) {
            __asm__("fprem ");
            return eax3;
        } else {
            __asm__("fxch st0, st1");
            __asm__("fstp tword [esp+0xc]");
            __asm__("fld tword [esp]");
            __asm__("fxch st0, st1");
            __asm__("fnstcw word [esp+0x24]");
            __asm__("fldcw word [esp+0x28]");
            if ((v6 & 0x7fff) > 0x7fbe) {
                __asm__("fnstcw word [esp+0x24]");
                __asm__("fldcw word [esp+0x28]");
                __asm__("fstp st0");
                __asm__("fmul qword [0x43be74]");
                __asm__("fstp tword [esp]");
            } else {
                __asm__("fmul qword [0x43be74]");
                __asm__("fstp tword [esp+0x18]");
                __asm__("fmul qword [0x43be74]");
                __asm__("fstp tword [esp]");
            }
            __asm__("fldcw word [esp+0x24]");
            eax7 = fun_417d26(ecx);
            return eax7;
        }
    } else {
        eax8 = fun_417d26(ecx);
        return eax8;
    }
}

uint32_t fun_4181e4(int32_t ecx) {
    uint32_t v2;
    uint32_t eax3;
    uint32_t v4;
    uint32_t v5;
    uint32_t v6;
    uint32_t eax7;
    uint32_t eax8;

    __asm__("fstp tword [esp+0x18]");
    __asm__("fstp tword [esp]");
    if (!(v2 & 0x7fff0000)) {
        __asm__("fld tword [esp]");
        __asm__("fld tword [esp+0x18]");
        eax3 = v4 | v5;
        if (!eax3) {
            __asm__("fprem ");
            return eax3;
        } else {
            __asm__("fxch st0, st1");
            __asm__("fstp tword [esp+0xc]");
            __asm__("fld tword [esp]");
            __asm__("fxch st0, st1");
            __asm__("fnstcw word [esp+0x24]");
            __asm__("fldcw word [esp+0x28]");
            if ((v6 & 0x7fff) > 0x7fbe) {
                __asm__("fnstcw word [esp+0x24]");
                __asm__("fldcw word [esp+0x28]");
                __asm__("fstp st0");
                __asm__("fmul qword [0x43be74]");
                __asm__("fstp tword [esp]");
            } else {
                __asm__("fmul qword [0x43be74]");
                __asm__("fstp tword [esp+0x18]");
                __asm__("fmul qword [0x43be74]");
                __asm__("fstp tword [esp]");
            }
            __asm__("fldcw word [esp+0x24]");
            eax7 = fun_417fde(ecx);
            return eax7;
        }
    } else {
        eax8 = fun_417fde(ecx);
        return eax8;
    }
}

uint32_t fun_4114d0(void** a1, void** a2, int32_t a3) {
    void** eax4;
    int32_t edi5;
    void** ebx6;
    void** eax7;
    void** eax8;
    void** eax9;
    void* edi10;
    void* esi11;
    uint32_t ebx12;
    void** eax13;
    void** eax14;

    eax4 = *reinterpret_cast<void***>(a1 + 12);
    if (!(*reinterpret_cast<unsigned char*>(&eax4) & 0x83) || (edi5 = a3, !!edi5) && (edi5 != 1 && edi5 != 2)) {
        g43aa58 = 22;
        return 0xffffffff;
    } else {
        *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax4) & 0xffffffef);
        if (edi5 != 1) {
            ebx6 = a2;
        } else {
            edi5 = 0;
            eax7 = fun_411570(a1);
            ebx6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a2) + reinterpret_cast<unsigned char>(eax7));
        }
        fun_4138b0(a1);
        eax8 = *reinterpret_cast<void***>(a1 + 12);
        if (!(*reinterpret_cast<unsigned char*>(&eax8) & 0x80)) {
            if (*reinterpret_cast<unsigned char*>(&eax8) & 1 && (*reinterpret_cast<unsigned char*>(&eax8) & 8 && !(*reinterpret_cast<unsigned char*>(&eax8 + 1) & 4))) {
                *reinterpret_cast<void***>(a1 + 24) = reinterpret_cast<void**>(0x200);
            }
        } else {
            *reinterpret_cast<void***>(a1 + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax8) & 0xfffffffc);
        }
        eax9 = *reinterpret_cast<void***>(a1 + 16);
        eax13 = fun_4143e0(eax9, ebx6, edi5, edi10, esi11, ebx12, __return_address(), a1);
        eax14 = eax13 + 1;
        return reinterpret_cast<unsigned char>(eax14) - (reinterpret_cast<unsigned char>(eax14) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax14) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax14) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax14) < reinterpret_cast<unsigned char>(1)))));
    }
}

uint32_t fun_4156e0(uint32_t a1, uint32_t a2);

uint32_t fun_415730(uint32_t a1, uint32_t a2) {
    uint32_t eax3;

    eax3 = fun_4156e0(a1, a2 & 0xfff7ffff);
    return eax3;
}

void** fun_413fe0() {
    void** esi1;
    void** edi2;
    int1_t less_or_equal3;
    void** ecx4;
    int1_t less_or_equal5;
    void** eax6;
    void** ecx7;
    void** ecx8;
    void** eax9;

    esi1 = reinterpret_cast<void**>(0);
    edi2 = reinterpret_cast<void**>(0);
    less_or_equal3 = reinterpret_cast<signed char>(g454570) <= reinterpret_cast<signed char>(0);
    if (less_or_equal3) {
        addr_41403e_2:
        if (esi1) {
            *reinterpret_cast<void***>(esi1 + 4) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(esi1 + 12) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(esi1 + 8) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(esi1) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(esi1 + 28) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(esi1 + 16) = reinterpret_cast<void**>(0xffffffff);
        }
    } else {
        ecx4 = g453564;
        do {
            if (!*reinterpret_cast<void***>(ecx4)) 
                goto addr_41401c_6;
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx4) + 12)) & 0x83)) 
                goto addr_414012_8;
            ecx4 = ecx4 + 4;
            ++edi2;
            less_or_equal5 = reinterpret_cast<signed char>(g454570) <= reinterpret_cast<signed char>(edi2);
        } while (!less_or_equal5);
        goto addr_414010_10;
    }
    return esi1;
    addr_41401c_6:
    eax6 = fun_4111a0(32);
    ecx7 = g453564;
    *reinterpret_cast<void***>(ecx7 + reinterpret_cast<unsigned char>(edi2) * 4) = eax6;
    ecx8 = g453564;
    if (*reinterpret_cast<void***>(ecx8 + reinterpret_cast<unsigned char>(edi2) * 4)) {
        esi1 = *reinterpret_cast<void***>(ecx8 + reinterpret_cast<unsigned char>(edi2) * 4);
        goto addr_41403e_2;
    }
    addr_414012_8:
    eax9 = g453564;
    esi1 = *reinterpret_cast<void***>(eax9 + reinterpret_cast<unsigned char>(edi2) * 4);
    goto addr_41403e_2;
    addr_414010_10:
    goto addr_41403e_2;
}

void fun_406460() {
    fun_406f70(0x444908);
    return;
}

void fun_4065f0() {
    int32_t v1;
    int32_t esi2;
    void* esi3;
    void* v4;
    void* eax5;

    v1 = esi2;
    esi3 = reinterpret_cast<void*>(0);
    do {
        v4 = esi3;
        esi3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi3) + 1);
        __asm__("fild dword [esp+0x4]");
        __asm__("fmul qword [0x41b230]");
        __asm__("fmul qword [0x41b238]");
        __asm__("fsin ");
        __asm__("fmul qword [0x41b240]");
        eax5 = fun_410df8(v1, v4);
        *reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi3) * 4 + 0x440844) = eax5;
    } while (reinterpret_cast<int32_t>(esi3) < 0x1000);
    return;
}

int32_t g444870;

int32_t g444874;

int32_t g444878;

int32_t g44487c;

int32_t g444880;

int32_t g444884;

int32_t g444888;

void fun_4066d0() {
    g444870 = reinterpret_cast<int32_t>("default");
    g444874 = 0;
    g444878 = 0;
    g44487c = 0;
    g444880 = 0;
    g444884 = 0;
    g444888 = 0;
    g445068 = reinterpret_cast<void***>(1);
    return;
}

void** g4448f8;

void** g4448fc;

void** g4448f4;

void** g4448e8;

void** g4448ec;

void** g4448f0;

void fun_4069d0() {
    int32_t* edi1;
    int32_t ecx2;

    g4448f8 = reinterpret_cast<void**>(0);
    g4448fc = reinterpret_cast<void**>(0);
    edi1 = reinterpret_cast<int32_t*>(0x444c40);
    g4448f4 = reinterpret_cast<void**>(0);
    ecx2 = 0x101;
    g4448e8 = reinterpret_cast<void**>(0);
    g4448ec = reinterpret_cast<void**>(0);
    g4448f0 = reinterpret_cast<void**>(0);
    while (ecx2) {
        --ecx2;
        *edi1 = 0;
        ++edi1;
    }
    g444b28 = reinterpret_cast<void**>(0);
    return;
}

void fun_406630() {
    g444b80 = reinterpret_cast<void***>(1);
    return;
}

int32_t g4448b0;

int32_t g4448b8;

int32_t g4448b4;

int32_t g4448bc;

int32_t g4448c0;

int32_t g4448c8;

int32_t g4448c4;

int32_t g4448cc;

int32_t g4448d0;

int32_t g4448d4;

int32_t g4448d8;

void fun_406520() {
    g4448b0 = 0;
    g4448b8 = 0;
    g4448b4 = 0;
    g4448bc = 0;
    g4448c0 = 0;
    g4448c8 = 0;
    g4448c4 = 0;
    g4448cc = 0;
    g4448d0 = 0;
    g4448d4 = 0;
    g445048 = reinterpret_cast<void***>(1);
    g4448d8 = 0;
    return;
}

void fun_406590() {
    g444b18 = reinterpret_cast<void***>(8);
    return;
}

void* g41c958 = reinterpret_cast<void*>(0);

struct s24* g43ea2c;

void* g43eb64;

void* g43eb70;

int32_t g43eb6c;

void* g43eb58;

void* g43ea28;

void* g43eb5c;

void* g43ea38;

void* g43eb60;

void* g43ea30;

void* g43eb68;

void* g43ea3c;

void* g453040;

int32_t fun_404d60(void* a1, struct s24* a2, void* a3, void* a4, int32_t a5) {
    void* eax6;
    void* ecx7;

    g41c958 = a1;
    g43ea2c = a2;
    g43eb64 = a3;
    g43eb70 = a4;
    g43eb6c = a5;
    g43eb58 = reinterpret_cast<void*>(0);
    g43ea28 = reinterpret_cast<void*>(0);
    eax6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a3) << 8);
    g43eb5c = reinterpret_cast<void*>(0);
    g43ea38 = reinterpret_cast<void*>(0);
    ecx7 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a4) << 8);
    g43eb60 = a3;
    g43ea30 = eax6;
    g43eb68 = a4;
    g43ea3c = ecx7;
    g453054 = reinterpret_cast<void*>(0);
    g45304c = reinterpret_cast<void*>(0);
    g453050 = a3;
    g453048 = a4;
    g453060 = reinterpret_cast<void*>(0);
    g453044 = reinterpret_cast<void*>(0);
    g453064 = eax6;
    g453058 = ecx7;
    g453068 = a1;
    g45305c = a2;
    g453040 = a4;
    return 1;
}

int32_t fun_404e20(void* a1, void* a2, void* a3, void* a4) {
    void* eax5;
    void* eax6;
    void* eax7;
    void* ecx8;
    void* ebx9;
    void* ebp10;

    if (reinterpret_cast<int32_t>(a1) < reinterpret_cast<int32_t>(0) || (reinterpret_cast<int32_t>(a2) < reinterpret_cast<int32_t>(0) || (reinterpret_cast<int32_t>(a3) <= reinterpret_cast<int32_t>(a1) || (reinterpret_cast<int32_t>(a4) <= reinterpret_cast<int32_t>(a2) || ((eax5 = g43eb64, reinterpret_cast<int32_t>(a3) > reinterpret_cast<int32_t>(eax5)) || (eax6 = g43eb70, reinterpret_cast<int32_t>(a4) > reinterpret_cast<int32_t>(eax6))))))) {
        return 0;
    } else {
        eax7 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a1) << 8);
        ecx8 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a2) << 8);
        g43eb58 = a1;
        g43ea28 = eax7;
        ebx9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a3) << 8);
        g43eb5c = a2;
        g43ea38 = ecx8;
        g43eb60 = a3;
        g43ea30 = ebx9;
        g43eb68 = a4;
        ebp10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(a4) << 8);
        g43ea3c = ebp10;
        g453054 = a1;
        g45304c = a2;
        g453050 = a3;
        g453048 = a4;
        g453060 = eax7;
        g453044 = ecx8;
        g453064 = ebx9;
        g453058 = ebp10;
        return 1;
    }
}

int32_t g43ab78 = 10;

struct s232* fun_412220(int32_t a1) {
    int32_t* edx2;
    int32_t ecx3;
    int32_t eax4;
    uint32_t eax5;

    edx2 = reinterpret_cast<int32_t*>(0x43aaf8);
    ecx3 = a1;
    do {
        if (*edx2 == ecx3) 
            break;
        edx2 = edx2 + 3;
        eax4 = g43ab78;
    } while (reinterpret_cast<uint32_t>((eax4 + eax4 * 2) * 4 + 0x43aaf8) > reinterpret_cast<uint32_t>(edx2));
    eax5 = reinterpret_cast<uint32_t>(*edx2 - ecx3);
    return eax5 - (eax5 + reinterpret_cast<uint1_t>(eax5 < eax5 + reinterpret_cast<uint1_t>(eax5 < 1))) & reinterpret_cast<uint32_t>(edx2);
}

void fun_410ee0(int32_t a1) {
    fun_410f00(a1, 1, 0);
    return;
}

uint32_t fun_4156e0(uint32_t a1, uint32_t a2) {
    uint48_t v3;
    int32_t v4;
    uint32_t eax5;
    uint32_t esi6;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v3) + 2) = reinterpret_cast<int32_t>(__return_address());
    __asm__("wait ");
    __asm__("fnstcw word [esp+0x6]");
    v4 = *reinterpret_cast<int32_t*>(&v3);
    eax5 = fun_415750(*reinterpret_cast<int16_t*>(&v4));
    esi6 = ~a2 & eax5 | a1 & a2;
    fun_415800(esi6);
    __asm__("fldcw word [esp+0x4]");
    return esi6;
}

void fun_4023d4() {
    signed char* edi1;
    signed char* edi2;
    signed char al3;
    int32_t* edi4;
    int32_t* edi5;
    int32_t eax6;

    *edi1 = reinterpret_cast<signed char>(*edi2 + al3);
    *edi4 = *edi5 + eax6;
}

void fun_409484() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    unsigned char* eax7;
    unsigned char al8;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al8));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
}

void fun_409494() {
    int32_t* eax1;
    int32_t* eax2;
    int32_t eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    unsigned char* eax7;
    unsigned char al8;

    *eax1 = *eax2 + eax3;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(al8 | 1);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
}

void fun_4094a4() {
    unsigned char* eax1;
    signed char al2;
    signed char* eax3;
    unsigned char* eax4;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(al2 + *eax3);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 2);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_4094b4() {
    unsigned char* eax1;
    int32_t eax2;
    int32_t* eax3;

    eax1 = reinterpret_cast<unsigned char*>(eax2 + *eax3);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 3);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
}

void fun_4094c4() {
    unsigned char* eax1;
    unsigned char al2;
    unsigned char* eax3;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al2));
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 4);
    *eax3 = reinterpret_cast<unsigned char>(*eax3 + *reinterpret_cast<unsigned char*>(&eax3));
}

void fun_4094d4() {
    signed char* eax1;
    int32_t eax2;

    eax1 = reinterpret_cast<signed char*>(eax2 + 0xc000000 + 0x8000);
    *eax1 = reinterpret_cast<signed char>(*eax1 + *reinterpret_cast<signed char*>(&eax1));
}

void fun_4094e4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t esi5;
    int32_t eax6;
    int32_t esi7;
    int32_t eax8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(esi5 + eax6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi7 + eax8) + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_4094f4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t edi5;
    int32_t eax6;
    int32_t edi7;
    int32_t eax8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(edi5 + eax6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi7 + eax8) + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409504() {
    unsigned char* eax1;
    unsigned char* eax2;
    unsigned char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    unsigned char* eax7;
    unsigned char al8;

    *eax1 = reinterpret_cast<unsigned char>(*eax2 | al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(al8 | 8);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
}

void fun_409514() {
    uint32_t* eax1;
    uint32_t* eax2;
    uint32_t eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    unsigned char* eax7;
    unsigned char al8;

    *eax1 = *eax2 | eax3;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(al8 | 9);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
}

void fun_409524() {
    unsigned char* eax1;
    unsigned char al2;
    unsigned char* eax3;
    unsigned char* eax4;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(al2 | *eax3);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 10);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409534() {
    unsigned char* eax1;
    uint32_t eax2;
    uint32_t* eax3;

    eax1 = reinterpret_cast<unsigned char*>(eax2 | *eax3);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 11);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
}

void fun_409544() {
    unsigned char* eax1;
    unsigned char al2;
    unsigned char* eax3;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al2));
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 12);
    *eax3 = reinterpret_cast<unsigned char>(*eax3 + *reinterpret_cast<unsigned char*>(&eax3));
}

void fun_409554() {
    signed char* eax1;
    uint32_t eax2;

    eax1 = reinterpret_cast<signed char*>(eax2 | 0xc000000 | 0x8000);
    *eax1 = reinterpret_cast<signed char>(*eax1 + *reinterpret_cast<signed char*>(&eax1));
}

void fun_409564(int32_t ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t esi5;
    int32_t esi6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(esi5 + ecx) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi6 + ecx) + *reinterpret_cast<signed char*>(&ecx));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409574(int32_t ecx) {
    int32_t edi2;
    int32_t edi3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    __asm__("sldt word [eax]");
    *reinterpret_cast<signed char*>(edi2 + ecx) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi3 + ecx) + *reinterpret_cast<signed char*>(&ecx));
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_409584() {
    unsigned char* eax1;
    signed char* eax2;
    signed char al3;
    uint1_t cf4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;
    unsigned char* eax8;
    unsigned char al9;

    *eax1 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax2 + al3) + cf4);
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
    *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(al9 | 16);
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + *reinterpret_cast<unsigned char*>(&eax8));
}

void fun_409594() {
    uint32_t* eax1;
    int32_t* eax2;
    int32_t eax3;
    uint1_t cf4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;
    unsigned char* eax8;
    unsigned char al9;

    *eax1 = *eax2 + eax3 + cf4;
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
    *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(al9 | 17);
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + *reinterpret_cast<unsigned char*>(&eax8));
}

void fun_4095a4() {
    unsigned char* eax1;
    signed char al2;
    signed char* eax3;
    uint1_t cf4;
    unsigned char* eax5;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(al2 + *eax3) + cf4);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 18);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_4095b4() {
    unsigned char* eax1;
    int32_t eax2;
    int32_t* eax3;
    uint1_t cf4;

    eax1 = reinterpret_cast<unsigned char*>(eax2 + *eax3 + cf4);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 19);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
}

void fun_4095c4() {
    unsigned char* eax1;
    signed char al2;
    uint1_t cf3;
    unsigned char* eax4;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(static_cast<int32_t>(al2)) + cf3);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 20);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_4095d4() {
    uint32_t tmp32_1;
    int32_t eax2;
    uint1_t cf3;
    signed char* eax4;
    uint32_t eax5;

    tmp32_1 = eax2 + 0xc000000 + cf3;
    eax4 = reinterpret_cast<signed char*>(tmp32_1 + 0x8000 + reinterpret_cast<uint1_t>(tmp32_1 < eax5));
    *eax4 = reinterpret_cast<signed char>(*eax4 + *reinterpret_cast<signed char*>(&eax4));
}

void fun_4095e4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t esi5;
    int32_t edx6;
    int32_t esi7;
    int32_t edx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(esi5 + edx6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi7 + edx8) + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_4095f4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t edi5;
    int32_t edx6;
    int32_t edi7;
    int32_t edx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(edi5 + edx6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi7 + edx8) + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409604() {
    unsigned char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    signed char al5;
    uint1_t cf6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    unsigned char* eax10;
    unsigned char al11;

    *eax1 = reinterpret_cast<unsigned char>(*eax2 - reinterpret_cast<unsigned char>(al3 + reinterpret_cast<uint1_t>(*eax4 < reinterpret_cast<unsigned char>(al5 + cf6))));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<unsigned char>(al11 | 24);
    *eax10 = reinterpret_cast<unsigned char>(*eax10 + *reinterpret_cast<unsigned char*>(&eax10));
}

void fun_409614() {
    uint32_t* eax1;
    int32_t* eax2;
    int32_t eax3;
    uint32_t* eax4;
    int32_t eax5;
    uint1_t cf6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    unsigned char* eax10;
    unsigned char al11;

    *eax1 = *eax2 - (eax3 + reinterpret_cast<uint1_t>(*eax4 < eax5 + cf6));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<unsigned char>(al11 | 25);
    *eax10 = reinterpret_cast<unsigned char>(*eax10 + *reinterpret_cast<unsigned char*>(&eax10));
}

void fun_409624() {
    unsigned char* eax1;
    signed char al2;
    signed char* eax3;
    unsigned char al4;
    signed char* eax5;
    uint1_t cf6;
    unsigned char* eax7;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(al2 - reinterpret_cast<unsigned char>(*eax3 + reinterpret_cast<uint1_t>(al4 < reinterpret_cast<unsigned char>(*eax5 + cf6))));
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 26);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
}

void fun_409634() {
    unsigned char* eax1;
    void* eax2;
    int32_t* eax3;
    uint32_t eax4;
    int32_t* eax5;
    uint1_t cf6;

    eax1 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax2) - (*eax3 + reinterpret_cast<uint1_t>(eax4 < *eax5 + cf6)));
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 27);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
}

void fun_409644() {
    unsigned char* eax1;
    signed char al2;
    unsigned char al3;
    uint1_t cf4;
    unsigned char* eax5;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(al2 - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(al3 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf4))))));
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 28);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409654() {
    uint1_t cf1;
    uint32_t eax2;
    uint1_t cf3;
    void* eax4;
    void* eax5;
    signed char* eax6;

    cf1 = reinterpret_cast<uint1_t>(eax2 < 0xc000000 + cf3);
    eax4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax5) - (0xc000000 + cf1));
    eax6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax4) - (0x8000 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax4) < 0x8000 + cf1)));
    *eax6 = reinterpret_cast<signed char>(*eax6 + *reinterpret_cast<signed char*>(&eax6));
}

void fun_409664(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t esi5;
    int32_t ebx6;
    int32_t esi7;
    int32_t ebx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(esi5 + ebx6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi7 + ebx8) + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409674(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t edi5;
    int32_t ebx6;
    int32_t edi7;
    int32_t ebx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(edi5 + ebx6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi7 + ebx8) + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409684() {
    unsigned char* eax1;
    unsigned char* eax2;
    unsigned char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    unsigned char* eax7;
    unsigned char al8;

    *eax1 = reinterpret_cast<unsigned char>(*eax2 & al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(al8 | 32);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
}

void fun_409694() {
    uint32_t* eax1;
    uint32_t* eax2;
    uint32_t eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    unsigned char* eax7;
    unsigned char al8;

    *eax1 = *eax2 & eax3;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(al8 | 33);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
}

void fun_4096a4() {
    unsigned char* eax1;
    unsigned char al2;
    unsigned char* eax3;
    unsigned char* eax4;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(al2 & *eax3);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 34);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_4096b4() {
    unsigned char* eax1;
    uint32_t eax2;
    uint32_t* eax3;

    eax1 = reinterpret_cast<unsigned char*>(eax2 & *eax3);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 35);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
}

void fun_4096c4() {
    unsigned char* eax1;
    unsigned char* eax2;

    *reinterpret_cast<unsigned char*>(&eax1) = 0;
    *eax1 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*eax1));
    *reinterpret_cast<unsigned char*>(&eax2) = 36;
    *eax2 = reinterpret_cast<unsigned char>(*eax2 + 36);
}

void fun_4096d4() {
    signed char tmp8_1;

    tmp8_1 = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&g0)));
    *reinterpret_cast<signed char*>(&g0) = tmp8_1;
}

void fun_4096e4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* esi5;
    signed char* esi6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *esi5 = reinterpret_cast<signed char>(*esi6 + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_4096f4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* edi5;
    signed char* edi6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("daa ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *edi5 = reinterpret_cast<signed char>(*edi6 + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409704() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    unsigned char* eax7;
    unsigned char al8;

    *eax1 = reinterpret_cast<signed char>(*eax2 - al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(al8 | 40);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
}

void fun_409714() {
    int32_t* eax1;
    int32_t* eax2;
    int32_t eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    unsigned char* eax7;
    unsigned char al8;

    *eax1 = *eax2 - eax3;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(al8 | 41);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
}

void fun_409724() {
    unsigned char* eax1;
    signed char al2;
    signed char* eax3;
    unsigned char* eax4;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(al2 - *eax3);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 42);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409734() {
    unsigned char* eax1;
    void* eax2;
    int32_t* eax3;

    eax1 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax2) - *eax3);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 43);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
}

void fun_409744() {
    unsigned char* eax1;
    unsigned char al2;
    unsigned char* eax3;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al2));
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 44);
    *eax3 = reinterpret_cast<unsigned char>(*eax3 + *reinterpret_cast<unsigned char*>(&eax3));
}

void fun_409754() {
    signed char* eax1;
    void* eax2;

    eax1 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax2) - 0xc000000 - 0x8000);
    *eax1 = reinterpret_cast<signed char>(*eax1 + *reinterpret_cast<signed char*>(&eax1));
}

void fun_409764(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t esi5;
    int32_t ebp6;
    int32_t esi7;
    int32_t ebp8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(esi5 + ebp6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi7 + ebp8) + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409774(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t edi5;
    int32_t ebp6;
    int32_t edi7;
    int32_t ebp8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("das ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(edi5 + ebp6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi7 + ebp8) + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409784() {
    unsigned char* eax1;
    unsigned char* eax2;
    unsigned char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    unsigned char* eax7;
    unsigned char al8;

    *eax1 = reinterpret_cast<unsigned char>(*eax2 ^ al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(al8 | 48);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
}

void fun_409794() {
    uint32_t* eax1;
    uint32_t* eax2;
    uint32_t eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    unsigned char* eax7;
    unsigned char al8;

    *eax1 = *eax2 ^ eax3;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *reinterpret_cast<unsigned char*>(&eax7) = reinterpret_cast<unsigned char>(al8 | 49);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
}

void fun_4097a4() {
    unsigned char* eax1;
    unsigned char al2;
    unsigned char* eax3;
    unsigned char* eax4;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(al2 ^ *eax3);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 50);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_4097b4() {
    unsigned char* eax1;
    uint32_t eax2;
    uint32_t* eax3;

    eax1 = reinterpret_cast<unsigned char*>(eax2 ^ *eax3);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 51);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
}

void fun_4097c4() {
    unsigned char* eax1;
    unsigned char al2;
    unsigned char* eax3;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al2));
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 52);
    *eax3 = reinterpret_cast<unsigned char>(*eax3 + *reinterpret_cast<unsigned char*>(&eax3));
}

void fun_4097d4() {
    signed char* eax1;
    uint32_t eax2;

    eax1 = reinterpret_cast<signed char*>(eax2 ^ 0xc000000 ^ 0x8000);
    *eax1 = reinterpret_cast<signed char>(*eax1 + *reinterpret_cast<signed char*>(&eax1));
}

void fun_4097e4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t esi5;
    int32_t esi6;
    int32_t esi7;
    int32_t esi8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(esi5 + esi6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi7 + esi8) + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_4097f4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t edi5;
    int32_t esi6;
    int32_t edi7;
    int32_t esi8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("aaa ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(edi5 + esi6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi7 + esi8) + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409804() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 56);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409814() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 57);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409824() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 58);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409834() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 59);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409844() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 60);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409854() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
}

void fun_409864(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t esi5;
    int32_t edi6;
    int32_t esi7;
    int32_t edi8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(esi5 + edi6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi7 + edi8) + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409874(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t edi5;
    int32_t edi6;
    int32_t edi7;
    int32_t edi8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("aas ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(edi5 + edi6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi7 + edi8) + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

struct s235 {
    signed char[1] pad1;
    signed char f1;
};

void fun_409884(signed char cl) {
    signed char* eax2;
    struct s235* eax3;

    eax2 = &eax3->f1;
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
    eax2[reinterpret_cast<int32_t>(eax2) * 2] = reinterpret_cast<signed char>(eax2[reinterpret_cast<int32_t>(eax2) * 2] + cl);
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
}

struct s236 {
    signed char[1] pad1;
    signed char f1;
};

void fun_409894(struct s236* ecx) {
    signed char* ecx2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    int32_t eax6;
    int32_t eax7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;

    ecx2 = &ecx->f1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    ecx2[eax6 * 2] = reinterpret_cast<signed char>(ecx2[eax7 * 2] + *reinterpret_cast<signed char*>(&ecx2));
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
}

struct s237 {
    signed char[1] pad1;
    signed char f1;
};

void fun_4098a4(signed char cl) {
    signed char* edx2;
    struct s237* edx3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    int32_t eax7;
    int32_t eax8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    edx2 = &edx3->f1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    edx2[eax7 * 2] = reinterpret_cast<signed char>(edx2[eax8 * 2] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

struct s238 {
    signed char[1] pad1;
    signed char f1;
};

void fun_4098b4(signed char cl) {
    signed char* ebx2;
    struct s238* ebx3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    int32_t eax7;
    int32_t eax8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    ebx2 = &ebx3->f1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    ebx2[eax7 * 2] = reinterpret_cast<signed char>(ebx2[eax8 * 2] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_4098c4(signed char cl) {
    signed char* esp2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    int32_t eax6;
    int32_t eax7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;

    esp2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 1);
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    esp2[eax6 * 2] = reinterpret_cast<signed char>(esp2[eax7 * 2] + cl);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
}

void fun_4098d4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t eax5;
    int32_t eax6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(eax5 * 2 + 0x8000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax6 * 2 + 0x8000) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

struct s239 {
    signed char[1] pad1;
    signed char f1;
};

void fun_4098e4(signed char cl) {
    signed char* esi2;
    struct s239* esi3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    int32_t eax7;
    int32_t eax8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    esi2 = &esi3->f1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    esi2[eax7 * 2] = reinterpret_cast<signed char>(esi2[eax8 * 2] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

struct s240 {
    signed char[1] pad1;
    signed char f1;
};

void fun_4098f4(signed char cl) {
    signed char* edi2;
    struct s240* edi3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    int32_t eax7;
    int32_t eax8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    edi2 = &edi3->f1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    edi2[eax7 * 2] = reinterpret_cast<signed char>(edi2[eax8 * 2] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409904(int32_t ecx) {
    signed char* eax2;
    void* eax3;

    eax2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax3) - 1);
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
    eax2[ecx * 2] = reinterpret_cast<signed char>(eax2[ecx * 2] + *reinterpret_cast<signed char*>(&ecx));
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
}

void fun_409914(void* ecx) {
    signed char* ecx2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;

    ecx2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) - 1);
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    ecx2[reinterpret_cast<int32_t>(ecx2) * 2] = reinterpret_cast<signed char>(ecx2[reinterpret_cast<int32_t>(ecx2) * 2] + *reinterpret_cast<signed char*>(&ecx2));
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
}

void fun_409924(int32_t ecx) {
    signed char* edx2;
    void* edx3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    edx2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx3) - 1);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    edx2[ecx * 2] = reinterpret_cast<signed char>(edx2[ecx * 2] + *reinterpret_cast<signed char*>(&ecx));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409934(int32_t ecx) {
    signed char* ebx2;
    void* ebx3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    ebx2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx3) - 1);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    ebx2[ecx * 2] = reinterpret_cast<signed char>(ebx2[ecx * 2] + *reinterpret_cast<signed char*>(&ecx));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409944(int32_t ecx) {
    signed char* esp2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;

    esp2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 1);
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    esp2[ecx * 2] = reinterpret_cast<signed char>(esp2[ecx * 2] + *reinterpret_cast<signed char*>(&ecx));
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
}

void fun_409954(int32_t ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(ecx * 2 + 0x8000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx * 2 + 0x8000) + *reinterpret_cast<signed char*>(&ecx));
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
}

void fun_409964(int32_t ecx) {
    signed char* esi2;
    void* esi3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    esi2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi3) - 1);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    esi2[ecx * 2] = reinterpret_cast<signed char>(esi2[ecx * 2] + *reinterpret_cast<signed char*>(&ecx));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409974(int32_t ecx) {
    signed char* edi2;
    void* edi3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    edi2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi3) - 1);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    edi2[ecx * 2] = reinterpret_cast<signed char>(edi2[ecx * 2] + *reinterpret_cast<signed char*>(&ecx));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409984(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    int32_t edx6;
    signed char* eax7;
    int32_t edx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    eax5[edx6 * 2] = reinterpret_cast<signed char>(eax7[edx8 * 2] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409994(signed char* ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t edx5;
    int32_t edx6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    ecx[edx5 * 2] = reinterpret_cast<signed char>(ecx[edx6 * 2] + *reinterpret_cast<signed char*>(&ecx));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_4099a4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* edx5;
    int32_t edx6;
    signed char* edx7;
    int32_t edx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    edx5[edx6 * 2] = reinterpret_cast<signed char>(edx7[edx8 * 2] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_4099b4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* ebx5;
    int32_t edx6;
    signed char* ebx7;
    int32_t edx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    ebx5[edx6 * 2] = reinterpret_cast<signed char>(ebx7[edx8 * 2] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_4099c4(signed char cl) {
    signed char* esp2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    int32_t edx6;
    int32_t edx7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;

    esp2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    esp2[edx6 * 2] = reinterpret_cast<signed char>(esp2[edx7 * 2] + cl);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
}

void fun_4099d4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t edx5;
    int32_t edx6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(edx5 * 2 + 0x8000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx6 * 2 + 0x8000) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_4099e4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* esi5;
    int32_t edx6;
    signed char* esi7;
    int32_t edx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    esi5[edx6 * 2] = reinterpret_cast<signed char>(esi7[edx8 * 2] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_4099f4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* edi5;
    int32_t edx6;
    signed char* edi7;
    int32_t edx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    edi5[edx6 * 2] = reinterpret_cast<signed char>(edi7[edx8 * 2] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409a04(signed char cl) {
    signed char* eax2;
    int32_t ebx3;
    int32_t ebx4;

    eax2 = reinterpret_cast<signed char*>(__return_address());
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
    eax2[ebx3 * 2] = reinterpret_cast<signed char>(eax2[ebx4 * 2] + cl);
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
}

void fun_409a14() {
    signed char* ecx1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebx5;
    int32_t ebx6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    ecx1 = reinterpret_cast<signed char*>(__return_address());
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    ecx1[ebx5 * 2] = reinterpret_cast<signed char>(ecx1[ebx6 * 2] + *reinterpret_cast<signed char*>(&ecx1));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409a24(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebx5;
    int32_t ebx6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + ebx5 * 2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + ebx6 * 2) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409a34(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + reinterpret_cast<int32_t>(__return_address()) * 2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + reinterpret_cast<int32_t>(__return_address()) * 2) + cl);
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
}

void fun_409a44(signed char cl) {
    signed char* esp2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    int32_t ebx6;
    int32_t ebx7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;

    esp2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + 4);
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    esp2[ebx6 * 2] = reinterpret_cast<signed char>(esp2[ebx7 * 2] + cl);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
}

void fun_409a54(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebx5;
    int32_t ebx6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(ebx5 * 2 + 0x8000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx6 * 2 + 0x8000) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409a64(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebx5;
    int32_t ebx6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + ebx5 * 2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + ebx6 * 2) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409a74(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebx5;
    int32_t ebx6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + ebx5 * 2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__return_address()) + ebx6 * 2) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409a84(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    signed char* eax6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("pushad ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *eax5 = reinterpret_cast<signed char>(*eax6 + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409a94(signed char* ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;

    __asm__("popad ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *ecx = reinterpret_cast<signed char>(*ecx + *reinterpret_cast<signed char*>(&ecx));
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
}

void fun_409aa6() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 98);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409ab4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("arpl [eax], ax");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 99);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409ac4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
}

signed char* g8000;

void fun_409ad4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char tmp8_5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    tmp8_5 = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&g8000) + cl);
    *reinterpret_cast<signed char*>(&g8000) = tmp8_5;
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
}

void fun_409ae4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* esi5;
    signed char* esi6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *esi5 = reinterpret_cast<signed char>(*esi6 + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409af4(signed char cl) {
    int16_t bx2;
    int16_t si3;
    int16_t bx4;
    int16_t si5;
    signed char al6;
    signed char* edi7;
    signed char* edi8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *reinterpret_cast<signed char*>(bx2 + si3) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(bx4 + si5) + al6);
    *edi7 = reinterpret_cast<signed char>(*edi8 + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409b04() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
}

void fun_409b14() {
    signed char* eax1;
    int32_t* eax2;

    eax1 = reinterpret_cast<signed char*>(*eax2 * 0x690c0000);
    *eax1 = reinterpret_cast<signed char>(*eax1 + *reinterpret_cast<signed char*>(&eax1));
}

void fun_409b24() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0x6a);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409b34(signed char cl) {
    signed char* ebx2;
    int32_t ebp3;
    signed char* ebx4;
    int32_t ebp5;
    signed char tmp8_6;

    ebx2[ebp3 * 2] = reinterpret_cast<signed char>(ebx4[ebp5 * 2] + cl);
    tmp8_6 = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&g0)));
    *reinterpret_cast<signed char*>(&g0) = tmp8_6;
}

void fun_409b44(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebp5;
    int32_t ebp6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("insb ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ebp5 * 2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ebp6 * 2) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409b54(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebp5;
    int32_t ebp6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("insd ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(ebp5 * 2 + 0x8000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp6 * 2 + 0x8000) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409b64(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* esi5;
    int32_t ebp6;
    signed char* esi7;
    int32_t ebp8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("outsb ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    esi5[ebp6 * 2] = reinterpret_cast<signed char>(esi7[ebp8 * 2] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409b74(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* edi5;
    int32_t ebp6;
    signed char* edi7;
    int32_t ebp8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("outsd ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    edi5[ebp6 * 2] = reinterpret_cast<signed char>(edi7[ebp8 * 2] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409b84() {
    int1_t of1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x70);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409b94() {
    int1_t of1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x71);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409ba4() {
    int1_t cf1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x72);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409bb4() {
    int1_t cf1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x73);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409bc4() {
    int1_t zf1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x74);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409bd4() {
    int1_t zf1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x75);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409be4() {
    int1_t below_or_equal1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x76);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409bf4() {
    int1_t below_or_equal1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x77);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409c04() {
    int1_t sf1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x78);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409c14() {
    int1_t sf1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x79);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409c24() {
    int1_t pf1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x7a);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409c34() {
    int1_t pf1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x7b);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409c44() {
    int1_t less1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x7c);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409c54() {
    int1_t less1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x7d);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409c64() {
    int1_t less_or_equal1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x7e);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409c74() {
    int1_t less_or_equal1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x7f);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409c84(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char* eax4;
    int32_t eax5;
    signed char* eax6;
    int32_t eax7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;

    *eax2 = reinterpret_cast<signed char>(static_cast<int32_t>(*eax3));
    eax4[eax5 * 4] = reinterpret_cast<signed char>(eax6[eax7 * 4] + cl);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
}

void fun_409c94() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 - 0x7ef40000;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_409ca4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char* edx4;
    int32_t eax5;
    signed char* edx6;
    int32_t eax7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;

    *eax2 = reinterpret_cast<signed char>(static_cast<int32_t>(*eax3));
    edx4[eax5 * 4] = reinterpret_cast<signed char>(edx6[eax7 * 4] + cl);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
}

void fun_409cb4(signed char cl) {
    int32_t* eax2;
    int32_t* eax3;
    signed char* ebx4;
    int32_t eax5;
    signed char* ebx6;
    int32_t eax7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;

    *eax2 = *eax3;
    ebx4[eax5 * 4] = reinterpret_cast<signed char>(ebx6[eax7 * 4] + cl);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
}

void fun_409cc4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0x84);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409cd4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0x85);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409ce4() {
    unsigned char tmp8_1;
    unsigned char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char* eax6;

    tmp8_1 = *eax2;
    *eax3 = al4;
    *reinterpret_cast<unsigned char*>(&eax5) = tmp8_1;
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
    *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) | 0x86);
    *eax6 = reinterpret_cast<unsigned char>(*eax6 + *reinterpret_cast<unsigned char*>(&eax6));
}

void fun_409cf4() {
    unsigned char* tmp32_1;
    unsigned char** eax2;
    int32_t* eax3;
    int32_t eax4;
    unsigned char* eax5;

    tmp32_1 = *eax2;
    *eax3 = eax4;
    eax5 = tmp32_1;
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) | 0x87);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409d04() {
    signed char* eax1;
    signed char al2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    unsigned char* eax6;
    unsigned char al7;

    *eax1 = al2;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(al7 | 0x88);
    *eax6 = reinterpret_cast<unsigned char>(*eax6 + *reinterpret_cast<unsigned char*>(&eax6));
}

void fun_409d14() {
    int32_t* eax1;
    int32_t eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    unsigned char* eax6;
    unsigned char al7;

    *eax1 = eax2;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(al7 | 0x89);
    *eax6 = reinterpret_cast<unsigned char>(*eax6 + *reinterpret_cast<unsigned char*>(&eax6));
}

void fun_409d24() {
    unsigned char* eax1;
    unsigned char* eax2;
    unsigned char* eax3;

    *reinterpret_cast<unsigned char*>(&eax1) = *eax2;
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 0x8a);
    *eax3 = reinterpret_cast<unsigned char>(*eax3 + *reinterpret_cast<unsigned char*>(&eax3));
}

void fun_409d34() {
    unsigned char* eax1;
    unsigned char** eax2;

    eax1 = *eax2;
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 0x8b);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
}

void fun_409d44() {
    uint32_t* eax1;
    uint16_t es2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    unsigned char* eax6;
    unsigned char al7;

    *eax1 = es2;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(al7 | 0x8c);
    *eax6 = reinterpret_cast<unsigned char>(*eax6 + *reinterpret_cast<unsigned char*>(&eax6));
}

void fun_409d54() {
    unsigned char* eax1;
    unsigned char* eax2;

    eax1 = eax2;
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) | 0x8d);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
}

void fun_409d64() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0x8e);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409d74() {
    int32_t* eax1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax1 = reinterpret_cast<int32_t>(__return_address());
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0x8f);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_409d85(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    int32_t edx6;
    signed char* eax7;
    int32_t edx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    eax5[edx6 * 4] = reinterpret_cast<signed char>(eax7[edx8 * 4] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409d94(signed char* ecx) {
    signed char* ecx2;
    signed char* eax3;
    signed char* eax4;
    int32_t edx5;
    int32_t edx6;

    ecx2 = eax3;
    eax4 = ecx;
    *eax4 = reinterpret_cast<signed char>(*eax4 + *reinterpret_cast<signed char*>(&eax4));
    ecx2[edx5 * 4] = reinterpret_cast<signed char>(ecx2[edx6 * 4] + *reinterpret_cast<signed char*>(&ecx2));
    *eax4 = reinterpret_cast<signed char>(*eax4 + *reinterpret_cast<signed char*>(&eax4));
}

void fun_409da4(signed char cl) {
    signed char* eax2;
    signed char* edx3;
    signed char* eax4;

    eax2 = edx3;
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
    eax4[reinterpret_cast<int32_t>(eax4) * 4] = reinterpret_cast<signed char>(eax4[reinterpret_cast<int32_t>(eax4) * 4] + cl);
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
}

void fun_409db4(signed char cl) {
    signed char* eax2;
    signed char* ebx3;
    signed char* eax4;
    int32_t edx5;
    int32_t edx6;

    eax2 = ebx3;
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
    eax4[edx5 * 4] = reinterpret_cast<signed char>(eax4[edx6 * 4] + cl);
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
}

void fun_409dc4(signed char cl) {
    signed char* eax2;
    int32_t edx3;
    int32_t edx4;

    eax2[edx3 * 4] = reinterpret_cast<signed char>(eax2[edx4 * 4] + cl);
}

void fun_409dd4(signed char cl) {
    signed char* eax2;
    signed char* ebp3;
    int32_t edx4;
    int32_t edx5;

    eax2 = ebp3;
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
    *reinterpret_cast<signed char*>(edx4 * 4 + 0x8000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx5 * 4 + 0x8000) + cl);
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
}

void fun_409de4(signed char cl) {
    signed char* eax2;
    signed char* esi3;
    signed char* eax4;
    int32_t edx5;
    int32_t edx6;

    eax2 = esi3;
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
    eax4[edx5 * 4] = reinterpret_cast<signed char>(eax4[edx6 * 4] + cl);
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
}

void fun_409df4(signed char cl) {
    signed char* eax2;
    signed char* edi3;
    signed char* eax4;
    int32_t edx5;
    int32_t edx6;

    eax2 = edi3;
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
    eax4[edx5 * 4] = reinterpret_cast<signed char>(eax4[edx6 * 4] + cl);
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
}

void fun_409e04(signed char cl) {
    signed char* eax2;
    int16_t ax3;
    int32_t ebx4;
    int32_t ebx5;

    eax2 = reinterpret_cast<signed char*>(static_cast<int32_t>(ax3));
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
    eax2[ebx4 * 4] = reinterpret_cast<signed char>(eax2[ebx5 * 4] + cl);
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
}

void fun_409e14(signed char* ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebx5;
    int32_t ebx6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("cdq ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    ecx[ebx5 * 4] = reinterpret_cast<signed char>(ecx[ebx6 * 4] + *reinterpret_cast<signed char*>(&ecx));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

signed char* fun_c0009a0(int32_t a1);

void fun_409e24() {
    signed char* eax1;

    eax1 = fun_c0009a0(__return_address());
    *eax1 = reinterpret_cast<signed char>(static_cast<int32_t>(*eax1));
    *eax1 = reinterpret_cast<signed char>(*eax1 + *reinterpret_cast<signed char*>(&eax1));
}

void fun_409e34(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* ebx5;
    int32_t ebx6;
    signed char* ebx7;
    int32_t ebx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("wait ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    ebx5[ebx6 * 4] = reinterpret_cast<signed char>(ebx7[ebx8 * 4] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409e44(signed char cl) {
    signed char* esp2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    int32_t ebx6;
    int32_t ebx7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;

    esp2 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    esp2[ebx6 * 4] = reinterpret_cast<signed char>(esp2[ebx7 * 4] + cl);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
}

void fun_409e54(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebx5;
    int32_t ebx6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(ebx5 * 4 + 0x8000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx6 * 4 + 0x8000) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409e64(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* esi5;
    int32_t ebx6;
    signed char* esi7;
    int32_t ebx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    esi5[ebx6 * 4] = reinterpret_cast<signed char>(esi7[ebx8 * 4] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409e74(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* edi5;
    int32_t ebx6;
    signed char* edi7;
    int32_t ebx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("lahf ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    edi5[ebx6 * 4] = reinterpret_cast<signed char>(edi7[ebx8 * 4] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409e84() {
    signed char* eax1;

    *reinterpret_cast<signed char*>(&eax1) = *reinterpret_cast<signed char*>(&g8000);
    *eax1 = reinterpret_cast<signed char>(*eax1 + *reinterpret_cast<signed char*>(&eax1));
}

void fun_409e94() {
    signed char* eax1;

    eax1 = g8000;
    *eax1 = reinterpret_cast<signed char>(*eax1 + *reinterpret_cast<signed char*>(&eax1));
}

int32_t gc000000;

void fun_409ea4() {
    signed char al1;
    signed char al2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *reinterpret_cast<signed char*>(&gc000000) = al1;
    *reinterpret_cast<signed char*>(&g8000) = al2;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_409eb4() {
    int32_t eax1;
    signed char* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    gc000000 = eax1;
    g8000 = eax2;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_409ec4(signed char cl) {
    signed char* edi2;
    signed char* esi3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *edi2 = *esi3;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409ed4(signed char cl) {
    int32_t* edi2;
    int32_t* esi3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char tmp8_7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;

    *edi2 = *esi3;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    tmp8_7 = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&g8000) + cl);
    *reinterpret_cast<signed char*>(&g8000) = tmp8_7;
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
}

struct s241 {
    signed char[1] pad1;
    signed char f1;
};

void fun_409ee4(signed char cl) {
    signed char* esi2;
    struct s241* esi3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    esi2 = &esi3->f1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *esi2 = reinterpret_cast<signed char>(*esi2 + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

struct s242 {
    signed char[4] pad4;
    signed char f4;
};

void fun_409ef4(signed char cl) {
    signed char* edi2;
    struct s242* edi3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    edi2 = &edi3->f4;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *edi2 = reinterpret_cast<signed char>(*edi2 + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409f04() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xa8);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409f14() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
}

void fun_409f24(signed char cl) {
    signed char* edi2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* edx7;
    int32_t ebp8;
    signed char* edx9;
    int32_t ebp10;
    signed char* eax11;
    signed char* eax12;
    signed char al13;

    *edi2 = al3;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    edx7[ebp8 * 4] = reinterpret_cast<signed char>(edx9[ebp10 * 4] + cl);
    *eax11 = reinterpret_cast<signed char>(*eax12 + al13);
}

void fun_409f34(signed char cl) {
    int32_t* edi2;
    int32_t eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* ebx7;
    int32_t ebp8;
    signed char* ebx9;
    int32_t ebp10;
    signed char* eax11;
    signed char* eax12;
    signed char al13;

    *edi2 = eax3;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    ebx7[ebp8 * 4] = reinterpret_cast<signed char>(ebx9[ebp10 * 4] + cl);
    *eax11 = reinterpret_cast<signed char>(*eax12 + al13);
}

void fun_409f44(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebp5;
    int32_t ebp6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("lodsb ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ebp5 * 4) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ebp6 * 4) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_409f54(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebp5;
    int32_t ebp6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("lodsd ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(ebp5 * 4 + 0x8000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp6 * 4 + 0x8000) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

struct s243 {
    signed char[1] pad1;
    signed char f1;
};

void fun_409f64(signed char cl) {
    signed char* esi2;
    struct s243* esi3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    int32_t ebp7;
    int32_t ebp8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    esi2 = &esi3->f1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    esi2[ebp7 * 4] = reinterpret_cast<signed char>(esi2[ebp8 * 4] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

struct s244 {
    signed char[4] pad4;
    signed char f4;
};

void fun_409f74(signed char cl) {
    signed char* edi2;
    struct s244* edi3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    int32_t ebp7;
    int32_t ebp8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    edi2 = &edi3->f4;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    edi2[ebp7 * 4] = reinterpret_cast<signed char>(edi2[ebp8 * 4] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_409f84() {
    unsigned char* eax1;
    unsigned char* eax2;

    *reinterpret_cast<unsigned char*>(&eax1) = 0;
    *eax1 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*eax1));
    *reinterpret_cast<unsigned char*>(&eax2) = 0xb0;
    *eax2 = reinterpret_cast<unsigned char>(*eax2 + 0xb0);
}

void fun_409f94() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xb1);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409fa4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xb2);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409fb4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xb3);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409fc4() {
    unsigned char* eax1;
    signed char al2;
    unsigned char al3;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax1) + 1) = 0;
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + al2);
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(al3 | 0xb4);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
}

void fun_409fd4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xb5);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409fe4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xb6);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_409ff4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xb7);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a004() {
    signed char tmp8_1;

    tmp8_1 = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&g8000)));
    *reinterpret_cast<signed char*>(&g8000) = tmp8_1;
}

void fun_40a014() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
}

void fun_40a024() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
}

void fun_40a034() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
}

void fun_40a044() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
}

void fun_40a054() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
}

void fun_40a064() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
}

void fun_40a074() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
}

void fun_40a084(signed char cl) {
    signed char* eax2;
    int32_t eax3;
    signed char* eax4;
    int32_t eax5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;

    __asm__("rol byte [eax], 0x0");
    eax2[eax3 * 8] = reinterpret_cast<signed char>(eax4[eax5 * 8] + cl);
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
}

void fun_40a094(signed char* ecx) {
    int32_t eax2;
    int32_t eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    __asm__("rol dword [eax], 0x0");
    ecx[eax2 * 8] = reinterpret_cast<signed char>(ecx[eax3 * 8] + *reinterpret_cast<signed char*>(&ecx));
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_40a0a4() {
    return;
}

void fun_40a0b4() {
    return;
}

void fun_40a0c4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("les eax, [eax]");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xc4);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a0d4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("lds eax, [eax]");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xc5);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a0e4(signed char cl) {
    signed char* eax2;
    signed char* esi3;
    int32_t eax4;
    signed char* esi5;
    int32_t eax6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = 0;
    esi3[eax4 * 8] = reinterpret_cast<signed char>(esi5[eax6 * 8] + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_40a0f4() {
    int32_t* eax1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;

    *eax1 = 0xc70c0000;
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
}

void fun_40a104() {
    unsigned char* eax1;
    unsigned char al2;

    __asm__("enter 0x0, 0x0");
    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(al2 | 0xc8);
    *eax1 = reinterpret_cast<unsigned char>(*eax1 + *reinterpret_cast<unsigned char*>(&eax1));
}

void fun_40a114(signed char* ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    ecx[reinterpret_cast<int32_t>(ecx) * 8] = reinterpret_cast<signed char>(ecx[reinterpret_cast<int32_t>(ecx) * 8] + *reinterpret_cast<signed char*>(&ecx));
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
}

void fun_40a124(int32_t ecx) {
    signed char* edx2;
    signed char* edx3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    __asm__("retf 0x0");
    edx2[ecx * 8] = reinterpret_cast<signed char>(edx3[ecx * 8] + *reinterpret_cast<signed char*>(&ecx));
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_40a134(int32_t ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* ebx5;
    signed char* ebx6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("retf ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    ebx5[ecx * 8] = reinterpret_cast<signed char>(ebx6[ecx * 8] + *reinterpret_cast<signed char*>(&ecx));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_40a145(int32_t ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ecx * 8) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ecx * 8) + *reinterpret_cast<signed char*>(&ecx));
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
}

void fun_40a154() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("int 0x0");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xcd);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a164(int32_t ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* esi5;
    signed char* esi6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("into ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    esi5[ecx * 8] = reinterpret_cast<signed char>(esi6[ecx * 8] + *reinterpret_cast<signed char*>(&ecx));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_40a174(int32_t ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* edi5;
    signed char* edi6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("iretd ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    edi5[ecx * 8] = reinterpret_cast<signed char>(edi6[ecx * 8] + *reinterpret_cast<signed char*>(&ecx));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_40a184() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("rol byte [eax], 1");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xd0);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a194() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("rol dword [eax], 1");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xd1);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a1a4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("rol byte [eax], cl");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xd2);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a1b4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("rol dword [eax], cl");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xd3);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a1c4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("aam 0x0");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xd4);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a1d4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("aad 0x0");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xd5);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a1e4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* esi5;
    int32_t edx6;
    signed char* esi7;
    int32_t edx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("salc ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    esi5[edx6 * 8] = reinterpret_cast<signed char>(esi7[edx8 * 8] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_40a1f4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* edi5;
    int32_t edx6;
    signed char* edi7;
    int32_t edx8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("xlatb ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    edi5[edx6 * 8] = reinterpret_cast<signed char>(edi7[edx8 * 8] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_40a204() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("fadd dword [eax]");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xd8);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a214() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("fld dword [eax]");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xd9);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a224() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("fiadd dword [eax]");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xda);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a234() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("fild dword [eax]");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xdb);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a244() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("fadd qword [eax]");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xdc);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a254() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("fld qword [eax]");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xdd);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a264() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("fiadd word [eax]");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xde);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a274() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("fild word [eax]");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xdf);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a284(int32_t ecx) {
    int1_t zf2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    unsigned char* eax6;
    unsigned char al7;

    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(al7 | 0xe0);
    *eax6 = reinterpret_cast<unsigned char>(*eax6 + *reinterpret_cast<unsigned char*>(&eax6));
}

void fun_40a294(int32_t ecx) {
    uint1_t zf2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    unsigned char* eax6;
    unsigned char al7;

    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(al7 | 0xe1);
    *eax6 = reinterpret_cast<unsigned char>(*eax6 + *reinterpret_cast<unsigned char*>(&eax6));
}

void fun_40a2a4(int32_t ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0xe2);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_40a2b4(int32_t ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    unsigned char al6;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | 0xe3);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
}

void fun_40a2c4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("in al, 0x0");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xe4);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a2d4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("in eax, 0x0");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xe5);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a2e4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("out 0x0, al");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xe6);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a2f4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    __asm__("out 0x0, eax");
    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xe7);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_c40a309(int32_t a1);

void fun_40a304(int32_t a1, int32_t a2) {
    signed char* eax3;

    fun_c40a309(__return_address());
    eax3 = fun_41230e(__return_address(), a1, a2);
    *eax3 = reinterpret_cast<signed char>(*eax3 + *reinterpret_cast<signed char*>(&eax3));
}

void fun_40a314() {
}

void fun_40a324() {
}

void fun_40a334() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    unsigned char* eax4;
    unsigned char al5;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 | 0xeb);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
}

void fun_40a344(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebp5;
    int32_t ebp6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("in al, dx");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ebp5 * 8) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + ebp6 * 8) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_40a354(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t ebp5;
    int32_t ebp6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("in eax, dx");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(ebp5 * 8 + 0x8000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp6 * 8 + 0x8000) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_40a364(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* esi5;
    int32_t ebp6;
    signed char* esi7;
    int32_t ebp8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("out dx, al");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    esi5[ebp6 * 8] = reinterpret_cast<signed char>(esi7[ebp8 * 8] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_40a374(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* edi5;
    int32_t ebp6;
    signed char* edi7;
    int32_t ebp8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("out dx, eax");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    edi5[ebp6 * 8] = reinterpret_cast<signed char>(edi7[ebp8 * 8] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_40a384(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    int32_t esi6;
    signed char* eax7;
    int32_t esi8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    eax5[esi6 * 8] = reinterpret_cast<signed char>(eax7[esi8 * 8] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_40a394(signed char* ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t esi5;
    int32_t esi6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    __asm__("int1 ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    ecx[esi5 * 8] = reinterpret_cast<signed char>(ecx[esi6 * 8] + *reinterpret_cast<signed char*>(&ecx));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_40a3a4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* edx5;
    int32_t esi6;
    signed char* edx7;
    int32_t esi8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    edx5[esi6 * 8] = reinterpret_cast<signed char>(edx7[esi8 * 8] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_40a3b4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* ebx5;
    int32_t esi6;
    signed char* ebx7;
    int32_t esi8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    ebx5[esi6 * 8] = reinterpret_cast<signed char>(ebx7[esi8 * 8] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_40a3c4() {
    __asm__("hlt ");
}

void fun_40a3d4(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t esi5;
    int32_t esi6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(esi5 * 8 + 0x8000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi6 * 8 + 0x8000) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_40a3e4(signed char cl) {
    signed char* esi2;
    int32_t esi3;
    signed char* esi4;
    int32_t esi5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;

    esi2[esi3 * 8] = reinterpret_cast<signed char>(esi4[esi5 * 8] + cl);
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
}

void fun_40a3f4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
}

void fun_40a404(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    int32_t edi6;
    signed char* eax7;
    int32_t edi8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    eax5[edi6 * 8] = reinterpret_cast<signed char>(eax7[edi8 * 8] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_40a414(signed char* ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t edi5;
    int32_t edi6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    ecx[edi5 * 8] = reinterpret_cast<signed char>(ecx[edi6 * 8] + *reinterpret_cast<signed char*>(&ecx));
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_40a424(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* edx5;
    int32_t edi6;
    signed char* edx7;
    int32_t edi8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("cli ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    edx5[edi6 * 8] = reinterpret_cast<signed char>(edx7[edi8 * 8] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_40a434(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* ebx5;
    int32_t edi6;
    signed char* ebx7;
    int32_t edi8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    __asm__("sti ");
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    ebx5[edi6 * 8] = reinterpret_cast<signed char>(ebx7[edi8 * 8] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_40a444(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t edi5;
    int32_t edi6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + edi5 * 8) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + edi6 * 8) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_40a454(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t edi5;
    int32_t edi6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(edi5 * 8 + 0x8000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi6 * 8 + 0x8000) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_40a464() {
    signed char* eax1;
    signed char* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    unsigned char* eax6;
    unsigned char al7;

    *eax1 = reinterpret_cast<signed char>(*eax2 + 1);
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<unsigned char>(al7 | 0xfe);
    *eax6 = reinterpret_cast<unsigned char>(*eax6 + *reinterpret_cast<unsigned char*>(&eax6));
}

void fun_40a474(unsigned char* ecx) {
    int32_t* eax2;
    int32_t* eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    unsigned char* eax7;
    unsigned char tmp8_8;
    uint1_t cf9;
    unsigned char tmp8_10;
    uint1_t cf11;
    unsigned char* eax12;

    *eax2 = *eax3 + 1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *reinterpret_cast<unsigned char*>(&eax7) = 0xff;
    tmp8_8 = reinterpret_cast<unsigned char>(*eax7 + 0xff);
    cf9 = reinterpret_cast<uint1_t>(tmp8_8 < *eax7);
    *eax7 = tmp8_8;
    *eax7 = reinterpret_cast<unsigned char>(*eax7 - reinterpret_cast<unsigned char>(0xff + reinterpret_cast<uint1_t>(*eax7 < reinterpret_cast<unsigned char>(0xff + cf9))));
    tmp8_10 = reinterpret_cast<unsigned char>(*eax7 + 0xff);
    cf11 = reinterpret_cast<uint1_t>(tmp8_10 < *eax7);
    *eax7 = tmp8_10;
    *eax7 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax7 + 0xff) + cf11);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + 0xff);
    *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(0xff + *eax7);
    *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<unsigned char*>(&eax12));
    *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<unsigned char*>(&eax12));
    *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
}

void fun_412a2c() {
    int32_t eax1;
    int32_t eax2;
    signed char al3;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax2) + al3);
}

struct s245 {
    signed char[151587078] pad151587078;
    uint32_t f9090906;
};

void fun_413f94(unsigned char* ecx) {
    uint32_t eax2;
    uint32_t* edx3;
    uint32_t* edx4;
    uint32_t eax5;
    struct s245* eax6;
    void* eax7;
    uint32_t* eax8;
    uint32_t* edi9;
    uint32_t* edi10;

    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(&ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | eax2);
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *edx3 = *edx4 | eax5;
    eax6 = reinterpret_cast<struct s245*>(reinterpret_cast<int32_t>(eax7) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx) + reinterpret_cast<uint32_t>(ecx))));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    eax8 = &eax6->f9090906;
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *edi9 = *edi10 | reinterpret_cast<uint32_t>(eax8);
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx | reinterpret_cast<uint32_t>(ecx));
    *eax8 = *eax8 | reinterpret_cast<uint32_t>(ecx);
}

signed char g5050105;

void fun_415090(int32_t ecx) {
    signed char tmp8_2;
    signed char al3;

    tmp8_2 = reinterpret_cast<signed char>(g5050105 + al3);
    g5050105 = tmp8_2;
}

void fun_4150b8() {
    int32_t eax1;
    int32_t eax2;
    signed char al3;
    int32_t eax4;
    signed char al5;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax2) + al3);
    *reinterpret_cast<signed char*>(&eax4) = reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(al5 + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4) + 4);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax4) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax4) + eax4;
}

struct s246 {
    signed char[269488144] pad269488144;
    unsigned char f10101010;
};

unsigned char g10100e10;

void fun_41512c(uint32_t ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char dl4;
    int32_t* eax5;
    int32_t* eax6;
    int32_t edx7;
    unsigned char tmp8_8;
    signed char dl9;
    signed char* eax10;
    unsigned char* edx11;
    unsigned char tmp8_12;
    signed char* eax13;
    unsigned char dl14;
    uint1_t cf15;
    unsigned char* eax16;
    unsigned char* eax17;
    unsigned char tmp8_18;
    signed char* eax19;
    uint1_t cf20;
    unsigned char* eax21;
    unsigned char* eax22;
    unsigned char tmp8_23;
    signed char* eax24;
    uint1_t cf25;
    unsigned char* eax26;
    unsigned char* eax27;
    unsigned char tmp8_28;
    signed char* eax29;
    uint1_t cf30;
    unsigned char* eax31;
    unsigned char* eax32;
    unsigned char* eax33;
    signed char* eax34;
    unsigned char* tmp32_35;
    void** eax36;
    unsigned char* edx37;
    unsigned char tmp8_38;
    signed char* eax39;
    uint1_t cf40;
    unsigned char* eax41;
    unsigned char* eax42;
    void* eax43;
    void* eax44;
    signed char al45;
    unsigned char* tmp32_46;
    struct s246* eax47;
    unsigned char tmp8_48;
    unsigned char* eax49;
    uint1_t cf50;
    unsigned char tmp8_51;
    uint1_t cf52;
    uint32_t ecx53;
    unsigned char tmp8_54;

    *eax2 = reinterpret_cast<signed char>(*eax3 + dl4);
    *eax5 = *eax6 + edx7;
    tmp8_8 = reinterpret_cast<unsigned char>(dl9 + *eax10);
    *reinterpret_cast<unsigned char*>(&edx11) = tmp8_8;
    tmp8_12 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax13 + *reinterpret_cast<unsigned char*>(&edx11)) + reinterpret_cast<uint1_t>(tmp8_8 < dl14));
    cf15 = reinterpret_cast<uint1_t>(tmp8_12 < *eax16);
    *eax17 = tmp8_12;
    tmp8_18 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax19 + *reinterpret_cast<unsigned char*>(&edx11)) + cf15);
    cf20 = reinterpret_cast<uint1_t>(tmp8_18 < *eax21);
    *eax22 = tmp8_18;
    tmp8_23 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax24 + *reinterpret_cast<unsigned char*>(&edx11)) + cf20);
    cf25 = reinterpret_cast<uint1_t>(tmp8_23 < *eax26);
    *eax27 = tmp8_23;
    tmp8_28 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax29 + *reinterpret_cast<unsigned char*>(&edx11)) + cf25);
    cf30 = reinterpret_cast<uint1_t>(tmp8_28 < *eax31);
    *eax32 = tmp8_28;
    *eax33 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax34 + *reinterpret_cast<unsigned char*>(&edx11)) + cf30);
    tmp32_35 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx11) + reinterpret_cast<int32_t>(*eax36));
    edx37 = tmp32_35;
    tmp8_38 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax39 + *reinterpret_cast<unsigned char*>(&edx37)) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_35) < reinterpret_cast<uint32_t>(edx11)));
    cf40 = reinterpret_cast<uint1_t>(tmp8_38 < *eax41);
    *eax42 = tmp8_38;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax43) + reinterpret_cast<uint32_t>(edx37)) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax44) + reinterpret_cast<uint32_t>(edx37)) + al45) + cf40);
    tmp32_46 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax47) + 0x10101010);
    tmp8_48 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*tmp32_46 + *reinterpret_cast<unsigned char*>(&edx37)) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_46) < reinterpret_cast<uint32_t>(eax49)));
    cf50 = reinterpret_cast<uint1_t>(tmp8_48 < *tmp32_46);
    *tmp32_46 = tmp8_48;
    *tmp32_46 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*tmp32_46 + *reinterpret_cast<unsigned char*>(&edx37)) + cf50);
    *tmp32_46 = reinterpret_cast<unsigned char>(*tmp32_46 | *reinterpret_cast<unsigned char*>(&ecx));
    *tmp32_46 = reinterpret_cast<unsigned char>(*tmp32_46 | *reinterpret_cast<unsigned char*>(&edx37));
    *tmp32_46 = reinterpret_cast<unsigned char>(*tmp32_46 | reinterpret_cast<uint32_t>(edx37));
    tmp8_51 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*tmp32_46 + *reinterpret_cast<unsigned char*>(&edx37))));
    cf52 = reinterpret_cast<uint1_t>(tmp8_51 < *tmp32_46);
    *tmp32_46 = tmp8_51;
    *edx37 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*edx37 + *reinterpret_cast<unsigned char*>(&ecx)) + cf52);
    ecx53 = ecx | *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(tmp32_46) + reinterpret_cast<uint32_t>(edx37));
    tmp8_54 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(g10100e10 + *reinterpret_cast<signed char*>(&ecx53))));
    g10100e10 = tmp8_54;
}

void fun_416dc4() {
    int32_t eax1;
    int32_t eax2;
    signed char al3;

    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + eax2) + al3);
}

signed char g2050501;

void fun_418fe0() {
    signed char tmp8_1;
    signed char al2;

    tmp8_1 = reinterpret_cast<signed char>(g2050501 + al2);
    g2050501 = tmp8_1;
}

void fun_419030(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;
    signed char al4;

    *reinterpret_cast<signed char*>(ecx + eax2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx + eax3) + al4);
}

void fun_419080(int32_t ecx) {
    int32_t eax2;
    int32_t eax3;
    signed char al4;

    *reinterpret_cast<signed char*>(ecx + eax2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx + eax3) + al4);
}

struct s247 {
    signed char[8] pad8;
    int32_t f8;
};

struct s247** g41c79c = reinterpret_cast<struct s247**>(1);

int32_t SetCursor = 0x55404;

int32_t g41c7a0 = 0;

int32_t DestroyWindow = 0x553f4;

int32_t PostQuitMessage = 0x55450;

int32_t GetClientRect = 0x55422;

int32_t ClientToScreen = 0x55410;

int32_t GetSystemMetrics = 0x5543c;

int32_t SetRect = 0x55432;

int32_t DefWindowProcA = 0x553e2;

int32_t fun_403340(int32_t a1, uint32_t a2, int32_t a3, int32_t a4) {
    int1_t zf5;
    int32_t ebx6;
    int1_t zf7;
    int32_t eax8;
    uint32_t eax9;
    uint1_t cf10;
    int1_t zf11;
    int1_t zf12;
    int32_t ebx13;
    int32_t edi14;
    int32_t eax15;
    int32_t eax16;

    if (a2 > 28) {
        if (a2 == 32) {
            zf5 = g41c79c == 0;
            if (zf5) {
                SetCursor();
                goto ebx6;
            } else {
                SetCursor();
                goto ebx6;
            }
        }
        if (a2 == 0x100) 
            goto addr_403440_7;
        if (a2 == 0x105) {
            if (a3 == 13 && (zf7 = g43c7b0 == 1, zf7)) {
                g41c7a0 = 1;
                fun_404890();
                fun_404670();
                eax8 = g43c7bc;
                eax9 = reinterpret_cast<uint32_t>(DestroyWindow(eax8));
                cf10 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(g41c79c) < 1);
                g41c79c = reinterpret_cast<struct s247**>(-(eax9 - (eax9 + reinterpret_cast<uint1_t>(eax9 < eax9 + cf10))));
                fun_404640(eax8);
                fun_4046f0(eax8);
                g41c7a0 = 0;
                goto addr_40349c_11;
            }
        } else {
            goto addr_40349c_11;
        }
    } else {
        if (a2 == 28) {
            g43c7a4 = a3;
            goto addr_40349c_11;
        } else {
            switch (a2 - 1) {
                addr_40349c_11:
            default:
                break;
                addr_403440_7:
            case 0:
                return 0;
            case 1:
                zf11 = g41c7a0 == 0;
                if (zf11) {
                    fun_403560();
                    PostQuitMessage(0);
                }
                return 0;
            case 2:
            case 4:
                zf12 = g41c79c == 0;
                if (zf12) {
                    GetClientRect(a1, 0x43c780);
                    ebx13 = ClientToScreen;
                    ebx13(a1, 0x43c780, a1, 0x43c780);
                    ebx13(a1, 0x43c788, a1, 0x43c780, a1, 0x43c780);
                } else {
                    edi14 = GetSystemMetrics;
                    eax15 = reinterpret_cast<int32_t>(edi14(1));
                    eax16 = reinterpret_cast<int32_t>(edi14(0, eax15, 1));
                    SetRect(0x43c780, 0, 0, eax16, 0, eax15, 1);
                    goto addr_40349c_11;
                }
            }
            DefWindowProcA();
            goto a4;
        }
    }
}

struct s248 {
    struct s26* f0;
    int32_t f4;
};

int32_t g41c964 = 4;

int32_t fun_405050(struct s25* a1) {
    struct s25* esi2;
    struct s248* esi3;
    int32_t v4;
    struct s26* eax5;
    int32_t eax6;
    struct s26* tmp32_7;
    struct s26* ecx8;

    esi2 = a1;
    if (esi2->f0) {
        do {
            esi3 = reinterpret_cast<struct s248*>(&esi2->f4);
            v4 = esi2->f0;
            fun_4050b0(v4);
            if (esi3->f0) {
                do {
                    eax5 = esi3->f0;
                    esi3 = reinterpret_cast<struct s248*>(&esi3->f4);
                    g43ea34 = eax5;
                    if (eax5->f0) {
                        do {
                            fun_4050c0();
                            eax6 = g41c964;
                            tmp32_7 = reinterpret_cast<struct s26*>(reinterpret_cast<int32_t>(g43ea34) + (eax6 << 2));
                            g43ea34 = tmp32_7;
                            ecx8 = g43ea34;
                        } while (ecx8->f0);
                    }
                } while (esi3->f0);
            }
            esi2 = reinterpret_cast<struct s25*>(&esi3->f4);
        } while (esi2->f0);
    }
    return 1;
}

int32_t fun_405ce0() {
    return 2;
}

int32_t fun_406040() {
    return 2;
}

int32_t g446ff8;

int32_t g446ffc;

int32_t g447000;

int32_t g447004;

int32_t g447008;

int32_t g44700c;

struct s31* fun_407000(struct s32* a1, struct s31* a2) {
    struct s31* esi3;
    struct s32* edi4;
    void*** v5;
    struct s31** eax6;
    struct s31** tmp32_7;
    int1_t zf8;
    struct s31** eax9;
    void*** v10;
    void*** eax11;

    esi3 = a2;
    if (esi3) {
        if (esi3->f0) {
            edi4 = a1;
            if (!edi4) {
                v5 = esi3->f0;
                fun_406860(0, v5);
                esi3->f0 = reinterpret_cast<void***>(0);
                eax6 = g44cdf8;
                *eax6 = esi3;
                tmp32_7 = g44cdf8 + 1;
                g44cdf8 = tmp32_7;
                return 0;
            }
        } else {
            return 0;
        }
    } else {
        edi4 = a1;
        if (edi4) {
            zf8 = reinterpret_cast<int1_t>(g44cdf8 == 0x4450b8);
            if (!zf8) {
                --g44cdf8;
                eax9 = g44cdf8;
                esi3 = *eax9;
                esi3->f0 = reinterpret_cast<void***>(0);
            } else {
                return 0;
            }
        } else {
            return 0;
        }
    }
    g446ff8 = 0;
    g446ffc = edi4->f4;
    g447000 = edi4->f8;
    g447004 = edi4->fc;
    g447008 = edi4->f10;
    g44700c = edi4->f14;
    v10 = esi3->f0;
    eax11 = fun_406860(0x446ff8, v10);
    esi3->f0 = eax11;
    esi3->f4 = edi4->f18;
    esi3->f8 = edi4->f1c;
    return esi3;
}

int32_t fun_4070d0(void** a1, void*** a2) {
    fun_406710(a1, a2);
    return 1;
}

struct s249 {
    signed char f0;
    signed char[65535] pad65536;
    signed char f10000;
};

void fun_409054(uint32_t ecx) {
    uint32_t tmp32_2;
    int32_t ebp3;
    uint32_t ecx4;
    struct s249* ebx5;
    signed char bl6;
    signed char dl7;
    signed char* eax8;
    int32_t edi9;
    int32_t esi10;

    tmp32_2 = ecx + ebp3;
    ecx4 = tmp32_2;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx4) + 1);
    *reinterpret_cast<unsigned char*>(&ebx5) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(bl6 + dl7) + reinterpret_cast<uint1_t>(tmp32_2 < ecx));
    *reinterpret_cast<signed char*>(&eax8) = ebx5->f0;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax8) + 1) = ebx5->f10000;
    *reinterpret_cast<signed char*>(edi9 + esi10) = *eax8;
}

void fun_4091aa(int32_t ecx) {
}

void fun_40a0a7(signed char cl) {
    signed char* edx2;
    int32_t eax3;
    signed char* edx4;
    int32_t eax5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;

    edx2[eax3 * 8] = reinterpret_cast<signed char>(edx4[eax5 * 8] + cl);
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
}

void fun_40a0b5(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* ebx5;
    int32_t eax6;
    signed char* ebx7;
    int32_t eax8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    ebx5[eax6 * 8] = reinterpret_cast<signed char>(ebx7[eax8 * 8] + cl);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

void fun_40a319() {
    goto 0x41231e;
}

void fun_40a32b() {
    signed char* eax1;
    signed char* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = reinterpret_cast<signed char>(static_cast<int32_t>(*eax2));
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_40a3c5(signed char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    int32_t esi5;
    int32_t esi6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + esi5 * 8) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + esi6 * 8) + cl);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
}

void fun_40abfa() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* tmp32_8;
    uint16_t ax9;
    signed char* edx10;
    int16_t tmp16_11;
    signed char* tmp32_12;
    int1_t zf13;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            tmp32_8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
            esi6 = tmp32_8;
        }
        ax9 = g430138;
        do {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx10) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx10) = *esi6;
            *esi6 = *edx10;
            tmp16_11 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_11;
            tmp32_12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
            esi6 = tmp32_12;
            ax9 = reinterpret_cast<uint16_t>(ax9 - 1);
        } while (ax9);
        ++esi6;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf13 = g430136 == 0;
    } while (!zf13);
    goto 0x40a5ad;
}

void fun_40ac4c() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* tmp32_8;
    signed char* edx9;
    int16_t tmp16_10;
    signed char* tmp32_11;
    int1_t zf12;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            tmp32_8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
            esi6 = tmp32_8;
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx9) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx9) = *esi6;
        *esi6 = *edx9;
        tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_10;
        tmp32_11 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(g43012c));
        esi6 = tmp32_11;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf12 = g430136 == 0;
    } while (!zf12);
    goto 0x40a5ad;
}

void fun_40ac93() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* tmp32_8;
    signed char* edx9;
    int16_t tmp16_10;
    int16_t bx11;
    signed char* tmp32_12;
    signed char* edx13;
    int16_t tmp16_14;
    signed char* tmp32_15;
    int1_t zf16;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            tmp32_8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
            esi6 = tmp32_8;
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx9) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx9) = *esi6;
        *esi6 = *edx9;
        tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        bx11 = tmp16_10;
        tmp32_12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx13) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx11) + 1);
        *reinterpret_cast<signed char*>(&edx13) = *tmp32_12;
        *tmp32_12 = *edx13;
        tmp16_14 = reinterpret_cast<int16_t>(bx11 + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_14;
        tmp32_15 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_12) + reinterpret_cast<unsigned char>(g43012c));
        esi6 = tmp32_15;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf16 = g430136 == 0;
    } while (!zf16);
    goto 0x40a5ad;
}

void fun_40acef() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* tmp32_8;
    signed char* edx9;
    int16_t tmp16_10;
    int16_t bx11;
    signed char* tmp32_12;
    signed char* edx13;
    int16_t tmp16_14;
    int16_t bx15;
    signed char* tmp32_16;
    signed char* edx17;
    int16_t tmp16_18;
    signed char* tmp32_19;
    int1_t zf20;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            tmp32_8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
            esi6 = tmp32_8;
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx9) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx9) = *esi6;
        *esi6 = *edx9;
        tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        bx11 = tmp16_10;
        tmp32_12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx13) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx11) + 1);
        *reinterpret_cast<signed char*>(&edx13) = *tmp32_12;
        *tmp32_12 = *edx13;
        tmp16_14 = reinterpret_cast<int16_t>(bx11 + g43013a);
        bx15 = tmp16_14;
        tmp32_16 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_12) + reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx17) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx15) + 1);
        *reinterpret_cast<signed char*>(&edx17) = *tmp32_16;
        *tmp32_16 = *edx17;
        tmp16_18 = reinterpret_cast<int16_t>(bx15 + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_18;
        tmp32_19 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_16) + reinterpret_cast<unsigned char>(g43012c));
        esi6 = tmp32_19;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf20 = g430136 == 0;
    } while (!zf20);
    goto 0x40a5ad;
}

void fun_40ad60() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* tmp32_8;
    signed char* edx9;
    int16_t tmp16_10;
    int16_t bx11;
    signed char* tmp32_12;
    signed char* edx13;
    int16_t tmp16_14;
    int16_t bx15;
    signed char* tmp32_16;
    signed char* edx17;
    int16_t tmp16_18;
    int16_t bx19;
    signed char* tmp32_20;
    signed char* edx21;
    int16_t tmp16_22;
    signed char* tmp32_23;
    int1_t zf24;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            tmp32_8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
            esi6 = tmp32_8;
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx9) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx9) = *esi6;
        *esi6 = *edx9;
        tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        bx11 = tmp16_10;
        tmp32_12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx13) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx11) + 1);
        *reinterpret_cast<signed char*>(&edx13) = *tmp32_12;
        *tmp32_12 = *edx13;
        tmp16_14 = reinterpret_cast<int16_t>(bx11 + g43013a);
        bx15 = tmp16_14;
        tmp32_16 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_12) + reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx17) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx15) + 1);
        *reinterpret_cast<signed char*>(&edx17) = *tmp32_16;
        *tmp32_16 = *edx17;
        tmp16_18 = reinterpret_cast<int16_t>(bx15 + g43013a);
        bx19 = tmp16_18;
        tmp32_20 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_16) + reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx21) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx19) + 1);
        *reinterpret_cast<signed char*>(&edx21) = *tmp32_20;
        *tmp32_20 = *edx21;
        tmp16_22 = reinterpret_cast<int16_t>(bx19 + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_22;
        tmp32_23 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_20) + reinterpret_cast<unsigned char>(g43012c));
        esi6 = tmp32_23;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf24 = g430136 == 0;
    } while (!zf24);
    goto 0x40a5ad;
}

void fun_40ade6() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    uint16_t ax8;
    signed char* edx9;
    int16_t tmp16_10;
    signed char* tmp32_11;
    int1_t zf12;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            ++esi6;
        }
        ax8 = g430138;
        do {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx9) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx9) = *esi6;
            *esi6 = *edx9;
            tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_10;
            ++esi6;
            ax8 = reinterpret_cast<uint16_t>(ax8 - 1);
        } while (ax8);
        tmp32_11 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
        esi6 = tmp32_11;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf12 = g430136 == 0;
    } while (!zf12);
    goto 0x40a5ad;
}

void fun_40ae33() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    signed char* tmp32_10;
    int1_t zf11;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            ++esi6;
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx8) = *esi6;
        *esi6 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_9;
        tmp32_10 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(g43012c));
        esi6 = tmp32_10;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf11 = g430136 == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

struct s250 {
    signed char f0;
    signed char f1;
};

void fun_40ae75() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    struct s250* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    signed char* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    struct s250* tmp32_14;
    int1_t zf15;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = esi6->f0;
            esi6->f0 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<struct s250*>(&esi6->f1);
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx8) = esi6->f0;
        esi6->f0 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        bx10 = tmp16_9;
        esi11 = &esi6->f1;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx12) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *reinterpret_cast<signed char*>(&edx12) = *esi11;
        *esi11 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_13;
        tmp32_14 = reinterpret_cast<struct s250*>(reinterpret_cast<uint32_t>(esi11) + reinterpret_cast<unsigned char>(g43012c));
        esi6 = tmp32_14;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf15 = g430136 == 0;
    } while (!zf15);
    goto 0x40a5ad;
}

struct s251 {
    signed char f0;
    signed char f1;
};

struct s252 {
    signed char f0;
    signed char f1;
};

void fun_40aec7() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    struct s251* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    struct s252* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    int16_t bx14;
    signed char* esi15;
    signed char* edx16;
    int16_t tmp16_17;
    struct s251* tmp32_18;
    int1_t zf19;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = esi6->f0;
            esi6->f0 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<struct s251*>(&esi6->f1);
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx8) = esi6->f0;
        esi6->f0 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<struct s252*>(&esi6->f1);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx12) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *reinterpret_cast<signed char*>(&edx12) = esi11->f0;
        esi11->f0 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43013a);
        bx14 = tmp16_13;
        esi15 = &esi11->f1;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx16) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx14) + 1);
        *reinterpret_cast<signed char*>(&edx16) = *esi15;
        *esi15 = *edx16;
        tmp16_17 = reinterpret_cast<int16_t>(bx14 + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_17;
        tmp32_18 = reinterpret_cast<struct s251*>(reinterpret_cast<uint32_t>(esi15) + reinterpret_cast<unsigned char>(g43012c));
        esi6 = tmp32_18;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf19 = g430136 == 0;
    } while (!zf19);
    goto 0x40a5ad;
}

struct s253 {
    signed char f0;
    signed char f1;
};

struct s254 {
    signed char f0;
    signed char f1;
};

struct s255 {
    signed char f0;
    signed char f1;
};

void fun_40af29() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    struct s253* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    struct s254* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    int16_t bx14;
    struct s255* esi15;
    signed char* edx16;
    int16_t tmp16_17;
    int16_t bx18;
    signed char* esi19;
    signed char* edx20;
    int16_t tmp16_21;
    struct s253* tmp32_22;
    int1_t zf23;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = esi6->f0;
            esi6->f0 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<struct s253*>(&esi6->f1);
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx8) = esi6->f0;
        esi6->f0 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<struct s254*>(&esi6->f1);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx12) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *reinterpret_cast<signed char*>(&edx12) = esi11->f0;
        esi11->f0 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43013a);
        bx14 = tmp16_13;
        esi15 = reinterpret_cast<struct s255*>(&esi11->f1);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx16) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx14) + 1);
        *reinterpret_cast<signed char*>(&edx16) = esi15->f0;
        esi15->f0 = *edx16;
        tmp16_17 = reinterpret_cast<int16_t>(bx14 + g43013a);
        bx18 = tmp16_17;
        esi19 = &esi15->f1;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx20) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx18) + 1);
        *reinterpret_cast<signed char*>(&edx20) = *esi19;
        *esi19 = *edx20;
        tmp16_21 = reinterpret_cast<int16_t>(bx18 + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_21;
        tmp32_22 = reinterpret_cast<struct s253*>(reinterpret_cast<uint32_t>(esi19) + reinterpret_cast<unsigned char>(g43012c));
        esi6 = tmp32_22;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf23 = g430136 == 0;
    } while (!zf23);
    goto 0x40a5ad;
}

void fun_40af9b() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    uint16_t ax8;
    signed char* edx9;
    int16_t tmp16_10;
    int1_t zf11;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        }
        ax8 = g430138;
        do {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx9) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx9) = *esi6;
            *esi6 = *edx9;
            tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_10;
            esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
            ax8 = reinterpret_cast<uint16_t>(ax8 - 1);
        } while (ax8);
        ++esi6;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf11 = g430136 == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

void fun_40afed() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    signed char* tmp32_10;
    int1_t zf11;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx8) = *esi6;
        *esi6 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_9;
        tmp32_10 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + g430130);
        esi6 = tmp32_10;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf11 = g430136 == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

void fun_40b034() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    signed char* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    signed char* tmp32_14;
    int1_t zf15;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx8) = *esi6;
        *esi6 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx12) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *reinterpret_cast<signed char*>(&edx12) = *esi11;
        *esi11 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_13;
        tmp32_14 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi11) + g430130);
        esi6 = tmp32_14;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf15 = g430136 == 0;
    } while (!zf15);
    goto 0x40a5ad;
}

void fun_40b090() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    signed char* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    int16_t bx14;
    signed char* esi15;
    signed char* edx16;
    int16_t tmp16_17;
    signed char* tmp32_18;
    int1_t zf19;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx8) = *esi6;
        *esi6 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx12) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *reinterpret_cast<signed char*>(&edx12) = *esi11;
        *esi11 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43013a);
        bx14 = tmp16_13;
        esi15 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi11) - reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx16) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx14) + 1);
        *reinterpret_cast<signed char*>(&edx16) = *esi15;
        *esi15 = *edx16;
        tmp16_17 = reinterpret_cast<int16_t>(bx14 + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_17;
        tmp32_18 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi15) + g430130);
        esi6 = tmp32_18;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf19 = g430136 == 0;
    } while (!zf19);
    goto 0x40a5ad;
}

void fun_40b101() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    signed char* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    int16_t bx14;
    signed char* esi15;
    signed char* edx16;
    int16_t tmp16_17;
    int16_t bx18;
    signed char* esi19;
    signed char* edx20;
    int16_t tmp16_21;
    signed char* tmp32_22;
    int1_t zf23;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx8) = *esi6;
        *esi6 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx12) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *reinterpret_cast<signed char*>(&edx12) = *esi11;
        *esi11 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43013a);
        bx14 = tmp16_13;
        esi15 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi11) - reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx16) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx14) + 1);
        *reinterpret_cast<signed char*>(&edx16) = *esi15;
        *esi15 = *edx16;
        tmp16_17 = reinterpret_cast<int16_t>(bx14 + g43013a);
        bx18 = tmp16_17;
        esi19 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi15) - reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx20) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx18) + 1);
        *reinterpret_cast<signed char*>(&edx20) = *esi19;
        *esi19 = *edx20;
        tmp16_21 = reinterpret_cast<int16_t>(bx18 + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_21;
        tmp32_22 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi19) + g430130);
        esi6 = tmp32_22;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf23 = g430136 == 0;
    } while (!zf23);
    goto 0x40a5ad;
}

void fun_40b187() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    uint16_t ax8;
    signed char* edx9;
    int16_t tmp16_10;
    int1_t zf11;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            ++esi6;
        }
        ax8 = g430138;
        do {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx9) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx9) = *esi6;
            *esi6 = *edx9;
            tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_10;
            ++esi6;
            ax8 = reinterpret_cast<uint16_t>(ax8 - 1);
        } while (ax8);
        esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf11 = g430136 == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

void fun_40b1d4() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    signed char* tmp32_10;
    int1_t zf11;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = *esi6;
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            ++esi6;
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx8) = *esi6;
        *esi6 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_9;
        tmp32_10 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi6) + g430130);
        esi6 = tmp32_10;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf11 = g430136 == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

struct s256 {
    signed char f0;
    signed char f1;
};

void fun_40b216() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    struct s256* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    signed char* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    struct s256* tmp32_14;
    int1_t zf15;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = esi6->f0;
            esi6->f0 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<struct s256*>(&esi6->f1);
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx8) = esi6->f0;
        esi6->f0 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        bx10 = tmp16_9;
        esi11 = &esi6->f1;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx12) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *reinterpret_cast<signed char*>(&edx12) = *esi11;
        *esi11 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_13;
        tmp32_14 = reinterpret_cast<struct s256*>(reinterpret_cast<int32_t>(esi11) + g430130);
        esi6 = tmp32_14;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf15 = g430136 == 0;
    } while (!zf15);
    goto 0x40a5ad;
}

struct s257 {
    signed char f0;
    signed char f1;
};

struct s258 {
    signed char f0;
    signed char f1;
};

void fun_40b268() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    struct s257* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    struct s258* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    int16_t bx14;
    signed char* esi15;
    signed char* edx16;
    int16_t tmp16_17;
    struct s257* tmp32_18;
    int1_t zf19;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = esi6->f0;
            esi6->f0 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<struct s257*>(&esi6->f1);
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx8) = esi6->f0;
        esi6->f0 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<struct s258*>(&esi6->f1);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx12) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *reinterpret_cast<signed char*>(&edx12) = esi11->f0;
        esi11->f0 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43013a);
        bx14 = tmp16_13;
        esi15 = &esi11->f1;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx16) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx14) + 1);
        *reinterpret_cast<signed char*>(&edx16) = *esi15;
        *esi15 = *edx16;
        tmp16_17 = reinterpret_cast<int16_t>(bx14 + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_17;
        tmp32_18 = reinterpret_cast<struct s257*>(reinterpret_cast<int32_t>(esi15) + g430130);
        esi6 = tmp32_18;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf19 = g430136 == 0;
    } while (!zf19);
    goto 0x40a5ad;
}

struct s259 {
    signed char f0;
    signed char f1;
};

struct s260 {
    signed char f0;
    signed char f1;
};

struct s261 {
    signed char f0;
    signed char f1;
};

void fun_40b2ca() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    struct s259* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    struct s260* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    int16_t bx14;
    struct s261* esi15;
    signed char* edx16;
    int16_t tmp16_17;
    int16_t bx18;
    signed char* esi19;
    signed char* edx20;
    int16_t tmp16_21;
    struct s259* tmp32_22;
    int1_t zf23;

    ebx1 = g43013c;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g430134);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx5) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *reinterpret_cast<signed char*>(&edx5) = esi6->f0;
            esi6->f0 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<struct s259*>(&esi6->f1);
        }
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx8) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *reinterpret_cast<signed char*>(&edx8) = esi6->f0;
        esi6->f0 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43013a);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<struct s260*>(&esi6->f1);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx12) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *reinterpret_cast<signed char*>(&edx12) = esi11->f0;
        esi11->f0 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43013a);
        bx14 = tmp16_13;
        esi15 = reinterpret_cast<struct s261*>(&esi11->f1);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx16) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx14) + 1);
        *reinterpret_cast<signed char*>(&edx16) = esi15->f0;
        esi15->f0 = *edx16;
        tmp16_17 = reinterpret_cast<int16_t>(bx14 + g43013a);
        bx18 = tmp16_17;
        esi19 = &esi15->f1;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx20) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx18) + 1);
        *reinterpret_cast<signed char*>(&edx20) = *esi19;
        *esi19 = *edx20;
        tmp16_21 = reinterpret_cast<int16_t>(bx18 + g43013a);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_21;
        tmp32_22 = reinterpret_cast<struct s259*>(reinterpret_cast<int32_t>(esi19) + g430130);
        esi6 = tmp32_22;
        g430136 = reinterpret_cast<int16_t>(g430136 - 1);
        zf23 = g430136 == 0;
    } while (!zf23);
    goto 0x40a5ad;
}

void fun_40d372() {
    void* eax1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* esi5;
    signed char dh6;
    signed char dh7;
    signed char* esi8;
    signed char dh9;
    signed char* tmp32_10;
    int1_t zf11;

    eax1 = g41cdf0;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43408a);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *esi5 = dh6;
            esi5 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi5) + reinterpret_cast<uint32_t>(eax1));
        }
        *esi5 = dh7;
        esi8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi5) + reinterpret_cast<uint32_t>(eax1));
        *esi8 = dh9;
        tmp32_10 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) + reinterpret_cast<unsigned char>(g434082));
        esi5 = tmp32_10;
        g43408c = reinterpret_cast<int16_t>(g43408c - 1);
        zf11 = g43408c == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

void fun_40d39e() {
    void* eax1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* esi5;
    signed char dh6;
    signed char dh7;
    signed char* esi8;
    signed char dh9;
    signed char* esi10;
    signed char dh11;
    signed char* tmp32_12;
    int1_t zf13;

    eax1 = g41cdf0;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43408a);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *esi5 = dh6;
            esi5 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi5) + reinterpret_cast<uint32_t>(eax1));
        }
        *esi5 = dh7;
        esi8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi5) + reinterpret_cast<uint32_t>(eax1));
        *esi8 = dh9;
        esi10 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) + reinterpret_cast<uint32_t>(eax1));
        *esi10 = dh11;
        tmp32_12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi10) + reinterpret_cast<unsigned char>(g434082));
        esi5 = tmp32_12;
        g43408c = reinterpret_cast<int16_t>(g43408c - 1);
        zf13 = g43408c == 0;
    } while (!zf13);
    goto 0x40a5ad;
}

void fun_40d3ce() {
    void* eax1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* esi5;
    signed char dh6;
    signed char dh7;
    signed char* esi8;
    signed char dh9;
    signed char* esi10;
    signed char dh11;
    signed char* esi12;
    signed char dh13;
    signed char* tmp32_14;
    int1_t zf15;

    eax1 = g41cdf0;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43408a);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *esi5 = dh6;
            esi5 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi5) + reinterpret_cast<uint32_t>(eax1));
        }
        *esi5 = dh7;
        esi8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi5) + reinterpret_cast<uint32_t>(eax1));
        *esi8 = dh9;
        esi10 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) + reinterpret_cast<uint32_t>(eax1));
        *esi10 = dh11;
        esi12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi10) + reinterpret_cast<uint32_t>(eax1));
        *esi12 = dh13;
        tmp32_14 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi12) + reinterpret_cast<unsigned char>(g434082));
        esi5 = tmp32_14;
        g43408c = reinterpret_cast<int16_t>(g43408c - 1);
        zf15 = g43408c == 0;
    } while (!zf15);
    goto 0x40a5ad;
}

void fun_40d430() {
    signed char dx1;
    signed char dh2;
    void** eax3;
    void** eax4;
    uint16_t tmp16_5;
    uint16_t cx6;
    int1_t cf7;
    signed char* esi8;
    signed char dh9;
    signed char* tmp32_10;
    int1_t zf11;
    int1_t zf12;

    dx1 = dh2;
    eax3 = g434082;
    eax4 = eax3 + 1;
    while (1) {
        tmp16_5 = reinterpret_cast<uint16_t>(cx6 + g43408a);
        cf7 = tmp16_5 < cx6;
        cx6 = tmp16_5;
        if (!cf7) {
            *esi8 = dh9;
            tmp32_10 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) + reinterpret_cast<unsigned char>(g434082));
            esi8 = tmp32_10;
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf11 = g43408c == 0;
            if (zf11) 
                break;
        } else {
            *esi8 = dx1;
            esi8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) + reinterpret_cast<unsigned char>(eax4));
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf12 = g43408c == 0;
            if (zf12) 
                goto addr_40d44f_5;
        }
    }
    goto 0x40a5ad;
    addr_40d44f_5:
    goto 0x40a5ad;
}

struct s262 {
    signed char f0;
    signed char f1;
};

void fun_40d46a() {
    signed char dx1;
    signed char dh2;
    uint16_t tmp16_3;
    uint16_t cx4;
    int1_t cf5;
    struct s262* esi6;
    struct s262* tmp32_7;
    int1_t zf8;
    signed char dh9;
    struct s262* tmp32_10;
    int1_t zf11;

    dx1 = dh2;
    while (1) {
        tmp16_3 = reinterpret_cast<uint16_t>(cx4 + g43408a);
        cf5 = tmp16_3 < cx4;
        cx4 = tmp16_3;
        if (!cf5) {
            esi6->f0 = dx1;
            tmp32_7 = reinterpret_cast<struct s262*>(reinterpret_cast<uint32_t>(&esi6->f1) + reinterpret_cast<unsigned char>(g434082));
            esi6 = tmp32_7;
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf8 = g43408c == 0;
            if (zf8) 
                break;
        } else {
            esi6->f0 = dh9;
            esi6->f1 = dx1;
            tmp32_10 = reinterpret_cast<struct s262*>(reinterpret_cast<uint32_t>(esi6 + 1) + reinterpret_cast<unsigned char>(g434082));
            esi6 = tmp32_10;
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf11 = g43408c == 0;
            if (zf11) 
                goto addr_40d48d_5;
        }
    }
    goto 0x40a5ad;
    addr_40d48d_5:
    goto 0x40a5ad;
}

struct s263 {
    signed char f0;
    signed char[1] pad2;
    signed char f2;
};

void fun_40d4aa() {
    signed char dx1;
    signed char dh2;
    uint16_t tmp16_3;
    uint16_t cx4;
    int1_t cf5;
    struct s263* esi6;
    signed char dh7;
    signed char* esi8;
    signed char dh9;
    struct s263* tmp32_10;
    int1_t zf11;

    dx1 = dh2;
    do {
        tmp16_3 = reinterpret_cast<uint16_t>(cx4 + g43408a);
        cf5 = tmp16_3 < cx4;
        cx4 = tmp16_3;
        if (cf5) {
            esi6->f0 = dh7;
            esi6 = reinterpret_cast<struct s263*>(&esi6->pad2);
        }
        esi6->f0 = dx1;
        esi8 = &esi6->f2;
        *esi8 = dh9;
        tmp32_10 = reinterpret_cast<struct s263*>(reinterpret_cast<uint32_t>(esi8) + reinterpret_cast<unsigned char>(g434082));
        esi6 = tmp32_10;
        g43408c = reinterpret_cast<int16_t>(g43408c - 1);
        zf11 = g43408c == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

struct s264 {
    signed char f0;
    signed char[1] pad2;
    signed char f2;
};

void fun_40d4d4() {
    signed char dx1;
    signed char dh2;
    void* eax3;
    void* eax4;
    uint16_t tmp16_5;
    uint16_t cx6;
    int1_t cf7;
    struct s264* esi8;
    signed char dh9;
    int1_t zf10;

    dx1 = dh2;
    eax3 = g41cdf0;
    eax4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax3) + 4);
    do {
        tmp16_5 = reinterpret_cast<uint16_t>(cx6 + g43408a);
        cf7 = tmp16_5 < cx6;
        cx6 = tmp16_5;
        if (cf7) {
            esi8->f0 = dh9;
            esi8 = reinterpret_cast<struct s264*>(&esi8->pad2);
        }
        esi8->f0 = dx1;
        esi8->f2 = dx1;
        esi8 = reinterpret_cast<struct s264*>(reinterpret_cast<uint32_t>(esi8) + reinterpret_cast<uint32_t>(eax4));
        g43408c = reinterpret_cast<int16_t>(g43408c - 1);
        zf10 = g43408c == 0;
    } while (!zf10);
    goto 0x40a5ad;
}

void fun_40d55b() {
    void* eax1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* esi5;
    signed char dh6;
    signed char dh7;
    signed char* esi8;
    signed char dh9;
    signed char* tmp32_10;
    int1_t zf11;

    eax1 = g41cdf0;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43408a);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *esi5 = dh6;
            esi5 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi5) - reinterpret_cast<uint32_t>(eax1));
        }
        *esi5 = dh7;
        esi8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi5) - reinterpret_cast<uint32_t>(eax1));
        *esi8 = dh9;
        tmp32_10 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) + g434086);
        esi5 = tmp32_10;
        g43408c = reinterpret_cast<int16_t>(g43408c - 1);
        zf11 = g43408c == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

void fun_40d587() {
    void* eax1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* esi5;
    signed char dh6;
    signed char dh7;
    signed char* esi8;
    signed char dh9;
    signed char* esi10;
    signed char dh11;
    signed char* tmp32_12;
    int1_t zf13;

    eax1 = g41cdf0;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43408a);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *esi5 = dh6;
            esi5 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi5) - reinterpret_cast<uint32_t>(eax1));
        }
        *esi5 = dh7;
        esi8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi5) - reinterpret_cast<uint32_t>(eax1));
        *esi8 = dh9;
        esi10 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) - reinterpret_cast<uint32_t>(eax1));
        *esi10 = dh11;
        tmp32_12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi10) + g434086);
        esi5 = tmp32_12;
        g43408c = reinterpret_cast<int16_t>(g43408c - 1);
        zf13 = g43408c == 0;
    } while (!zf13);
    goto 0x40a5ad;
}

void fun_40d5b7() {
    void* eax1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* esi5;
    signed char dh6;
    signed char dh7;
    signed char* esi8;
    signed char dh9;
    signed char* esi10;
    signed char dh11;
    signed char* esi12;
    signed char dh13;
    signed char* tmp32_14;
    int1_t zf15;

    eax1 = g41cdf0;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43408a);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *esi5 = dh6;
            esi5 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi5) - reinterpret_cast<uint32_t>(eax1));
        }
        *esi5 = dh7;
        esi8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi5) - reinterpret_cast<uint32_t>(eax1));
        *esi8 = dh9;
        esi10 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi8) - reinterpret_cast<uint32_t>(eax1));
        *esi10 = dh11;
        esi12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi10) - reinterpret_cast<uint32_t>(eax1));
        *esi12 = dh13;
        tmp32_14 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi12) + g434086);
        esi5 = tmp32_14;
        g43408c = reinterpret_cast<int16_t>(g43408c - 1);
        zf15 = g43408c == 0;
    } while (!zf15);
    goto 0x40a5ad;
}

void fun_40d619() {
    signed char dx1;
    signed char dh2;
    uint32_t eax3;
    uint16_t tmp16_4;
    uint16_t cx5;
    int1_t cf6;
    signed char* esi7;
    signed char dh8;
    signed char* tmp32_9;
    int1_t zf10;
    int1_t zf11;

    dx1 = dh2;
    eax3 = 2 - reinterpret_cast<uint32_t>(g41cdf0);
    while (1) {
        tmp16_4 = reinterpret_cast<uint16_t>(cx5 + g43408a);
        cf6 = tmp16_4 < cx5;
        cx5 = tmp16_4;
        if (!cf6) {
            *esi7 = dh8;
            tmp32_9 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi7) + g434086);
            esi7 = tmp32_9;
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf10 = g43408c == 0;
            if (zf10) 
                break;
        } else {
            *esi7 = dx1;
            esi7 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi7) + eax3);
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf11 = g43408c == 0;
            if (zf11) 
                goto addr_40d63d_5;
        }
    }
    goto 0x40a5ad;
    addr_40d63d_5:
    goto 0x40a5ad;
}

void fun_40d658() {
    signed char dx1;
    signed char dh2;
    uint32_t eax3;
    uint16_t tmp16_4;
    uint16_t cx5;
    int1_t cf6;
    signed char* esi7;
    signed char dh8;
    int1_t zf9;

    dx1 = dh2;
    eax3 = 2 - reinterpret_cast<uint32_t>(g41cdf0);
    do {
        tmp16_4 = reinterpret_cast<uint16_t>(cx5 + g43408a);
        cf6 = tmp16_4 < cx5;
        cx5 = tmp16_4;
        if (cf6) {
            *esi7 = dh8;
            ++esi7;
        }
        *esi7 = dx1;
        esi7 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi7) + eax3);
        g43408c = reinterpret_cast<int16_t>(g43408c - 1);
        zf9 = g43408c == 0;
    } while (!zf9);
    goto 0x40a5ad;
}

struct s265 {
    signed char f0;
    signed char[1] pad2;
    signed char f2;
};

void fun_40d684() {
    signed char dx1;
    signed char dh2;
    uint32_t eax3;
    uint16_t tmp16_4;
    uint16_t cx5;
    int1_t cf6;
    struct s265* esi7;
    signed char* esi8;
    signed char dh9;
    struct s265* tmp32_10;
    int1_t zf11;
    int1_t zf12;

    dx1 = dh2;
    eax3 = 4 - reinterpret_cast<uint32_t>(g41cdf0);
    while (1) {
        tmp16_4 = reinterpret_cast<uint16_t>(cx5 + g43408a);
        cf6 = tmp16_4 < cx5;
        cx5 = tmp16_4;
        if (!cf6) {
            esi7->f0 = dx1;
            esi8 = &esi7->f2;
            *esi8 = dh9;
            tmp32_10 = reinterpret_cast<struct s265*>(reinterpret_cast<uint32_t>(esi8) + g434086);
            esi7 = tmp32_10;
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf11 = g43408c == 0;
            if (zf11) 
                break;
        } else {
            esi7->f0 = dx1;
            esi7->f2 = dx1;
            esi7 = reinterpret_cast<struct s265*>(reinterpret_cast<uint32_t>(esi7) + eax3);
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf12 = g43408c == 0;
            if (zf12) 
                goto addr_40d6ac_5;
        }
    }
    goto 0x40a5ad;
    addr_40d6ac_5:
    goto 0x40a5ad;
}

struct s266 {
    signed char f0;
    signed char[1] pad2;
    signed char f2;
};

void fun_40d6cd() {
    signed char dx1;
    signed char dh2;
    uint16_t tmp16_3;
    uint16_t cx4;
    int1_t cf5;
    struct s266* esi6;
    signed char dh7;
    struct s266* tmp32_8;
    int1_t zf9;

    dx1 = dh2;
    do {
        tmp16_3 = reinterpret_cast<uint16_t>(cx4 + g43408a);
        cf5 = tmp16_3 < cx4;
        cx4 = tmp16_3;
        if (cf5) {
            esi6->f0 = dh7;
            esi6 = reinterpret_cast<struct s266*>(&esi6->pad2);
        }
        esi6->f0 = dx1;
        esi6->f2 = dx1;
        tmp32_8 = reinterpret_cast<struct s266*>(reinterpret_cast<int32_t>(esi6 + 1) + g434086);
        esi6 = tmp32_8;
        g43408c = reinterpret_cast<int16_t>(g43408c - 1);
        zf9 = g43408c == 0;
    } while (!zf9);
    goto 0x40a5ad;
}

void fun_41035c() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* tmp32_8;
    uint16_t ax9;
    signed char* edx10;
    int16_t tmp16_11;
    signed char* tmp32_12;
    int1_t zf13;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            tmp32_8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
            esi6 = tmp32_8;
        }
        ax9 = g43a7b8;
        do {
            *reinterpret_cast<signed char*>(&edx10) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx10;
            tmp16_11 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_11;
            tmp32_12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
            esi6 = tmp32_12;
            ax9 = reinterpret_cast<uint16_t>(ax9 - 1);
        } while (ax9);
        ++esi6;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf13 = g43a7b6 == 0;
    } while (!zf13);
    goto 0x40a5ad;
}

void fun_4103aa() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* tmp32_8;
    signed char* edx9;
    int16_t tmp16_10;
    signed char* tmp32_11;
    int1_t zf12;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            tmp32_8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
            esi6 = tmp32_8;
        }
        *reinterpret_cast<signed char*>(&edx9) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *esi6 = *edx9;
        tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_10;
        tmp32_11 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(g43a7ac));
        esi6 = tmp32_11;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf12 = g43a7b6 == 0;
    } while (!zf12);
    goto 0x40a5ad;
}

void fun_4103ed() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* tmp32_8;
    signed char* edx9;
    int16_t tmp16_10;
    int16_t bx11;
    signed char* tmp32_12;
    signed char* edx13;
    int16_t tmp16_14;
    signed char* tmp32_15;
    int1_t zf16;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            tmp32_8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
            esi6 = tmp32_8;
        }
        *reinterpret_cast<signed char*>(&edx9) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *esi6 = *edx9;
        tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        bx11 = tmp16_10;
        tmp32_12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(&edx13) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx11) + 1);
        *tmp32_12 = *edx13;
        tmp16_14 = reinterpret_cast<int16_t>(bx11 + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_14;
        tmp32_15 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_12) + reinterpret_cast<unsigned char>(g43a7ac));
        esi6 = tmp32_15;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf16 = g43a7b6 == 0;
    } while (!zf16);
    goto 0x40a5ad;
}

void fun_410443() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* tmp32_8;
    signed char* edx9;
    int16_t tmp16_10;
    int16_t bx11;
    signed char* tmp32_12;
    signed char* edx13;
    int16_t tmp16_14;
    int16_t bx15;
    signed char* tmp32_16;
    signed char* edx17;
    int16_t tmp16_18;
    signed char* tmp32_19;
    int1_t zf20;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            tmp32_8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
            esi6 = tmp32_8;
        }
        *reinterpret_cast<signed char*>(&edx9) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *esi6 = *edx9;
        tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        bx11 = tmp16_10;
        tmp32_12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(&edx13) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx11) + 1);
        *tmp32_12 = *edx13;
        tmp16_14 = reinterpret_cast<int16_t>(bx11 + g43a7ba);
        bx15 = tmp16_14;
        tmp32_16 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_12) + reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(&edx17) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx15) + 1);
        *tmp32_16 = *edx17;
        tmp16_18 = reinterpret_cast<int16_t>(bx15 + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_18;
        tmp32_19 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_16) + reinterpret_cast<unsigned char>(g43a7ac));
        esi6 = tmp32_19;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf20 = g43a7b6 == 0;
    } while (!zf20);
    goto 0x40a5ad;
}

void fun_4104ac() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* tmp32_8;
    signed char* edx9;
    int16_t tmp16_10;
    int16_t bx11;
    signed char* tmp32_12;
    signed char* edx13;
    int16_t tmp16_14;
    int16_t bx15;
    signed char* tmp32_16;
    signed char* edx17;
    int16_t tmp16_18;
    int16_t bx19;
    signed char* tmp32_20;
    signed char* edx21;
    int16_t tmp16_22;
    signed char* tmp32_23;
    int1_t zf24;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            tmp32_8 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
            esi6 = tmp32_8;
        }
        *reinterpret_cast<signed char*>(&edx9) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *esi6 = *edx9;
        tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        bx11 = tmp16_10;
        tmp32_12 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(&edx13) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx11) + 1);
        *tmp32_12 = *edx13;
        tmp16_14 = reinterpret_cast<int16_t>(bx11 + g43a7ba);
        bx15 = tmp16_14;
        tmp32_16 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_12) + reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(&edx17) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx15) + 1);
        *tmp32_16 = *edx17;
        tmp16_18 = reinterpret_cast<int16_t>(bx15 + g43a7ba);
        bx19 = tmp16_18;
        tmp32_20 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_16) + reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(&edx21) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx19) + 1);
        *tmp32_20 = *edx21;
        tmp16_22 = reinterpret_cast<int16_t>(bx19 + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_22;
        tmp32_23 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_20) + reinterpret_cast<unsigned char>(g43a7ac));
        esi6 = tmp32_23;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf24 = g43a7b6 == 0;
    } while (!zf24);
    goto 0x40a5ad;
}

void fun_410528() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    uint16_t ax8;
    signed char* edx9;
    int16_t tmp16_10;
    signed char* tmp32_11;
    int1_t zf12;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            ++esi6;
        }
        ax8 = g43a7b8;
        do {
            *reinterpret_cast<signed char*>(&edx9) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx9;
            tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_10;
            ++esi6;
            ax8 = reinterpret_cast<uint16_t>(ax8 - 1);
        } while (ax8);
        tmp32_11 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(g41cdf0));
        esi6 = tmp32_11;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf12 = g43a7b6 == 0;
    } while (!zf12);
    goto 0x40a5ad;
}

void fun_410571() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    signed char* tmp32_10;
    int1_t zf11;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            ++esi6;
        }
        *reinterpret_cast<signed char*>(&edx8) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *esi6 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_9;
        tmp32_10 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<unsigned char>(g43a7ac));
        esi6 = tmp32_10;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf11 = g43a7b6 == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

struct s267 {
    signed char f0;
    signed char f1;
};

void fun_4105af() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    struct s267* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    signed char* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    struct s267* tmp32_14;
    int1_t zf15;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            esi6->f0 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<struct s267*>(&esi6->f1);
        }
        *reinterpret_cast<signed char*>(&edx8) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        esi6->f0 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        bx10 = tmp16_9;
        esi11 = &esi6->f1;
        *reinterpret_cast<signed char*>(&edx12) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *esi11 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_13;
        tmp32_14 = reinterpret_cast<struct s267*>(reinterpret_cast<uint32_t>(esi11) + reinterpret_cast<unsigned char>(g43a7ac));
        esi6 = tmp32_14;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf15 = g43a7b6 == 0;
    } while (!zf15);
    goto 0x40a5ad;
}

struct s268 {
    signed char f0;
    signed char f1;
};

struct s269 {
    signed char f0;
    signed char f1;
};

void fun_4105fb() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    struct s268* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    struct s269* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    int16_t bx14;
    signed char* esi15;
    signed char* edx16;
    int16_t tmp16_17;
    struct s268* tmp32_18;
    int1_t zf19;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            esi6->f0 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<struct s268*>(&esi6->f1);
        }
        *reinterpret_cast<signed char*>(&edx8) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        esi6->f0 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<struct s269*>(&esi6->f1);
        *reinterpret_cast<signed char*>(&edx12) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        esi11->f0 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43a7ba);
        bx14 = tmp16_13;
        esi15 = &esi11->f1;
        *reinterpret_cast<signed char*>(&edx16) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx14) + 1);
        *esi15 = *edx16;
        tmp16_17 = reinterpret_cast<int16_t>(bx14 + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_17;
        tmp32_18 = reinterpret_cast<struct s268*>(reinterpret_cast<uint32_t>(esi15) + reinterpret_cast<unsigned char>(g43a7ac));
        esi6 = tmp32_18;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf19 = g43a7b6 == 0;
    } while (!zf19);
    goto 0x40a5ad;
}

struct s270 {
    signed char f0;
    signed char f1;
};

struct s271 {
    signed char f0;
    signed char f1;
};

struct s272 {
    signed char f0;
    signed char f1;
};

void fun_410655() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    struct s270* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    struct s271* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    int16_t bx14;
    struct s272* esi15;
    signed char* edx16;
    int16_t tmp16_17;
    int16_t bx18;
    signed char* esi19;
    signed char* edx20;
    int16_t tmp16_21;
    struct s270* tmp32_22;
    int1_t zf23;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            esi6->f0 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<struct s270*>(&esi6->f1);
        }
        *reinterpret_cast<signed char*>(&edx8) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        esi6->f0 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<struct s271*>(&esi6->f1);
        *reinterpret_cast<signed char*>(&edx12) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        esi11->f0 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43a7ba);
        bx14 = tmp16_13;
        esi15 = reinterpret_cast<struct s272*>(&esi11->f1);
        *reinterpret_cast<signed char*>(&edx16) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx14) + 1);
        esi15->f0 = *edx16;
        tmp16_17 = reinterpret_cast<int16_t>(bx14 + g43a7ba);
        bx18 = tmp16_17;
        esi19 = &esi15->f1;
        *reinterpret_cast<signed char*>(&edx20) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx18) + 1);
        *esi19 = *edx20;
        tmp16_21 = reinterpret_cast<int16_t>(bx18 + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_21;
        tmp32_22 = reinterpret_cast<struct s270*>(reinterpret_cast<uint32_t>(esi19) + reinterpret_cast<unsigned char>(g43a7ac));
        esi6 = tmp32_22;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf23 = g43a7b6 == 0;
    } while (!zf23);
    goto 0x40a5ad;
}

void fun_4106bd() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    uint16_t ax8;
    signed char* edx9;
    int16_t tmp16_10;
    int1_t zf11;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        }
        ax8 = g43a7b8;
        do {
            *reinterpret_cast<signed char*>(&edx9) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx9;
            tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_10;
            esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
            ax8 = reinterpret_cast<uint16_t>(ax8 - 1);
        } while (ax8);
        ++esi6;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf11 = g43a7b6 == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

void fun_41070b() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    signed char* tmp32_10;
    int1_t zf11;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        }
        *reinterpret_cast<signed char*>(&edx8) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *esi6 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_9;
        tmp32_10 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + g43a7b0);
        esi6 = tmp32_10;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf11 = g43a7b6 == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

void fun_41074e() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    signed char* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    signed char* tmp32_14;
    int1_t zf15;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        }
        *reinterpret_cast<signed char*>(&edx8) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *esi6 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(&edx12) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *esi11 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_13;
        tmp32_14 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi11) + g43a7b0);
        esi6 = tmp32_14;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf15 = g43a7b6 == 0;
    } while (!zf15);
    goto 0x40a5ad;
}

void fun_4107a4() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    signed char* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    int16_t bx14;
    signed char* esi15;
    signed char* edx16;
    int16_t tmp16_17;
    signed char* tmp32_18;
    int1_t zf19;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        }
        *reinterpret_cast<signed char*>(&edx8) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *esi6 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(&edx12) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *esi11 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43a7ba);
        bx14 = tmp16_13;
        esi15 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi11) - reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(&edx16) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx14) + 1);
        *esi15 = *edx16;
        tmp16_17 = reinterpret_cast<int16_t>(bx14 + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_17;
        tmp32_18 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi15) + g43a7b0);
        esi6 = tmp32_18;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf19 = g43a7b6 == 0;
    } while (!zf19);
    goto 0x40a5ad;
}

void fun_41080d() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    signed char* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    int16_t bx14;
    signed char* esi15;
    signed char* edx16;
    int16_t tmp16_17;
    int16_t bx18;
    signed char* esi19;
    signed char* edx20;
    int16_t tmp16_21;
    signed char* tmp32_22;
    int1_t zf23;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        }
        *reinterpret_cast<signed char*>(&edx8) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *esi6 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(&edx12) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *esi11 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43a7ba);
        bx14 = tmp16_13;
        esi15 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi11) - reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(&edx16) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx14) + 1);
        *esi15 = *edx16;
        tmp16_17 = reinterpret_cast<int16_t>(bx14 + g43a7ba);
        bx18 = tmp16_17;
        esi19 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi15) - reinterpret_cast<uint32_t>(g41cdf0));
        *reinterpret_cast<signed char*>(&edx20) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx18) + 1);
        *esi19 = *edx20;
        tmp16_21 = reinterpret_cast<int16_t>(bx18 + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_21;
        tmp32_22 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi19) + g43a7b0);
        esi6 = tmp32_22;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf23 = g43a7b6 == 0;
    } while (!zf23);
    goto 0x40a5ad;
}

void fun_410889() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    uint16_t ax8;
    signed char* edx9;
    int16_t tmp16_10;
    int1_t zf11;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            ++esi6;
        }
        ax8 = g43a7b8;
        do {
            *reinterpret_cast<signed char*>(&edx9) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx9;
            tmp16_10 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_10;
            ++esi6;
            ax8 = reinterpret_cast<uint16_t>(ax8 - 1);
        } while (ax8);
        esi6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) - reinterpret_cast<uint32_t>(g41cdf0));
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf11 = g43a7b6 == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

void fun_4108d2() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    signed char* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    signed char* tmp32_10;
    int1_t zf11;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            *esi6 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            ++esi6;
        }
        *reinterpret_cast<signed char*>(&edx8) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        *esi6 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_9;
        tmp32_10 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi6) + g43a7b0);
        esi6 = tmp32_10;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf11 = g43a7b6 == 0;
    } while (!zf11);
    goto 0x40a5ad;
}

struct s273 {
    signed char f0;
    signed char f1;
};

void fun_410910() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    struct s273* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    signed char* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    struct s273* tmp32_14;
    int1_t zf15;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            esi6->f0 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<struct s273*>(&esi6->f1);
        }
        *reinterpret_cast<signed char*>(&edx8) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        esi6->f0 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        bx10 = tmp16_9;
        esi11 = &esi6->f1;
        *reinterpret_cast<signed char*>(&edx12) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        *esi11 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_13;
        tmp32_14 = reinterpret_cast<struct s273*>(reinterpret_cast<int32_t>(esi11) + g43a7b0);
        esi6 = tmp32_14;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf15 = g43a7b6 == 0;
    } while (!zf15);
    goto 0x40a5ad;
}

struct s274 {
    signed char f0;
    signed char f1;
};

struct s275 {
    signed char f0;
    signed char f1;
};

void fun_41095c() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    struct s274* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    struct s275* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    int16_t bx14;
    signed char* esi15;
    signed char* edx16;
    int16_t tmp16_17;
    struct s274* tmp32_18;
    int1_t zf19;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            esi6->f0 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<struct s274*>(&esi6->f1);
        }
        *reinterpret_cast<signed char*>(&edx8) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        esi6->f0 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<struct s275*>(&esi6->f1);
        *reinterpret_cast<signed char*>(&edx12) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        esi11->f0 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43a7ba);
        bx14 = tmp16_13;
        esi15 = &esi11->f1;
        *reinterpret_cast<signed char*>(&edx16) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx14) + 1);
        *esi15 = *edx16;
        tmp16_17 = reinterpret_cast<int16_t>(bx14 + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_17;
        tmp32_18 = reinterpret_cast<struct s274*>(reinterpret_cast<int32_t>(esi15) + g43a7b0);
        esi6 = tmp32_18;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf19 = g43a7b6 == 0;
    } while (!zf19);
    goto 0x40a5ad;
}

struct s276 {
    signed char f0;
    signed char f1;
};

struct s277 {
    signed char f0;
    signed char f1;
};

struct s278 {
    signed char f0;
    signed char f1;
};

void fun_4109b6() {
    signed char* ebx1;
    uint16_t tmp16_2;
    uint16_t cx3;
    int1_t cf4;
    signed char* edx5;
    struct s276* esi6;
    int16_t tmp16_7;
    signed char* edx8;
    int16_t tmp16_9;
    int16_t bx10;
    struct s277* esi11;
    signed char* edx12;
    int16_t tmp16_13;
    int16_t bx14;
    struct s278* esi15;
    signed char* edx16;
    int16_t tmp16_17;
    int16_t bx18;
    signed char* esi19;
    signed char* edx20;
    int16_t tmp16_21;
    struct s276* tmp32_22;
    int1_t zf23;

    ebx1 = g43a7bc;
    do {
        tmp16_2 = reinterpret_cast<uint16_t>(cx3 + g43a7b4);
        cf4 = tmp16_2 < cx3;
        cx3 = tmp16_2;
        if (cf4) {
            *reinterpret_cast<signed char*>(&edx5) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
            esi6->f0 = *edx5;
            tmp16_7 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
            *reinterpret_cast<int16_t*>(&ebx1) = tmp16_7;
            esi6 = reinterpret_cast<struct s276*>(&esi6->f1);
        }
        *reinterpret_cast<signed char*>(&edx8) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1);
        esi6->f0 = *edx8;
        tmp16_9 = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx1) + g43a7ba);
        bx10 = tmp16_9;
        esi11 = reinterpret_cast<struct s277*>(&esi6->f1);
        *reinterpret_cast<signed char*>(&edx12) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx10) + 1);
        esi11->f0 = *edx12;
        tmp16_13 = reinterpret_cast<int16_t>(bx10 + g43a7ba);
        bx14 = tmp16_13;
        esi15 = reinterpret_cast<struct s278*>(&esi11->f1);
        *reinterpret_cast<signed char*>(&edx16) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx14) + 1);
        esi15->f0 = *edx16;
        tmp16_17 = reinterpret_cast<int16_t>(bx14 + g43a7ba);
        bx18 = tmp16_17;
        esi19 = &esi15->f1;
        *reinterpret_cast<signed char*>(&edx20) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&bx18) + 1);
        *esi19 = *edx20;
        tmp16_21 = reinterpret_cast<int16_t>(bx18 + g43a7ba);
        *reinterpret_cast<int16_t*>(&ebx1) = tmp16_21;
        tmp32_22 = reinterpret_cast<struct s276*>(reinterpret_cast<int32_t>(esi19) + g43a7b0);
        esi6 = tmp32_22;
        g43a7b6 = reinterpret_cast<int16_t>(g43a7b6 - 1);
        zf23 = g43a7b6 == 0;
    } while (!zf23);
    goto 0x40a5ad;
}

void fun_410d3c(signed char* ecx) {
    uint32_t ebx2;
    int32_t ebx3;
    uint32_t eax4;
    int32_t eax5;

    ebx2 = reinterpret_cast<uint32_t>(-ebx3);
    eax4 = reinterpret_cast<uint32_t>(-eax5) >> 8;
    g43a94c = ecx;
    __asm__("ror ebx, 0x10");
    g43a944 = *reinterpret_cast<signed char*>(&ebx2);
    *reinterpret_cast<int16_t*>(&ebx2) = *reinterpret_cast<int16_t*>(&eax4);
    g43a948 = ebx2;
    return;
}

int32_t GetVersion = 0x555b2;

uint32_t g43aa64 = 0;

int32_t g43aa70 = 0;

uint32_t g43aa6c = 0;

uint32_t g43aa68 = 0;

int32_t GetCommandLineA = 0x555a0;

void fun_410fd0() {
    struct s111* eax1;
    struct s111* v2;
    uint32_t eax3;
    int32_t eax4;
    uint32_t eax5;
    uint32_t eax6;
    uint32_t tmp32_7;
    int32_t eax8;
    void*** eax9;
    void** eax10;
    int1_t zf11;
    void*** esi12;
    int32_t eax13;
    int32_t eax14;
    int32_t eax15;
    int32_t eax16;

    eax1 = g0;
    v2 = eax1;
    g0 = reinterpret_cast<struct s111*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4);
    eax3 = reinterpret_cast<uint32_t>(GetVersion());
    g43aa64 = eax3;
    eax4 = 0;
    *reinterpret_cast<signed char*>(&eax4) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&g43aa64) + 1);
    g43aa70 = eax4;
    eax5 = g43aa64;
    g43aa64 = g43aa64 >> 16;
    eax6 = eax5 & 0xff;
    g43aa6c = eax6;
    tmp32_7 = (eax6 << 8) + g43aa70;
    g43aa68 = tmp32_7;
    eax8 = fun_412c60();
    if (!eax8) {
        fun_411170(28);
    }
    fun_412a80();
    fun_412a70();
    eax9 = reinterpret_cast<void***>(GetCommandLineA());
    g454684 = eax9;
    eax10 = fun_412620();
    g43aaa4 = eax10;
    if (!eax10 || (zf11 = g454684 == 0, zf11)) {
        fun_410ec0(0xff);
    }
    fun_4123a0();
    fun_4122b0();
    fun_410e90();
    esi12 = g454684;
    if (*esi12 == 34) {
        ++esi12;
        if (*esi12 == 34) {
            addr_4110d4_7:
            ++esi12;
        } else {
            do {
                if (!*esi12) 
                    break;
                eax13 = 0;
                *reinterpret_cast<void***>(&eax13) = *esi12;
                eax14 = fun_412250(eax13);
                if (eax14) {
                    ++esi12;
                }
                ++esi12;
            } while (!reinterpret_cast<int1_t>(*esi12 == 34));
            if (reinterpret_cast<int1_t>(*esi12 == 34)) 
                goto addr_4110d4_7;
        }
    } else {
        if (reinterpret_cast<unsigned char>(*esi12) > 32) {
            do {
                ++esi12;
            } while (reinterpret_cast<unsigned char>(*esi12) > 32);
        }
    }
    if (*esi12) {
        do {
            if (reinterpret_cast<unsigned char>(*esi12) > 32) 
                break;
            ++esi12;
        } while (*esi12);
    }
    GetStartupInfoA();
    if (!1) {
    }
    eax15 = reinterpret_cast<int32_t>(GetModuleHandleA(0, 0, esi12));
    eax16 = fun_403140(eax15, 0, 0, esi12);
    fun_410ec0(eax16);
    g0 = v2;
    return;
}

void fun_411b10(struct s227* a1) {
    struct s227* edx2;
    signed char al3;
    signed char* edx4;
    signed char* eax5;
    signed char* edx6;
    signed char cl7;
    signed char cl8;

    edx2 = a1;
    if (edx2->f0) {
        do {
            al3 = g43bb84;
            if (edx2->f0 == al3) 
                break;
            edx2 = reinterpret_cast<struct s227*>(&edx2->f1);
        } while (edx2->f0);
    }
    edx4 = &edx2->f1;
    if (edx2->f0) {
        if (*edx4) {
            do {
                if (*edx4 == 0x65) 
                    break;
            } while (*edx4 != 69 && (++edx4, !!*edx4));
        }
        eax5 = edx4;
        edx6 = edx4 - 1;
        if (*edx6 == 48) {
            do {
                --edx6;
            } while (*edx6 == 48);
        }
        cl7 = g43bb84;
        if (*edx6 == cl7) {
            --edx6;
        }
        do {
            cl8 = *eax5;
            ++edx6;
            ++eax5;
            *edx6 = cl8;
        } while (cl8);
    }
    return;
}

int32_t fun_411b70(int32_t a1) {
    int16_t ax2;
    int16_t fpu_status_word3;
    int32_t eax4;

    __asm__("fldz ");
    __asm__("fcomp qword [eax]");
    ax2 = fpu_status_word3;
    eax4 = 1;
    if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) & 65)) {
        eax4 = 0;
    }
    return eax4;
}

int32_t fun_411b90(int32_t a1, struct s228* a2, signed char* a3) {
    signed char** esp4;
    int32_t eax5;
    int32_t v6;
    int32_t v7;
    int32_t v8;

    esp4 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 12 - 4);
    if (!a1) {
        eax5 = fun_415f10(esp4 + 1, a3);
        a2->f0 = v6;
        return eax5;
    } else {
        fun_415ed0(esp4 + 2, a3);
        a2->f0 = v7;
        a2->f4 = v8;
        return v7;
    }
}

void** fun_4147a0() {
    void** eax1;
    int1_t zf2;
    void** esi3;
    void** edi4;
    int1_t less_or_equal5;
    void* ebx6;
    void** eax7;
    void** v8;
    int32_t eax9;
    void** eax10;
    void** v11;
    void** ecx12;
    int1_t less13;

    eax1 = fun_413920();
    zf2 = g43aa98 == 0;
    if (zf2) {
        return eax1;
    }
    esi3 = reinterpret_cast<void**>(0);
    edi4 = reinterpret_cast<void**>(3);
    less_or_equal5 = reinterpret_cast<signed char>(g454570) <= reinterpret_cast<signed char>(3);
    if (!less_or_equal5) 
        goto addr_416e43_5;
    addr_416e9c_6:
    return esi3;
    addr_416e43_5:
    ebx6 = reinterpret_cast<void*>(12);
    do {
        eax7 = g453564;
        if (*reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax7) + reinterpret_cast<uint32_t>(ebx6))) {
            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax7) + reinterpret_cast<uint32_t>(ebx6)) + 12)) & 0x83 && (v8 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax7) + reinterpret_cast<uint32_t>(ebx6)), eax9 = fun_4112a0(v8), eax9 != -1)) {
                ++esi3;
            }
            if (reinterpret_cast<int32_t>(ebx6) >= reinterpret_cast<int32_t>(80)) {
                eax10 = g453564;
                v11 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax10) + reinterpret_cast<uint32_t>(ebx6));
                fun_411250(v11);
                ecx12 = g453564;
                *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ecx12) + reinterpret_cast<uint32_t>(ebx6)) = 0;
            }
        }
        ebx6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebx6) + 4);
        ++edi4;
        less13 = reinterpret_cast<signed char>(edi4) < reinterpret_cast<signed char>(g454570);
    } while (less13);
    goto addr_416e9c_6;
}

int32_t g43aa48 = 0;

int32_t fun_415291() {
    int32_t ebp1;
    int32_t eax2;
    int32_t ebp3;
    int1_t zf4;
    unsigned char dl5;

    *reinterpret_cast<signed char*>(ebp1 - 0x90) = -2;
    __asm__("fldl2e ");
    __asm__("fmulp st1, st0");
    eax2 = fun_4153de(__return_address());
    __asm__("fld1 ");
    __asm__("faddp st1, st0");
    if (*reinterpret_cast<unsigned char*>(ebp3 - 0x9f) & 1) {
        __asm__("fld1 ");
        zf4 = g43aa48 == 1;
        if (zf4) {
            eax2 = fun_417d11();
        } else {
            __asm__("fdivrp st1, st0");
        }
    }
    if (!(dl5 & 64)) {
        __asm__("fscale ");
    }
    if (!1) {
        __asm__("fchs ");
    }
    __asm__("fxch st0, st1");
    __asm__("fstp st0");
    return eax2;
}

void fun_415324() {
    int32_t ebp1;

    *reinterpret_cast<signed char*>(ebp1 - 0x90) = 2;
    __asm__("fstp st0");
    __asm__("fld tword [0x43ba8a]");
    return;
}

void fun_415339(signed char cl) {
    int32_t ebp2;

    __asm__("fldlg2 ");
    __asm__("fxch st0, st1");
    if (cl) {
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fld tword [0x43be10]");
        if (*reinterpret_cast<signed char*>(ebp2 - 0x90) > 0) 
            goto 0x417240; else 
            goto "???";
    } else {
        __asm__("fyl2x ");
        return;
    }
}

void fun_415348() {
    __asm__("fstp st0");
    __asm__("fstp st0");
    __asm__("fld1 ");
    return;
}

void fun_415382() {
    __asm__("fstp st0");
    goto 0x417186;
}

void** fun_415890() {
    void** eax1;

    eax1 = fun_411170(2);
    return eax1;
}

void fun_4161ad() {
}

void fun_4161b9() {
}

void fun_416206() {
}

void fun_417243(signed char cl) {
    if (cl) {
        __asm__("fchs ");
    }
    return;
}

void fun_41a40c() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;
    signed char* eax13;
    signed char* eax14;
    signed char al15;
    signed char* eax16;
    signed char* eax17;
    signed char al18;
    signed char* eax19;
    signed char* eax20;
    signed char al21;
    signed char* eax22;
    signed char* eax23;
    signed char al24;
    signed char* eax25;
    signed char* eax26;
    signed char al27;
    signed char* eax28;
    signed char* eax29;
    signed char al30;
    signed char* eax31;
    signed char* eax32;
    signed char al33;
    signed char* eax34;
    signed char* eax35;
    signed char al36;
    signed char* eax37;
    signed char* eax38;
    signed char al39;
    signed char* eax40;
    signed char* eax41;
    signed char al42;
    signed char* eax43;
    signed char* eax44;
    signed char al45;
    signed char* eax46;
    signed char* eax47;
    signed char al48;
    signed char* eax49;
    signed char* eax50;
    signed char al51;
    signed char* eax52;
    signed char* eax53;
    signed char al54;
    signed char* eax55;
    signed char* eax56;
    signed char al57;
    signed char* eax58;
    signed char* eax59;
    signed char al60;
    signed char* eax61;
    signed char* eax62;
    signed char al63;
    signed char* eax64;
    signed char* eax65;
    signed char al66;
    signed char* eax67;
    signed char* eax68;
    signed char al69;
    signed char* eax70;
    signed char* eax71;
    signed char al72;
    signed char* eax73;
    signed char* eax74;
    signed char al75;
    signed char* eax76;
    signed char* eax77;
    signed char al78;
    signed char* eax79;
    signed char* eax80;
    signed char al81;
    signed char* eax82;
    signed char* eax83;
    signed char al84;
    signed char* eax85;
    signed char* eax86;
    signed char al87;
    signed char* eax88;
    signed char* eax89;
    signed char al90;
    signed char* eax91;
    signed char* eax92;
    signed char al93;
    signed char* eax94;
    signed char* eax95;
    signed char al96;
    signed char* eax97;
    signed char* eax98;
    signed char al99;
    signed char* eax100;
    signed char* eax101;
    signed char al102;
    signed char* eax103;
    signed char* eax104;
    signed char al105;
    signed char* eax106;
    signed char* eax107;
    signed char al108;
    signed char* eax109;
    signed char* eax110;
    signed char al111;
    signed char* eax112;
    signed char* eax113;
    signed char al114;
    signed char* eax115;
    signed char* eax116;
    signed char al117;
    signed char* eax118;
    signed char* eax119;
    signed char al120;
    signed char* eax121;
    signed char* eax122;
    signed char al123;
    signed char* eax124;
    signed char* eax125;
    signed char al126;
    signed char* eax127;
    signed char* eax128;
    signed char al129;
    signed char* eax130;
    signed char* eax131;
    signed char al132;
    signed char* eax133;
    signed char* eax134;
    signed char al135;
    signed char* eax136;
    signed char* eax137;
    signed char al138;
    signed char* eax139;
    signed char* eax140;
    signed char al141;
    signed char* eax142;
    signed char* eax143;
    signed char al144;
    signed char* eax145;
    signed char* eax146;
    signed char al147;
    signed char* eax148;
    signed char* eax149;
    signed char al150;
    signed char* eax151;
    signed char* eax152;
    signed char al153;
    signed char* eax154;
    signed char* eax155;
    signed char al156;
    signed char* eax157;
    signed char* eax158;
    signed char al159;
    signed char* eax160;
    signed char* eax161;
    signed char al162;
    signed char* eax163;
    signed char* eax164;
    signed char al165;
    signed char* eax166;
    signed char* eax167;
    signed char al168;
    signed char* eax169;
    signed char* eax170;
    signed char al171;
    signed char* eax172;
    signed char* eax173;
    signed char al174;
    signed char* eax175;
    signed char* eax176;
    signed char al177;
    signed char* eax178;
    signed char* eax179;
    signed char al180;
    signed char* eax181;
    signed char* eax182;
    signed char al183;
    signed char* eax184;
    signed char* eax185;
    signed char al186;
    signed char* eax187;
    signed char* eax188;
    signed char al189;
    signed char* eax190;
    signed char* eax191;
    signed char al192;
    signed char* eax193;
    signed char* eax194;
    signed char al195;
    signed char* eax196;
    signed char* eax197;
    signed char al198;
    signed char* eax199;
    signed char* eax200;
    signed char al201;
    signed char* eax202;
    signed char* eax203;
    signed char al204;
    signed char* eax205;
    signed char* eax206;
    signed char al207;
    signed char* eax208;
    signed char* eax209;
    signed char al210;
    signed char* eax211;
    signed char* eax212;
    signed char al213;
    signed char* eax214;
    signed char* eax215;
    signed char al216;
    signed char* eax217;
    signed char* eax218;
    signed char al219;
    signed char* eax220;
    signed char* eax221;
    signed char al222;
    signed char* eax223;
    signed char* eax224;
    signed char al225;
    signed char* eax226;
    signed char* eax227;
    signed char al228;
    signed char* eax229;
    signed char* eax230;
    signed char al231;
    signed char* eax232;
    signed char* eax233;
    signed char al234;
    signed char* eax235;
    signed char* eax236;
    signed char al237;
    signed char* eax238;
    signed char* eax239;
    signed char al240;
    signed char* eax241;
    signed char* eax242;
    signed char al243;
    signed char* eax244;
    signed char* eax245;
    signed char al246;
    signed char* eax247;
    signed char* eax248;
    signed char al249;
    signed char* eax250;
    signed char* eax251;
    signed char al252;
    signed char* eax253;
    signed char* eax254;
    signed char al255;
    signed char* eax256;
    signed char* eax257;
    signed char al258;
    signed char* eax259;
    signed char* eax260;
    signed char al261;
    signed char* eax262;
    signed char* eax263;
    signed char al264;
    signed char* eax265;
    signed char* eax266;
    signed char al267;
    signed char* eax268;
    signed char* eax269;
    signed char al270;
    signed char* eax271;
    signed char* eax272;
    signed char al273;
    signed char* eax274;
    signed char* eax275;
    signed char al276;
    signed char* eax277;
    signed char* eax278;
    signed char al279;
    signed char* eax280;
    signed char* eax281;
    signed char al282;
    signed char* eax283;
    signed char* eax284;
    signed char al285;
    signed char* eax286;
    signed char* eax287;
    signed char al288;
    signed char* eax289;
    signed char* eax290;
    signed char al291;
    signed char* eax292;
    signed char* eax293;
    signed char al294;
    signed char* eax295;
    signed char* eax296;
    signed char al297;
    signed char* eax298;
    signed char* eax299;
    signed char al300;
    signed char* eax301;
    signed char* eax302;
    signed char al303;
    signed char* eax304;
    signed char* eax305;
    signed char al306;
    signed char* eax307;
    signed char* eax308;
    signed char al309;
    signed char* eax310;
    signed char* eax311;
    signed char al312;
    signed char* eax313;
    signed char* eax314;
    signed char al315;
    signed char* eax316;
    signed char* eax317;
    signed char al318;
    signed char* eax319;
    signed char* eax320;
    signed char al321;
    signed char* eax322;
    signed char* eax323;
    signed char al324;
    signed char* eax325;
    signed char* eax326;
    signed char al327;
    signed char* eax328;
    signed char* eax329;
    signed char al330;
    signed char* eax331;
    signed char* eax332;
    signed char al333;
    signed char* eax334;
    signed char* eax335;
    signed char al336;
    signed char* eax337;
    signed char* eax338;
    signed char al339;
    signed char* eax340;
    signed char* eax341;
    signed char al342;
    signed char* eax343;
    signed char* eax344;
    signed char al345;
    signed char* eax346;
    signed char* eax347;
    signed char al348;
    signed char* eax349;
    signed char* eax350;
    signed char al351;
    signed char* eax352;
    signed char* eax353;
    signed char al354;
    signed char* eax355;
    signed char* eax356;
    signed char al357;
    signed char* eax358;
    signed char* eax359;
    signed char al360;
    signed char* eax361;
    signed char* eax362;
    signed char al363;
    signed char* eax364;
    signed char* eax365;
    signed char al366;
    signed char* eax367;
    signed char* eax368;
    signed char al369;
    signed char* eax370;
    signed char* eax371;
    signed char al372;
    signed char* eax373;
    signed char* eax374;
    signed char al375;
    signed char* eax376;
    signed char* eax377;
    signed char al378;
    signed char* eax379;
    signed char* eax380;
    signed char al381;
    signed char* eax382;
    signed char* eax383;
    signed char al384;
    signed char* eax385;
    signed char* eax386;
    signed char al387;
    signed char* eax388;
    signed char* eax389;
    signed char al390;
    signed char* eax391;
    signed char* eax392;
    signed char al393;
    signed char* eax394;
    signed char* eax395;
    signed char al396;
    signed char* eax397;
    signed char* eax398;
    signed char al399;
    signed char* eax400;
    signed char* eax401;
    signed char al402;
    signed char* eax403;
    signed char* eax404;
    signed char al405;
    signed char* eax406;
    signed char* eax407;
    signed char al408;
    signed char* eax409;
    signed char* eax410;
    signed char al411;
    signed char* eax412;
    signed char* eax413;
    signed char al414;
    signed char* eax415;
    signed char* eax416;
    signed char al417;
    signed char* eax418;
    signed char* eax419;
    signed char al420;
    signed char* eax421;
    signed char* eax422;
    signed char al423;
    signed char* eax424;
    signed char* eax425;
    signed char al426;
    signed char* eax427;
    signed char* eax428;
    signed char al429;
    signed char* eax430;
    signed char* eax431;
    signed char al432;
    signed char* eax433;
    signed char* eax434;
    signed char al435;
    signed char* eax436;
    signed char* eax437;
    signed char al438;
    signed char* eax439;
    signed char* eax440;
    signed char al441;
    signed char* eax442;
    signed char* eax443;
    signed char al444;
    signed char* eax445;
    signed char* eax446;
    signed char al447;
    signed char* eax448;
    signed char* eax449;
    signed char al450;
    signed char* eax451;
    signed char* eax452;
    signed char al453;
    signed char* eax454;
    signed char* eax455;
    signed char al456;
    signed char* eax457;
    signed char* eax458;
    signed char al459;
    signed char* eax460;
    signed char* eax461;
    signed char al462;
    signed char* eax463;
    signed char* eax464;
    signed char al465;
    signed char* eax466;
    signed char* eax467;
    signed char al468;
    signed char* eax469;
    signed char* eax470;
    signed char al471;
    signed char* eax472;
    signed char* eax473;
    signed char al474;
    signed char* eax475;
    signed char* eax476;
    signed char al477;
    signed char* eax478;
    signed char* eax479;
    signed char al480;
    signed char* eax481;
    signed char* eax482;
    signed char al483;
    signed char* eax484;
    signed char* eax485;
    signed char al486;
    signed char* eax487;
    signed char* eax488;
    signed char al489;
    signed char* eax490;
    signed char* eax491;
    signed char al492;
    signed char* eax493;
    signed char* eax494;
    signed char al495;
    signed char* eax496;
    signed char* eax497;
    signed char al498;
    signed char* eax499;
    signed char* eax500;
    signed char al501;
    signed char* eax502;
    signed char* eax503;
    signed char al504;
    signed char* eax505;
    signed char* eax506;
    signed char al507;
    signed char* eax508;
    signed char* eax509;
    signed char al510;
    signed char* eax511;
    signed char* eax512;
    signed char al513;
    signed char* eax514;
    signed char* eax515;
    signed char al516;
    signed char* eax517;
    signed char* eax518;
    signed char al519;
    signed char* eax520;
    signed char* eax521;
    signed char al522;
    signed char* eax523;
    signed char* eax524;
    signed char al525;
    signed char* eax526;
    signed char* eax527;
    signed char al528;
    signed char* eax529;
    signed char* eax530;
    signed char al531;
    signed char* eax532;
    signed char* eax533;
    signed char al534;
    signed char* eax535;
    signed char* eax536;
    signed char al537;
    signed char* eax538;
    signed char* eax539;
    signed char al540;
    signed char* eax541;
    signed char* eax542;
    signed char al543;
    signed char* eax544;
    signed char* eax545;
    signed char al546;
    signed char* eax547;
    signed char* eax548;
    signed char al549;
    signed char* eax550;
    signed char* eax551;
    signed char al552;
    signed char* eax553;
    signed char* eax554;
    signed char al555;
    signed char* eax556;
    signed char* eax557;
    signed char al558;
    signed char* eax559;
    signed char* eax560;
    signed char al561;
    signed char* eax562;
    signed char* eax563;
    signed char al564;
    signed char* eax565;
    signed char* eax566;
    signed char al567;
    signed char* eax568;
    signed char* eax569;
    signed char al570;
    signed char* eax571;
    signed char* eax572;
    signed char al573;
    signed char* eax574;
    signed char* eax575;
    signed char al576;
    signed char* eax577;
    signed char* eax578;
    signed char al579;
    signed char* eax580;
    signed char* eax581;
    signed char al582;
    signed char* eax583;
    signed char* eax584;
    signed char al585;
    signed char* eax586;
    signed char* eax587;
    signed char al588;
    signed char* eax589;
    signed char* eax590;
    signed char al591;
    signed char* eax592;
    signed char* eax593;
    signed char al594;
    signed char* eax595;
    signed char* eax596;
    signed char al597;
    signed char* eax598;
    signed char* eax599;
    signed char al600;
    signed char* eax601;
    signed char* eax602;
    signed char al603;
    signed char* eax604;
    signed char* eax605;
    signed char al606;
    signed char* eax607;
    signed char* eax608;
    signed char al609;
    signed char* eax610;
    signed char* eax611;
    signed char al612;
    signed char* eax613;
    signed char* eax614;
    signed char al615;
    signed char* eax616;
    signed char* eax617;
    signed char al618;
    signed char* eax619;
    signed char* eax620;
    signed char al621;
    signed char* eax622;
    signed char* eax623;
    signed char al624;
    signed char* eax625;
    signed char* eax626;
    signed char al627;
    signed char* eax628;
    signed char* eax629;
    signed char al630;
    signed char* eax631;
    signed char* eax632;
    signed char al633;
    signed char* eax634;
    signed char* eax635;
    signed char al636;
    signed char* eax637;
    signed char* eax638;
    signed char al639;
    signed char* eax640;
    signed char* eax641;
    signed char al642;
    signed char* eax643;
    signed char* eax644;
    signed char al645;
    signed char* eax646;
    signed char* eax647;
    signed char al648;
    signed char* eax649;
    signed char* eax650;
    signed char al651;
    signed char* eax652;
    signed char* eax653;
    signed char al654;
    signed char* eax655;
    signed char* eax656;
    signed char al657;
    signed char* eax658;
    signed char* eax659;
    signed char al660;
    signed char* eax661;
    signed char* eax662;
    signed char al663;
    signed char* eax664;
    signed char* eax665;
    signed char al666;
    signed char* eax667;
    signed char* eax668;
    signed char al669;
    signed char* eax670;
    signed char* eax671;
    signed char al672;
    signed char* eax673;
    signed char* eax674;
    signed char al675;
    signed char* eax676;
    signed char* eax677;
    signed char al678;
    signed char* eax679;
    signed char* eax680;
    signed char al681;
    signed char* eax682;
    signed char* eax683;
    signed char al684;
    signed char* eax685;
    signed char* eax686;
    signed char al687;
    signed char* eax688;
    signed char* eax689;
    signed char al690;
    signed char* eax691;
    signed char* eax692;
    signed char al693;
    signed char* eax694;
    signed char* eax695;
    signed char al696;
    signed char* eax697;
    signed char* eax698;
    signed char al699;
    signed char* eax700;
    signed char* eax701;
    signed char al702;
    signed char* eax703;
    signed char* eax704;
    signed char al705;
    signed char* eax706;
    signed char* eax707;
    signed char al708;
    signed char* eax709;
    signed char* eax710;
    signed char al711;
    signed char* eax712;
    signed char* eax713;
    signed char al714;
    signed char* eax715;
    signed char* eax716;
    signed char al717;
    signed char* eax718;
    signed char* eax719;
    signed char al720;
    signed char* eax721;
    signed char* eax722;
    signed char al723;
    signed char* eax724;
    signed char* eax725;
    signed char al726;
    signed char* eax727;
    signed char* eax728;
    signed char al729;
    signed char* eax730;
    signed char* eax731;
    signed char al732;
    signed char* eax733;
    signed char* eax734;
    signed char al735;
    signed char* eax736;
    signed char* eax737;
    signed char al738;
    signed char* eax739;
    signed char* eax740;
    signed char al741;
    signed char* eax742;
    signed char* eax743;
    signed char al744;
    signed char* eax745;
    signed char* eax746;
    signed char al747;
    signed char* eax748;
    signed char* eax749;
    signed char al750;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
    *eax13 = reinterpret_cast<signed char>(*eax14 + al15);
    *eax16 = reinterpret_cast<signed char>(*eax17 + al18);
    *eax19 = reinterpret_cast<signed char>(*eax20 + al21);
    *eax22 = reinterpret_cast<signed char>(*eax23 + al24);
    *eax25 = reinterpret_cast<signed char>(*eax26 + al27);
    *eax28 = reinterpret_cast<signed char>(*eax29 + al30);
    *eax31 = reinterpret_cast<signed char>(*eax32 + al33);
    *eax34 = reinterpret_cast<signed char>(*eax35 + al36);
    *eax37 = reinterpret_cast<signed char>(*eax38 + al39);
    *eax40 = reinterpret_cast<signed char>(*eax41 + al42);
    *eax43 = reinterpret_cast<signed char>(*eax44 + al45);
    *eax46 = reinterpret_cast<signed char>(*eax47 + al48);
    *eax49 = reinterpret_cast<signed char>(*eax50 + al51);
    *eax52 = reinterpret_cast<signed char>(*eax53 + al54);
    *eax55 = reinterpret_cast<signed char>(*eax56 + al57);
    *eax58 = reinterpret_cast<signed char>(*eax59 + al60);
    *eax61 = reinterpret_cast<signed char>(*eax62 + al63);
    *eax64 = reinterpret_cast<signed char>(*eax65 + al66);
    *eax67 = reinterpret_cast<signed char>(*eax68 + al69);
    *eax70 = reinterpret_cast<signed char>(*eax71 + al72);
    *eax73 = reinterpret_cast<signed char>(*eax74 + al75);
    *eax76 = reinterpret_cast<signed char>(*eax77 + al78);
    *eax79 = reinterpret_cast<signed char>(*eax80 + al81);
    *eax82 = reinterpret_cast<signed char>(*eax83 + al84);
    *eax85 = reinterpret_cast<signed char>(*eax86 + al87);
    *eax88 = reinterpret_cast<signed char>(*eax89 + al90);
    *eax91 = reinterpret_cast<signed char>(*eax92 + al93);
    *eax94 = reinterpret_cast<signed char>(*eax95 + al96);
    *eax97 = reinterpret_cast<signed char>(*eax98 + al99);
    *eax100 = reinterpret_cast<signed char>(*eax101 + al102);
    *eax103 = reinterpret_cast<signed char>(*eax104 + al105);
    *eax106 = reinterpret_cast<signed char>(*eax107 + al108);
    *eax109 = reinterpret_cast<signed char>(*eax110 + al111);
    *eax112 = reinterpret_cast<signed char>(*eax113 + al114);
    *eax115 = reinterpret_cast<signed char>(*eax116 + al117);
    *eax118 = reinterpret_cast<signed char>(*eax119 + al120);
    *eax121 = reinterpret_cast<signed char>(*eax122 + al123);
    *eax124 = reinterpret_cast<signed char>(*eax125 + al126);
    *eax127 = reinterpret_cast<signed char>(*eax128 + al129);
    *eax130 = reinterpret_cast<signed char>(*eax131 + al132);
    *eax133 = reinterpret_cast<signed char>(*eax134 + al135);
    *eax136 = reinterpret_cast<signed char>(*eax137 + al138);
    *eax139 = reinterpret_cast<signed char>(*eax140 + al141);
    *eax142 = reinterpret_cast<signed char>(*eax143 + al144);
    *eax145 = reinterpret_cast<signed char>(*eax146 + al147);
    *eax148 = reinterpret_cast<signed char>(*eax149 + al150);
    *eax151 = reinterpret_cast<signed char>(*eax152 + al153);
    *eax154 = reinterpret_cast<signed char>(*eax155 + al156);
    *eax157 = reinterpret_cast<signed char>(*eax158 + al159);
    *eax160 = reinterpret_cast<signed char>(*eax161 + al162);
    *eax163 = reinterpret_cast<signed char>(*eax164 + al165);
    *eax166 = reinterpret_cast<signed char>(*eax167 + al168);
    *eax169 = reinterpret_cast<signed char>(*eax170 + al171);
    *eax172 = reinterpret_cast<signed char>(*eax173 + al174);
    *eax175 = reinterpret_cast<signed char>(*eax176 + al177);
    *eax178 = reinterpret_cast<signed char>(*eax179 + al180);
    *eax181 = reinterpret_cast<signed char>(*eax182 + al183);
    *eax184 = reinterpret_cast<signed char>(*eax185 + al186);
    *eax187 = reinterpret_cast<signed char>(*eax188 + al189);
    *eax190 = reinterpret_cast<signed char>(*eax191 + al192);
    *eax193 = reinterpret_cast<signed char>(*eax194 + al195);
    *eax196 = reinterpret_cast<signed char>(*eax197 + al198);
    *eax199 = reinterpret_cast<signed char>(*eax200 + al201);
    *eax202 = reinterpret_cast<signed char>(*eax203 + al204);
    *eax205 = reinterpret_cast<signed char>(*eax206 + al207);
    *eax208 = reinterpret_cast<signed char>(*eax209 + al210);
    *eax211 = reinterpret_cast<signed char>(*eax212 + al213);
    *eax214 = reinterpret_cast<signed char>(*eax215 + al216);
    *eax217 = reinterpret_cast<signed char>(*eax218 + al219);
    *eax220 = reinterpret_cast<signed char>(*eax221 + al222);
    *eax223 = reinterpret_cast<signed char>(*eax224 + al225);
    *eax226 = reinterpret_cast<signed char>(*eax227 + al228);
    *eax229 = reinterpret_cast<signed char>(*eax230 + al231);
    *eax232 = reinterpret_cast<signed char>(*eax233 + al234);
    *eax235 = reinterpret_cast<signed char>(*eax236 + al237);
    *eax238 = reinterpret_cast<signed char>(*eax239 + al240);
    *eax241 = reinterpret_cast<signed char>(*eax242 + al243);
    *eax244 = reinterpret_cast<signed char>(*eax245 + al246);
    *eax247 = reinterpret_cast<signed char>(*eax248 + al249);
    *eax250 = reinterpret_cast<signed char>(*eax251 + al252);
    *eax253 = reinterpret_cast<signed char>(*eax254 + al255);
    *eax256 = reinterpret_cast<signed char>(*eax257 + al258);
    *eax259 = reinterpret_cast<signed char>(*eax260 + al261);
    *eax262 = reinterpret_cast<signed char>(*eax263 + al264);
    *eax265 = reinterpret_cast<signed char>(*eax266 + al267);
    *eax268 = reinterpret_cast<signed char>(*eax269 + al270);
    *eax271 = reinterpret_cast<signed char>(*eax272 + al273);
    *eax274 = reinterpret_cast<signed char>(*eax275 + al276);
    *eax277 = reinterpret_cast<signed char>(*eax278 + al279);
    *eax280 = reinterpret_cast<signed char>(*eax281 + al282);
    *eax283 = reinterpret_cast<signed char>(*eax284 + al285);
    *eax286 = reinterpret_cast<signed char>(*eax287 + al288);
    *eax289 = reinterpret_cast<signed char>(*eax290 + al291);
    *eax292 = reinterpret_cast<signed char>(*eax293 + al294);
    *eax295 = reinterpret_cast<signed char>(*eax296 + al297);
    *eax298 = reinterpret_cast<signed char>(*eax299 + al300);
    *eax301 = reinterpret_cast<signed char>(*eax302 + al303);
    *eax304 = reinterpret_cast<signed char>(*eax305 + al306);
    *eax307 = reinterpret_cast<signed char>(*eax308 + al309);
    *eax310 = reinterpret_cast<signed char>(*eax311 + al312);
    *eax313 = reinterpret_cast<signed char>(*eax314 + al315);
    *eax316 = reinterpret_cast<signed char>(*eax317 + al318);
    *eax319 = reinterpret_cast<signed char>(*eax320 + al321);
    *eax322 = reinterpret_cast<signed char>(*eax323 + al324);
    *eax325 = reinterpret_cast<signed char>(*eax326 + al327);
    *eax328 = reinterpret_cast<signed char>(*eax329 + al330);
    *eax331 = reinterpret_cast<signed char>(*eax332 + al333);
    *eax334 = reinterpret_cast<signed char>(*eax335 + al336);
    *eax337 = reinterpret_cast<signed char>(*eax338 + al339);
    *eax340 = reinterpret_cast<signed char>(*eax341 + al342);
    *eax343 = reinterpret_cast<signed char>(*eax344 + al345);
    *eax346 = reinterpret_cast<signed char>(*eax347 + al348);
    *eax349 = reinterpret_cast<signed char>(*eax350 + al351);
    *eax352 = reinterpret_cast<signed char>(*eax353 + al354);
    *eax355 = reinterpret_cast<signed char>(*eax356 + al357);
    *eax358 = reinterpret_cast<signed char>(*eax359 + al360);
    *eax361 = reinterpret_cast<signed char>(*eax362 + al363);
    *eax364 = reinterpret_cast<signed char>(*eax365 + al366);
    *eax367 = reinterpret_cast<signed char>(*eax368 + al369);
    *eax370 = reinterpret_cast<signed char>(*eax371 + al372);
    *eax373 = reinterpret_cast<signed char>(*eax374 + al375);
    *eax376 = reinterpret_cast<signed char>(*eax377 + al378);
    *eax379 = reinterpret_cast<signed char>(*eax380 + al381);
    *eax382 = reinterpret_cast<signed char>(*eax383 + al384);
    *eax385 = reinterpret_cast<signed char>(*eax386 + al387);
    *eax388 = reinterpret_cast<signed char>(*eax389 + al390);
    *eax391 = reinterpret_cast<signed char>(*eax392 + al393);
    *eax394 = reinterpret_cast<signed char>(*eax395 + al396);
    *eax397 = reinterpret_cast<signed char>(*eax398 + al399);
    *eax400 = reinterpret_cast<signed char>(*eax401 + al402);
    *eax403 = reinterpret_cast<signed char>(*eax404 + al405);
    *eax406 = reinterpret_cast<signed char>(*eax407 + al408);
    *eax409 = reinterpret_cast<signed char>(*eax410 + al411);
    *eax412 = reinterpret_cast<signed char>(*eax413 + al414);
    *eax415 = reinterpret_cast<signed char>(*eax416 + al417);
    *eax418 = reinterpret_cast<signed char>(*eax419 + al420);
    *eax421 = reinterpret_cast<signed char>(*eax422 + al423);
    *eax424 = reinterpret_cast<signed char>(*eax425 + al426);
    *eax427 = reinterpret_cast<signed char>(*eax428 + al429);
    *eax430 = reinterpret_cast<signed char>(*eax431 + al432);
    *eax433 = reinterpret_cast<signed char>(*eax434 + al435);
    *eax436 = reinterpret_cast<signed char>(*eax437 + al438);
    *eax439 = reinterpret_cast<signed char>(*eax440 + al441);
    *eax442 = reinterpret_cast<signed char>(*eax443 + al444);
    *eax445 = reinterpret_cast<signed char>(*eax446 + al447);
    *eax448 = reinterpret_cast<signed char>(*eax449 + al450);
    *eax451 = reinterpret_cast<signed char>(*eax452 + al453);
    *eax454 = reinterpret_cast<signed char>(*eax455 + al456);
    *eax457 = reinterpret_cast<signed char>(*eax458 + al459);
    *eax460 = reinterpret_cast<signed char>(*eax461 + al462);
    *eax463 = reinterpret_cast<signed char>(*eax464 + al465);
    *eax466 = reinterpret_cast<signed char>(*eax467 + al468);
    *eax469 = reinterpret_cast<signed char>(*eax470 + al471);
    *eax472 = reinterpret_cast<signed char>(*eax473 + al474);
    *eax475 = reinterpret_cast<signed char>(*eax476 + al477);
    *eax478 = reinterpret_cast<signed char>(*eax479 + al480);
    *eax481 = reinterpret_cast<signed char>(*eax482 + al483);
    *eax484 = reinterpret_cast<signed char>(*eax485 + al486);
    *eax487 = reinterpret_cast<signed char>(*eax488 + al489);
    *eax490 = reinterpret_cast<signed char>(*eax491 + al492);
    *eax493 = reinterpret_cast<signed char>(*eax494 + al495);
    *eax496 = reinterpret_cast<signed char>(*eax497 + al498);
    *eax499 = reinterpret_cast<signed char>(*eax500 + al501);
    *eax502 = reinterpret_cast<signed char>(*eax503 + al504);
    *eax505 = reinterpret_cast<signed char>(*eax506 + al507);
    *eax508 = reinterpret_cast<signed char>(*eax509 + al510);
    *eax511 = reinterpret_cast<signed char>(*eax512 + al513);
    *eax514 = reinterpret_cast<signed char>(*eax515 + al516);
    *eax517 = reinterpret_cast<signed char>(*eax518 + al519);
    *eax520 = reinterpret_cast<signed char>(*eax521 + al522);
    *eax523 = reinterpret_cast<signed char>(*eax524 + al525);
    *eax526 = reinterpret_cast<signed char>(*eax527 + al528);
    *eax529 = reinterpret_cast<signed char>(*eax530 + al531);
    *eax532 = reinterpret_cast<signed char>(*eax533 + al534);
    *eax535 = reinterpret_cast<signed char>(*eax536 + al537);
    *eax538 = reinterpret_cast<signed char>(*eax539 + al540);
    *eax541 = reinterpret_cast<signed char>(*eax542 + al543);
    *eax544 = reinterpret_cast<signed char>(*eax545 + al546);
    *eax547 = reinterpret_cast<signed char>(*eax548 + al549);
    *eax550 = reinterpret_cast<signed char>(*eax551 + al552);
    *eax553 = reinterpret_cast<signed char>(*eax554 + al555);
    *eax556 = reinterpret_cast<signed char>(*eax557 + al558);
    *eax559 = reinterpret_cast<signed char>(*eax560 + al561);
    *eax562 = reinterpret_cast<signed char>(*eax563 + al564);
    *eax565 = reinterpret_cast<signed char>(*eax566 + al567);
    *eax568 = reinterpret_cast<signed char>(*eax569 + al570);
    *eax571 = reinterpret_cast<signed char>(*eax572 + al573);
    *eax574 = reinterpret_cast<signed char>(*eax575 + al576);
    *eax577 = reinterpret_cast<signed char>(*eax578 + al579);
    *eax580 = reinterpret_cast<signed char>(*eax581 + al582);
    *eax583 = reinterpret_cast<signed char>(*eax584 + al585);
    *eax586 = reinterpret_cast<signed char>(*eax587 + al588);
    *eax589 = reinterpret_cast<signed char>(*eax590 + al591);
    *eax592 = reinterpret_cast<signed char>(*eax593 + al594);
    *eax595 = reinterpret_cast<signed char>(*eax596 + al597);
    *eax598 = reinterpret_cast<signed char>(*eax599 + al600);
    *eax601 = reinterpret_cast<signed char>(*eax602 + al603);
    *eax604 = reinterpret_cast<signed char>(*eax605 + al606);
    *eax607 = reinterpret_cast<signed char>(*eax608 + al609);
    *eax610 = reinterpret_cast<signed char>(*eax611 + al612);
    *eax613 = reinterpret_cast<signed char>(*eax614 + al615);
    *eax616 = reinterpret_cast<signed char>(*eax617 + al618);
    *eax619 = reinterpret_cast<signed char>(*eax620 + al621);
    *eax622 = reinterpret_cast<signed char>(*eax623 + al624);
    *eax625 = reinterpret_cast<signed char>(*eax626 + al627);
    *eax628 = reinterpret_cast<signed char>(*eax629 + al630);
    *eax631 = reinterpret_cast<signed char>(*eax632 + al633);
    *eax634 = reinterpret_cast<signed char>(*eax635 + al636);
    *eax637 = reinterpret_cast<signed char>(*eax638 + al639);
    *eax640 = reinterpret_cast<signed char>(*eax641 + al642);
    *eax643 = reinterpret_cast<signed char>(*eax644 + al645);
    *eax646 = reinterpret_cast<signed char>(*eax647 + al648);
    *eax649 = reinterpret_cast<signed char>(*eax650 + al651);
    *eax652 = reinterpret_cast<signed char>(*eax653 + al654);
    *eax655 = reinterpret_cast<signed char>(*eax656 + al657);
    *eax658 = reinterpret_cast<signed char>(*eax659 + al660);
    *eax661 = reinterpret_cast<signed char>(*eax662 + al663);
    *eax664 = reinterpret_cast<signed char>(*eax665 + al666);
    *eax667 = reinterpret_cast<signed char>(*eax668 + al669);
    *eax670 = reinterpret_cast<signed char>(*eax671 + al672);
    *eax673 = reinterpret_cast<signed char>(*eax674 + al675);
    *eax676 = reinterpret_cast<signed char>(*eax677 + al678);
    *eax679 = reinterpret_cast<signed char>(*eax680 + al681);
    *eax682 = reinterpret_cast<signed char>(*eax683 + al684);
    *eax685 = reinterpret_cast<signed char>(*eax686 + al687);
    *eax688 = reinterpret_cast<signed char>(*eax689 + al690);
    *eax691 = reinterpret_cast<signed char>(*eax692 + al693);
    *eax694 = reinterpret_cast<signed char>(*eax695 + al696);
    *eax697 = reinterpret_cast<signed char>(*eax698 + al699);
    *eax700 = reinterpret_cast<signed char>(*eax701 + al702);
    *eax703 = reinterpret_cast<signed char>(*eax704 + al705);
    *eax706 = reinterpret_cast<signed char>(*eax707 + al708);
    *eax709 = reinterpret_cast<signed char>(*eax710 + al711);
    *eax712 = reinterpret_cast<signed char>(*eax713 + al714);
    *eax715 = reinterpret_cast<signed char>(*eax716 + al717);
    *eax718 = reinterpret_cast<signed char>(*eax719 + al720);
    *eax721 = reinterpret_cast<signed char>(*eax722 + al723);
    *eax724 = reinterpret_cast<signed char>(*eax725 + al726);
    *eax727 = reinterpret_cast<signed char>(*eax728 + al729);
    *eax730 = reinterpret_cast<signed char>(*eax731 + al732);
    *eax733 = reinterpret_cast<signed char>(*eax734 + al735);
    *eax736 = reinterpret_cast<signed char>(*eax737 + al738);
    *eax739 = reinterpret_cast<signed char>(*eax740 + al741);
    *eax742 = reinterpret_cast<signed char>(*eax743 + al744);
    *eax745 = reinterpret_cast<signed char>(*eax746 + al747);
    *eax748 = reinterpret_cast<signed char>(*eax749 + al750);
}

uint32_t fun_410e20() {
    int32_t eax1;
    uint32_t eax2;

    fun_410e50();
    eax1 = fun_411a70();
    g43aa48 = eax1;
    eax2 = fun_411a00();
    __asm__("fclex ");
    return eax2;
}

int32_t fun_4052c0() {
    return 2;
}

int32_t fun_404d20() {
    return 1;
}

int32_t fun_404f10(struct s35* a1) {
    void* eax2;
    void* edx3;
    int32_t eax4;
    struct s24* edx5;
    void* eax6;
    void* edx7;
    void* eax8;
    void* edx9;
    void* eax10;

    eax2 = g43eb64;
    a1->f0 = eax2;
    edx3 = g43eb70;
    a1->f4 = edx3;
    eax4 = g43eb6c;
    a1->f8 = eax4;
    edx5 = g43ea2c;
    a1->f20 = 3;
    a1->f1c = edx5;
    eax6 = g41c958;
    a1->f24 = eax6;
    edx7 = g43eb58;
    a1->fc = edx7;
    eax8 = g43eb5c;
    a1->f10 = eax8;
    edx9 = g43eb60;
    a1->f14 = edx9;
    eax10 = g43eb68;
    a1->f18 = eax10;
    return 1;
}

struct s279 {
    signed char[8] pad8;
    int32_t f8;
};

struct s280 {
    signed char[8] pad8;
    int32_t f8;
    signed char[12] pad24;
    int32_t f18;
};

struct s280** g43ef78;

struct s281 {
    signed char[8] pad8;
    int32_t f8;
    signed char[4] pad16;
    int32_t f10;
    int32_t f14;
    int32_t f18;
    signed char[52] pad80;
    int32_t f50;
    int32_t f54;
};

struct s281** g43f780;

signed char g43f380;

signed char g43f381;

signed char g43f382;

int32_t ShowWindow = 0x55844;

void* g43c904;

int32_t g43c908;

int32_t g43c90c;

int32_t MessageBoxA = 0x55852;

void fun_405900() {
    int32_t v1;
    int32_t ebx2;
    int32_t v3;
    int32_t esi4;
    int32_t v5;
    int32_t edi6;
    struct s247*** esi7;
    struct s160*** esp8;
    struct s160** v9;
    struct s160** ebp10;
    int1_t zf11;
    struct s247** eax12;
    struct s247* eax13;
    struct s279*** esi14;
    struct s279** eax15;
    struct s279* eax16;
    int1_t zf17;
    int1_t zf18;
    struct s280** eax19;
    struct s280* ebx20;
    void* esp21;
    int1_t zf22;
    struct s281** eax23;
    struct s281* ebx24;
    int32_t eax25;
    int32_t v26;
    int32_t ecx27;
    int1_t zf28;
    int1_t zf29;
    int1_t zf30;
    struct s280** eax31;
    struct s280* ebx32;
    signed char* eax33;
    struct s281** eax34;
    struct s281* ebx35;
    int32_t eax36;
    struct s160** ecx37;
    struct s160* eax38;
    int32_t eax39;
    int32_t v40;
    int32_t v41;
    int32_t v42;
    void* esp43;
    void* v44;
    struct s281** edx45;
    struct s281* eax46;
    int32_t eax47;
    int32_t v48;
    void* ecx49;
    int32_t edx50;
    int32_t eax51;
    int1_t less52;
    int32_t v53;
    int1_t less_or_equal54;
    struct s160** eax55;
    int32_t esi56;
    void** edi57;
    struct s160* eax58;
    int32_t eax59;
    void* ecx60;
    int32_t edx61;
    int32_t eax62;
    int1_t less_or_equal63;
    int32_t v64;

    v1 = ebx2;
    v3 = esi4;
    v5 = edi6;
    esi7 = reinterpret_cast<struct s247***>(0x43c914);
    esp8 = reinterpret_cast<struct s160***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x74 - 4 - 4 - 4 - 4);
    v9 = ebp10;
    do {
        zf11 = g41c79c == 0;
        if (!zf11 && (eax12 = *esi7, !!eax12)) {
            eax13 = *eax12;
            eax13->f8(eax12);
            esp8 = esp8 - 1 - 1 + 1;
            *esi7 = reinterpret_cast<struct s247**>(0);
            *(esi7 - 11) = reinterpret_cast<struct s247**>(0);
        }
        esi7 = esi7 + 12;
    } while (reinterpret_cast<uint32_t>(esi7) < 0x43c944);
    esi14 = reinterpret_cast<struct s279***>(0x43c944);
    do {
        eax15 = *esi14;
        if (eax15) {
            eax16 = *eax15;
            eax16->f8(eax15);
            esp8 = esp8 - 1 - 1 + 1;
            *esi14 = reinterpret_cast<struct s279**>(0);
            *(esi14 - 11) = reinterpret_cast<struct s279**>(0);
        }
        esi14 = esi14 + 12;
    } while (reinterpret_cast<uint32_t>(esi14) < 0x43cd04);
    zf17 = g41c79c == 0;
    if (!zf17 && (zf18 = g43ef78 == 0, !zf18)) {
        eax19 = g43ef78;
        ebx20 = *eax19;
        ebx20->f8(eax19);
        esp8 = esp8 - 1 - 1 + 1;
        g43ef78 = reinterpret_cast<struct s280**>(0);
    }
    fun_404530(v9, v5, v3, v1);
    esp21 = reinterpret_cast<void*>(esp8 - 1 + 1);
    zf22 = g41c79c == 0;
    if (!zf22 && (eax23 = g43f780, ebx24 = *eax23, eax25 = reinterpret_cast<int32_t>(ebx24->f54()), esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp21) - 4 - 4 - 4 - 4 - 4 + 4), !!eax25)) {
        goto v26;
    }
    ecx27 = 27;
    while (ecx27) {
        --ecx27;
    }
    zf28 = g41c79c == 0;
    if (!zf28) 
        goto addr_4059d8_17;
    addr_405af8_18:
    zf29 = g41c79c == 0;
    if (!zf29) {
        zf30 = g43ef78 == 0;
        if (!zf30) {
            eax31 = g43ef78;
            ebx32 = *eax31;
            ebx32->f8(eax31);
            g43ef78 = reinterpret_cast<struct s280**>(0);
        }
        g43f380 = 0;
        g43f381 = 0;
        g43f382 = 0;
        eax33 = reinterpret_cast<signed char*>(0x43f384);
        do {
            *eax33 = -1;
            eax33 = eax33 + 4;
            *(eax33 - 3) = -1;
            *(eax33 - 2) = -1;
        } while (reinterpret_cast<uint32_t>(eax33) < 0x43f780);
        eax34 = g43f780;
        ebx35 = *eax34;
        eax36 = reinterpret_cast<int32_t>(ebx35->f14());
        if (!eax36) {
            ecx37 = g43c914;
            eax38 = *ecx37;
            eax39 = reinterpret_cast<int32_t>(eax38->f7c());
            if (eax39) {
                goto v40;
            }
        } else {
            goto v41;
        }
    }
    fun_406250();
    ShowWindow();
    goto v42;
    addr_4059d8_17:
    esp43 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp21) - 4);
    v44 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp43) + 28);
    edx45 = g43f780;
    eax46 = *edx45;
    eax47 = reinterpret_cast<int32_t>(eax46->f18());
    esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp43) - 4 - 4 - 4 - 4 + 4);
    if (eax47) {
        goto v48;
    }
    ecx49 = g41c870;
    edx50 = g41c874;
    g43c8e8 = 1;
    g43c8ec = 1;
    g43c904 = ecx49;
    eax51 = g41c878;
    g43c908 = edx50;
    less52 = g41c87c < 5;
    g43c90c = eax51;
    if (!less52) {
        MessageBoxA();
        goto v53;
    }
    less_or_equal54 = g41c87c <= 0;
    if (less_or_equal54) 
        goto addr_405af8_18;
    eax55 = g43c914;
    esi56 = 0;
    edi57 = reinterpret_cast<void**>(0x43c824);
    v9 = eax55;
    do {
        if (edi57 != 0x43c824) {
        }
        eax58 = *v9;
        eax59 = reinterpret_cast<int32_t>(eax58->f30(v9, reinterpret_cast<int32_t>(esp21) + 20, reinterpret_cast<int32_t>(esp21) + 16));
        esp21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp21) - 4 - 4 - 4 - 4 + 4);
        if (eax59) 
            break;
        ecx60 = g41c870;
        *edi57 = v44;
        edx61 = g41c874;
        *reinterpret_cast<int32_t*>(edi57 - 11) = 1;
        eax62 = g41c878;
        *reinterpret_cast<int32_t*>(edi57 - 10) = 1;
        edi57 = edi57 + 12;
        ++esi56;
        *(edi57 - 16) = ecx60;
        *reinterpret_cast<int32_t*>(edi57 - 15) = edx61;
        less_or_equal63 = g41c87c <= esi56;
        *reinterpret_cast<int32_t*>(edi57 - 14) = eax62;
    } while (!less_or_equal63);
    goto addr_405af8_18;
    MessageBoxA();
    goto v64;
}

struct s282 {
    signed char[8] pad8;
    int32_t f8;
    signed char[20] pad32;
    int32_t f20;
};

struct s282** g41c9e8 = reinterpret_cast<struct s282**>(0);

struct s283 {
    signed char[8] pad8;
    int32_t f8;
};

int32_t fun_405bf0() {
    int1_t zf1;
    int1_t zf2;
    struct s282** eax3;
    struct s282* esi4;
    struct s247*** esi5;
    int1_t zf6;
    struct s247** eax7;
    struct s247* eax8;
    struct s247*** esi9;
    int1_t zf10;
    struct s247** eax11;
    struct s247* eax12;
    struct s283*** esi13;
    struct s283** eax14;
    struct s283* eax15;
    int1_t zf16;
    int1_t zf17;
    struct s280** eax18;
    struct s280* esi19;
    int1_t zf20;
    struct s281** eax21;
    struct s281* esi22;

    zf1 = g41c79c == 0;
    if (zf1 && (zf2 = g41c9e8 == 0, !zf2)) {
        eax3 = g41c9e8;
        esi4 = *eax3;
        esi4->f8(eax3);
    }
    esi5 = reinterpret_cast<struct s247***>(0x43c914);
    do {
        zf6 = g41c79c == 0;
        if (zf6 && (eax7 = *esi5, !!eax7)) {
            eax8 = *eax7;
            eax8->f8(eax7);
            *esi5 = reinterpret_cast<struct s247**>(0);
            *(esi5 - 11) = reinterpret_cast<struct s247**>(0);
        }
        esi5 = esi5 + 12;
    } while (reinterpret_cast<uint32_t>(esi5) < 0x43c944);
    esi9 = reinterpret_cast<struct s247***>(0x43c824);
    do {
        zf10 = g41c79c == 0;
        if (zf10 && (eax11 = *esi9, !!eax11)) {
            eax12 = *eax11;
            eax12->f8(eax11);
            *esi9 = reinterpret_cast<struct s247**>(0);
            *(esi9 - 11) = reinterpret_cast<struct s247**>(0);
        }
        esi9 = esi9 + 12;
    } while (reinterpret_cast<uint32_t>(esi9) < 0x43c914);
    esi13 = reinterpret_cast<struct s283***>(0x43c944);
    do {
        eax14 = *esi13;
        if (eax14) {
            eax15 = *eax14;
            eax15->f8(eax14);
            *esi13 = reinterpret_cast<struct s283**>(0);
            *(esi13 - 11) = reinterpret_cast<struct s283**>(0);
        }
        esi13 = esi13 + 12;
    } while (reinterpret_cast<uint32_t>(esi13) < 0x43cd04);
    zf16 = g41c79c == 0;
    if (!zf16 && (zf17 = g43ef78 == 0, !zf17)) {
        eax18 = g43ef78;
        esi19 = *eax18;
        esi19->f8(eax18);
        g43ef78 = reinterpret_cast<struct s280**>(0);
    }
    zf20 = g43f780 == 0;
    if (!zf20) {
        eax21 = g43f780;
        esi22 = *eax21;
        esi22->f8(eax21);
        g43f780 = reinterpret_cast<struct s281**>(0);
    }
    return 1;
}

int32_t fun_405cf0(int32_t* a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, struct s18* a6, int32_t a7, int32_t a8) {
    int1_t zf9;
    struct s19** ecx10;
    struct s19* eax11;
    int32_t edi12;

    zf9 = *a1 == 0;
    if (zf9 || !a6->f0) {
        return 0;
    } else {
        ecx10 = a6->f2c;
        eax11 = *ecx10;
        eax11->f1c();
        goto edi12;
    }
}

int32_t fun_405d60(void* a1, void* a2, void* a3, int32_t a4, void* a5, int32_t a6, struct s20* a7, void* a8, uint32_t a9) {
    int1_t zf10;
    int32_t eax11;
    int32_t v12;
    int32_t eax13;
    int32_t eax14;
    int32_t eax15;
    signed char* ebx16;
    void* edx17;
    void* v18;
    int32_t* edx19;
    signed char* ebp20;
    uint32_t v21;
    uint32_t ecx22;
    uint32_t v23;
    int32_t v24;
    int32_t eax25;
    void* edx26;
    signed char* esi27;
    signed char* edi28;
    uint32_t ecx29;
    int32_t ecx30;
    uint32_t ecx31;
    int32_t eax32;
    int32_t eax33;
    int32_t eax34;

    zf10 = a7->f0 == 0;
    if (!zf10) {
        eax11 = a7->fc;
        v12 = eax11;
        if (eax11) {
            if (eax11 == 1) {
                eax13 = fun_4061a0(a7);
                if (eax13) {
                    eax14 = fun_406050(a7, 3);
                    if (!eax14) {
                        return 0;
                    }
                } else {
                    return 0;
                }
            }
        } else {
            eax15 = fun_406050(a7, 3);
            if (!eax15) {
                return 0;
            }
        }
        ebx16 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(a1) + (a4 * reinterpret_cast<int32_t>(a2) + reinterpret_cast<int32_t>(a3)));
        edx17 = a7->f18;
        v18 = a7->f18;
        edx19 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx17) * a9 + reinterpret_cast<uint32_t>(a7->f14));
        ebp20 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(a8) + reinterpret_cast<uint32_t>(edx19));
        v21 = -reinterpret_cast<uint32_t>(ebp20) & 3;
        ecx22 = reinterpret_cast<uint32_t>(ebp20) + reinterpret_cast<uint32_t>(a5) & 3;
        v23 = ecx22;
        __asm__("cdq ");
        v24 = reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(a5) - ecx22 - v21 + (reinterpret_cast<uint32_t>(edx19) & 3)) >> 2;
        eax25 = a6;
        if (!(reinterpret_cast<uint1_t>(eax25 < 0) | reinterpret_cast<uint1_t>(eax25 == 0))) {
            edx26 = v18;
            do {
                esi27 = ebx16;
                edi28 = ebp20;
                ecx29 = v21;
                while (ecx29) {
                    --ecx29;
                    *edi28 = *esi27;
                    ++edi28;
                    ++esi27;
                }
                ecx30 = v24;
                while (ecx30) {
                    --ecx30;
                    *edi28 = *esi27;
                    edi28 = edi28 + 4;
                    esi27 = esi27 + 4;
                }
                ecx31 = v23;
                while (ecx31) {
                    --ecx31;
                    *edi28 = *esi27;
                    ++edi28;
                    ++esi27;
                }
                ebx16 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebx16) + reinterpret_cast<int32_t>(a2));
                ebp20 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebp20) + reinterpret_cast<uint32_t>(edx26));
                --eax25;
            } while (eax25);
        }
        if (a7->fc != v12) {
            if (v12) {
                eax32 = fun_4061a0(a7);
                if (eax32) {
                    eax33 = fun_406050(a7, v12);
                    if (!eax33) {
                        return 0;
                    }
                } else {
                    return 0;
                }
            } else {
                eax34 = fun_4061a0(a7);
                if (!eax34) {
                    return 0;
                }
            }
        }
        return 1;
    } else {
        return 0;
    }
}

int32_t fun_405ef0(struct s20* a1) {
    struct s20* esi2;
    int32_t edi3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t* edx7;
    uint32_t ecx8;
    uint32_t eax9;
    uint32_t ebx10;
    int32_t eax11;
    int32_t eax12;
    int32_t eax13;

    esi2 = a1;
    if (esi2->f0) {
        edi3 = esi2->fc;
        if (edi3) {
            if (edi3 == 1) {
                eax4 = fun_4061a0(esi2);
                if (eax4) {
                    eax5 = fun_406050(esi2, 3);
                    if (!eax5) {
                        return 0;
                    }
                } else {
                    return 0;
                }
            }
        } else {
            eax6 = fun_406050(esi2, 3);
            if (!eax6) {
                return 0;
            }
        }
        edx7 = esi2->f14;
        ecx8 = 0;
        if (reinterpret_cast<int32_t>(esi2->f20) > reinterpret_cast<int32_t>(0)) {
            do {
                eax9 = 0;
                if (reinterpret_cast<int32_t>(esi2->f1c) > reinterpret_cast<int32_t>(0)) {
                    do {
                        ebx10 = reinterpret_cast<uint32_t>(esi2->f18) * ecx8 + eax9;
                        ++eax9;
                        edx7[ebx10] = 0;
                    } while (reinterpret_cast<int32_t>(esi2->f1c) > reinterpret_cast<int32_t>(eax9));
                }
                ++ecx8;
            } while (reinterpret_cast<int32_t>(esi2->f20) > reinterpret_cast<int32_t>(ecx8));
        }
        if (esi2->fc != edi3) {
            if (edi3) {
                eax11 = fun_4061a0(esi2);
                if (eax11) {
                    eax12 = fun_406050(esi2, edi3);
                    if (!eax12) {
                        return 0;
                    }
                } else {
                    return 0;
                }
            } else {
                eax13 = fun_4061a0(esi2);
                if (!eax13) {
                    return 0;
                }
            }
        }
        return 1;
    } else {
        return 0;
    }
}

int32_t fun_405fd0(struct s22* a1) {
    struct s23** eax2;
    void* v3;
    struct s23* eax4;
    struct s160** ecx5;
    struct s160* eax6;
    int32_t eax7;
    int32_t esi8;

    if (a1->f28 == 1) {
        if (a1->f0) {
            eax2 = a1->f2c;
            v3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 + 4);
            eax4 = *eax2;
            eax4->f38();
            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&v3)) & 16) {
                do {
                    ecx5 = g43c914;
                    eax6 = *ecx5;
                    eax7 = reinterpret_cast<int32_t>(eax6->f2c());
                } while (eax7 == 0x8876021c);
                goto 0;
            } else {
                goto esi8;
            }
        } else {
            return 0;
        }
    } else {
        return 0;
    }
}

int32_t fun_4061f0(signed char* a1) {
    int1_t zf2;
    signed char* ecx3;
    signed char* eax4;
    struct s280** eax5;
    struct s280* eax6;

    zf2 = g43ef78 == 0;
    if (!zf2) {
        ecx3 = a1;
        eax4 = reinterpret_cast<signed char*>(0x43ef80);
        do {
            ecx3 = ecx3 + 3;
            *eax4 = *ecx3;
            eax4 = eax4 + 4;
            *(eax4 - 3) = *(ecx3 - 2);
            *(eax4 - 2) = *(ecx3 - 1);
        } while (reinterpret_cast<uint32_t>(eax4) < 0x43f380);
        eax5 = g43ef78;
        eax6 = *eax5;
        eax6->f18();
        goto eax5;
    } else {
        return 0;
    }
}

int32_t fun_406f60() {
    return 0;
}

int32_t fun_4070f0(struct s33* a1) {
    fun_4069b0(a1);
    return 1;
}

void fun_408da8() {
    __asm__("pushad ");
    fun_407fe0();
    fun_407190();
    __asm__("popad ");
    return;
}

void fun_40a31e() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
}

void fun_40eee6() {
    goto 0x40eb90;
}

struct s284 {
    signed char[15] pad15;
    signed char ff;
};

struct s285 {
    signed char[14] pad14;
    signed char fe;
};

struct s286 {
    signed char[13] pad13;
    signed char fd;
};

struct s287 {
    signed char[12] pad12;
    signed char fc;
};

struct s288 {
    signed char[11] pad11;
    signed char fb;
};

struct s289 {
    signed char[10] pad10;
    signed char fa;
};

struct s290 {
    signed char[9] pad9;
    signed char f9;
};

struct s291 {
    signed char[8] pad8;
    signed char f8;
};

struct s292 {
    signed char[7] pad7;
    signed char f7;
};

struct s293 {
    signed char[6] pad6;
    signed char f6;
};

struct s294 {
    signed char[5] pad5;
    signed char f5;
};

struct s295 {
    signed char[4] pad4;
    signed char f4;
};

struct s296 {
    signed char[3] pad3;
    signed char f3;
};

struct s297 {
    signed char[2] pad2;
    signed char f2;
};

struct s298 {
    signed char[1] pad1;
    signed char f1;
};

void fun_40f386() {
    uint32_t ebx1;
    uint32_t edx2;
    struct s284* edi3;
    int32_t esi4;
    int32_t ebx5;
    signed char dh6;
    uint32_t edx7;
    int32_t edx8;
    int32_t ebp9;
    uint32_t ebx10;
    struct s285* edi11;
    void* esi12;
    uint32_t edx13;
    int32_t ebp14;
    uint32_t ebx15;
    struct s286* edi16;
    void* esi17;
    uint32_t edx18;
    int32_t ebp19;
    uint32_t ebx20;
    struct s287* edi21;
    void* esi22;
    uint32_t edx23;
    int32_t ebp24;
    uint32_t ebx25;
    struct s288* edi26;
    void* esi27;
    uint32_t edx28;
    int32_t ebp29;
    uint32_t ebx30;
    struct s289* edi31;
    void* esi32;
    uint32_t edx33;
    int32_t ebp34;
    uint32_t ebx35;
    struct s290* edi36;
    void* esi37;
    uint32_t edx38;
    int32_t ebp39;
    uint32_t ebx40;
    struct s291* edi41;
    void* esi42;
    uint32_t edx43;
    int32_t ebp44;
    uint32_t ebx45;
    struct s292* edi46;
    void* esi47;
    uint32_t edx48;
    int32_t ebp49;
    uint32_t ebx50;
    struct s293* edi51;
    void* esi52;
    uint32_t edx53;
    int32_t ebp54;
    uint32_t ebx55;
    struct s294* edi56;
    void* esi57;
    uint32_t edx58;
    int32_t ebp59;
    uint32_t ebx60;
    struct s295* edi61;
    void* esi62;
    uint32_t edx63;
    int32_t ebp64;
    uint32_t ebx65;
    struct s296* edi66;
    void* esi67;
    uint32_t edx68;
    int32_t ebp69;
    uint32_t ebx70;
    struct s297* edi71;
    void* esi72;
    uint32_t edx73;
    int32_t ebp74;
    uint32_t ebx75;
    struct s298* edi76;
    void* esi77;
    signed char* edi78;
    void* esi79;

    ebx1 = edx2 >> 24;
    edi3->ff = *reinterpret_cast<signed char*>(esi4 + ebx5);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx1) + 1) = dh6;
    edx7 = reinterpret_cast<uint32_t>(edx8 + ebp9);
    ebx10 = edx7 >> 24;
    edi11->fe = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi12) + ebx1);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx10) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx7) + 1);
    edx13 = edx7 + ebp14;
    ebx15 = edx13 >> 24;
    edi16->fd = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi17) + ebx10);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx15) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx13) + 1);
    edx18 = edx13 + ebp19;
    ebx20 = edx18 >> 24;
    edi21->fc = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi22) + ebx15);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx20) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx18) + 1);
    edx23 = edx18 + ebp24;
    ebx25 = edx23 >> 24;
    edi26->fb = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi27) + ebx20);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx25) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx23) + 1);
    edx28 = edx23 + ebp29;
    ebx30 = edx28 >> 24;
    edi31->fa = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi32) + ebx25);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx30) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx28) + 1);
    edx33 = edx28 + ebp34;
    ebx35 = edx33 >> 24;
    edi36->f9 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi37) + ebx30);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx35) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx33) + 1);
    edx38 = edx33 + ebp39;
    ebx40 = edx38 >> 24;
    edi41->f8 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi42) + ebx35);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx40) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx38) + 1);
    edx43 = edx38 + ebp44;
    ebx45 = edx43 >> 24;
    edi46->f7 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi47) + ebx40);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx45) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx43) + 1);
    edx48 = edx43 + ebp49;
    ebx50 = edx48 >> 24;
    edi51->f6 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi52) + ebx45);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx50) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx48) + 1);
    edx53 = edx48 + ebp54;
    ebx55 = edx53 >> 24;
    edi56->f5 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi57) + ebx50);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx55) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx53) + 1);
    edx58 = edx53 + ebp59;
    ebx60 = edx58 >> 24;
    edi61->f4 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi62) + ebx55);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx60) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx58) + 1);
    edx63 = edx58 + ebp64;
    ebx65 = edx63 >> 24;
    edi66->f3 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi67) + ebx60);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx65) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx63) + 1);
    edx68 = edx63 + ebp69;
    ebx70 = edx68 >> 24;
    edi71->f2 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi72) + ebx65);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx70) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx68) + 1);
    edx73 = edx68 + ebp74;
    ebx75 = edx73 >> 24;
    edi76->f1 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi77) + ebx70);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx75) + 1) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx73) + 1);
    *edi78 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi79) + ebx75);
}

int32_t fun_411123() {
    int32_t ebp1;
    int32_t ebp2;
    int32_t v3;
    int32_t ebp4;
    int32_t v5;
    int32_t ebp6;
    int32_t eax7;

    *reinterpret_cast<int32_t*>(ebp1 - 32) = ***reinterpret_cast<int32_t***>(ebp2 - 20);
    v3 = *reinterpret_cast<int32_t*>(ebp4 - 20);
    v5 = *reinterpret_cast<int32_t*>(ebp6 - 32);
    eax7 = fun_4120c0(v5, v3);
    return eax7;
}

struct s299 {
    unsigned char f0;
    signed char[1] pad2;
    signed char f2;
};

unsigned char* fun_411880(unsigned char* a1, unsigned char* a2, uint32_t a3) {
    uint32_t ecx4;
    unsigned char* edi5;
    unsigned char eax6;
    struct s299* edi7;
    unsigned char* esi8;
    uint32_t ebx9;
    uint32_t ecx10;
    unsigned char edx11;
    unsigned char dl12;

    ecx4 = a3;
    if (!ecx4) {
        addr_411934_2:
        return a1;
    } else {
        edi5 = a1;
        if (!(reinterpret_cast<uint32_t>(edi5) & 3)) {
            do {
                addr_4118aa_4:
                edi5 = edi5 + 4;
                if (!((*edi5 ^ 0xffffffff ^ 0x7efefeff + *edi5) & 0x81010100)) 
                    goto addr_4118aa_4;
                eax6 = *(edi5 - 4);
                if (!*reinterpret_cast<signed char*>(&eax6)) 
                    break;
                if (!*reinterpret_cast<signed char*>(&eax6 + 1)) 
                    goto addr_4118e3_7;
                if (!(eax6 & 0xff0000)) 
                    goto addr_4118de_9;
            } while (eax6 & 0xff000000);
            goto addr_4118db_11;
        } else {
            do {
                ++edi5;
                if (!*edi5) 
                    goto addr_4118db_11;
            } while (reinterpret_cast<uint32_t>(edi5) & 3);
            goto addr_4118aa_4;
        }
    }
    edi7 = reinterpret_cast<struct s299*>(edi5 - 4);
    addr_4118eb_15:
    esi8 = a2;
    if (!(reinterpret_cast<uint32_t>(esi8) & 3)) {
        ebx9 = ecx4;
        ecx10 = ecx4 >> 2;
        if (ecx10) 
            goto addr_41194c_17;
        goto addr_41191c_19;
    }
    do {
        edx11 = *esi8;
        ++esi8;
        if (!edx11) 
            break;
        edi7->f0 = edx11;
        edi7 = reinterpret_cast<struct s299*>(&edi7->pad2);
        --ecx4;
        if (!ecx4) 
            goto addr_411930_22;
    } while (reinterpret_cast<uint32_t>(esi8) & 3);
    goto addr_411915_24;
    addr_41193a_25:
    edi7->f0 = edx11;
    return a1;
    addr_411915_24:
    ebx9 = ecx4;
    ecx10 = ecx4 >> 2;
    if (ecx10) {
        do {
            addr_41194c_17:
            edx11 = *esi8;
            esi8 = esi8 + 4;
            if ((*esi8 ^ 0xffffffff ^ 0x7efefeff + *esi8) & 0x81010100) {
                if (!edx11) 
                    goto addr_41193a_25;
                if (!*reinterpret_cast<signed char*>(&edx11 + 1)) 
                    break;
                if (!(edx11 & 0xff0000)) 
                    goto addr_411988_29;
                if (!(edx11 & 0xff000000)) 
                    goto addr_41197e_31;
            }
            edi7->f0 = edx11;
            edi7 = reinterpret_cast<struct s299*>(reinterpret_cast<uint32_t>(edi7) + 4);
            --ecx10;
        } while (ecx10);
        goto addr_41191c_19;
    } else {
        addr_41191c_19:
        ecx4 = ebx9 & 3;
        if (!ecx4) {
            addr_411930_22:
            edi7->f0 = *reinterpret_cast<unsigned char*>(&ecx4);
            goto addr_411932_33;
        } else {
            do {
                dl12 = *esi8;
                ++esi8;
                edi7->f0 = dl12;
                edi7 = reinterpret_cast<struct s299*>(&edi7->pad2);
                if (!dl12) 
                    goto addr_411932_33;
                --ecx4;
            } while (ecx4);
            goto addr_411930_22;
        }
    }
    edi7->f0 = edx11;
    return a1;
    addr_411988_29:
    edi7->f0 = edx11;
    edi7->f2 = 0;
    return a1;
    addr_41197e_31:
    edi7->f0 = edx11;
    return a1;
    addr_411932_33:
    goto addr_411934_2;
    addr_4118e3_7:
    edi7 = reinterpret_cast<struct s299*>(edi5 - 3);
    goto addr_4118eb_15;
    addr_4118de_9:
    edi7 = reinterpret_cast<struct s299*>(edi5 - 2);
    goto addr_4118eb_15;
    addr_4118db_11:
    edi7 = reinterpret_cast<struct s299*>(edi5 - 1);
    goto addr_4118eb_15;
}

void fun_4119b0(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    fun_4156a1(a1, a2);
    fun_4156a1(a3, a4);
    __asm__("wait ");
    __asm__("fnstcw word [ebp+0xffffff5c]");
    fun_4170e7();
    fun_41553e();
    return;
}

void fun_411aa0(struct s229* a1) {
    struct s229* esi2;
    uint32_t v3;
    uint32_t edi4;
    uint32_t eax5;
    int1_t less_or_equal6;
    int16_t* edx7;
    uint32_t eax8;
    uint32_t eax9;
    uint32_t eax10;
    signed char cl11;
    signed char al12;
    signed char* esi13;
    signed char dl14;
    signed char al15;

    esi2 = a1;
    v3 = reinterpret_cast<uint32_t>(static_cast<int32_t>(esi2->f0));
    eax5 = fun_415940(v3, edi4);
    if (eax5 != 0x65) {
        do {
            esi2 = reinterpret_cast<struct s229*>(&esi2->f1);
            less_or_equal6 = g43bb80 <= 1;
            if (less_or_equal6) {
                edx7 = image_base_;
                eax8 = 0;
                *reinterpret_cast<int16_t*>(&eax8) = edx7[esi2->f0];
                eax9 = eax8 & 4;
            } else {
                eax10 = reinterpret_cast<uint32_t>(static_cast<int32_t>(esi2->f0));
                eax9 = fun_4158a0(eax10, 4);
            }
        } while (eax9);
    }
    cl11 = esi2->f0;
    al12 = g43bb84;
    esi2->f0 = al12;
    esi13 = &esi2->f1;
    do {
        dl14 = *esi13;
        al15 = cl11;
        *esi13 = al15;
        cl11 = dl14;
        ++esi13;
    } while (al15);
    return;
}

struct s300 {
    signed char[4] pad4;
    uint32_t f4;
};

int32_t fun_411fec(struct s300* a1, int32_t a2);

int32_t fun_412076() {
    int32_t eax1;
    struct s111* ecx2;

    eax1 = 0;
    ecx2 = g0;
    if (reinterpret_cast<int1_t>(ecx2->f4 == fun_411fec) && ecx2->f8 == ecx2->fc->fc) {
        eax1 = 1;
    }
    return eax1;
}

void fun_412099(int32_t ecx) {
    goto 0x4120ac;
}

struct s301 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s302 {
    signed char[12] pad12;
    struct s110* fc;
};

int32_t fun_412c9c(struct s301* a1, struct s110* a2, int32_t a3) {
    unsigned char* esi4;
    unsigned char dh5;
    unsigned char* eax6;
    struct s302* ebp7;
    struct s110* ebx8;
    int32_t eax9;
    int32_t esi10;
    int32_t* edi11;
    int32_t ecx12;
    int32_t eax13;
    int32_t* edi14;
    int32_t ecx15;

    *esi4 = reinterpret_cast<unsigned char>(*esi4 ^ reinterpret_cast<unsigned char>(dh5 ^ *eax6));
    ebp7 = reinterpret_cast<struct s302*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 - 4);
    ebx8 = a2;
    if (a1->f4 & 6) {
        fun_41200e(ebx8, 0xff);
        eax9 = 1;
    } else {
        *reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx8) - 4) = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp7) - 8);
        esi10 = ebx8->fc;
        edi11 = ebx8->f8;
        while (esi10 != -1) {
            ecx12 = esi10 + esi10 * 2;
            if ((edi11 + ecx12)[1] && (eax13 = reinterpret_cast<int32_t>((edi11 + ecx12)[1]()), ebp7 = ebp7, esi10 = esi10, ebx8 = ebp7->fc, !!eax13)) {
                if (__intrinsic()) 
                    goto addr_412d36_7;
                edi14 = ebx8->f8;
                fun_411fcc(ebx8);
                ebp7 = reinterpret_cast<struct s302*>(ebx8 + 1);
                fun_41200e(ebx8, esi10);
                ecx15 = esi10 + esi10 * 2;
                fun_4120a2(ecx15, 1);
                ebx8->fc = edi14[ecx15];
                (edi14 + ecx15)[2]();
            }
            edi11 = ebx8->f8;
            esi10 = edi11[esi10 + esi10 * 2];
        }
        goto addr_412d3d_10;
    }
    addr_412d59_11:
    return eax9;
    addr_412d3d_10:
    eax9 = 1;
    goto addr_412d59_11;
    addr_412d36_7:
    eax9 = 0;
    goto addr_412d59_11;
}

int32_t fun_411fec(struct s300* a1, int32_t a2) {
    int32_t eax3;
    int32_t* v4;

    eax3 = 1;
    if (a1->f4 & 6) {
        *v4 = a2;
        eax3 = 3;
    }
    return eax3;
}

void fun_414509(int32_t a1) {
    goto a1;
}

uint32_t* fun_414515(unsigned char* a1, signed char a2) {
    uint32_t eax3;
    uint32_t ebx4;
    uint32_t eax5;
    unsigned char* edx6;
    uint32_t ebx7;
    uint32_t ebx8;
    uint32_t ecx9;
    uint32_t esi10;
    uint32_t eax11;
    uint32_t eax12;
    uint32_t eax13;

    eax3 = 0;
    *reinterpret_cast<signed char*>(&eax3) = a2;
    ebx4 = eax3;
    eax5 = eax3 << 8;
    edx6 = a1;
    if (!(reinterpret_cast<uint32_t>(edx6) & 3)) {
        addr_41454b_3:
        ebx7 = ebx4 | eax5;
        ebx8 = ebx7 << 16 | ebx7;
    } else {
        do {
            ++edx6;
            if (*edx6 == *reinterpret_cast<unsigned char*>(&ebx4)) 
                goto 0x414510;
            if (!*edx6) 
                goto addr_414594_6;
        } while (reinterpret_cast<uint32_t>(edx6) & 3);
        goto addr_41454b_3;
    }
    while (1) {
        ecx9 = *edx6 ^ ebx8;
        esi10 = 0x7efefeff + *edx6;
        edx6 = edx6 + 4;
        if ((ecx9 ^ 0xffffffff ^ 0x7efefeff + ecx9) & 0x81010100) {
            eax11 = *reinterpret_cast<uint32_t*>(edx6 - 4);
            if (*reinterpret_cast<signed char*>(&eax11) == *reinterpret_cast<signed char*>(&ebx8)) 
                break;
            if (!*reinterpret_cast<signed char*>(&eax11)) 
                goto addr_414592_11;
            if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax11) + 1) == *reinterpret_cast<signed char*>(&ebx8)) 
                goto addr_4145ce_13;
            if (!*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax11) + 1)) 
                goto addr_414592_11;
            eax12 = eax11 >> 16;
            if (*reinterpret_cast<signed char*>(&eax12) == *reinterpret_cast<signed char*>(&ebx8)) 
                goto addr_4145c7_16;
            if (!*reinterpret_cast<signed char*>(&eax12)) 
                goto addr_414592_11;
            if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax12) + 1) == *reinterpret_cast<signed char*>(&ebx8)) 
                goto addr_4145c0_19;
            if (!*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax12) + 1)) 
                goto addr_414592_11;
        } else {
            eax13 = (*edx6 ^ 0xffffffff ^ esi10) & 0x81010100;
            if (!eax13) 
                continue;
            if (eax13 & 0x1010100) 
                goto addr_414592_11;
            if (!(esi10 & 0x80000000)) 
                goto addr_414592_11;
        }
    }
    return edx6 - 4;
    addr_414592_11:
    addr_414594_6:
    return 0;
    addr_4145ce_13:
    return edx6 - 3;
    addr_4145c7_16:
    return edx6 - 2;
    addr_4145c0_19:
    return edx6 - 1;
}

void fun_4146d0() {
    int1_t zf1;
    int1_t less2;
    void** eax3;
    void** eax4;
    void** eax5;
    int32_t ecx6;
    void* eax7;
    void** edx8;
    uint32_t esi9;
    int32_t* edx10;

    zf1 = g454570 == 0;
    if (!zf1) {
        less2 = reinterpret_cast<signed char>(g454570) < reinterpret_cast<signed char>(20);
        if (less2) {
            g454570 = reinterpret_cast<void**>(20);
        }
    } else {
        g454570 = reinterpret_cast<void**>(0x200);
    }
    eax3 = g454570;
    eax4 = fun_4117e0(eax3, 4);
    g453564 = eax4;
    if (!eax4 && (g454570 = reinterpret_cast<void**>(20), eax5 = fun_4117e0(20, 4), g453564 = eax5, !eax5)) {
        fun_411170(26);
    }
    ecx6 = reinterpret_cast<int32_t>("p5E");
    eax7 = reinterpret_cast<void*>(0);
    do {
        edx8 = g453564;
        eax7 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax7) + 4);
        *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(edx8) + reinterpret_cast<uint32_t>(eax7) + 0xfffffffc) = ecx6;
        ecx6 = ecx6 + 32;
    } while (reinterpret_cast<int32_t>(eax7) < reinterpret_cast<int32_t>(80));
    esi9 = 0;
    edx10 = reinterpret_cast<int32_t*>(0x43b7f8);
    do {
        if ((*reinterpret_cast<int32_t**>((reinterpret_cast<int32_t>(esi9 & 0xffffffe7) >> 3) + 0x454580))[(esi9 & 31) * 2] == -1 || !(*reinterpret_cast<int32_t**>((reinterpret_cast<int32_t>(esi9 & 0xffffffe7) >> 3) + 0x454580))[(esi9 & 31) * 2]) {
            *edx10 = -1;
        }
        edx10 = edx10 + 8;
        ++esi9;
    } while (reinterpret_cast<uint32_t>(edx10) < 0x43b858);
    return;
}

void fun_415280() {
    int32_t ebp1;
    signed char ch2;
    int32_t eax3;

    *reinterpret_cast<signed char*>(ebp1 - 0x90) = -2;
    if (ch2) {
        eax3 = fun_415421(__return_address());
        if (!eax3) 
            goto 0x4152f3;
        if (eax3 != 2) 
            goto addr_4152e6_4;
    } else {
        __asm__("fxch st0, st1");
        goto addr_41528d_6;
    }
    addr_4152e8_7:
    __asm__("fxch st0, st1");
    __asm__("fabs ");
    addr_41528d_6:
    __asm__("fyl2x ");
    goto 0x41529e;
    addr_4152e6_4:
    goto addr_4152e8_7;
}

void fun_4152ee() {
    goto 0x41718b;
}

void fun_415334(signed char cl) {
    if (cl) {
        goto 0x417228;
    } else {
        return;
    }
}

void fun_41533d() {
    __asm__("fldln2 ");
}

void fun_41534d(int16_t cx) {
    int32_t eax2;
    int32_t ebp3;

    eax2 = fun_415421(__return_address());
    __asm__("fstp st0");
    __asm__("fstp st0");
    if (*reinterpret_cast<signed char*>(&cx)) {
        *reinterpret_cast<signed char*>(ebp3 - 0x90) = 2;
        __asm__("fld tword [0x43ba80]");
        if (eax2 == 1 && *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&cx) + 1)) {
            __asm__("fchs ");
        }
    } else {
        __asm__("fldz ");
        if (eax2 == 1 && *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&cx) + 1)) {
            __asm__("fchs ");
        }
    }
    return;
}

void fun_415389() {
    __asm__("fstp st0");
}

void fun_415455() {
    int32_t v1;
    int32_t v2;
    uint32_t v3;
    uint32_t v4;
    int32_t eax5;

    __asm__("fstp qword [esp]");
    __asm__("fstp qword [esp]");
    __asm__("wait ");
    __asm__("fnsave [esi+0x8]");
    eax5 = fun_417250(v1, v2, v3, v4, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 0x74);
    __asm__("frstor [esi+0x8]");
    __asm__("fld qword [esi]");
    if (!eax5) {
        return;
    } else {
        goto fun_417239;
    }
}

void fun_415487() {
    int1_t zf1;

    __asm__("wait ");
    __asm__("fnstcw word [ebp+0xffffff5c]");
    __asm__("wait ");
    zf1 = g43c0b8 == 0;
    if (zf1) {
        __asm__("fxch st0, st1");
        __asm__("fst qword [ebp+0xffffff7a]");
        __asm__("fxch st0, st1");
        __asm__("fst qword [ebp-0x7e]");
    }
    fun_4170e7();
    g452878 = 1;
    fun_415545();
    return;
}

void fun_416179() {
}

void fun_416226() {
}

int32_t fun_417040(int32_t a1, uint32_t a2, int32_t a3, uint32_t a4) {
    if (a4 | a2) {
        return a1 * a3;
    } else {
        return a1 * a3;
    }
}

void fun_417173(signed char cl) {
    fun_417239(cl, __return_address());
}

void fun_4171bd() {
    int32_t ebp1;
    int32_t ebp2;
    int32_t ebp3;

    __asm__("fxch st0, st1");
    __asm__("fstp tword [ebp+0xffffff62]");
    __asm__("fld tword [ebp+0xffffff62]");
    if (!(*reinterpret_cast<unsigned char*>(ebp1 - 0x97) & 64)) {
        *reinterpret_cast<signed char*>(ebp2 - 0x90) = 1;
    } else {
        *reinterpret_cast<signed char*>(ebp3 - 0x90) = 7;
    }
    __asm__("faddp st1, st0");
    return;
}

void fun_4171e7() {
    int32_t ebp1;
    int32_t ebp2;
    int32_t ebp3;
    int32_t ebp4;

    __asm__("fstp tword [ebp+0xffffff62]");
    __asm__("fld tword [ebp+0xffffff62]");
    if (!(*reinterpret_cast<unsigned char*>(ebp1 - 0x97) & 64) || !(*reinterpret_cast<unsigned char*>(ebp2 - 0x97) & 64)) {
        *reinterpret_cast<signed char*>(ebp3 - 0x90) = 1;
    } else {
        *reinterpret_cast<signed char*>(ebp4 - 0x90) = 7;
    }
    __asm__("faddp st1, st0");
    return;
}

uint32_t fun_417637(uint32_t a1, uint32_t a2) {
    uint32_t eax3;
    uint32_t eax4;
    int32_t v5;
    int32_t v6;
    uint32_t v7;
    uint32_t v8;
    uint32_t v9;
    uint32_t eax10;
    int32_t v11;
    int32_t v12;
    uint32_t v13;
    uint32_t v14;
    uint32_t v15;
    uint32_t eax16;
    uint32_t v17;
    uint32_t v18;
    uint32_t v19;
    uint32_t eax20;
    uint32_t v21;
    uint32_t v22;
    uint32_t v23;
    uint32_t eax24;
    uint32_t v25;
    uint32_t v26;
    uint32_t v27;
    uint32_t eax28;
    int32_t v29;
    int32_t v30;
    uint32_t v31;
    uint32_t v32;
    uint32_t v33;
    uint32_t eax34;
    uint32_t v35;
    uint32_t v36;
    uint32_t v37;
    uint32_t eax38;
    uint32_t v39;
    uint32_t v40;
    uint32_t v41;
    uint32_t eax42;
    uint32_t v43;
    uint32_t v44;
    uint32_t v45;
    uint32_t eax46;
    int32_t v47;
    int32_t v48;
    uint32_t v49;
    uint32_t v50;
    uint32_t v51;
    uint32_t eax52;
    uint32_t v53;
    uint32_t v54;
    uint32_t v55;
    uint32_t eax56;
    uint32_t v57;
    uint32_t v58;
    uint32_t v59;
    uint32_t eax60;
    uint32_t v61;
    uint32_t v62;
    uint32_t v63;
    uint32_t eax64;
    int32_t v65;
    int32_t v66;
    uint32_t v67;
    uint32_t v68;
    uint32_t v69;
    uint32_t eax70;
    uint32_t v71;
    uint32_t v72;
    uint32_t v73;
    uint32_t eax74;
    uint32_t v75;
    uint32_t v76;
    uint32_t v77;
    uint32_t eax78;
    uint32_t v79;
    uint32_t v80;
    uint32_t v81;
    uint32_t eax82;
    int32_t v83;
    int32_t v84;
    uint32_t v85;
    uint32_t v86;
    uint32_t v87;
    uint32_t eax88;
    uint32_t v89;
    uint32_t v90;
    uint32_t v91;
    uint32_t eax92;
    uint32_t v93;
    uint32_t v94;
    uint32_t v95;
    uint32_t eax96;
    uint32_t v97;
    uint32_t v98;
    uint32_t v99;
    uint32_t eax100;
    int32_t v101;
    int32_t v102;
    uint32_t v103;
    uint32_t v104;
    uint32_t v105;
    uint32_t eax106;
    uint32_t v107;
    uint32_t v108;
    uint32_t v109;
    uint32_t eax110;
    uint32_t v111;
    uint32_t v112;
    uint32_t v113;
    uint32_t eax114;
    uint32_t v115;
    uint32_t v116;
    uint32_t v117;
    uint32_t eax118;
    int32_t v119;
    int32_t v120;
    uint32_t v121;
    uint32_t v122;
    uint32_t v123;
    uint32_t eax124;
    uint32_t v125;
    uint32_t v126;
    uint32_t v127;
    uint32_t eax128;
    uint32_t v129;
    uint32_t v130;
    uint32_t v131;
    uint32_t eax132;

    eax3 = eax4 & 63;
    switch (eax3) {
    case 0:
        __asm__("fdiv st0, st0");
        return eax3;
    case 1:
        __asm__("int 0x6");
    case 2:
        __asm__("fdivr st0, st0");
        goto v5;
    case 3:
        __asm__("int 0x6");
    case 4:
        __asm__("fdiv st0, st0");
        goto v6;
    case 5:
        __asm__("fdivp st0, st0");
        return eax3;
    case 6:
        __asm__("fdivr st0, st0");
        return eax3;
    case 7:
        __asm__("fdivrp st0, st0");
        return eax3;
    case 8:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        eax10 = fun_417520(v7, v8, v9);
        __asm__("fld tword [esp+0x20]");
        __asm__("fxch st0, st1");
        return eax10;
    case 9:
        __asm__("int 0x6");
    case 10:
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0xc]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fld tword [esp+0xc]");
        __asm__("fxch st0, st1");
        goto v11;
    case 11:
        __asm__("int 0x6");
    case 12:
        __asm__("fxch st0, st1");
        __asm__("fstp tword [esp+0xc]");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fld tword [esp+0x20]");
        goto v12;
    case 13:
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0xc]");
        eax16 = fun_417520(v13, v14, v15);
        return eax16;
    case 14:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fstp tword [esp]");
        eax20 = fun_417520(v17, v18, v19);
        __asm__("fld tword [esp+0xc]");
        return eax20;
    case 15:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fstp tword [esp]");
        eax24 = fun_417520(v21, v22, v23);
        return eax24;
    case 16:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st1");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        eax28 = fun_417520(v25, v26, v27);
        __asm__("fxch st0, st1");
        __asm__("fld tword [esp+0x20]");
        __asm__("fxch st0, st2");
        return eax28;
    case 17:
        __asm__("int 0x6");
    case 18:
        __asm__("fstp tword [esp]");
        __asm__("fxch st0, st1");
        __asm__("fstp tword [esp+0xc]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fxch st0, st1");
        __asm__("fld tword [esp+0xc]");
        __asm__("fxch st0, st2");
        goto v29;
    case 19:
        __asm__("int 0x6");
    case 20:
        __asm__("fxch st0, st2");
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st1");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fxch st0, st1");
        __asm__("fld tword [esp+0x20]");
        goto v30;
    case 21:
        __asm__("fstp tword [esp]");
        __asm__("fxch st0, st1");
        __asm__("fstp tword [esp+0xc]");
        eax34 = fun_417520(v31, v32, v33);
        __asm__("fxch st0, st1");
        return eax34;
    case 22:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st1");
        __asm__("fstp tword [esp]");
        eax38 = fun_417520(v35, v36, v37);
        __asm__("fxch st0, st1");
        __asm__("fld tword [esp+0xc]");
        return eax38;
    case 23:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st1");
        __asm__("fstp tword [esp]");
        eax42 = fun_417520(v39, v40, v41);
        __asm__("fxch st0, st1");
        return eax42;
    case 24:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st2");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        eax46 = fun_417520(v43, v44, v45);
        __asm__("fxch st0, st2");
        __asm__("fld tword [esp+0x20]");
        __asm__("fxch st0, st3");
        return eax46;
    case 25:
        __asm__("int 0x6");
    case 26:
        __asm__("fstp tword [esp]");
        __asm__("fxch st0, st2");
        __asm__("fstp tword [esp+0xc]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fxch st0, st2");
        __asm__("fld tword [esp+0xc]");
        __asm__("fxch st0, st3");
        goto v47;
    case 27:
        __asm__("int 0x6");
    case 28:
        __asm__("fxch st0, st3");
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st2");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fxch st0, st2");
        __asm__("fld tword [esp+0x20]");
        goto v48;
    case 29:
        __asm__("fstp tword [esp]");
        __asm__("fxch st0, st2");
        __asm__("fstp tword [esp+0xc]");
        eax52 = fun_417520(v49, v50, v51);
        __asm__("fxch st0, st2");
        return eax52;
    case 30:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st2");
        __asm__("fstp tword [esp]");
        eax56 = fun_417520(v53, v54, v55);
        __asm__("fxch st0, st2");
        __asm__("fld tword [esp+0xc]");
        return eax56;
    case 31:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st2");
        __asm__("fstp tword [esp]");
        eax60 = fun_417520(v57, v58, v59);
        __asm__("fxch st0, st2");
        return eax60;
    case 32:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st3");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        eax64 = fun_417520(v61, v62, v63);
        __asm__("fxch st0, st3");
        __asm__("fld tword [esp+0x20]");
        __asm__("fxch st0, st4");
        return eax64;
    case 33:
        __asm__("int 0x6");
    case 34:
        __asm__("fstp tword [esp]");
        __asm__("fxch st0, st3");
        __asm__("fstp tword [esp+0xc]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fxch st0, st3");
        __asm__("fld tword [esp+0xc]");
        __asm__("fxch st0, st4");
        goto v65;
    case 35:
        __asm__("int 0x6");
    case 36:
        __asm__("fxch st0, st4");
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st3");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fxch st0, st3");
        __asm__("fld tword [esp+0x20]");
        goto v66;
    case 37:
        __asm__("fstp tword [esp]");
        __asm__("fxch st0, st3");
        __asm__("fstp tword [esp+0xc]");
        eax70 = fun_417520(v67, v68, v69);
        __asm__("fxch st0, st3");
        return eax70;
    case 38:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st3");
        __asm__("fstp tword [esp]");
        eax74 = fun_417520(v71, v72, v73);
        __asm__("fxch st0, st3");
        __asm__("fld tword [esp+0xc]");
        return eax74;
    case 39:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st3");
        __asm__("fstp tword [esp]");
        eax78 = fun_417520(v75, v76, v77);
        __asm__("fxch st0, st3");
        return eax78;
    case 40:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st4");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        eax82 = fun_417520(v79, v80, v81);
        __asm__("fxch st0, st4");
        __asm__("fld tword [esp+0x20]");
        __asm__("fxch st0, st5");
        return eax82;
    case 41:
        __asm__("int 0x6");
    case 42:
        __asm__("fstp tword [esp]");
        __asm__("fxch st0, st4");
        __asm__("fstp tword [esp+0xc]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fxch st0, st4");
        __asm__("fld tword [esp+0xc]");
        __asm__("fxch st0, st5");
        goto v83;
    case 43:
        __asm__("int 0x6");
    case 44:
        __asm__("fxch st0, st5");
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st4");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fxch st0, st4");
        __asm__("fld tword [esp+0x20]");
        goto v84;
    case 45:
        __asm__("fstp tword [esp]");
        __asm__("fxch st0, st4");
        __asm__("fstp tword [esp+0xc]");
        eax88 = fun_417520(v85, v86, v87);
        __asm__("fxch st0, st4");
        return eax88;
    case 46:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st4");
        __asm__("fstp tword [esp]");
        eax92 = fun_417520(v89, v90, v91);
        __asm__("fxch st0, st4");
        __asm__("fld tword [esp+0xc]");
        return eax92;
    case 47:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st4");
        __asm__("fstp tword [esp]");
        eax96 = fun_417520(v93, v94, v95);
        __asm__("fxch st0, st4");
        return eax96;
    case 48:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st5");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        eax100 = fun_417520(v97, v98, v99);
        __asm__("fxch st0, st5");
        __asm__("fld tword [esp+0x20]");
        __asm__("fxch st0, st6");
        return eax100;
    case 49:
        __asm__("int 0x6");
    case 50:
        __asm__("fstp tword [esp]");
        __asm__("fxch st0, st5");
        __asm__("fstp tword [esp+0xc]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fxch st0, st5");
        __asm__("fld tword [esp+0xc]");
        __asm__("fxch st0, st6");
        goto v101;
    case 51:
        __asm__("int 0x6");
    case 52:
        __asm__("fxch st0, st6");
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st5");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fxch st0, st5");
        __asm__("fld tword [esp+0x20]");
        goto v102;
    case 53:
        __asm__("fstp tword [esp]");
        __asm__("fxch st0, st5");
        __asm__("fstp tword [esp+0xc]");
        eax106 = fun_417520(v103, v104, v105);
        __asm__("fxch st0, st5");
        return eax106;
    case 54:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st5");
        __asm__("fstp tword [esp]");
        eax110 = fun_417520(v107, v108, v109);
        __asm__("fxch st0, st5");
        __asm__("fld tword [esp+0xc]");
        return eax110;
    case 55:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st5");
        __asm__("fstp tword [esp]");
        eax114 = fun_417520(v111, v112, v113);
        __asm__("fxch st0, st5");
        return eax114;
    case 56:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st6");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        eax118 = fun_417520(v115, v116, v117);
        __asm__("fxch st0, st6");
        __asm__("fld tword [esp+0x20]");
        __asm__("fxch st0, st7");
        return eax118;
    case 57:
        __asm__("int 0x6");
    case 58:
        __asm__("fstp tword [esp]");
        __asm__("fxch st0, st6");
        __asm__("fstp tword [esp+0xc]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fxch st0, st6");
        __asm__("fld tword [esp+0xc]");
        __asm__("fxch st0, st7");
        goto v119;
    case 59:
        __asm__("int 0x6");
    case 60:
        __asm__("fxch st0, st7");
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st6");
        __asm__("fld st0");
        __asm__("fstp tword [esp]");
        __asm__("fstp tword [esp+0x20]");
        fun_417520(__return_address(), a1, a2);
        __asm__("fxch st0, st6");
        __asm__("fld tword [esp+0x20]");
        goto v120;
    case 61:
        __asm__("fstp tword [esp]");
        __asm__("fxch st0, st6");
        __asm__("fstp tword [esp+0xc]");
        eax124 = fun_417520(v121, v122, v123);
        __asm__("fxch st0, st6");
        return eax124;
    case 62:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st6");
        __asm__("fstp tword [esp]");
        eax128 = fun_417520(v125, v126, v127);
        __asm__("fxch st0, st6");
        __asm__("fld tword [esp+0xc]");
        return eax128;
    case 63:
        __asm__("fstp tword [esp+0xc]");
        __asm__("fxch st0, st6");
        __asm__("fstp tword [esp]");
        eax132 = fun_417520(v129, v130, v131);
        __asm__("fxch st0, st6");
        return eax132;
    }
}

int32_t fun_417bc8() {
    uint32_t eax1;
    int16_t fpu_status_word2;
    int32_t eax3;

    *reinterpret_cast<int16_t*>(&eax1) = fpu_status_word2;
    if (!(eax1 & 0x3800)) {
        __asm__("fxch st0, st1");
        __asm__("fstp tword [esp]");
        __asm__("fild dword [esp+0x14]");
        fun_417ad6();
        __asm__("fld tword [esp]");
        __asm__("fxch st0, st1");
        return eax3;
    } else {
        __asm__("fild dword [esp+0x8]");
        fun_417ad6();
        return eax3;
    }
}

int32_t fun_417bfc(uint32_t a1) {
    uint32_t eax2;
    int32_t eax3;
    int16_t fpu_status_word4;

    eax2 = a1 & 0x7f800000;
    if (eax2 == 0x7f800000) {
        __asm__("fdivr dword [esp+0x8]");
        return eax3;
    } else {
        *reinterpret_cast<int16_t*>(&eax2) = fpu_status_word4;
        if (!(eax2 & 0x3800)) {
            __asm__("fxch st0, st1");
            __asm__("fstp tword [esp]");
            __asm__("fld dword [esp+0x14]");
            fun_417ae9();
            __asm__("fld tword [esp]");
            __asm__("fxch st0, st1");
            return eax3;
        } else {
            __asm__("fld dword [esp+0x8]");
            fun_417ae9();
            return eax3;
        }
    }
}

int32_t fun_417afc(uint32_t a1) {
    uint32_t eax2;
    int32_t eax3;
    int16_t fpu_status_word4;

    eax2 = a1 & 0x7f800000;
    if (eax2 == 0x7f800000) {
        __asm__("fdiv dword [esp+0x8]");
        return eax3;
    } else {
        *reinterpret_cast<int16_t*>(&eax2) = fpu_status_word4;
        if (!(eax2 & 0x3800)) {
            __asm__("fxch st0, st1");
            __asm__("fstp tword [esp]");
            __asm__("fld dword [esp+0x14]");
            fun_417ad6();
            __asm__("fld tword [esp]");
            __asm__("fxch st0, st1");
            return eax3;
        } else {
            __asm__("fld dword [esp+0x8]");
            fun_417ad6();
            return eax3;
        }
    }
}

int32_t fun_417cc8() {
    uint32_t eax1;
    int16_t fpu_status_word2;
    int32_t eax3;

    *reinterpret_cast<int16_t*>(&eax1) = fpu_status_word2;
    if (!(eax1 & 0x3800)) {
        __asm__("fxch st0, st1");
        __asm__("fstp tword [esp]");
        __asm__("fild dword [esp+0x14]");
        fun_417ae9();
        __asm__("fld tword [esp]");
        __asm__("fxch st0, st1");
        return eax3;
    } else {
        __asm__("fild dword [esp+0x8]");
        fun_417ae9();
        return eax3;
    }
}

int32_t fun_417cfc() {
    uint32_t v1;
    uint32_t v2;
    uint32_t v3;
    int32_t eax4;

    __asm__("fstp tword [esp]");
    __asm__("fstp tword [esp+0xc]");
    fun_417520(v1, v2, v3);
    return eax4;
}

void fun_419b9a() {
}

void fun_410e40() {
    return;
}

int32_t CreateWindowExA = 0x5590c;

int32_t UpdateWindow = 0x558fc;

int32_t SetFocus = 0x558f0;

int32_t GetDC = 0x558e8;

int32_t GetDeviceCaps = 0x5591e;

int32_t g41c9ec = 8;

int32_t ReleaseDC = 0x558dc;

int32_t GetWindowLongA = 0x558ca;

int32_t SetWindowLongA = 0x558b8;

int32_t GetMenu = 0x558ae;

int32_t AdjustWindowRectEx = 0x55898;

int32_t SetWindowPos = 0x55888;

int32_t SystemParametersInfoA = 0x55870;

int32_t GetWindowRect = 0x55860;

signed char g43eb78;

signed char g43eb79;

signed char g43eb7a;

void fun_4052d0() {
    int32_t v1;
    int32_t esi2;
    struct s160** ebp3;
    int32_t edi4;
    int32_t ebx5;
    int32_t eax6;
    int32_t esi7;
    int32_t eax8;
    int32_t eax9;
    int32_t v10;
    int32_t eax11;
    int32_t eax12;
    void* esp13;
    int32_t v14;
    int1_t zf15;
    void* esp16;
    struct s281** ecx17;
    struct s281* eax18;
    int32_t eax19;
    void* esp20;
    int32_t v21;
    int1_t zf22;
    int32_t eax23;
    int32_t edi24;
    int32_t eax25;
    struct s160** v26;
    int32_t eax27;
    void* v28;
    int32_t eax29;
    int32_t esi30;
    uint32_t eax31;
    int32_t ecx32;
    uint32_t v33;
    void* esp34;
    int32_t ecx35;
    int32_t eax36;
    int32_t ecx37;
    uint32_t eax38;
    int32_t ecx39;
    uint32_t v40;
    int32_t eax41;
    void* esp42;
    void* v43;
    int32_t ecx44;
    int32_t ecx45;
    int32_t v46;
    void* esp47;
    void* v48;
    void* esp49;
    int32_t eax50;
    void* v51;
    int32_t edx52;
    void* esp53;
    struct s281** eax54;
    struct s281* ebx55;
    int32_t eax56;
    int32_t v57;
    int32_t ecx58;
    int1_t zf59;
    struct s281** ecx60;
    struct s281* eax61;
    int32_t eax62;
    void* ecx63;
    int32_t edx64;
    int32_t eax65;
    int1_t less66;
    int32_t v67;
    int1_t less_or_equal68;
    struct s281** eax69;
    struct s281* ebx70;
    int32_t eax71;
    struct s282** ecx72;
    struct s282* eax73;
    int32_t eax74;
    struct s160** ecx75;
    struct s160* eax76;
    int32_t eax77;
    int32_t v78;
    int1_t zf79;
    int1_t zf80;
    struct s280** eax81;
    struct s280* ebx82;
    signed char* eax83;
    struct s281** eax84;
    struct s281* ebx85;
    int32_t eax86;
    struct s160** ecx87;
    struct s160* eax88;
    int32_t eax89;
    int32_t v90;
    int32_t ebx91;
    int32_t edi92;
    struct s281** ecx93;
    struct s281* eax94;
    int32_t eax95;
    void* eax96;
    int32_t ecx97;
    int32_t edx98;
    int1_t less99;
    int32_t v100;
    void* esp101;
    struct s281** edx102;
    struct s281* eax103;
    int32_t eax104;
    void* esp105;
    void* ecx106;
    int32_t edx107;
    int32_t eax108;
    int1_t less109;
    int32_t v110;
    int1_t less_or_equal111;
    struct s160** eax112;
    int32_t ebp113;
    void** esi114;
    struct s160* eax115;
    int32_t eax116;
    void* ecx117;
    int32_t edx118;
    int32_t eax119;
    int1_t less120;

    v1 = esi2;
    fun_404530(ebp3, edi4, v1, ebx5);
    eax6 = g43c7b8;
    esi7 = GetSystemMetrics;
    eax8 = reinterpret_cast<int32_t>(esi7(1, 0, 0, eax6, 0, ebp3, edi4));
    esi7(0, eax8, 1, 0, 0, eax6, 0, ebp3, edi4);
    eax9 = reinterpret_cast<int32_t>(CreateWindowExA());
    g43c7bc = eax9;
    g41c7ac = eax9;
    if (!eax9) {
        goto v10;
    }
    eax11 = g43c7bc;
    UpdateWindow(eax11);
    SetFocus();
    eax12 = fun_409470();
    esp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 0x94 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4);
    if (eax12) {
        goto v14;
    }
    zf15 = g41c79c == 0;
    if (zf15) {
        esp16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4);
    } else {
        esp16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp13) - 4);
    }
    ecx17 = g43f780;
    eax18 = *ecx17;
    eax19 = reinterpret_cast<int32_t>(eax18->f50());
    esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp16) - 4 - 4 - 4 + 4);
    if (eax19) {
        goto v21;
    }
    zf22 = g41c79c == 0;
    if (zf22) {
        eax23 = reinterpret_cast<int32_t>(GetDC(0));
        edi24 = GetDeviceCaps;
        eax25 = reinterpret_cast<int32_t>(edi24(eax23, 12, 0));
        v26 = reinterpret_cast<struct s160**>(14);
        eax27 = reinterpret_cast<int32_t>(edi24(eax23));
        g41c9ec = eax25 * eax27;
        v28 = reinterpret_cast<void*>(0);
        ReleaseDC();
        eax29 = g43c7bc;
        esi30 = GetWindowLongA;
        eax31 = reinterpret_cast<uint32_t>(esi30(eax29));
        ecx32 = g43c7bc;
        v33 = eax31 & 0x7fffffff | 0xc60000;
        SetWindowLongA(ecx32, 0xf0, v33, eax29);
        esp34 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4);
        SetRect(reinterpret_cast<int32_t>(esp34) + 20, 0, 0, 0x280, 0x1e0, ecx32, 0xf0, v33, eax29);
        ecx35 = g43c7bc;
        eax36 = reinterpret_cast<int32_t>(esi30());
        ecx37 = g43c7bc;
        eax38 = reinterpret_cast<uint32_t>(GetMenu());
        ecx39 = g43c7bc;
        v40 = eax38 - (eax38 + reinterpret_cast<uint1_t>(eax38 < eax38 + reinterpret_cast<uint1_t>(eax38 < 1))) + 1;
        eax41 = reinterpret_cast<int32_t>(esi30(ecx39, 0xf0, v40));
        esp42 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp34) - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 + 4);
        v43 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp42) + 28);
        AdjustWindowRectEx(v43, eax41, ecx39, 0xf0, v40);
        ecx44 = g43c7bc;
        esi7 = SetWindowPos;
        esi7(ecx44, 0, 0, 0, ecx35 - ecx37, 0xec - eax36, 22, v43, eax41, ecx39, 0xf0, v40);
        ecx45 = g43c7bc;
        v46 = ecx45;
        esi7();
        esp47 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp42) - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
        v48 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp47) + 40);
        SystemParametersInfoA(48, 0, v48);
        esp49 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp47) - 4 - 4 - 4 - 4 - 4 + 4);
        eax50 = g43c7bc;
        v51 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp49) + 20);
        GetWindowRect(eax50, v51, 48, 0, v48);
        if (!1) {
        }
        if (v46 < 0) {
            v46 = 0;
        }
        edx52 = g43c7bc;
        esi7(edx52, 0, 0, v46, 0, 0, 21, eax50, v51, 48, 0, v48);
        esp53 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp49) - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4);
    } else {
        eax54 = g43f780;
        ebx55 = *eax54;
        eax56 = reinterpret_cast<int32_t>(ebx55->f54());
        esp53 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 - 4 - 4 + 4);
        if (eax56) {
            goto v57;
        }
    }
    ecx58 = 27;
    while (ecx58) {
        --ecx58;
    }
    zf59 = g41c79c == 0;
    if (!zf59) 
        goto addr_40553b_22;
    ecx60 = g43f780;
    eax61 = *ecx60;
    eax62 = reinterpret_cast<int32_t>(eax61->f18());
    if (eax62) {
        goto 0;
    }
    ecx63 = g41c870;
    edx64 = g41c874;
    g43c8e8 = 1;
    g43c8ec = 1;
    g43c904 = ecx63;
    eax65 = g41c878;
    g43c908 = edx64;
    less66 = g41c87c < 5;
    g43c90c = eax65;
    if (!less66) {
        MessageBoxA();
        goto v67;
    }
    less_or_equal68 = g41c87c <= 0;
    if (!less_or_equal68) 
        goto addr_4057e0_28;
    addr_405830_29:
    eax69 = g43f780;
    ebx70 = *eax69;
    eax71 = reinterpret_cast<int32_t>(ebx70->f10());
    if (!eax71) {
        ecx72 = g41c9e8;
        eax73 = *ecx72;
        eax74 = reinterpret_cast<int32_t>(eax73->f20());
        if (!eax74) {
            ecx75 = g43c914;
            eax76 = *ecx75;
            eax77 = reinterpret_cast<int32_t>(eax76->f70());
            if (eax77) {
                goto v1;
            }
        } else {
            goto 0xf0;
        }
    } else {
        goto v78;
    }
    addr_405661_35:
    zf79 = g41c79c == 0;
    if (!zf79) {
        zf80 = g43ef78 == 0;
        if (!zf80) {
            eax81 = g43ef78;
            ebx82 = *eax81;
            ebx82->f8(eax81);
            g43ef78 = reinterpret_cast<struct s280**>(0);
        }
        g43eb78 = 0;
        g43eb79 = 0;
        g43eb7a = 0;
        eax83 = reinterpret_cast<signed char*>(0x43eb7c);
        do {
            *eax83 = -1;
            eax83 = eax83 + 4;
            *(eax83 - 3) = -1;
            *(eax83 - 2) = -1;
        } while (reinterpret_cast<uint32_t>(eax83) < 0x43ef78);
        eax84 = g43f780;
        ebx85 = *eax84;
        eax86 = reinterpret_cast<int32_t>(ebx85->f14());
        if (!eax86) {
            ecx87 = g43c914;
            eax88 = *ecx87;
            eax89 = reinterpret_cast<int32_t>(eax88->f7c());
            if (eax89) {
                goto 1;
            }
        } else {
            goto 0;
        }
    }
    fun_406250();
    ShowWindow();
    goto v90;
    addr_4057e0_28:
    ebx91 = 0;
    edi92 = 0x43c824;
    do {
        ecx93 = g43f780;
        eax94 = *ecx93;
        eax95 = reinterpret_cast<int32_t>(eax94->f18());
        if (eax95) 
            break;
        *reinterpret_cast<int32_t*>(edi92 - 44) = 1;
        eax96 = g41c870;
        *reinterpret_cast<int32_t*>(edi92 - 40) = 1;
        ecx97 = g41c874;
        *reinterpret_cast<void**>(edi92 - 16) = eax96;
        edx98 = g41c878;
        *reinterpret_cast<int32_t*>(edi92 - 12) = ecx97;
        edi92 = edi92 + 48;
        ++ebx91;
        *reinterpret_cast<int32_t*>(edi92 - 56) = edx98;
        less99 = ebx91 < g41c87c;
    } while (less99);
    goto addr_405830_29;
    goto v100;
    addr_40553b_22:
    esp101 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp53) - 4);
    v28 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp101) + 60);
    edx102 = g43f780;
    eax103 = *edx102;
    eax104 = reinterpret_cast<int32_t>(eax103->f18());
    esp105 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp101) - 4 - 4 - 4 - 4 + 4);
    if (eax104) {
        goto 0;
    }
    ecx106 = g41c870;
    edx107 = g41c874;
    g43c8e8 = 1;
    g43c8ec = 1;
    g43c904 = ecx106;
    eax108 = g41c878;
    g43c908 = edx107;
    less109 = g41c87c < 5;
    g43c90c = eax108;
    if (!less109) {
        MessageBoxA();
        goto v110;
    }
    less_or_equal111 = g41c87c <= 0;
    if (less_or_equal111) 
        goto addr_405661_35;
    eax112 = g43c914;
    ebp113 = 0;
    esi114 = reinterpret_cast<void**>(0x43c824);
    v26 = eax112;
    do {
        if (esi114 != 0x43c824) {
        }
        eax115 = *v26;
        eax116 = reinterpret_cast<int32_t>(eax115->f30(v26, reinterpret_cast<int32_t>(esp105) + 36, reinterpret_cast<int32_t>(esp105) + 16));
        esp105 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp105) - 4 - 4 - 4 - 4 + 4);
        if (eax116) 
            break;
        ecx117 = g41c870;
        *esi114 = v28;
        edx118 = g41c874;
        *reinterpret_cast<int32_t*>(esi114 - 11) = 1;
        eax119 = g41c878;
        *reinterpret_cast<int32_t*>(esi114 - 10) = 1;
        esi114 = esi114 + 12;
        ++ebp113;
        *(esi114 - 16) = ecx117;
        *reinterpret_cast<int32_t*>(esi114 - 15) = edx118;
        less120 = ebp113 < g41c87c;
        *reinterpret_cast<int32_t*>(esi114 - 14) = eax119;
    } while (less120);
    goto addr_405661_35;
    MessageBoxA();
    goto 0xf0;
}

int32_t fun_404d30() {
    return 1;
}

int32_t fun_404f70(struct s36* a1) {
    void* ecx2;
    int32_t v3;
    void* edx4;
    struct s24* eax5;
    void* ecx6;
    void* edx7;
    void* eax8;
    void* v9;
    void* v10;

    ecx2 = a1->f4;
    v3 = a1->f8;
    edx4 = a1->f0;
    eax5 = a1->f1c;
    ecx6 = a1->f24;
    fun_404d60(ecx6, eax5, edx4, ecx2, v3);
    edx7 = a1->f14;
    eax8 = a1->f10;
    v9 = a1->f18;
    v10 = a1->fc;
    fun_404e20(v10, eax8, edx7, v9);
    return 1;
}

int32_t fun_407110(struct s34* a1, void*** a2) {
    fun_4067e0(a1, a2);
    return 1;
}

void fun_410c98(signed char* ecx) {
    signed char* edx2;
    uint32_t ebx3;
    int32_t ebx4;
    uint32_t eax5;
    int32_t eax6;

    g43a910 = edx2;
    ebx3 = reinterpret_cast<uint32_t>(-ebx4);
    eax5 = reinterpret_cast<uint32_t>(-eax6) >> 8;
    g43a94c = ecx;
    __asm__("ror ebx, 0x10");
    g43a944 = *reinterpret_cast<signed char*>(&ebx3);
    *reinterpret_cast<int16_t*>(&ebx3) = *reinterpret_cast<int16_t*>(&eax5);
    g43a948 = ebx3;
    return;
}

struct s303 {
    int32_t f0;
    int32_t f4;
};

void fun_41113e() {
    int32_t* esp1;
    int32_t ebp2;
    int32_t ebp3;
    struct s303* esp4;

    esp1 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp2 - 24)) - 4);
    *esp1 = *reinterpret_cast<int32_t*>(ebp3 - 32);
    esp4 = reinterpret_cast<struct s303*>(esp1 - 1);
    esp4->f0 = 0x41114a;
    fun_410ee0(esp4->f4);
}

struct s304 {
    signed char f0;
    signed char f1;
};

struct s305 {
    signed char f0;
    signed char f1;
    signed char f2;
    signed char f3;
};

struct s304* fun_411720(struct s304* a1, struct s305* a2) {
    signed char dl3;
    struct s304* edi4;
    signed char dh5;
    signed char al6;
    signed char* esi7;
    struct s305* ecx8;

    dl3 = a2->f0;
    edi4 = a1;
    if (!dl3) {
        return edi4;
    } else {
        dh5 = a2->f1;
        if (dh5) 
            goto addr_411738_4;
        goto 0x414526;
    }
    addr_411754_6:
    return 0;
    addr_411793_7:
    return reinterpret_cast<int32_t>(edi4) - 1;
    while (1) {
        addr_41174c_8:
        if (al6 == dl3) {
            do {
                al6 = *esi7;
                ++esi7;
                if (al6 != dh5) 
                    goto addr_41174c_8;
                edi4 = reinterpret_cast<struct s304*>(esi7 - 1);
                do {
                    if (!ecx8->f2) 
                        goto addr_411793_7;
                    esi7 = esi7 + 2;
                    if (*esi7 != ecx8->f2) 
                        goto addr_411738_4;
                    if (!ecx8->f3) 
                        goto addr_411793_7;
                    ecx8 = reinterpret_cast<struct s305*>(&ecx8->f2);
                } while (ecx8->f3 == *(esi7 - 1));
                addr_411738_4:
                ecx8 = a2;
                esi7 = &edi4->f1;
            } while (edi4->f0 == dl3);
            if (!edi4->f0) 
                goto addr_411754_6;
        } else {
            if (!al6) 
                goto addr_411754_6;
        }
        al6 = *esi7;
        ++esi7;
    }
}

void fun_4119ba(int32_t a1, int32_t a2) {
    fun_4156a1(a1, a2);
    __asm__("wait ");
    __asm__("fnstcw word [ebp+0xffffff5c]");
    fun_417080();
    fun_41553e();
    return;
}

struct s105* fun_411f30(struct s106* a1, struct s105* a2, int32_t a3, void* a4, int32_t a5) {
    struct s105* eax6;
    struct s105* eax7;
    struct s105* eax8;

    if (a3 == 0x65 || a3 == 69) {
        eax6 = fun_411be0(a1, a2, a4, a5);
        return eax6;
    } else {
        if (a3 != 0x66) {
            eax7 = fun_411e20(a1, a2, a4, a5);
            return eax7;
        } else {
            eax8 = fun_411d20(a1, a2, a4);
            return eax8;
        }
    }
}

struct s306 {
    signed char[24] pad24;
    struct s110* f18;
    int32_t f1c;
};

void fun_412d61(struct s306* a1) {
    int32_t v2;
    struct s110* v3;

    v2 = a1->f1c;
    v3 = a1->f18;
    fun_41200e(v3, v2);
    return;
}

uint32_t fun_41a380(unsigned char* a1, unsigned char* a2) {
    uint32_t v3;
    uint32_t ebx4;
    unsigned char* esi5;
    unsigned char* edi6;
    int1_t zf7;
    uint32_t ebx8;
    uint32_t eax9;
    uint32_t eax10;
    int32_t eax11;
    unsigned char al12;
    unsigned char cl13;
    unsigned char cl14;
    uint1_t cf15;
    unsigned char al16;
    uint1_t cf17;
    uint32_t eax18;
    uint1_t cf19;
    unsigned char al20;

    v3 = ebx4;
    esi5 = a2;
    edi6 = a1;
    zf7 = g43bdd8 == 0;
    if (!zf7) {
        ebx8 = 0;
        eax9 = 0xff;
        do {
            if (!*reinterpret_cast<unsigned char*>(&eax9)) 
                break;
            *reinterpret_cast<unsigned char*>(&eax9) = *esi5;
            ++esi5;
            *reinterpret_cast<unsigned char*>(&ebx8) = *edi6;
            ++edi6;
        } while (*reinterpret_cast<unsigned char*>(&eax9) == *reinterpret_cast<unsigned char*>(&ebx8) || (eax10 = fun_415940(ebx8, eax9), ebx8 = eax10, eax9 = fun_415940(eax9, v3), *reinterpret_cast<unsigned char*>(&ebx8) == *reinterpret_cast<unsigned char*>(&eax9)));
        goto addr_41a402_5;
    } else {
        eax11 = 0x43bdff;
        do {
            if (!*reinterpret_cast<unsigned char*>(&eax11)) 
                goto addr_41a3ce_8;
            *reinterpret_cast<unsigned char*>(&eax11) = *esi5;
            ++esi5;
            ++edi6;
        } while (*edi6 == *reinterpret_cast<unsigned char*>(&eax11) || (al12 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax11) - 65), cl13 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(cl14 - reinterpret_cast<unsigned char>(cl14 + cf15)) & 32), al16 = reinterpret_cast<unsigned char>(*edi6 - 65), cl14 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(cl13 - reinterpret_cast<unsigned char>(cl13 + reinterpret_cast<uint1_t>(cl13 < reinterpret_cast<unsigned char>(cl13 + reinterpret_cast<uint1_t>(al16 < 26))))) & 32), *reinterpret_cast<unsigned char*>(&eax11) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al16 + cl14) + 65), *reinterpret_cast<unsigned char*>(&eax11) == reinterpret_cast<unsigned char>(al12 + cl13) + 65));
        goto addr_41a3ca_10;
    }
    addr_41a407_11:
    return eax9;
    addr_41a402_5:
    cf17 = reinterpret_cast<uint1_t>(eax9 < eax9 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&ebx8) < *reinterpret_cast<unsigned char*>(&eax9)));
    eax18 = eax9 - (eax9 + cf17);
    eax9 = eax18 - (1 - reinterpret_cast<uint1_t>(eax18 < 1 - cf17));
    goto addr_41a407_11;
    addr_41a3ce_8:
    eax9 = reinterpret_cast<uint32_t>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax11)));
    goto addr_41a407_11;
    addr_41a3ca_10:
    cf19 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax11) < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax11) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax11) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al12 + cl13) + 65))));
    al20 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax11) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax11) + cf19));
    *reinterpret_cast<unsigned char*>(&eax11) = reinterpret_cast<unsigned char>(al20 - reinterpret_cast<unsigned char>(1 - reinterpret_cast<uint1_t>(al20 < reinterpret_cast<unsigned char>(1 - cf19))));
    goto addr_41a3ce_8;
}

void fun_41717d(signed char cl) {
    fun_417239(cl, __return_address());
    goto 0x41717a;
}

void fun_417192() {
    int32_t ebp1;
    int32_t ebp2;
    int32_t ebp3;

    __asm__("fstp tword [ebp+0xffffff62]");
    __asm__("fld tword [ebp+0xffffff62]");
    if (!(*reinterpret_cast<unsigned char*>(ebp1 - 0x97) & 64)) {
        *reinterpret_cast<signed char*>(ebp2 - 0x90) = 1;
        __asm__("fadd qword [0x43be24]");
        return;
    } else {
        *reinterpret_cast<signed char*>(ebp3 - 0x90) = 7;
        return;
    }
}

void fun_4153bf() {
    int32_t ebp1;

    __asm__("fstp st0");
    __asm__("fstp st0");
    __asm__("fld tword [0x43ba80]");
    *reinterpret_cast<signed char*>(ebp1 - 0x90) = 3;
    return;
}

int32_t fun_417b48() {
    uint32_t eax1;
    uint32_t v2;
    int32_t eax3;
    int16_t fpu_status_word4;

    eax1 = v2 & 0x7ff00000;
    if (eax1 == 0x7ff00000) {
        __asm__("fdiv qword [esp+0x8]");
        return eax3;
    } else {
        *reinterpret_cast<int16_t*>(&eax1) = fpu_status_word4;
        if (!(eax1 & 0x3800)) {
            __asm__("fxch st0, st1");
            __asm__("fstp tword [esp]");
            __asm__("fld qword [esp+0x14]");
            fun_417ad6();
            __asm__("fld tword [esp]");
            __asm__("fxch st0, st1");
            return eax3;
        } else {
            __asm__("fld qword [esp+0x8]");
            fun_417ad6();
            return eax3;
        }
    }
}

int32_t fun_417b94() {
    uint32_t eax1;
    int16_t fpu_status_word2;
    int32_t eax3;

    *reinterpret_cast<int16_t*>(&eax1) = fpu_status_word2;
    if (!(eax1 & 0x3800)) {
        __asm__("fxch st0, st1");
        __asm__("fstp tword [esp]");
        __asm__("fild word [esp+0x14]");
        fun_417ad6();
        __asm__("fld tword [esp]");
        __asm__("fxch st0, st1");
        return eax3;
    } else {
        __asm__("fild word [esp+0x8]");
        fun_417ad6();
        return eax3;
    }
}

int32_t fun_417c48() {
    uint32_t eax1;
    uint32_t v2;
    int32_t eax3;
    int16_t fpu_status_word4;

    eax1 = v2 & 0x7ff00000;
    if (eax1 == 0x7ff00000) {
        __asm__("fdivr qword [esp+0x8]");
        return eax3;
    } else {
        *reinterpret_cast<int16_t*>(&eax1) = fpu_status_word4;
        if (!(eax1 & 0x3800)) {
            __asm__("fxch st0, st1");
            __asm__("fstp tword [esp]");
            __asm__("fld qword [esp+0x14]");
            fun_417ae9();
            __asm__("fld tword [esp]");
            __asm__("fxch st0, st1");
            return eax3;
        } else {
            __asm__("fld qword [esp+0x8]");
            fun_417ae9();
            return eax3;
        }
    }
}

int32_t fun_417c94() {
    uint32_t eax1;
    int16_t fpu_status_word2;
    int32_t eax3;

    *reinterpret_cast<int16_t*>(&eax1) = fpu_status_word2;
    if (!(eax1 & 0x3800)) {
        __asm__("fxch st0, st1");
        __asm__("fstp tword [esp]");
        __asm__("fild word [esp+0x14]");
        fun_417ae9();
        __asm__("fld tword [esp]");
        __asm__("fxch st0, st1");
        return eax3;
    } else {
        __asm__("fild word [esp+0x8]");
        fun_417ae9();
        return eax3;
    }
}

uint32_t fun_418299(int32_t ecx) {
    uint32_t eax2;

    eax2 = fun_417f2c(ecx);
    return eax2;
}

int32_t fun_404d40() {
    return 1;
}

int32_t g41c968 = 0;

int32_t g41c970 = 0;

int32_t g41c96c = 0;

void* g43ea48;

void* g43ea4c;

void* g43ea50;

void* g43ea54;

int32_t fun_404fb0(int32_t a1, int32_t a2, int32_t a3) {
    int32_t esi4;
    void* v5;
    void* eax6;
    void* eax7;
    void* eax8;

    g41c968 = a2;
    g41c970 = 0;
    g41c96c = a1;
    if (a3) {
        __asm__("fld dword [esi]");
        __asm__("fmul dword [0x41b1d0]");
        eax6 = fun_410df8(esi4, v5);
        __asm__("fld dword [esi+0x4]");
        __asm__("fild dword [esp+0x4]");
        __asm__("fld st1");
        __asm__("fcos ");
        __asm__("fmul st0, st1");
        eax7 = fun_410df8(esi4, eax6);
        g43ea48 = eax7;
        __asm__("fxch st0, st1");
        __asm__("fsin ");
        __asm__("fmulp st1, st0");
        eax8 = fun_410df8(esi4, eax6);
        g43ea4c = eax8;
        g43ea50 = eax8;
        g41c970 = 0x43ea48;
        g43ea54 = eax7;
    }
    g43ea34 = reinterpret_cast<struct s26*>(0x41c968);
    fun_405170();
    return 1;
}

void fun_4119c4() {
    goto 0x4119bf;
}

void fun_417184() {
    __asm__("fstp st0");
}

void fun_4152f8() {
    int32_t ebp1;

    __asm__("fstp st0");
    __asm__("fstp st0");
    __asm__("fld tword [0x43ba80]");
    *reinterpret_cast<signed char*>(ebp1 - 0x90) = 2;
    return;
}

void fun_4153d1(signed char cl) {
    if (cl) 
        goto 0x415384;
    __asm__("fstp st0");
    __asm__("fld tword [0x43ba80]");
    return;
}

uint32_t fun_41829f(int32_t ecx) {
    uint32_t eax2;

    eax2 = fun_4181e4(ecx);
    return eax2;
}

int32_t fun_404d50() {
    return 0;
}

void fun_4119cb() {
    goto 0x4119bf;
}

void fun_41530a() {
    int32_t ebp1;
    int16_t fpu_status_word2;
    int32_t ebp3;

    __asm__("fldln2 ");
    __asm__("fxch st0, st1");
    __asm__("ftst ");
    __asm__("wait ");
    *reinterpret_cast<int16_t*>(ebp1 - 0xa0) = fpu_status_word2;
    __asm__("wait ");
    if (*reinterpret_cast<unsigned char*>(ebp3 - 0x9f) & 65) 
        goto 0x4152f3;
    __asm__("fyl2x ");
    return;
}

void fun_4182a5() {
    __asm__("fpatan ");
    return;
}

void fun_4119d2() {
    goto 0x415490;
}

void fun_4182a8() {
    __asm__("fptan ");
    return;
}

void fun_4119dc() {
    int1_t zf1;

    __asm__("wait ");
    __asm__("fnstcw word [ebp+0xffffff5c]");
    zf1 = g43c0b8 == 0;
    if (zf1) {
        __asm__("fst qword [ebp+0xffffff7a]");
    }
    fun_417080();
    g452878 = 1;
    fun_415545();
    return;
}

void fun_4119e6() {
    goto 0x4119e1;
}

void fun_4119ed() {
    goto 0x4119e1;
}

void fun_40d321() {
    signed char* esi1;
    signed char dh2;
    signed char* tmp32_3;
    uint16_t bx4;
    signed char dh5;
    signed char* tmp32_6;
    int1_t zf7;
    uint16_t tmp16_8;
    uint16_t cx9;
    int1_t cf10;

    while (1) {
        *esi1 = dh2;
        tmp32_3 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi1) + reinterpret_cast<uint32_t>(g41cdf0));
        esi1 = tmp32_3;
        do {
            bx4 = g43408e;
            do {
                *esi1 = dh5;
                tmp32_6 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi1) + reinterpret_cast<uint32_t>(g41cdf0));
                esi1 = tmp32_6;
                bx4 = reinterpret_cast<uint16_t>(bx4 - 1);
            } while (bx4);
            ++esi1;
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf7 = g43408c == 0;
            if (zf7) 
                goto addr_40d346_5;
            tmp16_8 = reinterpret_cast<uint16_t>(cx9 + g43408a);
            cf10 = tmp16_8 < cx9;
            cx9 = tmp16_8;
        } while (!cf10);
    }
    addr_40d346_5:
    goto 0x40a5ad;
}

void fun_40d354() {
    signed char* esi1;
    signed char dh2;
    signed char* tmp32_3;
    signed char dh4;
    signed char* tmp32_5;
    int1_t zf6;
    uint16_t tmp16_7;
    uint16_t cx8;
    int1_t cf9;

    while (1) {
        *esi1 = dh2;
        tmp32_3 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi1) + reinterpret_cast<uint32_t>(g41cdf0));
        esi1 = tmp32_3;
        do {
            *esi1 = dh4;
            tmp32_5 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi1) + reinterpret_cast<unsigned char>(g434082));
            esi1 = tmp32_5;
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf6 = g43408c == 0;
            if (zf6) 
                goto addr_40d36d_3;
            tmp16_7 = reinterpret_cast<uint16_t>(cx8 + g43408a);
            cf9 = tmp16_7 < cx8;
            cx8 = tmp16_7;
        } while (!cf9);
    }
    addr_40d36d_3:
    goto 0x40a5ad;
}

void fun_40d40b() {
    signed char* esi1;
    signed char dh2;
    uint16_t bx3;
    signed char dh4;
    signed char* tmp32_5;
    int1_t zf6;
    uint16_t tmp16_7;
    uint16_t cx8;
    int1_t cf9;

    while (1) {
        *esi1 = dh2;
        ++esi1;
        do {
            bx3 = g43408e;
            do {
                *esi1 = dh4;
                ++esi1;
                bx3 = reinterpret_cast<uint16_t>(bx3 - 1);
            } while (bx3);
            tmp32_5 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi1) + reinterpret_cast<uint32_t>(g41cdf0));
            esi1 = tmp32_5;
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf6 = g43408c == 0;
            if (zf6) 
                goto addr_40d42b_5;
            tmp16_7 = reinterpret_cast<uint16_t>(cx8 + g43408a);
            cf9 = tmp16_7 < cx8;
            cx8 = tmp16_7;
        } while (!cf9);
    }
    addr_40d42b_5:
    goto 0x40a5ad;
}

void fun_40d50a() {
    signed char* esi1;
    signed char dh2;
    uint16_t bx3;
    signed char dh4;
    int1_t zf5;
    uint16_t tmp16_6;
    uint16_t cx7;
    int1_t cf8;

    while (1) {
        *esi1 = dh2;
        esi1 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi1) - reinterpret_cast<uint32_t>(g41cdf0));
        do {
            bx3 = g43408e;
            do {
                *esi1 = dh4;
                esi1 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi1) - reinterpret_cast<uint32_t>(g41cdf0));
                bx3 = reinterpret_cast<uint16_t>(bx3 - 1);
            } while (bx3);
            ++esi1;
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf5 = g43408c == 0;
            if (zf5) 
                goto addr_40d52f_5;
            tmp16_6 = reinterpret_cast<uint16_t>(cx7 + g43408a);
            cf8 = tmp16_6 < cx7;
            cx7 = tmp16_6;
        } while (!cf8);
    }
    addr_40d52f_5:
    goto 0x40a5ad;
}

void fun_40d53d() {
    signed char* esi1;
    signed char dh2;
    signed char dh3;
    signed char* tmp32_4;
    int1_t zf5;
    uint16_t tmp16_6;
    uint16_t cx7;
    int1_t cf8;

    while (1) {
        *esi1 = dh2;
        esi1 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi1) - reinterpret_cast<uint32_t>(g41cdf0));
        do {
            *esi1 = dh3;
            tmp32_4 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi1) + g434086);
            esi1 = tmp32_4;
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf5 = g43408c == 0;
            if (zf5) 
                goto addr_40d556_3;
            tmp16_6 = reinterpret_cast<uint16_t>(cx7 + g43408a);
            cf8 = tmp16_6 < cx7;
            cx7 = tmp16_6;
        } while (!cf8);
    }
    addr_40d556_3:
    goto 0x40a5ad;
}

void fun_40d5f4() {
    signed char* esi1;
    signed char dh2;
    uint16_t bx3;
    signed char dh4;
    int1_t zf5;
    uint16_t tmp16_6;
    uint16_t cx7;
    int1_t cf8;

    while (1) {
        *esi1 = dh2;
        ++esi1;
        do {
            bx3 = g43408e;
            do {
                *esi1 = dh4;
                ++esi1;
                bx3 = reinterpret_cast<uint16_t>(bx3 - 1);
            } while (bx3);
            esi1 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi1) - reinterpret_cast<uint32_t>(g41cdf0));
            g43408c = reinterpret_cast<int16_t>(g43408c - 1);
            zf5 = g43408c == 0;
            if (zf5) 
                goto addr_40d614_5;
            tmp16_6 = reinterpret_cast<uint16_t>(cx7 + g43408a);
            cf8 = tmp16_6 < cx7;
            cx7 = tmp16_6;
        } while (!cf8);
    }
    addr_40d614_5:
    goto 0x40a5ad;
}
