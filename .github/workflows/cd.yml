name: Continuous Deployment

on:
  push:
    tags:
      - 'v*'
    branches:
      - main

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Release
      run: dotnet build --configuration Release --no-restore
      
    - name: Publish Linux x64
      run: dotnet publish Win32Emu/Win32Emu.csproj -c Release -r linux-x64 --self-contained -o publish/linux-x64
      
    - name: Publish Windows x64
      run: dotnet publish Win32Emu/Win32Emu.csproj -c Release -r win-x64 --self-contained -o publish/win-x64
      
    - name: Create release archives
      run: |
        cd publish
        tar -czf ../Win32Emu-linux-x64.tar.gz linux-x64/
        cd win-x64
        zip -r ../../Win32Emu-win-x64.zip .
        cd ../..
        
    - name: Extract release notes
      id: extract-notes
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        
        # Try to extract release notes from tag message or create default ones
        RELEASE_NOTES=$(git tag -l --format='%(contents)' $TAG_NAME)
        if [ -z "$RELEASE_NOTES" ]; then
          RELEASE_NOTES="Release $TAG_NAME"
        fi
        
        # Write to file to handle multiline content
        echo "$RELEASE_NOTES" > release_notes.txt
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.extract-notes.outputs.tag_name }}
        name: Release ${{ steps.extract-notes.outputs.tag_name }}
        body_path: release_notes.txt
        draft: false
        prerelease: ${{ contains(steps.extract-notes.outputs.tag_name, 'alpha') || contains(steps.extract-notes.outputs.tag_name, 'beta') || contains(steps.extract-notes.outputs.tag_name, 'rc') }}
        files: |
          Win32Emu-linux-x64.tar.gz
          Win32Emu-win-x64.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}